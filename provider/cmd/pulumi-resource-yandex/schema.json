{
    "name": "yandex",
    "displayName": "Yandex",
    "description": "A Pulumi package for creating and managing yandex cloud resources.",
    "keywords": [
        "yandex",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`yandex` Terraform Provider](https://github.com/terraform-providers/terraform-provider-yandex).",
    "repository": "https://github.com/masikrus/pulumi-yandex",
    "publisher": "masikrus",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/masikrus/pulumi-yandex/sdk/go/yandex",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "pulumi-yandex",
            "packageDescription": "A Pulumi package for creating and managing yandex cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-yandex)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-yandex` repo](https://github.com/masikrus/pulumi-yandex/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-yandex` repo](https://github.com/terraform-providers/terraform-provider-yandex/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-yandex)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-yandex` repo](https://github.com/masikrus/pulumi-yandex/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-yandex` repo](https://github.com/terraform-providers/terraform-provider-yandex/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "cloudId": {
                "type": "string",
                "description": "The ID of the [Cloud](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#cloud) to apply any\nresources to. This can also be specified using environment variable `YC_CLOUD_ID`.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The endpoint for API calls, default value is **api.cloud.yandex.net:443**. This can also be defined by environment\nvariable `YC_ENDPOINT`.\n"
            },
            "folderId": {
                "type": "string",
                "description": "The ID of the [Folder](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#folder) to operate under,\nif not specified by a given resource. This can also be specified using environment variable `YC_FOLDER_ID`.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Explicitly allow the provider to perform \"insecure\" SSL requests. If omitted, default value is `false`.\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "This is the maximum number of times an API call is retried, in the case where requests are being throttled or\nexperiencing transient failures. The delay between the subsequent API calls increases exponentially.\n"
            },
            "organizationId": {
                "type": "string",
                "description": "The ID of the [Cloud Organization](https://yandex.cloud/docs/organization/quickstart) to operate under.\n"
            },
            "plaintext": {
                "type": "boolean",
                "description": "Disable use of TLS. Default value is `false`.\n"
            },
            "profile": {
                "type": "string",
                "description": "Profile name to use in the shared credentials file. Default value is `default`.\n"
            },
            "regionId": {
                "type": "string",
                "description": "[The region](https://yandex.cloud/docs/overview/concepts/region) where operations will take place. For example\n`ru-central1`.\n"
            },
            "serviceAccountKeyFile": {
                "type": "string",
                "description": "Contains either a path to or the contents of the [Service Account\nfile](https://yandex.cloud/docs/iam/concepts/authorization/key) in JSON format. This can also be specified using\nenvironment variable `YC_SERVICE_ACCOUNT_KEY_FILE`. You can read how to create service account key file\n[here](https://yandex.cloud/docs/iam/operations/iam-token/create-for-sa#keys-create). \u003e Only one of `token` or\n`service_account_key_file` must be specified. \u003e One can authenticate via instance service account from inside a compute\ninstance. In order to use this method, omit both `token`/`service_account_key_file` and attach service account to the\ninstance. [Working with Yandex Cloud from inside an\ninstance](https://yandex.cloud/docs/compute/operations/vm-connect/auth-inside-vm).\n"
            },
            "sharedCredentialsFile": {
                "type": "string",
                "description": "Shared credentials file path. Supported keys: `storage_access_key` and `storage_secret_key`. \u003e The `storage_access_key`\nand `storage_secret_key` attributes from the shared credentials file are used only when the provider and a storage\ndata/resource do not have an access/secret keys explicitly specified.\n"
            },
            "storageAccessKey": {
                "type": "string",
                "description": "Yandex Cloud Object Storage access key, which is used when a storage data/resource doesn't have an access key explicitly\nspecified. This can also be specified using environment variable `YC_STORAGE_ACCESS_KEY`.\n"
            },
            "storageEndpoint": {
                "type": "string",
                "description": "Yandex Cloud [Object Storage Endpoint](https://yandex.cloud/docs/storage/s3/#request-url), which is used to connect to\n`S3 API`. Default value is **storage.yandexcloud.net**.\n"
            },
            "storageSecretKey": {
                "type": "string",
                "description": "Yandex Cloud Object Storage secret key, which is used when a storage data/resource doesn't have a secret key explicitly\nspecified. This can also be specified using environment variable `YC_STORAGE_SECRET_KEY`.\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Security token or IAM token used for authentication in Yandex Cloud. Check\n[documentation](https://yandex.cloud/docs/iam/operations/iam-token/create) about how to create IAM token. This can also\nbe specified using environment variable `YC_TOKEN`.\n",
                "secret": true
            },
            "ymqAccessKey": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service access key, which is used when a YMQ queue resource doesn't have an access key\nexplicitly specified. This can also be specified using environment variable `YC_MESSAGE_QUEUE_ACCESS_KEY`.\n"
            },
            "ymqEndpoint": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service endpoint. Default value is **message-queue.api.cloud.yandex.net**.\n"
            },
            "ymqSecretKey": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service secret key, which is used when a YMQ queue resource doesn't have a secret key\nexplicitly specified. This can also be specified using environment variable `YC_MESSAGE_QUEUE_SECRET_KEY`.\n",
                "secret": true
            },
            "zone": {
                "type": "string",
                "description": "The default [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) to operate under, if not\nspecified by a given resource. This can also be specified using environment variable `YC_ZONE`.\n"
            }
        }
    },
    "types": {
        "yandex:index/AlbBackendGroupGrpcBackend:AlbBackendGroupGrpcBackend": {
            "properties": {
                "healthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendHealthcheck:AlbBackendGroupGrpcBackendHealthcheck",
                    "description": "Healthcheck specification that will be used by this backend.\n\n\u003e Only one of `stream_healthcheck` or `http_healthcheck` or `grpc_healthcheck` should be specified.\n"
                },
                "loadBalancingConfig": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendLoadBalancingConfig:AlbBackendGroupGrpcBackendLoadBalancingConfig",
                    "description": "Load Balancing Config specification that will be used by this backend.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the backend.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for incoming traffic.\n"
                },
                "targetGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "References target groups for the backend.\n"
                },
                "tls": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendTls:AlbBackendGroupGrpcBackendTls",
                    "description": "TLS specification that will be used by this backend.\n\n\u003e Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "targetGroupIds"
            ]
        },
        "yandex:index/AlbBackendGroupGrpcBackendHealthcheck:AlbBackendGroupGrpcBackendHealthcheck": {
            "properties": {
                "grpcHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck:AlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck",
                    "description": "gRPC Healthcheck specification that will be used by this healthcheck.\n"
                },
                "healthcheckPort": {
                    "type": "integer",
                    "description": "Optional alternative port for health checking.\n"
                },
                "healthyThreshold": {
                    "type": "integer",
                    "description": "Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.\n"
                },
                "httpHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck:AlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck",
                    "description": "HTTP Healthcheck specification that will be used by this healthcheck.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Interval between health checks.\n"
                },
                "intervalJitterPercent": {
                    "type": "number",
                    "description": "An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * interval_jitter_percent / 100) will be added to the wait time.\n"
                },
                "streamHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck:AlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck",
                    "description": "Stream Healthcheck specification that will be used by this healthcheck.\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "Time to wait for a health check response.\n"
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.\n"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "timeout"
            ]
        },
        "yandex:index/AlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck:AlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `grpc.health.v1.HealthCheckRequest` message.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck:AlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck": {
            "properties": {
                "expectedStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of HTTP response statuses considered healthy.\n"
                },
                "host": {
                    "type": "string",
                    "description": "`Host` HTTP header value.\n"
                },
                "http2": {
                    "type": "boolean",
                    "description": "If set, health checks will use HTTP2.\n"
                },
                "path": {
                    "type": "string",
                    "description": "HTTP path.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "yandex:index/AlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck:AlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck": {
            "properties": {
                "receive": {
                    "type": "string",
                    "description": "Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.\n"
                },
                "send": {
                    "type": "string",
                    "description": "Message sent to targets during TCP data transfer. If not specified, no data is sent to the target.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupGrpcBackendLoadBalancingConfig:AlbBackendGroupGrpcBackendLoadBalancingConfig": {
            "properties": {
                "localityAwareRoutingPercent": {
                    "type": "integer",
                    "description": "Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Load balancing mode for the backend. Possible values: `ROUND_ROBIN`, `RANDOM`, `LEAST_REQUEST`, `MAGLEV_HASH`.\n"
                },
                "panicThreshold": {
                    "type": "integer",
                    "description": "If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading when everything is bad. Zero means no panic threshold.\n"
                },
                "strictLocality": {
                    "type": "boolean",
                    "description": "If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupGrpcBackendTls:AlbBackendGroupGrpcBackendTls": {
            "properties": {
                "sni": {
                    "type": "string",
                    "description": "[SNI](https://en.wikipedia.org/wiki/Server_Name_Indication) string for TLS connections.\n"
                },
                "validationContext": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackendTlsValidationContext:AlbBackendGroupGrpcBackendTlsValidationContext"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupGrpcBackendTlsValidationContext:AlbBackendGroupGrpcBackendTlsValidationContext": {
            "properties": {
                "trustedCaBytes": {
                    "type": "string",
                    "description": "PEM-encoded trusted CA certificate chain.\n"
                },
                "trustedCaId": {
                    "type": "string",
                    "description": "Trusted CA certificate ID in the Certificate Manager.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupHttpBackend:AlbBackendGroupHttpBackend": {
            "properties": {
                "healthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendHealthcheck:AlbBackendGroupHttpBackendHealthcheck",
                    "description": "Healthcheck specification that will be used by this backend.\n\n\u003e Only one of `stream_healthcheck` or `http_healthcheck` or `grpc_healthcheck` should be specified.\n"
                },
                "http2": {
                    "type": "boolean",
                    "description": "Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.\n"
                },
                "loadBalancingConfig": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendLoadBalancingConfig:AlbBackendGroupHttpBackendLoadBalancingConfig",
                    "description": "Load Balancing Config specification that will be used by this backend.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the backend.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for incoming traffic.\n"
                },
                "storageBucket": {
                    "type": "string",
                    "description": "Name of bucket which should be used as a backend.\n"
                },
                "targetGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "References target groups for the backend.\n"
                },
                "tls": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendTls:AlbBackendGroupHttpBackendTls",
                    "description": "TLS specification that will be used by this backend.\n\n\u003e Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbBackendGroupHttpBackendHealthcheck:AlbBackendGroupHttpBackendHealthcheck": {
            "properties": {
                "grpcHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck:AlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck",
                    "description": "gRPC Healthcheck specification that will be used by this healthcheck.\n"
                },
                "healthcheckPort": {
                    "type": "integer",
                    "description": "Optional alternative port for health checking.\n"
                },
                "healthyThreshold": {
                    "type": "integer",
                    "description": "Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.\n"
                },
                "httpHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendHealthcheckHttpHealthcheck:AlbBackendGroupHttpBackendHealthcheckHttpHealthcheck",
                    "description": "HTTP Healthcheck specification that will be used by this healthcheck.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Interval between health checks.\n"
                },
                "intervalJitterPercent": {
                    "type": "number",
                    "description": "An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * interval_jitter_percent / 100) will be added to the wait time.\n"
                },
                "streamHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendHealthcheckStreamHealthcheck:AlbBackendGroupHttpBackendHealthcheckStreamHealthcheck",
                    "description": "Stream Healthcheck specification that will be used by this healthcheck.\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "Time to wait for a health check response.\n"
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.\n"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "timeout"
            ]
        },
        "yandex:index/AlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck:AlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `grpc.health.v1.HealthCheckRequest` message.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupHttpBackendHealthcheckHttpHealthcheck:AlbBackendGroupHttpBackendHealthcheckHttpHealthcheck": {
            "properties": {
                "expectedStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of HTTP response statuses considered healthy.\n"
                },
                "host": {
                    "type": "string",
                    "description": "`Host` HTTP header value.\n"
                },
                "http2": {
                    "type": "boolean",
                    "description": "If set, health checks will use HTTP2.\n"
                },
                "path": {
                    "type": "string",
                    "description": "HTTP path.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "yandex:index/AlbBackendGroupHttpBackendHealthcheckStreamHealthcheck:AlbBackendGroupHttpBackendHealthcheckStreamHealthcheck": {
            "properties": {
                "receive": {
                    "type": "string",
                    "description": "Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.\n"
                },
                "send": {
                    "type": "string",
                    "description": "Message sent to targets during TCP data transfer. If not specified, no data is sent to the target.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupHttpBackendLoadBalancingConfig:AlbBackendGroupHttpBackendLoadBalancingConfig": {
            "properties": {
                "localityAwareRoutingPercent": {
                    "type": "integer",
                    "description": "Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Load balancing mode for the backend. Possible values: `ROUND_ROBIN`, `RANDOM`, `LEAST_REQUEST`, `MAGLEV_HASH`.\n"
                },
                "panicThreshold": {
                    "type": "integer",
                    "description": "If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading when everything is bad. Zero means no panic threshold.\n"
                },
                "strictLocality": {
                    "type": "boolean",
                    "description": "If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupHttpBackendTls:AlbBackendGroupHttpBackendTls": {
            "properties": {
                "sni": {
                    "type": "string",
                    "description": "[SNI](https://en.wikipedia.org/wiki/Server_Name_Indication) string for TLS connections.\n"
                },
                "validationContext": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackendTlsValidationContext:AlbBackendGroupHttpBackendTlsValidationContext"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupHttpBackendTlsValidationContext:AlbBackendGroupHttpBackendTlsValidationContext": {
            "properties": {
                "trustedCaBytes": {
                    "type": "string",
                    "description": "PEM-encoded trusted CA certificate chain.\n"
                },
                "trustedCaId": {
                    "type": "string",
                    "description": "Trusted CA certificate ID in the Certificate Manager.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupSessionAffinity:AlbBackendGroupSessionAffinity": {
            "properties": {
                "connection": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupSessionAffinityConnection:AlbBackendGroupSessionAffinityConnection",
                    "description": "Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address.\n"
                },
                "cookie": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupSessionAffinityCookie:AlbBackendGroupSessionAffinityCookie",
                    "description": "Requests with the same cookie value and the specified file name are combined into a session. Allowed only for `HTTP` and `gRPC` backend groups.\n"
                },
                "header": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupSessionAffinityHeader:AlbBackendGroupSessionAffinityHeader",
                    "description": "Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for `HTTP` and `gRPC` backend groups.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupSessionAffinityConnection:AlbBackendGroupSessionAffinityConnection": {
            "properties": {
                "sourceIp": {
                    "type": "boolean",
                    "description": "Source IP address to use with affinity.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupSessionAffinityCookie:AlbBackendGroupSessionAffinityCookie": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the HTTP cookie to use with affinity.\n"
                },
                "ttl": {
                    "type": "string",
                    "description": "TTL for the cookie (if not set, session cookie will be used).\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbBackendGroupSessionAffinityHeader:AlbBackendGroupSessionAffinityHeader": {
            "properties": {
                "headerName": {
                    "type": "string",
                    "description": "The name of the request header that will be used with affinity.\n"
                }
            },
            "type": "object",
            "required": [
                "headerName"
            ]
        },
        "yandex:index/AlbBackendGroupStreamBackend:AlbBackendGroupStreamBackend": {
            "properties": {
                "enableProxyProtocol": {
                    "type": "boolean"
                },
                "healthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendHealthcheck:AlbBackendGroupStreamBackendHealthcheck",
                    "description": "Healthcheck specification that will be used by this backend.\n\n\u003e Only one of `stream_healthcheck` or `http_healthcheck` or `grpc_healthcheck` should be specified.\n"
                },
                "keepConnectionsOnHostHealthFailure": {
                    "type": "boolean",
                    "description": "If set, when a backend host becomes unhealthy (as determined by the configured health checks), keep connections to the failed host.\n"
                },
                "loadBalancingConfig": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendLoadBalancingConfig:AlbBackendGroupStreamBackendLoadBalancingConfig",
                    "description": "Load Balancing Config specification that will be used by this backend.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the backend.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for incoming traffic.\n"
                },
                "targetGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "References target groups for the backend.\n"
                },
                "tls": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendTls:AlbBackendGroupStreamBackendTls",
                    "description": "TLS specification that will be used by this backend.\n\n\u003e Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "targetGroupIds"
            ]
        },
        "yandex:index/AlbBackendGroupStreamBackendHealthcheck:AlbBackendGroupStreamBackendHealthcheck": {
            "properties": {
                "grpcHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck:AlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck",
                    "description": "gRPC Healthcheck specification that will be used by this healthcheck.\n"
                },
                "healthcheckPort": {
                    "type": "integer",
                    "description": "Optional alternative port for health checking.\n"
                },
                "healthyThreshold": {
                    "type": "integer",
                    "description": "Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.\n"
                },
                "httpHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendHealthcheckHttpHealthcheck:AlbBackendGroupStreamBackendHealthcheckHttpHealthcheck",
                    "description": "HTTP Healthcheck specification that will be used by this healthcheck.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Interval between health checks.\n"
                },
                "intervalJitterPercent": {
                    "type": "number",
                    "description": "An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * interval_jitter_percent / 100) will be added to the wait time.\n"
                },
                "streamHealthcheck": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendHealthcheckStreamHealthcheck:AlbBackendGroupStreamBackendHealthcheckStreamHealthcheck",
                    "description": "Stream Healthcheck specification that will be used by this healthcheck.\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "Time to wait for a health check response.\n"
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.\n"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "timeout"
            ]
        },
        "yandex:index/AlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck:AlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `grpc.health.v1.HealthCheckRequest` message.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupStreamBackendHealthcheckHttpHealthcheck:AlbBackendGroupStreamBackendHealthcheckHttpHealthcheck": {
            "properties": {
                "expectedStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of HTTP response statuses considered healthy.\n"
                },
                "host": {
                    "type": "string",
                    "description": "`Host` HTTP header value.\n"
                },
                "http2": {
                    "type": "boolean",
                    "description": "If set, health checks will use HTTP2.\n"
                },
                "path": {
                    "type": "string",
                    "description": "HTTP path.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "yandex:index/AlbBackendGroupStreamBackendHealthcheckStreamHealthcheck:AlbBackendGroupStreamBackendHealthcheckStreamHealthcheck": {
            "properties": {
                "receive": {
                    "type": "string",
                    "description": "Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.\n"
                },
                "send": {
                    "type": "string",
                    "description": "Message sent to targets during TCP data transfer. If not specified, no data is sent to the target.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupStreamBackendLoadBalancingConfig:AlbBackendGroupStreamBackendLoadBalancingConfig": {
            "properties": {
                "localityAwareRoutingPercent": {
                    "type": "integer",
                    "description": "Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Load balancing mode for the backend. Possible values: `ROUND_ROBIN`, `RANDOM`, `LEAST_REQUEST`, `MAGLEV_HASH`.\n"
                },
                "panicThreshold": {
                    "type": "integer",
                    "description": "If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading when everything is bad. Zero means no panic threshold.\n"
                },
                "strictLocality": {
                    "type": "boolean",
                    "description": "If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupStreamBackendTls:AlbBackendGroupStreamBackendTls": {
            "properties": {
                "sni": {
                    "type": "string",
                    "description": "[SNI](https://en.wikipedia.org/wiki/Server_Name_Indication) string for TLS connections.\n"
                },
                "validationContext": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackendTlsValidationContext:AlbBackendGroupStreamBackendTlsValidationContext"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbBackendGroupStreamBackendTlsValidationContext:AlbBackendGroupStreamBackendTlsValidationContext": {
            "properties": {
                "trustedCaBytes": {
                    "type": "string",
                    "description": "PEM-encoded trusted CA certificate chain.\n"
                },
                "trustedCaId": {
                    "type": "string",
                    "description": "Trusted CA certificate ID in the Certificate Manager.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbHttpRouterRouteOptions:AlbHttpRouterRouteOptions": {
            "properties": {
                "rbac": {
                    "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptionsRbac:AlbHttpRouterRouteOptionsRbac",
                    "description": "RBAC configuration.\n"
                },
                "securityProfileId": {
                    "type": "string",
                    "description": "SWS profile ID.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbHttpRouterRouteOptionsRbac:AlbHttpRouterRouteOptionsRbac": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptionsRbacPrincipal:AlbHttpRouterRouteOptionsRbacPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "principals"
            ]
        },
        "yandex:index/AlbHttpRouterRouteOptionsRbacPrincipal:AlbHttpRouterRouteOptionsRbacPrincipal": {
            "properties": {
                "andPrincipals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipal:AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "andPrincipals"
            ]
        },
        "yandex:index/AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipal:AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipal": {
            "properties": {
                "any": {
                    "type": "boolean"
                },
                "header": {
                    "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeader:AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeader"
                },
                "remoteIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeader:AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeaderValue:AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeaderValue",
                    "description": "The `path` and `fqmn` blocks.\n\n\u003e Exactly one type of string matches `exact`, `prefix` or `regex` should be specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeaderValue:AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeaderValue": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Match exactly.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Match prefix.\n"
                },
                "regex": {
                    "type": "string",
                    "description": "Match regex.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerAllocationPolicy:AlbLoadBalancerAllocationPolicy": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerAllocationPolicyLocation:AlbLoadBalancerAllocationPolicyLocation"
                    },
                    "description": "Unique set of locations.\n"
                }
            },
            "type": "object",
            "required": [
                "locations"
            ]
        },
        "yandex:index/AlbLoadBalancerAllocationPolicyLocation:AlbLoadBalancerAllocationPolicyLocation": {
            "properties": {
                "disableTraffic": {
                    "type": "boolean",
                    "description": "If set, will disable all L7 instances in the zone for request handling.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet that location is located at.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "subnetId",
                "zoneId"
            ]
        },
        "yandex:index/AlbLoadBalancerListener:AlbLoadBalancerListener": {
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerListenerEndpoint:AlbLoadBalancerListenerEndpoint"
                    },
                    "description": "Network endpoint (addresses and ports) of the listener.\n"
                },
                "http": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerHttp:AlbLoadBalancerListenerHttp",
                    "description": "HTTP handler that sets plain text HTTP router.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the listener.\n"
                },
                "stream": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerStream:AlbLoadBalancerListenerStream",
                    "description": "Stream configuration\n"
                },
                "tls": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTls:AlbLoadBalancerListenerTls",
                    "description": "TLS configuration\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbLoadBalancerListenerEndpoint:AlbLoadBalancerListenerEndpoint": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerListenerEndpointAddress:AlbLoadBalancerListenerEndpointAddress"
                    },
                    "description": "One or more addresses to listen on.\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "One or more ports to listen on.\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "ports"
            ]
        },
        "yandex:index/AlbLoadBalancerListenerEndpointAddress:AlbLoadBalancerListenerEndpointAddress": {
            "properties": {
                "externalIpv4Address": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerEndpointAddressExternalIpv4Address:AlbLoadBalancerListenerEndpointAddressExternalIpv4Address",
                    "description": "External IPv4 address.\n"
                },
                "externalIpv6Address": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerEndpointAddressExternalIpv6Address:AlbLoadBalancerListenerEndpointAddressExternalIpv6Address",
                    "description": "External IPv6 address.\n"
                },
                "internalIpv4Address": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerEndpointAddressInternalIpv4Address:AlbLoadBalancerListenerEndpointAddressInternalIpv4Address",
                    "description": "Internal IPv4 address.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerEndpointAddressExternalIpv4Address:AlbLoadBalancerListenerEndpointAddressExternalIpv4Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Provided by the client or computed automatically.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address"
                    ]
                }
            }
        },
        "yandex:index/AlbLoadBalancerListenerEndpointAddressExternalIpv6Address:AlbLoadBalancerListenerEndpointAddressExternalIpv6Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Provided by the client or computed automatically.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address"
                    ]
                }
            }
        },
        "yandex:index/AlbLoadBalancerListenerEndpointAddressInternalIpv4Address:AlbLoadBalancerListenerEndpointAddressInternalIpv4Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Provided by the client or computed automatically.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet that the address belongs to.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/AlbLoadBalancerListenerHttp:AlbLoadBalancerListenerHttp": {
            "properties": {
                "handler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerHttpHandler:AlbLoadBalancerListenerHttpHandler",
                    "description": "HTTP handler.\n"
                },
                "redirects": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerHttpRedirects:AlbLoadBalancerListenerHttpRedirects",
                    "description": "Shortcut for adding http \u003e https redirects.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerHttpHandler:AlbLoadBalancerListenerHttpHandler": {
            "properties": {
                "allowHttp10": {
                    "type": "boolean",
                    "description": "If set, will enable only HTTP1 protocol with HTTP1.0 support.\n"
                },
                "http2Options": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerHttpHandlerHttp2Options:AlbLoadBalancerListenerHttpHandlerHttp2Options",
                    "description": "If set, will enable HTTP2 protocol for the handler.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "HTTP router id.\n"
                },
                "rewriteRequestId": {
                    "type": "boolean",
                    "description": "When unset, will preserve the incoming `x-request-id` header, otherwise would rewrite it with a new value.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerHttpHandlerHttp2Options:AlbLoadBalancerListenerHttpHandlerHttp2Options": {
            "properties": {
                "maxConcurrentStreams": {
                    "type": "integer",
                    "description": "Maximum number of concurrent streams.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerHttpRedirects:AlbLoadBalancerListenerHttpRedirects": {
            "properties": {
                "httpToHttps": {
                    "type": "boolean",
                    "description": "If set redirects all unencrypted HTTP requests to the same URI with scheme changed to `https`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerStream:AlbLoadBalancerListenerStream": {
            "properties": {
                "handler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerStreamHandler:AlbLoadBalancerListenerStreamHandler",
                    "description": "Stream handler resource.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerStreamHandler:AlbLoadBalancerListenerStreamHandler": {
            "properties": {
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend Group ID.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "idleTimeout"
                    ]
                }
            }
        },
        "yandex:index/AlbLoadBalancerListenerTls:AlbLoadBalancerListenerTls": {
            "properties": {
                "defaultHandler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsDefaultHandler:AlbLoadBalancerListenerTlsDefaultHandler",
                    "description": "TLS handler resource.\n"
                },
                "sniHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsSniHandler:AlbLoadBalancerListenerTlsSniHandler"
                    },
                    "description": "Settings for handling requests with Server Name Indication (SNI)\n"
                }
            },
            "type": "object",
            "required": [
                "defaultHandler"
            ]
        },
        "yandex:index/AlbLoadBalancerListenerTlsDefaultHandler:AlbLoadBalancerListenerTlsDefaultHandler": {
            "properties": {
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate IDs in the Certificate Manager. Multiple TLS certificates can be associated with the same context to allow both RSA and ECDSA certificates. Only the first certificate of each type will be used.\n"
                },
                "httpHandler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsDefaultHandlerHttpHandler:AlbLoadBalancerListenerTlsDefaultHandlerHttpHandler",
                    "description": "HTTP handler.\n"
                },
                "streamHandler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsDefaultHandlerStreamHandler:AlbLoadBalancerListenerTlsDefaultHandlerStreamHandler",
                    "description": "Stream handler resource.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateIds"
            ]
        },
        "yandex:index/AlbLoadBalancerListenerTlsDefaultHandlerHttpHandler:AlbLoadBalancerListenerTlsDefaultHandlerHttpHandler": {
            "properties": {
                "allowHttp10": {
                    "type": "boolean",
                    "description": "If set, will enable only HTTP1 protocol with HTTP1.0 support.\n"
                },
                "http2Options": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsDefaultHandlerHttpHandlerHttp2Options:AlbLoadBalancerListenerTlsDefaultHandlerHttpHandlerHttp2Options",
                    "description": "If set, will enable HTTP2 protocol for the handler.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "HTTP router id.\n"
                },
                "rewriteRequestId": {
                    "type": "boolean",
                    "description": "When unset, will preserve the incoming `x-request-id` header, otherwise would rewrite it with a new value.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerTlsDefaultHandlerHttpHandlerHttp2Options:AlbLoadBalancerListenerTlsDefaultHandlerHttpHandlerHttp2Options": {
            "properties": {
                "maxConcurrentStreams": {
                    "type": "integer",
                    "description": "Maximum number of concurrent streams.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerTlsDefaultHandlerStreamHandler:AlbLoadBalancerListenerTlsDefaultHandlerStreamHandler": {
            "properties": {
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend Group ID.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "idleTimeout"
                    ]
                }
            }
        },
        "yandex:index/AlbLoadBalancerListenerTlsSniHandler:AlbLoadBalancerListenerTlsSniHandler": {
            "properties": {
                "handler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandler:AlbLoadBalancerListenerTlsSniHandlerHandler",
                    "description": "TLS handler resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SNI handler\n"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Server names that are matched by the SNI handler\n"
                }
            },
            "type": "object",
            "required": [
                "handler",
                "name",
                "serverNames"
            ]
        },
        "yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandler:AlbLoadBalancerListenerTlsSniHandlerHandler": {
            "properties": {
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate IDs in the Certificate Manager. Multiple TLS certificates can be associated with the same context to allow both RSA and ECDSA certificates. Only the first certificate of each type will be used.\n"
                },
                "httpHandler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandler:AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandler",
                    "description": "HTTP handler.\n"
                },
                "streamHandler": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandlerStreamHandler:AlbLoadBalancerListenerTlsSniHandlerHandlerStreamHandler",
                    "description": "Stream handler resource.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateIds"
            ]
        },
        "yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandler:AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandler": {
            "properties": {
                "allowHttp10": {
                    "type": "boolean",
                    "description": "If set, will enable only HTTP1 protocol with HTTP1.0 support.\n"
                },
                "http2Options": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandlerHttp2Options:AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandlerHttp2Options",
                    "description": "If set, will enable HTTP2 protocol for the handler.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "HTTP router id.\n"
                },
                "rewriteRequestId": {
                    "type": "boolean",
                    "description": "When unset, will preserve the incoming `x-request-id` header, otherwise would rewrite it with a new value.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandlerHttp2Options:AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandlerHttp2Options": {
            "properties": {
                "maxConcurrentStreams": {
                    "type": "integer",
                    "description": "Maximum number of concurrent streams.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerListenerTlsSniHandlerHandlerStreamHandler:AlbLoadBalancerListenerTlsSniHandlerHandlerStreamHandler": {
            "properties": {
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend Group ID.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "idleTimeout"
                    ]
                }
            }
        },
        "yandex:index/AlbLoadBalancerLogOptions:AlbLoadBalancerLogOptions": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Set to `true` to disable Cloud Logging for the balancer.\n"
                },
                "discardRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerLogOptionsDiscardRule:AlbLoadBalancerLogOptionsDiscardRule"
                    },
                    "description": "List of rules to discard a fraction of logs.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbLoadBalancerLogOptionsDiscardRule:AlbLoadBalancerLogOptionsDiscardRule": {
            "properties": {
                "discardPercent": {
                    "type": "integer",
                    "description": "The percent of logs which will be discarded.\n"
                },
                "grpcCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of grpc codes by name, e.g, [**NOT_FOUND**, **RESOURCE_EXHAUSTED**].\n"
                },
                "httpCodeIntervals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of http code intervals *1XX*-*5XX* or *ALL*\n"
                },
                "httpCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of http codes *100*-*599*.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbTargetGroupTarget:AlbTargetGroupTarget": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the target.\n"
                },
                "privateIpv4Address": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet that targets are connected to. All targets in the target group must be connected to the same subnet within a single availability zone.\n"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "yandex:index/AlbVirtualHostModifyRequestHeader:AlbVirtualHostModifyRequestHeader": {
            "properties": {
                "append": {
                    "type": "string",
                    "description": "Append string to the header value.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the header to modify.\n"
                },
                "remove": {
                    "type": "boolean",
                    "description": "If set, remove the header.\n"
                },
                "replace": {
                    "type": "string",
                    "description": "New value for a header. Header values support the following [formatters](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers).\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbVirtualHostModifyResponseHeader:AlbVirtualHostModifyResponseHeader": {
            "properties": {
                "append": {
                    "type": "string",
                    "description": "Append string to the header value.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the header to modify.\n"
                },
                "remove": {
                    "type": "boolean",
                    "description": "If set, remove the header.\n"
                },
                "replace": {
                    "type": "string",
                    "description": "New value for a header. Header values support the following [formatters](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers).\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbVirtualHostRateLimit:AlbVirtualHostRateLimit": {
            "properties": {
                "allRequests": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRateLimitAllRequests:AlbVirtualHostRateLimitAllRequests",
                    "description": "Rate limit configuration applied to all incoming requests\n"
                },
                "requestsPerIp": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRateLimitRequestsPerIp:AlbVirtualHostRateLimitRequestsPerIp",
                    "description": "Rate limit configuration applied separately for each set of requests grouped by client IP address\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRateLimitAllRequests:AlbVirtualHostRateLimitAllRequests": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRateLimitRequestsPerIp:AlbVirtualHostRateLimitRequestsPerIp": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRoute:AlbVirtualHostRoute": {
            "properties": {
                "grpcRoute": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRoute:AlbVirtualHostRouteGrpcRoute",
                    "description": "gRPC route resource.\n\n\u003e Exactly one type of actions `grpc_route_action` or `grpc_status_response_action` should be specified.\n"
                },
                "httpRoute": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRoute:AlbVirtualHostRouteHttpRoute",
                    "description": "HTTP route resource.\n\n\u003e Exactly one type of actions `http_route_action` or `redirect_action` or `direct_response_action` should be specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the route.\n"
                },
                "routeOptions": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteRouteOptions:AlbVirtualHostRouteRouteOptions",
                    "description": "Route options for the virtual host.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRoute:AlbVirtualHostRouteGrpcRoute": {
            "properties": {
                "grpcMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcMatch:AlbVirtualHostRouteGrpcRouteGrpcMatch"
                    },
                    "description": "Checks `/` prefix by default.\n"
                },
                "grpcRouteAction": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteAction:AlbVirtualHostRouteGrpcRouteGrpcRouteAction",
                    "description": "gRPC route action resource.\n\n\u003e Only one type of host rewrite specifiers `host_rewrite` or `auto_host_rewrite` should be specified.\n"
                },
                "grpcStatusResponseAction": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction:AlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction",
                    "description": "gRPC status response action resource.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcMatch:AlbVirtualHostRouteGrpcRouteGrpcMatch": {
            "properties": {
                "fqmn": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcMatchFqmn:AlbVirtualHostRouteGrpcRouteGrpcMatchFqmn",
                    "description": "The `path` and `fqmn` blocks.\n\n\u003e Exactly one type of string matches `exact`, `prefix` or `regex` should be specified.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcMatchFqmn:AlbVirtualHostRouteGrpcRouteGrpcMatchFqmn": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Match exactly.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Match prefix.\n"
                },
                "regex": {
                    "type": "string",
                    "description": "Match regex.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteAction:AlbVirtualHostRouteGrpcRouteGrpcRouteAction": {
            "properties": {
                "autoHostRewrite": {
                    "type": "boolean",
                    "description": "If set, will automatically rewrite host.\n"
                },
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend group to route requests.\n"
                },
                "hostRewrite": {
                    "type": "string",
                    "description": "Host rewrite specifier.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "Specifies the idle timeout (time without any data transfer for the active request) for the route. It is useful for streaming scenarios - one should set idle_timeout to something meaningful and max_timeout to the maximum time the stream is allowed to be alive. If not specified, there is no per-route idle timeout.\n"
                },
                "maxTimeout": {
                    "type": "string",
                    "description": "Lower timeout may be specified by the client (using grpc-timeout header). If not set, default is 60 seconds.\n"
                },
                "rateLimit": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit:AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit",
                    "description": "Rate limit configuration applied for a whole virtual host\n"
                }
            },
            "type": "object",
            "required": [
                "backendGroupId"
            ]
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit:AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit": {
            "properties": {
                "allRequests": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequests:AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequests",
                    "description": "Rate limit configuration applied to all incoming requests\n"
                },
                "requestsPerIp": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp:AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp",
                    "description": "Rate limit configuration applied separately for each set of requests grouped by client IP address\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequests:AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequests": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp:AlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction:AlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the response. Supported values are: ok, invalid_argumet, not_found, permission_denied, unauthenticated, unimplemented, internal, unavailable.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRoute:AlbVirtualHostRouteHttpRoute": {
            "properties": {
                "directResponseAction": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteDirectResponseAction:AlbVirtualHostRouteHttpRouteDirectResponseAction",
                    "description": "Direct response action resource.\n"
                },
                "httpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteHttpMatch:AlbVirtualHostRouteHttpRouteHttpMatch"
                    },
                    "description": "Checks `/` prefix by default.\n"
                },
                "httpRouteAction": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteAction:AlbVirtualHostRouteHttpRouteHttpRouteAction",
                    "description": "HTTP route action resource.\n\n\u003e Only one type of host rewrite specifiers `host_rewrite` or `auto_host_rewrite` should be specified.\n"
                },
                "redirectAction": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteRedirectAction:AlbVirtualHostRouteHttpRouteRedirectAction",
                    "description": "Redirect action resource.\n\n\u003e Only one type of paths `replace_path` or `replace_prefix` should be specified.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteDirectResponseAction:AlbVirtualHostRouteHttpRouteDirectResponseAction": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Response body text.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "HTTP response status. Should be between `100` and `599`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteHttpMatch:AlbVirtualHostRouteHttpRouteHttpMatch": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of methods (strings).\n"
                },
                "path": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteHttpMatchPath:AlbVirtualHostRouteHttpRouteHttpMatchPath",
                    "description": "The `path` and `fqmn` blocks.\n\n\u003e Exactly one type of string matches `exact`, `prefix` or `regex` should be specified.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteHttpMatchPath:AlbVirtualHostRouteHttpRouteHttpMatchPath": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Match exactly.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Match prefix.\n"
                },
                "regex": {
                    "type": "string",
                    "description": "Match regex.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteAction:AlbVirtualHostRouteHttpRouteHttpRouteAction": {
            "properties": {
                "autoHostRewrite": {
                    "type": "boolean",
                    "description": "If set, will automatically rewrite host.\n"
                },
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend group to route requests.\n"
                },
                "hostRewrite": {
                    "type": "string",
                    "description": "Host rewrite specifier.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "Specifies the idle timeout (time without any data transfer for the active request) for the route. It is useful for streaming scenarios (i.e. long-polling, server-sent events) - one should set idle_timeout to something meaningful and timeout to the maximum time the stream is allowed to be alive. If not specified, there is no per-route idle timeout.\n"
                },
                "prefixRewrite": {
                    "type": "string",
                    "description": "If not empty, matched path prefix will be replaced by this value.\n"
                },
                "rateLimit": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit:AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit",
                    "description": "Rate limit configuration applied for a whole virtual host\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "Specifies the request timeout (overall time request processing is allowed to take) for the route. If not set, default is 60 seconds.\n"
                },
                "upgradeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of upgrade types. Only specified upgrade types will be allowed. For example, `websocket`.\n"
                }
            },
            "type": "object",
            "required": [
                "backendGroupId"
            ]
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit:AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit": {
            "properties": {
                "allRequests": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequests:AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequests",
                    "description": "Rate limit configuration applied to all incoming requests\n"
                },
                "requestsPerIp": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp:AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp",
                    "description": "Rate limit configuration applied separately for each set of requests grouped by client IP address\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequests:AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequests": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp:AlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteHttpRouteRedirectAction:AlbVirtualHostRouteHttpRouteRedirectAction": {
            "properties": {
                "removeQuery": {
                    "type": "boolean",
                    "description": "If set, remove query part.\n"
                },
                "replaceHost": {
                    "type": "string",
                    "description": "Replaces hostname.\n"
                },
                "replacePath": {
                    "type": "string",
                    "description": "Replace path.\n"
                },
                "replacePort": {
                    "type": "integer",
                    "description": "Replaces port.\n"
                },
                "replacePrefix": {
                    "type": "string",
                    "description": "Replace only matched prefix. Example:\u003cbr/\u003e match:{ prefix_match: `/some` } \u003cbr/\u003e redirect: { replace_prefix: `/other` } \u003cbr/\u003e will redirect `/something` to `/otherthing`.\n"
                },
                "replaceScheme": {
                    "type": "string",
                    "description": "Replaces scheme. If the original scheme is `http` or `https`, will also remove the 80 or 443 port, if present.\n"
                },
                "responseCode": {
                    "type": "string",
                    "description": "The HTTP status code to use in the redirect response. Supported values are: `moved_permanently`, `found`, `see_other`, `temporary_redirect`, `permanent_redirect`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteOptions:AlbVirtualHostRouteOptions": {
            "properties": {
                "rbac": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptionsRbac:AlbVirtualHostRouteOptionsRbac",
                    "description": "RBAC configuration.\n"
                },
                "securityProfileId": {
                    "type": "string",
                    "description": "SWS profile ID.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteOptionsRbac:AlbVirtualHostRouteOptionsRbac": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptionsRbacPrincipal:AlbVirtualHostRouteOptionsRbacPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "principals"
            ]
        },
        "yandex:index/AlbVirtualHostRouteOptionsRbacPrincipal:AlbVirtualHostRouteOptionsRbacPrincipal": {
            "properties": {
                "andPrincipals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipal:AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "andPrincipals"
            ]
        },
        "yandex:index/AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipal:AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipal": {
            "properties": {
                "any": {
                    "type": "boolean"
                },
                "header": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeader:AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeader"
                },
                "remoteIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeader:AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeaderValue:AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeaderValue",
                    "description": "The `path` and `fqmn` blocks.\n\n\u003e Exactly one type of string matches `exact`, `prefix` or `regex` should be specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeaderValue:AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeaderValue": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Match exactly.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Match prefix.\n"
                },
                "regex": {
                    "type": "string",
                    "description": "Match regex.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteRouteOptions:AlbVirtualHostRouteRouteOptions": {
            "properties": {
                "rbac": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteRouteOptionsRbac:AlbVirtualHostRouteRouteOptionsRbac",
                    "description": "RBAC configuration.\n"
                },
                "securityProfileId": {
                    "type": "string",
                    "description": "SWS profile ID.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteRouteOptionsRbac:AlbVirtualHostRouteRouteOptionsRbac": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipal:AlbVirtualHostRouteRouteOptionsRbacPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "principals"
            ]
        },
        "yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipal:AlbVirtualHostRouteRouteOptionsRbacPrincipal": {
            "properties": {
                "andPrincipals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipal:AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "andPrincipals"
            ]
        },
        "yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipal:AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipal": {
            "properties": {
                "any": {
                    "type": "boolean"
                },
                "header": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeader:AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeader"
                },
                "remoteIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeader:AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeaderValue:AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeaderValue",
                    "description": "The `path` and `fqmn` blocks.\n\n\u003e Exactly one type of string matches `exact`, `prefix` or `regex` should be specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeaderValue:AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeaderValue": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Match exactly.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Match prefix.\n"
                },
                "regex": {
                    "type": "string",
                    "description": "Match regex.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ApiGatewayCanary:ApiGatewayCanary": {
            "properties": {
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of values for variables in gateway specification of canary release.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Percentage of requests, which will be processed by canary release.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ApiGatewayConnectivity:ApiGatewayConnectivity": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Network the gateway will have access to. It's essential to specify network with subnets in all availability zones.\n"
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "yandex:index/ApiGatewayCustomDomain:ApiGatewayCustomDomain": {
            "properties": {
                "certificateId": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateId",
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateId",
                        "domainId",
                        "fqdn"
                    ]
                }
            }
        },
        "yandex:index/ApiGatewayLogOptions:ApiGatewayLogOptions": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Is logging from Yandex Cloud API Gateway disabled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Log entries are written to default log group for specified folder.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log entries are written to specified log group.\n"
                },
                "minLevel": {
                    "type": "string",
                    "description": "Minimum log entry level.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AuditTrailsTrailDataStreamDestination:AuditTrailsTrailDataStreamDestination": {
            "properties": {
                "databaseId": {
                    "type": "string",
                    "description": "ID of the [YDB](https://yandex.cloud/docs/ydb/concepts/resources) hosting the destination data stream.\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "Name of the [YDS stream](https://yandex.cloud/docs/data-streams/concepts/glossary#stream-concepts) belonging to the specified YDB.\n"
                }
            },
            "type": "object",
            "required": [
                "databaseId",
                "streamName"
            ]
        },
        "yandex:index/AuditTrailsTrailFilter:AuditTrailsTrailFilter": {
            "properties": {
                "eventFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilterEventFilter:AuditTrailsTrailFilterEventFilter"
                    },
                    "description": "Structure describing filtering process for the service-specific data plane events.\n"
                },
                "pathFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilterPathFilter:AuditTrailsTrailFilterPathFilter",
                    "description": "Structure describing filtering process for default control plane events. If omitted, the trail will not deliver this category.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AuditTrailsTrailFilterEventFilter:AuditTrailsTrailFilterEventFilter": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilterEventFilterCategory:AuditTrailsTrailFilterEventFilterCategory"
                    },
                    "description": "List of structures describing categories of gathered data plane events.\n"
                },
                "pathFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilterEventFilterPathFilter:AuditTrailsTrailFilterEventFilterPathFilter",
                    "description": "Structure describing filtering process based on cloud resources for the described event set. Structurally equal to the `filter.path_filter`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "ID of the service which events will be gathered.\n"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "pathFilter",
                "service"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterEventFilterCategory:AuditTrailsTrailFilterEventFilterCategory": {
            "properties": {
                "plane": {
                    "type": "string",
                    "description": "Type of the event by its relation to the cloud resource model. Possible values: `CONTROL_PLANE`/`DATA_PLANE`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the event by its operation effect on the resource. Possible values: `READ`/`WRITE`.\n"
                }
            },
            "type": "object",
            "required": [
                "plane",
                "type"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterEventFilterPathFilter:AuditTrailsTrailFilterEventFilterPathFilter": {
            "properties": {
                "anyFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilterEventFilterPathFilterAnyFilter:AuditTrailsTrailFilterEventFilterPathFilterAnyFilter"
                },
                "someFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilterEventFilterPathFilterSomeFilter:AuditTrailsTrailFilterEventFilterPathFilterSomeFilter"
                }
            },
            "type": "object"
        },
        "yandex:index/AuditTrailsTrailFilterEventFilterPathFilterAnyFilter:AuditTrailsTrailFilterEventFilterPathFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "ID of the child resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the child resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterEventFilterPathFilterSomeFilter:AuditTrailsTrailFilterEventFilterPathFilterSomeFilter": {
            "properties": {
                "anyFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter:AuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter"
                    }
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "anyFilters",
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter:AuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "ID of the child resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the child resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterPathFilter:AuditTrailsTrailFilterPathFilter": {
            "properties": {
                "anyFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilterPathFilterAnyFilter:AuditTrailsTrailFilterPathFilterAnyFilter",
                    "description": "Structure describing that events will be gathered from all cloud resources that belong to the parent resource. Mutually exclusive with `some_filter`.\n"
                },
                "someFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilterPathFilterSomeFilter:AuditTrailsTrailFilterPathFilterSomeFilter"
                }
            },
            "type": "object"
        },
        "yandex:index/AuditTrailsTrailFilterPathFilterAnyFilter:AuditTrailsTrailFilterPathFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "ID of the child resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the child resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterPathFilterSomeFilter:AuditTrailsTrailFilterPathFilterSomeFilter": {
            "properties": {
                "anyFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilterPathFilterSomeFilterAnyFilter:AuditTrailsTrailFilterPathFilterSomeFilterAnyFilter"
                    },
                    "description": "List of child resources from which events will be gathered.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "ID of the parent resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the parent resource.\n"
                }
            },
            "type": "object",
            "required": [
                "anyFilters",
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilterPathFilterSomeFilterAnyFilter:AuditTrailsTrailFilterPathFilterSomeFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "ID of the child resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the child resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilteringPolicy:AuditTrailsTrailFilteringPolicy": {
            "properties": {
                "dataEventsFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicyDataEventsFilter:AuditTrailsTrailFilteringPolicyDataEventsFilter"
                    },
                    "description": "Structure describing filtering process for the service-specific data events.\n"
                },
                "managementEventsFilter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicyManagementEventsFilter:AuditTrailsTrailFilteringPolicyManagementEventsFilter",
                    "description": "Structure describing filtering process for management events.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/AuditTrailsTrailFilteringPolicyDataEventsFilter:AuditTrailsTrailFilteringPolicyDataEventsFilter": {
            "properties": {
                "excludedEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of events that won't be gathered by the trail from this service. New events will be automatically gathered when this option is specified. Mutually exclusive with `included_events`.\n"
                },
                "includedEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of events that will be gathered by the trail from this service. New events won't be gathered by default when this option is specified. Mutually exclusive with `excluded_events`.\n"
                },
                "resourceScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope:AuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope"
                    }
                },
                "service": {
                    "type": "string",
                    "description": "ID of the service which events will be gathered.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceScopes",
                "service"
            ]
        },
        "yandex:index/AuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope:AuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "ID of the child resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the child resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailFilteringPolicyManagementEventsFilter:AuditTrailsTrailFilteringPolicyManagementEventsFilter": {
            "properties": {
                "resourceScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope:AuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope"
                    },
                    "description": "Structure describing that events will be gathered from the specified resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceScopes"
            ]
        },
        "yandex:index/AuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope:AuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "ID of the child resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type of the child resource.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ]
        },
        "yandex:index/AuditTrailsTrailLoggingDestination:AuditTrailsTrailLoggingDestination": {
            "properties": {
                "logGroupId": {
                    "type": "string",
                    "description": "ID of the destination [Cloud Logging Group](https://yandex.cloud/docs/logging/concepts/log-group).\n"
                }
            },
            "type": "object",
            "required": [
                "logGroupId"
            ]
        },
        "yandex:index/AuditTrailsTrailStorageDestination:AuditTrailsTrailStorageDestination": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "Name of the [destination bucket](https://yandex.cloud/docs/storage/concepts/bucket).\n"
                },
                "objectPrefix": {
                    "type": "string",
                    "description": "Additional prefix of the uploaded objects. If not specified, objects will be uploaded with prefix equal to `trail_id`.\n"
                }
            },
            "type": "object",
            "required": [
                "bucketName"
            ]
        },
        "yandex:index/BackupPolicyFileFilters:BackupPolicyFileFilters": {
            "properties": {
                "exclusionMasks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Do not backup files that match the following criteria.\n"
                },
                "inclusionMasks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Backup only files that match the following criteria.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/BackupPolicyReattempts:BackupPolicyReattempts": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable flag. Default `true`.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Retry interval. See `interval_type` for available values. Default: `5m`.\n"
                },
                "maxAttempts": {
                    "type": "integer",
                    "description": "Maximum number of attempts before throwing an error. Default `5`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/BackupPolicyRetention:BackupPolicyRetention": {
            "properties": {
                "afterBackup": {
                    "type": "boolean",
                    "description": "Defines whether retention rule applies after creating backup or before.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/BackupPolicyRetentionRule:BackupPolicyRetentionRule"
                    },
                    "description": "A list of retention rules.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/BackupPolicyRetentionRule:BackupPolicyRetentionRule": {
            "properties": {
                "maxAge": {
                    "type": "string",
                    "description": "Deletes backups that older than `max_age`. Exactly one of `max_count` or `max_age` should be set.\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Deletes backups if it's count exceeds `max_count`. Exactly one of `max_count` or `max_age` should be set.\n"
                },
                "repeatPeriods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Possible types: `REPEATE_PERIOD_UNSPECIFIED`, `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`. Specifies repeat period of the backupset.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/BackupPolicyScheduling:BackupPolicyScheduling": {
            "properties": {
                "backupSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/BackupPolicySchedulingBackupSet:BackupPolicySchedulingBackupSet"
                    },
                    "description": "A list of schedules with backup sets that compose the whole scheme.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables scheduling. Default `true`.\n"
                },
                "executeByInterval": {
                    "type": "integer",
                    "description": "Perform backup by interval, since last backup of the host. Maximum value is: 9999 days. See `interval_type` for available values. Exactly on of options should be set: `execute_by_interval` or `execute_by_time`.\n",
                    "deprecationMessage": "The 'execute_by_interval' field has been deprecated. Please use 'backup_sets' instead."
                },
                "executeByTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/BackupPolicySchedulingExecuteByTime:BackupPolicySchedulingExecuteByTime"
                    },
                    "description": "Perform backup periodically at specific time. Exactly on of options should be set: `execute_by_interval` or `execute_by_time`.\n",
                    "deprecationMessage": "The 'execute_by_time' field has been deprecated. Please use 'backup_sets' instead."
                },
                "maxParallelBackups": {
                    "type": "integer",
                    "description": "Maximum number of backup processes allowed to run in parallel. 0 for unlimited. Default `0`.\n"
                },
                "randomMaxDelay": {
                    "type": "string",
                    "description": "Configuration of the random delay between the execution of parallel tasks. See `interval_type` for available values. Default `30m`.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme of the backups. Available values are: `ALWAYS_INCREMENTAL`, `ALWAYS_FULL`, `WEEKLY_FULL_DAILY_INCREMENTAL`, `WEEKLY_INCREMENTAL`. Default `ALWAYS_INCREMENTAL`.\n"
                },
                "weeklyBackupDay": {
                    "type": "string",
                    "description": "A day of week to start weekly backups. See `day_type` for available values. Default `MONDAY`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/BackupPolicySchedulingBackupSet:BackupPolicySchedulingBackupSet": {
            "properties": {
                "executeByInterval": {
                    "type": "integer",
                    "description": "Perform backup by interval, since last backup of the host. Maximum value is: 9999 days. See `interval_type` for available values. Exactly on of options should be set: `execute_by_interval` or `execute_by_time`.\n"
                },
                "executeByTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/BackupPolicySchedulingBackupSetExecuteByTime:BackupPolicySchedulingBackupSetExecuteByTime"
                    },
                    "description": "Perform backup periodically at specific time. Exactly on of options should be set: `execute_by_interval` or `execute_by_time`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "BackupSet type. See `backup_set_type` for available values. Default `TYPE_AUTO`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/BackupPolicySchedulingBackupSetExecuteByTime:BackupPolicySchedulingBackupSetExecuteByTime": {
            "properties": {
                "includeLastDayOfMonth": {
                    "type": "boolean",
                    "description": "If true, schedule will be applied on the last day of month. See `day_type` for available values. Default `true`.\n"
                },
                "monthdays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of days when schedule applies. Used in `MONTHLY` type.\n"
                },
                "months": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Set of values. Allowed values form 1 to 12.\n"
                },
                "repeatAts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of time in format `HH:MM` (24-hours format), when the schedule applies.\n"
                },
                "repeatEvery": {
                    "type": "string",
                    "description": "Frequency of backup repetition. See `interval_type` for available values.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the scheduling. Available values are: `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`.\n"
                },
                "weekdays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of weekdays when the backup will be applied. Used in `WEEKLY` type.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/BackupPolicySchedulingExecuteByTime:BackupPolicySchedulingExecuteByTime": {
            "properties": {
                "includeLastDayOfMonth": {
                    "type": "boolean",
                    "description": "If true, schedule will be applied on the last day of month. See `day_type` for available values. Default `true`.\n"
                },
                "monthdays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of days when schedule applies. Used in `MONTHLY` type.\n"
                },
                "months": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Set of values. Allowed values form 1 to 12.\n"
                },
                "repeatAts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of time in format `HH:MM` (24-hours format), when the schedule applies.\n"
                },
                "repeatEvery": {
                    "type": "string",
                    "description": "Frequency of backup repetition. See `interval_type` for available values.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the scheduling. Available values are: `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`.\n"
                },
                "weekdays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of weekdays when the backup will be applied. Used in `WEEKLY` type.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/BackupPolicyVmSnapshotReattempts:BackupPolicyVmSnapshotReattempts": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable flag. Default `true`.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Retry interval. See `interval_type` for available values. Default: `5m`.\n"
                },
                "maxAttempts": {
                    "type": "integer",
                    "description": "Maximum number of attempts before throwing an error. Default `5`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/CdnOriginGroupOrigin:CdnOriginGroupOrigin": {
            "properties": {
                "backup": {
                    "type": "boolean",
                    "description": "Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The origin is enabled and used as a source for the CDN. Default `enabled`.\n"
                },
                "originGroupId": {
                    "type": "integer"
                },
                "source": {
                    "type": "string",
                    "description": "IP address or Domain name of your origin and the port.\n"
                }
            },
            "type": "object",
            "required": [
                "source"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "originGroupId",
                        "source"
                    ]
                }
            }
        },
        "yandex:index/CdnResourceOptions:CdnResourceOptions": {
            "properties": {
                "allowedHttpMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP methods for your CDN content. By default the following methods are allowed: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS. In case some methods are not allowed to the user, they will get the 405 (Method Not Allowed) response. If the method is not supported, the user gets the 501 (Not Implemented) response.\n"
                },
                "browserCacheSettings": {
                    "type": "integer",
                    "description": "Set up a cache period for the end-users browser. Content will be cached due to origin settings. If there are no cache settings on your origin, the content will not be cached. The list of HTTP response codes that can be cached in browsers: 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Other response codes will not be cached. The default value is 4 days.\n"
                },
                "cacheHttpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List HTTP headers that must be included in responses to clients.\n"
                },
                "cors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Parameter that lets browsers get access to selected resources from a domain different to a domain from which the request is received.\n"
                },
                "customHostHeader": {
                    "type": "string",
                    "description": "Custom value for the Host header. Your server must be able to process requests with the chosen header.\n"
                },
                "customServerName": {
                    "type": "string",
                    "description": "Wildcard additional CNAME. If a resource has a wildcard additional CNAME, you can use your own certificate for content delivery via HTTPS.\n"
                },
                "disableCache": {
                    "type": "boolean",
                    "description": "Setup a cache status.\n"
                },
                "disableProxyForceRanges": {
                    "type": "boolean",
                    "description": "Disabling proxy force ranges.\n"
                },
                "edgeCacheSettings": {
                    "type": "integer",
                    "description": "Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers. Responses with other codes will not be cached.\n"
                },
                "enableIpUrlSigning": {
                    "type": "boolean",
                    "description": "Enable access limiting by IP addresses, option available only with setting secure_key.\n"
                },
                "fetchedCompressed": {
                    "type": "boolean",
                    "description": "Option helps you to reduce the bandwidth between origin and CDN servers. Also, content delivery speed becomes higher because of reducing the time for compressing files in a CDN.\n"
                },
                "forwardHostHeader": {
                    "type": "boolean",
                    "description": "Choose the Forward Host header option if is important to send in the request to the Origin the same Host header as was sent in the request to CDN server.\n"
                },
                "gzipOn": {
                    "type": "boolean",
                    "description": "GZip compression at CDN servers reduces file size by 70% and can be as high as 90%.\n"
                },
                "ignoreCookie": {
                    "type": "boolean",
                    "description": "Set for ignoring cookie.\n"
                },
                "ignoreQueryParams": {
                    "type": "boolean",
                    "description": "Files with different query parameters are cached as objects with the same key regardless of the parameter value. selected by default.\n"
                },
                "ipAddressAcl": {
                    "$ref": "#/types/yandex:index/CdnResourceOptionsIpAddressAcl:CdnResourceOptionsIpAddressAcl"
                },
                "proxyCacheMethodsSet": {
                    "type": "boolean",
                    "description": "Allows caching for GET, HEAD and POST requests.\n"
                },
                "queryParamsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Files with the specified query parameters are cached as objects with the same key, files with other parameters are cached as objects with different keys.\n"
                },
                "queryParamsWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Files with the specified query parameters are cached as objects with different keys, files with other parameters are cached as objects with the same key.\n"
                },
                "redirectHttpToHttps": {
                    "type": "boolean",
                    "description": "Set up a redirect from HTTP to HTTPS.\n"
                },
                "redirectHttpsToHttp": {
                    "type": "boolean",
                    "description": "Set up a redirect from HTTPS to HTTP.\n"
                },
                "secureKey": {
                    "type": "string",
                    "description": "Set secure key for url encoding to protect contect and limit access by IP addresses and time limits.\n"
                },
                "slice": {
                    "type": "boolean",
                    "description": "Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte. The origin must support HTTP Range requests.\n"
                },
                "staticRequestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set up custom headers that CDN servers will send in requests to origins.\n"
                },
                "staticResponseHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedHttpMethods",
                        "browserCacheSettings",
                        "cacheHttpHeaders",
                        "cors",
                        "customHostHeader",
                        "customServerName",
                        "disableCache",
                        "disableProxyForceRanges",
                        "edgeCacheSettings",
                        "enableIpUrlSigning",
                        "fetchedCompressed",
                        "forwardHostHeader",
                        "gzipOn",
                        "ignoreCookie",
                        "ignoreQueryParams",
                        "ipAddressAcl",
                        "proxyCacheMethodsSet",
                        "queryParamsBlacklists",
                        "queryParamsWhitelists",
                        "redirectHttpToHttps",
                        "redirectHttpsToHttp",
                        "secureKey",
                        "slice",
                        "staticRequestHeaders",
                        "staticResponseHeaders"
                    ]
                }
            }
        },
        "yandex:index/CdnResourceOptionsIpAddressAcl:CdnResourceOptionsIpAddressAcl": {
            "properties": {
                "exceptedValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of specified IP addresses to be allowed or denied depending on acl policy type.\n"
                },
                "policyType": {
                    "type": "string",
                    "description": "The policy type for ACL. One of `allow` or `deny` values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "exceptedValues",
                        "policyType"
                    ]
                }
            }
        },
        "yandex:index/CdnResourceSslCertificate:CdnResourceSslCertificate": {
            "properties": {
                "certificateManagerId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "status",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/CmCertificateChallenge:CmCertificateChallenge": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Time the challenge was created.\n"
                },
                "dnsName": {
                    "type": "string",
                    "description": "DNS record name (only for DNS challenge).\n"
                },
                "dnsType": {
                    "type": "string",
                    "description": "DNS record type: `TXT` or `CNAME` (only for DNS challenge).\n"
                },
                "dnsValue": {
                    "type": "string",
                    "description": "DNS record value (only for DNS challenge).\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Validated domain.\n"
                },
                "httpContent": {
                    "type": "string",
                    "description": "The content that should be made accessible with the given `http_url` (only for HTTP challenge).\n"
                },
                "httpUrl": {
                    "type": "string",
                    "description": "URL where the challenge content http_content should be placed (only for HTTP challenge).\n"
                },
                "message": {
                    "type": "string",
                    "description": "Current status message.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Challenge type `DNS` or `HTTP`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last time the challenge was updated.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "dnsName",
                        "dnsType",
                        "dnsValue",
                        "domain",
                        "httpContent",
                        "httpUrl",
                        "message",
                        "type",
                        "updatedAt"
                    ]
                }
            }
        },
        "yandex:index/CmCertificateManaged:CmCertificateManaged": {
            "properties": {
                "challengeCount": {
                    "type": "integer",
                    "description": "Expected number of challenge count needed to validate certificate. Resource creation will fail if the specified value does not match the actual number of challenges received from issue provider. This argument is helpful for safe automatic resource creation for passing challenges for multi-domain certificates.\n"
                },
                "challengeType": {
                    "type": "string",
                    "description": "Domain owner-check method. Possible values:\n* `DNS_CNAME` - you will need to create a CNAME dns record with the specified value. Recommended for fully automated certificate renewal.\n* `DNS_TXT` - you will need to create a TXT dns record with specified value.\n* `HTTP` - you will need to place specified value into specified url.\n"
                }
            },
            "type": "object",
            "required": [
                "challengeType"
            ]
        },
        "yandex:index/CmCertificateSelfManaged:CmCertificateSelfManaged": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate with chain.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private key of certificate.\n",
                    "secret": true
                },
                "privateKeyLockboxSecret": {
                    "$ref": "#/types/yandex:index/CmCertificateSelfManagedPrivateKeyLockboxSecret:CmCertificateSelfManagedPrivateKeyLockboxSecret",
                    "description": "Lockbox secret specification for getting private key.\n"
                }
            },
            "type": "object",
            "required": [
                "certificate"
            ]
        },
        "yandex:index/CmCertificateSelfManagedPrivateKeyLockboxSecret:CmCertificateSelfManagedPrivateKeyLockboxSecret": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Lockbox secret Id.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the Lockbox secret, the value of which contains the private key of the certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "key"
            ]
        },
        "yandex:index/ComputeDiskDiskPlacementPolicy:ComputeDiskDiskPlacementPolicy": {
            "properties": {
                "diskPlacementGroupId": {
                    "type": "string",
                    "description": "Specifies Disk Placement Group id.\n"
                }
            },
            "type": "object",
            "required": [
                "diskPlacementGroupId"
            ]
        },
        "yandex:index/ComputeDiskHardwareGeneration:ComputeDiskHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "$ref": "#/types/yandex:index/ComputeDiskHardwareGenerationGeneration2Features:ComputeDiskHardwareGenerationGeneration2Features",
                    "description": "A newer hardware generation, which always uses `PCI_TOPOLOGY_V2` and UEFI boot.\n",
                    "willReplaceOnChanges": true
                },
                "legacyFeatures": {
                    "$ref": "#/types/yandex:index/ComputeDiskHardwareGenerationLegacyFeatures:ComputeDiskHardwareGenerationLegacyFeatures",
                    "description": "Defines the first known hardware generation and its features.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "generation2Features",
                        "legacyFeatures"
                    ]
                }
            }
        },
        "yandex:index/ComputeDiskHardwareGenerationGeneration2Features:ComputeDiskHardwareGenerationGeneration2Features": {
            "type": "object"
        },
        "yandex:index/ComputeDiskHardwareGenerationLegacyFeatures:ComputeDiskHardwareGenerationLegacyFeatures": {
            "properties": {
                "pciTopology": {
                    "type": "string",
                    "description": "A variant of PCI topology, one of `PCI_TOPOLOGY_V1` or `PCI_TOPOLOGY_V2`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pciTopology"
                    ]
                }
            }
        },
        "yandex:index/ComputeImageHardwareGeneration:ComputeImageHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "$ref": "#/types/yandex:index/ComputeImageHardwareGenerationGeneration2Features:ComputeImageHardwareGenerationGeneration2Features",
                    "description": "A newer hardware generation, which always uses `PCI_TOPOLOGY_V2` and UEFI boot.\n",
                    "willReplaceOnChanges": true
                },
                "legacyFeatures": {
                    "$ref": "#/types/yandex:index/ComputeImageHardwareGenerationLegacyFeatures:ComputeImageHardwareGenerationLegacyFeatures",
                    "description": "Defines the first known hardware generation and its features.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "generation2Features",
                        "legacyFeatures"
                    ]
                }
            }
        },
        "yandex:index/ComputeImageHardwareGenerationGeneration2Features:ComputeImageHardwareGenerationGeneration2Features": {
            "type": "object"
        },
        "yandex:index/ComputeImageHardwareGenerationLegacyFeatures:ComputeImageHardwareGenerationLegacyFeatures": {
            "properties": {
                "pciTopology": {
                    "type": "string",
                    "description": "A variant of PCI topology, one of `PCI_TOPOLOGY_V1` or `PCI_TOPOLOGY_V2`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pciTopology"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceBootDisk:ComputeInstanceBootDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean",
                    "description": "Defines whether the disk will be auto-deleted when the instance is deleted. The default value is `True`.\n",
                    "willReplaceOnChanges": true
                },
                "deviceName": {
                    "type": "string",
                    "description": "Name that can be used to access an attached disk.\n",
                    "willReplaceOnChanges": true
                },
                "diskId": {
                    "type": "string",
                    "description": "The ID of the existing disk (such as those managed by `yandex.ComputeDisk`) to attach as a boot disk.\n",
                    "willReplaceOnChanges": true
                },
                "initializeParams": {
                    "$ref": "#/types/yandex:index/ComputeInstanceBootDiskInitializeParams:ComputeInstanceBootDiskInitializeParams",
                    "description": "Parameters for a new disk that will be created alongside the new instance. Either `initialize_params` or `disk_id` must be set. Either `image_id` or `snapshot_id` must be specified.\n",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "description": "Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceName",
                        "diskId",
                        "initializeParams",
                        "mode"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceBootDiskInitializeParams:ComputeInstanceBootDiskInitializeParams": {
            "properties": {
                "blockSize": {
                    "type": "integer",
                    "description": "Block size of the disk, specified in bytes.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the boot disk.\n",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "string",
                    "description": "A disk image to initialize this disk from.\n",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "ID of KMS symmetric key used to encrypt disk.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the boot disk.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the disk in GB.\n",
                    "willReplaceOnChanges": true
                },
                "snapshotId": {
                    "type": "string",
                    "description": "A snapshot to initialize this disk from.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Disk type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSize",
                        "description",
                        "imageId",
                        "name",
                        "size",
                        "snapshotId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceFilesystem:ComputeInstanceFilesystem": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "Name of the device representing the filesystem on the instance.\n"
                },
                "filesystemId": {
                    "type": "string",
                    "description": "ID of the filesystem that should be attached.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of access to the filesystem that should be attached. By default, filesystem is attached in `READ_WRITE` mode.\n"
                }
            },
            "type": "object",
            "required": [
                "filesystemId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceName",
                        "filesystemId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupAllocationPolicy:ComputeInstanceGroupAllocationPolicy": {
            "properties": {
                "instanceTagsPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupAllocationPolicyInstanceTagsPool:ComputeInstanceGroupAllocationPolicyInstanceTagsPool"
                    },
                    "description": "Array of availability zone IDs with list of instance tags.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [availability zones](https://yandex.cloud/docs/overview/concepts/geo-scope).\n"
                }
            },
            "type": "object",
            "required": [
                "zones"
            ]
        },
        "yandex:index/ComputeInstanceGroupAllocationPolicyInstanceTagsPool:ComputeInstanceGroupAllocationPolicyInstanceTagsPool": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags for instances in zone.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Availability zone.\n"
                }
            },
            "type": "object",
            "required": [
                "tags",
                "zone"
            ]
        },
        "yandex:index/ComputeInstanceGroupApplicationLoadBalancer:ComputeInstanceGroupApplicationLoadBalancer": {
            "properties": {
                "ignoreHealthChecks": {
                    "type": "boolean",
                    "description": "Do not wait load balancer health checks.\n"
                },
                "maxOpeningTrafficDuration": {
                    "type": "integer",
                    "description": "Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.\n",
                    "willReplaceOnChanges": true
                },
                "statusMessage": {
                    "type": "string"
                },
                "targetGroupDescription": {
                    "type": "string",
                    "description": "A description of the target group.\n",
                    "willReplaceOnChanges": true
                },
                "targetGroupId": {
                    "type": "string"
                },
                "targetGroupLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs.\n",
                    "willReplaceOnChanges": true
                },
                "targetGroupName": {
                    "type": "string",
                    "description": "The name of the target group.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "statusMessage",
                        "targetGroupId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupDeployPolicy:ComputeInstanceGroupDeployPolicy": {
            "properties": {
                "maxCreating": {
                    "type": "integer",
                    "description": "The maximum number of instances that can be created at the same time.\n"
                },
                "maxDeleting": {
                    "type": "integer",
                    "description": "The maximum number of instances that can be deleted at the same time.\n"
                },
                "maxExpansion": {
                    "type": "integer",
                    "description": "The maximum number of instances that can be temporarily allocated above the group's target size during the update process.\n"
                },
                "maxUnavailable": {
                    "type": "integer",
                    "description": "The maximum number of running instances that can be taken offline (stopped or deleted) at the same time during the update process.\n"
                },
                "startupDuration": {
                    "type": "integer",
                    "description": "The amount of time in seconds to allow for an instance to start. Instance will be considered up and running (and start receiving traffic) only after the startup_duration has elapsed and all health checks are passed.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead, it will wait until the instance stops itself or becomes unhealthy.\n"
                }
            },
            "type": "object",
            "required": [
                "maxExpansion",
                "maxUnavailable"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxExpansion",
                        "maxUnavailable",
                        "strategy"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupHealthCheck:ComputeInstanceGroupHealthCheck": {
            "properties": {
                "healthyThreshold": {
                    "type": "integer",
                    "description": "The number of successful health checks before the managed instance is declared healthy.\n"
                },
                "httpOptions": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupHealthCheckHttpOptions:ComputeInstanceGroupHealthCheckHttpOptions",
                    "description": "HTTP check options.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval to wait between health checks in seconds.\n"
                },
                "tcpOptions": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupHealthCheckTcpOptions:ComputeInstanceGroupHealthCheckTcpOptions",
                    "description": "TCP check options.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The length of time to wait for a response before the health check times out in seconds.\n"
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "The number of failed health checks before the managed instance is declared unhealthy.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceGroupHealthCheckHttpOptions:ComputeInstanceGroupHealthCheckHttpOptions": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The URL path used for health check requests.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port used for HTTP health checks.\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "port"
            ]
        },
        "yandex:index/ComputeInstanceGroupHealthCheckTcpOptions:ComputeInstanceGroupHealthCheckTcpOptions": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "The port used for TCP health checks.\n"
                }
            },
            "type": "object",
            "required": [
                "port"
            ]
        },
        "yandex:index/ComputeInstanceGroupInstance:ComputeInstanceGroupInstance": {
            "properties": {
                "fqdn": {
                    "type": "string",
                    "description": "The Fully Qualified Domain Name.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance.\n"
                },
                "instanceTag": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the managed instance.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceNetworkInterface:ComputeInstanceGroupInstanceNetworkInterface"
                    },
                    "description": "An array with the network interfaces attached to the managed instance.\n"
                },
                "status": {
                    "type": "string"
                },
                "statusChangedAt": {
                    "type": "string"
                },
                "statusMessage": {
                    "type": "string",
                    "description": "The status message of the instance.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the availability zone where the instance resides.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "instanceId",
                        "instanceTag",
                        "name",
                        "networkInterfaces",
                        "status",
                        "statusChangedAt",
                        "statusMessage",
                        "zoneId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceNetworkInterface:ComputeInstanceGroupInstanceNetworkInterface": {
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "The index of the network interface as generated by the server.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.\n"
                },
                "ipv4": {
                    "type": "boolean",
                    "description": "`True` if IPv4 address allocated for the network interface.\n"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string",
                    "description": "The MAC address assigned to the network interface.\n"
                },
                "nat": {
                    "type": "boolean",
                    "description": "The instance's public address for accessing the internet over NAT.\n"
                },
                "natIpAddress": {
                    "type": "string",
                    "description": "The public IP address of the instance.\n"
                },
                "natIpVersion": {
                    "type": "string",
                    "description": "The IP version for the public address.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "index",
                        "ipAddress",
                        "ipv4",
                        "ipv6",
                        "ipv6Address",
                        "macAddress",
                        "nat",
                        "natIpAddress",
                        "natIpVersion",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplate:ComputeInstanceGroupInstanceTemplate": {
            "properties": {
                "bootDisk": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateBootDisk:ComputeInstanceGroupInstanceTemplateBootDisk",
                    "description": "Boot disk specifications for the instance.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the instance.\n"
                },
                "filesystems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateFilesystem:ComputeInstanceGroupInstanceTemplateFilesystem"
                    },
                    "description": "List of filesystems to attach to the instance.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname template for the instance. This field is used to generate the FQDN value of instance. The `hostname` must be unique within the network and region. If not specified, the hostname will be equal to `id` of the instance and FQDN will be `\u003cid\u003e.auto.internal`. Otherwise FQDN will be `\u003chostname\u003e.\u003cregion_id\u003e.internal`.\nIn order to be unique it must contain at least on of instance unique placeholders:\n* `{instance.short_id}`\n* {instance.index}\n* combination of `{instance.zone_id}` and `{instance.index_in_zone}`\nExample: `my-instance-{instance.index}`. If hostname is not set, `name` value will be used. It may also contain another placeholders, see `metadata` doc for full list.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs to assign to the instance.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of metadata key/value pairs to make available from within the instance.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateMetadataOptions:ComputeInstanceGroupInstanceTemplateMetadataOptions",
                    "description": "Options allow user to configure access to managed instances metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name template of the instance.\nIn order to be unique it must contain at least one of instance unique placeholders:*`{instance.short_id}`\n* `{instance.index}`\n* combination of `{instance.zone_id}` and`{instance.index_in_zone}`.\nExample: `my-instance-{instance.index}`.\nIf not set, default name is used: `{instance_group.id}-{instance.short_id}`. It may also contain another placeholders, see `metadata` doc for full list.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterface:ComputeInstanceGroupInstanceTemplateNetworkInterface"
                    },
                    "description": "Network specifications for the instance. This can be used multiple times for adding multiple interfaces.\n"
                },
                "networkSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateNetworkSetting:ComputeInstanceGroupInstanceTemplateNetworkSetting"
                    },
                    "description": "Network acceleration type for instance.\n"
                },
                "placementPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplatePlacementPolicy:ComputeInstanceGroupInstanceTemplatePlacementPolicy",
                    "description": "The placement policy configuration.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The ID of the hardware platform configuration for the instance.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateResources:ComputeInstanceGroupInstanceTemplateResources",
                    "description": "Compute resource specifications for the instance.\n"
                },
                "schedulingPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateSchedulingPolicy:ComputeInstanceGroupInstanceTemplateSchedulingPolicy",
                    "description": "The scheduling policy configuration.\n"
                },
                "secondaryDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateSecondaryDisk:ComputeInstanceGroupInstanceTemplateSecondaryDisk"
                    },
                    "description": "A list of disks to attach to the instance.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The ID of the service account authorized for this instance.\n"
                }
            },
            "type": "object",
            "required": [
                "bootDisk",
                "networkInterfaces",
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootDisk",
                        "labels",
                        "metadata",
                        "metadataOptions",
                        "networkInterfaces",
                        "resources",
                        "schedulingPolicy"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateBootDisk:ComputeInstanceGroupInstanceTemplateBootDisk": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "This value can be used to reference the device under `/dev/disk/by-id/`.\n"
                },
                "diskId": {
                    "type": "string"
                },
                "initializeParams": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams:ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams",
                    "description": "Parameters for creating a disk alongside the instance.\n\n\u003e `image_id` or `snapshot_id` must be specified.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.\n"
                },
                "name": {
                    "type": "string",
                    "description": "When set can be later used to change DiskSpec of actual disk.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceName"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams:ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the boot disk.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The disk image to initialize this disk from.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the disk in GB.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The snapshot to initialize this disk from.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The disk type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "imageId",
                        "size",
                        "snapshotId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateFilesystem:ComputeInstanceGroupInstanceTemplateFilesystem": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "Name of the device representing the filesystem on the instance.\n"
                },
                "filesystemId": {
                    "type": "string",
                    "description": "ID of the filesystem that should be attached.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of access to the filesystem that should be attached. By default, filesystem is attached in `READ_WRITE` mode.\n"
                }
            },
            "type": "object",
            "required": [
                "filesystemId"
            ]
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateMetadataOptions:ComputeInstanceGroupInstanceTemplateMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer"
                },
                "awsV1HttpToken": {
                    "type": "integer"
                },
                "gceHttpEndpoint": {
                    "type": "integer"
                },
                "gceHttpToken": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsV1HttpEndpoint",
                        "awsV1HttpToken",
                        "gceHttpEndpoint",
                        "gceHttpToken"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterface:ComputeInstanceGroupInstanceTemplateNetworkInterface": {
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord:ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord"
                    },
                    "description": "List of DNS records.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Manual set static IP address.\n"
                },
                "ipv4": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "Manual set static IPv6 address.\n"
                },
                "ipv6DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord"
                    },
                    "description": "List of IPv6 DNS records.\n"
                },
                "nat": {
                    "type": "boolean",
                    "description": "Flag for using NAT.\n"
                },
                "natDnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord:ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord"
                    },
                    "description": "List of NAT DNS records.\n"
                },
                "natIpAddress": {
                    "type": "string",
                    "description": "A public address that can be used to access the internet over NAT. Use `variables` to set.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The ID of the network.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security group (SG) `IDs` for network interface.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the subnets to attach this interface to.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipAddress",
                        "ipv6",
                        "ipv6Address",
                        "nat"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord:ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone id (if not set, private zone used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN (must have dot at the end).\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to true, also create PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "ptr"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone id (if not set, private zone used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN (must have dot at the end).\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to true, also create PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "ptr"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord:ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone id (if not set, private zone used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN (must have dot at the end).\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to true, also create PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "ptr"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateNetworkSetting:ComputeInstanceGroupInstanceTemplateNetworkSetting": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Network acceleration type. By default a network is in `STANDARD` mode.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplatePlacementPolicy:ComputeInstanceGroupInstanceTemplatePlacementPolicy": {
            "properties": {
                "placementGroupId": {
                    "type": "string",
                    "description": "Specifies the id of the Placement Group to assign to the instances.\n"
                }
            },
            "type": "object",
            "required": [
                "placementGroupId"
            ]
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateResources:ComputeInstanceGroupInstanceTemplateResources": {
            "properties": {
                "coreFraction": {
                    "type": "integer",
                    "description": "If provided, specifies baseline core performance as a percent.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores for the instance.\n"
                },
                "gpus": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "memory": {
                    "type": "number",
                    "description": "The memory size in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "cores",
                "memory"
            ]
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateSchedulingPolicy:ComputeInstanceGroupInstanceTemplateSchedulingPolicy": {
            "properties": {
                "preemptible": {
                    "type": "boolean",
                    "description": "Specifies if the instance is preemptible. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateSecondaryDisk:ComputeInstanceGroupInstanceTemplateSecondaryDisk": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "This value can be used to reference the device under `/dev/disk/by-id/`.\n"
                },
                "diskId": {
                    "type": "string",
                    "description": "ID of the existing disk. To set use variables.\n"
                },
                "initializeParams": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams:ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams",
                    "description": "Parameters used for creating a disk alongside the instance.\n\n\u003e `image_id` or `snapshot_id` must be specified.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.\n"
                },
                "name": {
                    "type": "string",
                    "description": "When set can be later used to change DiskSpec of actual disk.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams:ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the boot disk.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The disk image to initialize this disk from.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the disk in GB.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The snapshot to initialize this disk from.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The disk type.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceGroupLoadBalancer:ComputeInstanceGroupLoadBalancer": {
            "properties": {
                "ignoreHealthChecks": {
                    "type": "boolean",
                    "description": "Do not wait load balancer health checks.\n"
                },
                "maxOpeningTrafficDuration": {
                    "type": "integer",
                    "description": "Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.\n",
                    "willReplaceOnChanges": true
                },
                "statusMessage": {
                    "type": "string",
                    "description": "The status message of the target group.\n"
                },
                "targetGroupDescription": {
                    "type": "string",
                    "description": "A description of the target group.\n",
                    "willReplaceOnChanges": true
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of the target group.\n"
                },
                "targetGroupLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs.\n",
                    "willReplaceOnChanges": true
                },
                "targetGroupName": {
                    "type": "string",
                    "description": "The name of the target group.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "statusMessage",
                        "targetGroupId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupScalePolicy:ComputeInstanceGroupScalePolicy": {
            "properties": {
                "autoScale": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicyAutoScale:ComputeInstanceGroupScalePolicyAutoScale",
                    "description": "The auto scaling policy of the instance group.\n"
                },
                "fixedScale": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicyFixedScale:ComputeInstanceGroupScalePolicyFixedScale",
                    "description": "The fixed scaling policy of the instance group.\n"
                },
                "testAutoScale": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicyTestAutoScale:ComputeInstanceGroupScalePolicyTestAutoScale",
                    "description": "The test auto scaling policy of the instance group. Use it to test how the auto scale works.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceGroupScalePolicyAutoScale:ComputeInstanceGroupScalePolicyAutoScale": {
            "properties": {
                "autoScaleType": {
                    "type": "string",
                    "description": "Autoscale type, can be `ZONAL` or `REGIONAL`. By default `ZONAL` type is used.\n"
                },
                "cpuUtilizationTarget": {
                    "type": "number",
                    "description": "Target CPU load level.\n"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicyAutoScaleCustomRule:ComputeInstanceGroupScalePolicyAutoScaleCustomRule"
                    },
                    "description": "A list of custom rules.\n"
                },
                "initialSize": {
                    "type": "integer",
                    "description": "The initial number of instances in the instance group.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of virtual machines in the group.\n"
                },
                "measurementDuration": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, that metrics are averaged for. If the average value at the end of the interval is higher than the `cpu_utilization_target`, the instance group will increase the number of virtual machines in the group.\n"
                },
                "minZoneSize": {
                    "type": "integer",
                    "description": "The minimum number of virtual machines in a single availability zone.\n"
                },
                "stabilizationDuration": {
                    "type": "integer",
                    "description": "The minimum time interval, in seconds, to monitor the load before an instance group can reduce the number of virtual machines in the group. During this time, the group will not decrease even if the average load falls below the value of `cpu_utilization_target`.\n"
                },
                "warmupDuration": {
                    "type": "integer",
                    "description": "The warm-up time of the virtual machine, in seconds. During this time, traffic is fed to the virtual machine, but load metrics are not taken into account.\n"
                }
            },
            "type": "object",
            "required": [
                "initialSize",
                "measurementDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "initialSize",
                        "measurementDuration",
                        "stabilizationDuration",
                        "warmupDuration"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupScalePolicyAutoScaleCustomRule:ComputeInstanceGroupScalePolicyAutoScaleCustomRule": {
            "properties": {
                "folderId": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metricName": {
                    "type": "string"
                },
                "metricType": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "target": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "metricType",
                "ruleType",
                "target"
            ]
        },
        "yandex:index/ComputeInstanceGroupScalePolicyFixedScale:ComputeInstanceGroupScalePolicyFixedScale": {
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "The number of instances in the instance group.\n"
                }
            },
            "type": "object",
            "required": [
                "size"
            ]
        },
        "yandex:index/ComputeInstanceGroupScalePolicyTestAutoScale:ComputeInstanceGroupScalePolicyTestAutoScale": {
            "properties": {
                "autoScaleType": {
                    "type": "string",
                    "description": "Autoscale type, can be `ZONAL` or `REGIONAL`. By default `ZONAL` type is used.\n"
                },
                "cpuUtilizationTarget": {
                    "type": "number",
                    "description": "Target CPU load level.\n"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule:ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule"
                    },
                    "description": "A list of custom rules.\n"
                },
                "initialSize": {
                    "type": "integer",
                    "description": "The initial number of instances in the instance group.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of virtual machines in the group.\n"
                },
                "measurementDuration": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, that metrics are averaged for. If the average value at the end of the interval is higher than the `cpu_utilization_target`, the instance group will increase the number of virtual machines in the group.\n"
                },
                "minZoneSize": {
                    "type": "integer",
                    "description": "The minimum number of virtual machines in a single availability zone.\n"
                },
                "stabilizationDuration": {
                    "type": "integer",
                    "description": "The minimum time interval, in seconds, to monitor the load before an instance group can reduce the number of virtual machines in the group. During this time, the group will not decrease even if the average load falls below the value of `cpu_utilization_target`.\n"
                },
                "warmupDuration": {
                    "type": "integer",
                    "description": "The warm-up time of the virtual machine, in seconds. During this time, traffic is fed to the virtual machine, but load metrics are not taken into account.\n"
                }
            },
            "type": "object",
            "required": [
                "initialSize",
                "measurementDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "initialSize",
                        "measurementDuration",
                        "stabilizationDuration",
                        "warmupDuration"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule:ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "Folder ID of custom metric in Yandex Monitoring that should be used for scaling.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of labels of metric.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of metric.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "Metric type, `GAUGE` or `COUNTER`.\n"
                },
                "ruleType": {
                    "type": "string",
                    "description": "Rule type: `UTILIZATION` - This type means that the metric applies to one instance. First, Instance Groups calculates the average metric value for each instance, then averages the values for instances in one availability zone. This type of metric must have the `instance_id` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone. This type of metric must have the `zone_id` label.\n"
                },
                "service": {
                    "type": "string",
                    "description": "Service of custom metric in Yandex Monitoring that should be used for scaling.\n"
                },
                "target": {
                    "type": "number",
                    "description": "Target metric value level.\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "metricType",
                "ruleType",
                "target"
            ]
        },
        "yandex:index/ComputeInstanceHardwareGeneration:ComputeInstanceHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceHardwareGenerationGeneration2Feature:ComputeInstanceHardwareGenerationGeneration2Feature"
                    }
                },
                "legacyFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceHardwareGenerationLegacyFeature:ComputeInstanceHardwareGenerationLegacyFeature"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "generation2Features",
                        "legacyFeatures"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceHardwareGenerationGeneration2Feature:ComputeInstanceHardwareGenerationGeneration2Feature": {
            "type": "object"
        },
        "yandex:index/ComputeInstanceHardwareGenerationLegacyFeature:ComputeInstanceHardwareGenerationLegacyFeature": {
            "properties": {
                "pciTopology": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pciTopology"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceLocalDisk:ComputeInstanceLocalDisk": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "The name of the local disk device.\n"
                },
                "sizeBytes": {
                    "type": "integer",
                    "description": "Size of the disk, specified in bytes.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "sizeBytes"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceName",
                        "sizeBytes"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceMetadataOptions:ComputeInstanceMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer"
                },
                "awsV1HttpToken": {
                    "type": "integer"
                },
                "gceHttpEndpoint": {
                    "type": "integer"
                },
                "gceHttpToken": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsV1HttpEndpoint",
                        "awsV1HttpToken",
                        "gceHttpEndpoint",
                        "gceHttpToken"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface": {
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceNetworkInterfaceDnsRecord:ComputeInstanceNetworkInterfaceDnsRecord"
                    },
                    "description": "List of configurations for creating ipv4 DNS records.\n"
                },
                "index": {
                    "type": "integer",
                    "description": "Index of network interface, will be calculated automatically for instance create or update operations if not specified. Required for attach/detach operations.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The private IP address to assign to the instance. If empty, the address will be automatically assigned from the specified subnet.\n"
                },
                "ipv4": {
                    "type": "boolean",
                    "description": "Allocate an IPv4 address for the interface. The default value is `true`.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "If `true`, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.\n"
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The private IPv6 address to assign to the instance.\n"
                },
                "ipv6DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceNetworkInterfaceIpv6DnsRecord:ComputeInstanceNetworkInterfaceIpv6DnsRecord"
                    },
                    "description": "List of configurations for creating ipv6 DNS records.\n"
                },
                "macAddress": {
                    "type": "string"
                },
                "nat": {
                    "type": "boolean",
                    "description": "Provide a public address, for instance, to access the internet over NAT.\n"
                },
                "natDnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceNetworkInterfaceNatDnsRecord:ComputeInstanceNetworkInterfaceNatDnsRecord"
                    },
                    "description": "List of configurations for creating ipv4 NAT DNS records.\n"
                },
                "natIpAddress": {
                    "type": "string",
                    "description": "Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.\n"
                },
                "natIpVersion": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security Group (SG) IDs for network interface.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet to attach this interface to. The subnet must exist in the same zone where this instance will be created.\n"
                }
            },
            "type": "object",
            "required": [
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "index",
                        "ipAddress",
                        "ipv6",
                        "ipv6Address",
                        "macAddress",
                        "natIpAddress",
                        "natIpVersion",
                        "securityGroupIds",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstanceNetworkInterfaceDnsRecord:ComputeInstanceNetworkInterfaceDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone ID (if not set, private zone used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN (must have a dot at the end).\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to `true`, also create a PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ]
        },
        "yandex:index/ComputeInstanceNetworkInterfaceIpv6DnsRecord:ComputeInstanceNetworkInterfaceIpv6DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone ID (if not set, private zone used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN (must have a dot at the end).\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to `true`, also create a PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ]
        },
        "yandex:index/ComputeInstanceNetworkInterfaceNatDnsRecord:ComputeInstanceNetworkInterfaceNatDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone ID (if not set, private zone used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN (must have a dot at the end).\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to `true`, also create a PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ]
        },
        "yandex:index/ComputeInstancePlacementPolicy:ComputeInstancePlacementPolicy": {
            "properties": {
                "hostAffinityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstancePlacementPolicyHostAffinityRule:ComputeInstancePlacementPolicyHostAffinityRule"
                    }
                },
                "placementGroupId": {
                    "type": "string",
                    "description": "Specifies the id of the Placement Group to assign to the instance.\n"
                },
                "placementGroupPartition": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostAffinityRules"
                    ]
                }
            }
        },
        "yandex:index/ComputeInstancePlacementPolicyHostAffinityRule:ComputeInstancePlacementPolicyHostAffinityRule": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Affinity label or one of reserved values - `yc.hostId`, `yc.hostGroupId`.\n"
                },
                "op": {
                    "type": "string",
                    "description": "Affinity action. The only value supported is `IN`.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values (host IDs or host group IDs).\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "op",
                "values"
            ]
        },
        "yandex:index/ComputeInstanceResources:ComputeInstanceResources": {
            "properties": {
                "coreFraction": {
                    "type": "integer",
                    "description": "If provided, specifies baseline performance for a core as a percent.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "CPU cores for the instance.\n"
                },
                "gpus": {
                    "type": "integer",
                    "description": "If provided, specifies the number of GPU devices for the instance.\n"
                },
                "memory": {
                    "type": "number",
                    "description": "Memory size in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "cores",
                "memory"
            ]
        },
        "yandex:index/ComputeInstanceSchedulingPolicy:ComputeInstanceSchedulingPolicy": {
            "properties": {
                "preemptible": {
                    "type": "boolean",
                    "description": "Specifies if the instance is preemptible. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ComputeInstanceSecondaryDisk:ComputeInstanceSecondaryDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean",
                    "description": "Whether the disk is auto-deleted when the instance is deleted. The default value is `false`.\n"
                },
                "deviceName": {
                    "type": "string",
                    "description": "Name that can be used to access an attached disk under `/dev/disk/by-id/`.\n"
                },
                "diskId": {
                    "type": "string",
                    "description": "ID of the disk that is attached to the instance.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.\n"
                }
            },
            "type": "object",
            "required": [
                "diskId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceName",
                        "diskId"
                    ]
                }
            }
        },
        "yandex:index/ComputeSnapshotHardwareGeneration:ComputeSnapshotHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotHardwareGenerationGeneration2Features:ComputeSnapshotHardwareGenerationGeneration2Features",
                    "description": "A newer hardware generation, which always uses `PCI_TOPOLOGY_V2` and UEFI boot.\n",
                    "willReplaceOnChanges": true
                },
                "legacyFeatures": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotHardwareGenerationLegacyFeatures:ComputeSnapshotHardwareGenerationLegacyFeatures",
                    "description": "Defines the first known hardware generation and its features.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "generation2Features",
                        "legacyFeatures"
                    ]
                }
            }
        },
        "yandex:index/ComputeSnapshotHardwareGenerationGeneration2Features:ComputeSnapshotHardwareGenerationGeneration2Features": {
            "type": "object"
        },
        "yandex:index/ComputeSnapshotHardwareGenerationLegacyFeatures:ComputeSnapshotHardwareGenerationLegacyFeatures": {
            "properties": {
                "pciTopology": {
                    "type": "string",
                    "description": "A variant of PCI topology, one of `PCI_TOPOLOGY_V1` or `PCI_TOPOLOGY_V2`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pciTopology"
                    ]
                }
            }
        },
        "yandex:index/ComputeSnapshotScheduleSchedulePolicy:ComputeSnapshotScheduleSchedulePolicy": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Cron expression to schedule snapshots (in cron format `\" * ****\"`).\n"
                },
                "startAt": {
                    "type": "string",
                    "description": "Time to start the snapshot schedule (in format RFC3339 `2006-01-02T15:04:05Z07:00`). If empty current time will be used. Unlike an `expression` that specifies regularity rules, the `start_at` parameter determines from what point these rules will be applied.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "startAt"
                    ]
                }
            }
        },
        "yandex:index/ComputeSnapshotScheduleSnapshotSpec:ComputeSnapshotScheduleSnapshotSpec": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description to assign to snapshots created by this snapshot schedule.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs to assign to snapshots created by this snapshot schedule.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ContainerRepositoryLifecyclePolicyRule:ContainerRepositoryLifecyclePolicyRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the lifecycle policy.\n"
                },
                "expirePeriod": {
                    "type": "string",
                    "description": "The period of time that must pass after creating a image for it to suit the automatic deletion criteria. It must be a multiple of 24 hours.\n"
                },
                "retainedTop": {
                    "type": "integer",
                    "description": "The number of images to be retained even if the `expire_period` already expired.\n"
                },
                "tagRegexp": {
                    "type": "string",
                    "description": "Tag to specify a filter as a regular expression. For example `.*` - all images with tags.\n"
                },
                "untagged": {
                    "type": "boolean",
                    "description": "If enabled, rules apply to untagged Docker images.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "retainedTop",
                        "untagged"
                    ]
                }
            }
        },
        "yandex:index/DataprocClusterClusterConfig:DataprocClusterClusterConfig": {
            "properties": {
                "hadoop": {
                    "$ref": "#/types/yandex:index/DataprocClusterClusterConfigHadoop:DataprocClusterClusterConfigHadoop",
                    "description": "Yandex Data Processing specific options.\n"
                },
                "subclusterSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DataprocClusterClusterConfigSubclusterSpec:DataprocClusterClusterConfigSubclusterSpec"
                    },
                    "description": "Configuration of the Yandex Data Processing subcluster.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version of Yandex Data Processing image.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "subclusterSpecs"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "subclusterSpecs",
                        "versionId"
                    ]
                }
            }
        },
        "yandex:index/DataprocClusterClusterConfigHadoop:DataprocClusterClusterConfigHadoop": {
            "properties": {
                "initializationActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DataprocClusterClusterConfigHadoopInitializationAction:DataprocClusterClusterConfigHadoopInitializationAction"
                    },
                    "description": "List of initialization scripts.\n",
                    "willReplaceOnChanges": true
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value pairs that are used to configure cluster services.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of services to run on Yandex Data Processing cluster.\n",
                    "willReplaceOnChanges": true
                },
                "sshPublicKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://yandex.cloud/docs/data-proc/operations/connect).\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/DataprocClusterClusterConfigHadoopInitializationAction:DataprocClusterClusterConfigHadoopInitializationAction": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of arguments of the initialization script.\n",
                    "willReplaceOnChanges": true
                },
                "timeout": {
                    "type": "string",
                    "description": "Script execution timeout, in seconds.\n",
                    "willReplaceOnChanges": true
                },
                "uri": {
                    "type": "string",
                    "description": "Script URI.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "args",
                        "timeout",
                        "uri"
                    ]
                }
            }
        },
        "yandex:index/DataprocClusterClusterConfigSubclusterSpec:DataprocClusterClusterConfigSubclusterSpec": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "If `true` then assign public IP addresses to the hosts of the subclusters.\n",
                    "willReplaceOnChanges": true
                },
                "autoscalingConfig": {
                    "$ref": "#/types/yandex:index/DataprocClusterClusterConfigSubclusterSpecAutoscalingConfig:DataprocClusterClusterConfigSubclusterSpecAutoscalingConfig",
                    "description": "Autoscaling configuration for compute subclusters.\n"
                },
                "hostsCount": {
                    "type": "integer",
                    "description": "Number of hosts within Yandex Data Processing subcluster.\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the subcluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Yandex Data Processing subcluster.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/DataprocClusterClusterConfigSubclusterSpecResources:DataprocClusterClusterConfigSubclusterSpecResources",
                    "description": "Resources allocated to each host of the Yandex Data Processing subcluster.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the subcluster in the Yandex Data Processing cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.\n"
                }
            },
            "type": "object",
            "required": [
                "hostsCount",
                "name",
                "resources",
                "role",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostsCount",
                        "id",
                        "name",
                        "resources",
                        "role",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DataprocClusterClusterConfigSubclusterSpecAutoscalingConfig:DataprocClusterClusterConfigSubclusterSpecAutoscalingConfig": {
            "properties": {
                "cpuUtilizationTarget": {
                    "type": "string",
                    "description": "Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.\n"
                },
                "decommissionTimeout": {
                    "type": "string",
                    "description": "Timeout to gracefully decommission nodes during downscaling. In seconds.\n"
                },
                "maxHostsCount": {
                    "type": "integer",
                    "description": "Maximum number of nodes in autoscaling subclusters.\n"
                },
                "measurementDuration": {
                    "type": "string",
                    "description": "Time in seconds allotted for averaging metrics.\n"
                },
                "preemptible": {
                    "type": "boolean",
                    "description": "Use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see [Preemptible Virtual Machines](https://yandex.cloud/docs/compute/concepts/preemptible-vm).\n"
                },
                "stabilizationDuration": {
                    "type": "string",
                    "description": "Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.\n"
                },
                "warmupDuration": {
                    "type": "string",
                    "description": "The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.\n"
                }
            },
            "type": "object",
            "required": [
                "maxHostsCount"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cpuUtilizationTarget",
                        "decommissionTimeout",
                        "maxHostsCount",
                        "measurementDuration",
                        "stabilizationDuration",
                        "warmupDuration"
                    ]
                }
            }
        },
        "yandex:index/DataprocClusterClusterConfigSubclusterSpecResources:DataprocClusterClusterConfigSubclusterSpecResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of a host. One of `network-hdd` (default) or `network-ssd`.\n",
                    "willReplaceOnChanges": true
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://yandex.cloud/docs/data-proc/concepts/instance-types).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "resourcePresetId"
            ]
        },
        "yandex:index/DatatransferEndpointSettings:DatatransferEndpointSettings": {
            "properties": {
                "clickhouseSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSource:DatatransferEndpointSettingsClickhouseSource",
                    "description": "Settings specific to the ClickHouse source endpoint.\n"
                },
                "clickhouseTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTarget:DatatransferEndpointSettingsClickhouseTarget",
                    "description": "Settings specific to the ClickHouse target endpoint.\n"
                },
                "kafkaSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSource:DatatransferEndpointSettingsKafkaSource",
                    "description": "Settings specific to the Kafka source endpoint.\n"
                },
                "kafkaTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTarget:DatatransferEndpointSettingsKafkaTarget",
                    "description": "Settings specific to the Kafka target endpoint.\n"
                },
                "metrikaSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMetrikaSource:DatatransferEndpointSettingsMetrikaSource",
                    "description": "Settings specific to the Yandex Metrika source endpoint.\n"
                },
                "mongoSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSource:DatatransferEndpointSettingsMongoSource",
                    "description": "Settings specific to the MongoDB source endpoint.\n"
                },
                "mongoTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTarget:DatatransferEndpointSettingsMongoTarget",
                    "description": "Settings specific to the MongoDB target endpoint.\n"
                },
                "mysqlSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSource:DatatransferEndpointSettingsMysqlSource",
                    "description": "Settings specific to the MySQL source endpoint.\n"
                },
                "mysqlTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTarget:DatatransferEndpointSettingsMysqlTarget",
                    "description": "Settings specific to the MySQL target endpoint.\n"
                },
                "postgresSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSource:DatatransferEndpointSettingsPostgresSource",
                    "description": "Settings specific to the PostgreSQL source endpoint.\n"
                },
                "postgresTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTarget:DatatransferEndpointSettingsPostgresTarget",
                    "description": "Settings specific to the PostgreSQL target endpoint.\n"
                },
                "ydbSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdbSource:DatatransferEndpointSettingsYdbSource",
                    "description": "Settings specific to the YDB source endpoint.\n"
                },
                "ydbTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdbTarget:DatatransferEndpointSettingsYdbTarget",
                    "description": "Settings specific to the YDB target endpoint.\n"
                },
                "ydsSource": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSource:DatatransferEndpointSettingsYdsSource",
                    "description": "Settings specific to the YDS source endpoint.\n"
                },
                "ydsTarget": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsTarget:DatatransferEndpointSettingsYdsTarget",
                    "description": "Settings specific to the YDS target endpoint.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSource:DatatransferEndpointSettingsClickhouseSource": {
            "properties": {
                "clickhouseClusterName": {
                    "type": "string"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnection:DatatransferEndpointSettingsClickhouseSourceConnection",
                    "description": "Connection settings.\n"
                },
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tables that should not be transferred.\n"
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tables that should be transferred. Leave empty if all tables should be transferred.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clickhouseClusterName",
                        "connection",
                        "excludeTables",
                        "includeTables",
                        "securityGroups",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnection:DatatransferEndpointSettingsClickhouseSourceConnection": {
            "properties": {
                "connectionOptions": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptions:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptions"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectionOptions"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptions:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptions": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "mdbClusterId": {
                    "type": "string"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremise"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsPassword:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsPassword"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "password",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremise": {
            "properties": {
                "httpPort": {
                    "type": "integer"
                },
                "nativePort": {
                    "type": "integer"
                },
                "shards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseShard:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseShard"
                    }
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsMode"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpPort",
                        "nativePort",
                        "shards",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseShard:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseShard": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "name"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsPassword:DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTarget:DatatransferEndpointSettingsClickhouseTarget": {
            "properties": {
                "altNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetAltName:DatatransferEndpointSettingsClickhouseTargetAltName"
                    },
                    "description": "Table renaming rules.\n"
                },
                "cleanupPolicy": {
                    "type": "string",
                    "description": "How to clean collections when activating the transfer. One of `CLICKHOUSE_CLEANUP_POLICY_DISABLED` or `CLICKHOUSE_CLEANUP_POLICY_DROP`.\n"
                },
                "clickhouseClusterName": {
                    "type": "string",
                    "description": "Name of the ClickHouse cluster. For managed ClickHouse clusters defaults to managed cluster ID.\n"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnection:DatatransferEndpointSettingsClickhouseTargetConnection",
                    "description": "Connection settings.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "sharding": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetSharding:DatatransferEndpointSettingsClickhouseTargetSharding",
                    "description": "Shard selection rules for the data being transferred.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "altNames",
                        "cleanupPolicy",
                        "clickhouseClusterName",
                        "connection",
                        "securityGroups",
                        "sharding",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetAltName:DatatransferEndpointSettingsClickhouseTargetAltName": {
            "properties": {
                "fromName": {
                    "type": "string"
                },
                "toName": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fromName",
                        "toName"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnection:DatatransferEndpointSettingsClickhouseTargetConnection": {
            "properties": {
                "connectionOptions": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptions:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptions",
                    "description": "Connection options.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectionOptions"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptions:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptions": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Database name.\n"
                },
                "mdbClusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed ClickHouse cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremise",
                    "description": "Connection settings of the on-premise ClickHouse server.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsPassword:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsPassword",
                    "description": "Password for the database access.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User for database access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "password",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremise": {
            "properties": {
                "httpPort": {
                    "type": "integer",
                    "description": "TCP port number for the HTTP interface of the ClickHouse server.\n"
                },
                "nativePort": {
                    "type": "integer",
                    "description": "TCP port number for the native interface of the ClickHouse server.\n"
                },
                "shards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseShard:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseShard"
                    },
                    "description": "The list of ClickHouse shards.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsMode",
                    "description": "TLS settings for the server connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpPort",
                        "nativePort",
                        "shards",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseShard:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseShard": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ClickHouse server host names.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Arbitrary shard name. This name may be used in `sharding` block to specify custom sharding rules.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "name"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsPassword:DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Password for the database access.\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetSharding:DatatransferEndpointSettingsClickhouseTargetSharding": {
            "properties": {
                "columnValueHash": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingColumnValueHash:DatatransferEndpointSettingsClickhouseTargetShardingColumnValueHash",
                    "description": "Shard data by the hash value of the specified column.\n"
                },
                "customMapping": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingCustomMapping:DatatransferEndpointSettingsClickhouseTargetShardingCustomMapping",
                    "description": "A custom shard mapping by the value of the specified column.\n"
                },
                "roundRobin": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingRoundRobin:DatatransferEndpointSettingsClickhouseTargetShardingRoundRobin",
                    "description": "Distribute incoming rows between ClickHouse shards in a round-robin manner. Specify as an empty block to enable.\n"
                },
                "transferId": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingTransferId:DatatransferEndpointSettingsClickhouseTargetShardingTransferId",
                    "description": "Shard data by ID of the transfer.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingColumnValueHash:DatatransferEndpointSettingsClickhouseTargetShardingColumnValueHash": {
            "properties": {
                "columnName": {
                    "type": "string",
                    "description": "The name of the column to calculate hash from.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "columnName"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingCustomMapping:DatatransferEndpointSettingsClickhouseTargetShardingCustomMapping": {
            "properties": {
                "columnName": {
                    "type": "string",
                    "description": "The name of the column to inspect when deciding the shard to chose for an incoming row.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMapping:DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMapping"
                    },
                    "description": "The mapping of the specified column values to the shard names.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "columnName",
                        "mappings"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMapping:DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMapping": {
            "properties": {
                "columnValue": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMappingColumnValue:DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMappingColumnValue",
                    "description": "The value of the column. Currently only the string columns are supported.\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard into which all the rows with the specified `column_value` will be written.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "columnValue",
                        "shardName"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMappingColumnValue:DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMappingColumnValue": {
            "properties": {
                "stringValue": {
                    "type": "string",
                    "description": "The string value of the column.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stringValue"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingRoundRobin:DatatransferEndpointSettingsClickhouseTargetShardingRoundRobin": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsClickhouseTargetShardingTransferId:DatatransferEndpointSettingsClickhouseTargetShardingTransferId": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSource:DatatransferEndpointSettingsKafkaSource": {
            "properties": {
                "auth": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceAuth:DatatransferEndpointSettingsKafkaSourceAuth",
                    "description": "Authentication data.\n"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceConnection:DatatransferEndpointSettingsKafkaSourceConnection",
                    "description": "Connection settings.\n"
                },
                "parser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParser:DatatransferEndpointSettingsKafkaSourceParser",
                    "description": "Data parsing parameters. If not set, the source messages are read in raw.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "**Deprecated**. Please use `topic_names` instead.\n"
                },
                "topicNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of full source topic names.\n"
                },
                "transformer": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceTransformer:DatatransferEndpointSettingsKafkaSourceTransformer",
                    "description": "Transform data with a custom Cloud Function.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auth",
                        "connection",
                        "parser",
                        "securityGroups",
                        "topicName",
                        "topicNames",
                        "transformer"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceAuth:DatatransferEndpointSettingsKafkaSourceAuth": {
            "properties": {
                "noAuth": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceAuthNoAuth:DatatransferEndpointSettingsKafkaSourceAuthNoAuth"
                },
                "sasl": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceAuthSasl:DatatransferEndpointSettingsKafkaSourceAuthSasl"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceAuthNoAuth:DatatransferEndpointSettingsKafkaSourceAuthNoAuth": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceAuthSasl:DatatransferEndpointSettingsKafkaSourceAuthSasl": {
            "properties": {
                "mechanism": {
                    "type": "string"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceAuthSaslPassword:DatatransferEndpointSettingsKafkaSourceAuthSaslPassword"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "mechanism",
                        "password",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceAuthSaslPassword:DatatransferEndpointSettingsKafkaSourceAuthSaslPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceConnection:DatatransferEndpointSettingsKafkaSourceConnection": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremise:DatatransferEndpointSettingsKafkaSourceConnectionOnPremise"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremise:DatatransferEndpointSettingsKafkaSourceConnectionOnPremise": {
            "properties": {
                "brokerUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetId": {
                    "type": "string"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsMode:DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsMode"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "brokerUrls",
                        "subnetId",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsMode:DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeDisabled",
                    "description": "Empty block designating that the connection is not secured, i.e. plaintext connection.\n"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeEnabled",
                    "description": "If this attribute is not an empty block, then TLS is used for the server connection.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string",
                    "description": "X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParser:DatatransferEndpointSettingsKafkaSourceParser": {
            "properties": {
                "auditTrailsV1Parser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserAuditTrailsV1Parser:DatatransferEndpointSettingsKafkaSourceParserAuditTrailsV1Parser",
                    "description": "Parse Audit Trails data. Empty struct.\n"
                },
                "cloudLoggingParser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserCloudLoggingParser:DatatransferEndpointSettingsKafkaSourceParserCloudLoggingParser",
                    "description": "Parse Cloud Logging data. Empty struct.\n"
                },
                "jsonParser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParser:DatatransferEndpointSettingsKafkaSourceParserJsonParser",
                    "description": "Parse data in `JSON` format.\n"
                },
                "tskvParser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParser:DatatransferEndpointSettingsKafkaSourceParserTskvParser",
                    "description": "Parse data if `TSKV` format.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserAuditTrailsV1Parser:DatatransferEndpointSettingsKafkaSourceParserAuditTrailsV1Parser": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserCloudLoggingParser:DatatransferEndpointSettingsKafkaSourceParserCloudLoggingParser": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParser:DatatransferEndpointSettingsKafkaSourceParserJsonParser": {
            "properties": {
                "addRestColumn": {
                    "type": "boolean",
                    "description": "Add fields, that are not in the schema, into the _rest column.\n"
                },
                "dataSchema": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchema:DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchema",
                    "description": "Data parsing scheme.\n"
                },
                "nullKeysAllowed": {
                    "type": "boolean",
                    "description": "Allow null keys. If `false` - null keys will be putted to unparsed data.\n"
                },
                "unescapeStringValues": {
                    "type": "boolean",
                    "description": "Allow unescape string values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addRestColumn",
                        "dataSchema",
                        "nullKeysAllowed",
                        "unescapeStringValues"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchema:DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchema": {
            "properties": {
                "fields": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFields:DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFields"
                },
                "jsonFields": {
                    "type": "string",
                    "description": "Description of the data schema as JSON specification.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFields:DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFields": {
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFieldsField:DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFieldsField"
                    },
                    "description": "Description of the data schema in the array of `fields` structure.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fields"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFieldsField:DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFieldsField": {
            "properties": {
                "key": {
                    "type": "boolean",
                    "description": "Mark field as Primary Key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Field name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path to the field.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Mark field as required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "name",
                        "path",
                        "required",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParser:DatatransferEndpointSettingsKafkaSourceParserTskvParser": {
            "properties": {
                "addRestColumn": {
                    "type": "boolean",
                    "description": "Add fields, that are not in the schema, into the _rest column.\n"
                },
                "dataSchema": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchema:DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchema",
                    "description": "Data parsing scheme.\n"
                },
                "nullKeysAllowed": {
                    "type": "boolean",
                    "description": "Allow null keys. If `false` - null keys will be putted to unparsed data.\n"
                },
                "unescapeStringValues": {
                    "type": "boolean",
                    "description": "Allow unescape string values.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addRestColumn",
                        "dataSchema",
                        "nullKeysAllowed",
                        "unescapeStringValues"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchema:DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchema": {
            "properties": {
                "fields": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFields:DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFields",
                    "description": "Description of the data schema in the array of `fields` structure.\n"
                },
                "jsonFields": {
                    "type": "string",
                    "description": "Description of the data schema as JSON specification.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFields:DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFields": {
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFieldsField:DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFieldsField"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fields"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFieldsField:DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFieldsField": {
            "properties": {
                "key": {
                    "type": "boolean",
                    "description": "Mark field as Primary Key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Field name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path to the field.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Mark field as required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "name",
                        "path",
                        "required",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaSourceTransformer:DatatransferEndpointSettingsKafkaSourceTransformer": {
            "properties": {
                "bufferFlushInterval": {
                    "type": "string"
                },
                "bufferSize": {
                    "type": "string"
                },
                "cloudFunction": {
                    "type": "string"
                },
                "invocationTimeout": {
                    "type": "string"
                },
                "numberOfRetries": {
                    "type": "integer"
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bufferFlushInterval",
                        "bufferSize",
                        "cloudFunction",
                        "invocationTimeout",
                        "numberOfRetries",
                        "serviceAccountId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTarget:DatatransferEndpointSettingsKafkaTarget": {
            "properties": {
                "auth": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetAuth:DatatransferEndpointSettingsKafkaTargetAuth",
                    "description": "Authentication data.\n"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetConnection:DatatransferEndpointSettingsKafkaTargetConnection",
                    "description": "Connection settings.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serializer": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetSerializer:DatatransferEndpointSettingsKafkaTargetSerializer",
                    "description": "Data serialization settings.\n"
                },
                "topicSettings": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetTopicSettings:DatatransferEndpointSettingsKafkaTargetTopicSettings",
                    "description": "Target topic settings.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auth",
                        "connection",
                        "securityGroups",
                        "serializer",
                        "topicSettings"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetAuth:DatatransferEndpointSettingsKafkaTargetAuth": {
            "properties": {
                "noAuth": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetAuthNoAuth:DatatransferEndpointSettingsKafkaTargetAuthNoAuth",
                    "description": "Connection without authentication data.\n"
                },
                "sasl": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetAuthSasl:DatatransferEndpointSettingsKafkaTargetAuthSasl",
                    "description": "Authentication using sasl.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetAuthNoAuth:DatatransferEndpointSettingsKafkaTargetAuthNoAuth": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetAuthSasl:DatatransferEndpointSettingsKafkaTargetAuthSasl": {
            "properties": {
                "mechanism": {
                    "type": "string"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetAuthSaslPassword:DatatransferEndpointSettingsKafkaTargetAuthSaslPassword"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "mechanism",
                        "password",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetAuthSaslPassword:DatatransferEndpointSettingsKafkaTargetAuthSaslPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetConnection:DatatransferEndpointSettingsKafkaTargetConnection": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed Kafka cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremise:DatatransferEndpointSettingsKafkaTargetConnectionOnPremise",
                    "description": "Connection settings of the on-premise Kafka server.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremise:DatatransferEndpointSettingsKafkaTargetConnectionOnPremise": {
            "properties": {
                "brokerUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Kafka broker URLs.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsMode:DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsMode",
                    "description": "TLS settings for the server connection. Empty implies plaintext connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "brokerUrls",
                        "subnetId",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsMode:DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetSerializer:DatatransferEndpointSettingsKafkaTargetSerializer": {
            "properties": {
                "serializerAuto": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerAuto:DatatransferEndpointSettingsKafkaTargetSerializerSerializerAuto",
                    "description": "Empty block. Select data serialization format automatically.\n"
                },
                "serializerDebezium": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebezium:DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebezium",
                    "description": "Serialize data in json format.\n"
                },
                "serializerJson": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerJson:DatatransferEndpointSettingsKafkaTargetSerializerSerializerJson",
                    "description": "Empty block. Serialize data in json format.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerAuto:DatatransferEndpointSettingsKafkaTargetSerializerSerializerAuto": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebezium:DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebezium": {
            "properties": {
                "serializerParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebeziumSerializerParameter:DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebeziumSerializerParameter"
                    },
                    "description": "A list of Debezium parameters set by the structure of the `key` and `value` string fields.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serializerParameters"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebeziumSerializerParameter:DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebeziumSerializerParameter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "value"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetSerializerSerializerJson:DatatransferEndpointSettingsKafkaTargetSerializerSerializerJson": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetTopicSettings:DatatransferEndpointSettingsKafkaTargetTopicSettings": {
            "properties": {
                "topic": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsKafkaTargetTopicSettingsTopic:DatatransferEndpointSettingsKafkaTargetTopicSettingsTopic",
                    "description": "All messages will be sent to one topic.\n"
                },
                "topicPrefix": {
                    "type": "string",
                    "description": "Topic name prefix. Messages will be sent to topic with name \u003ctopic_prefix\u003e.\u003cschema\u003e.\u003ctable_name\u003e.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsKafkaTargetTopicSettingsTopic:DatatransferEndpointSettingsKafkaTargetTopicSettingsTopic": {
            "properties": {
                "saveTxOrder": {
                    "type": "boolean",
                    "description": "Not to split events queue into separate per-table queues.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "Full topic name.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "saveTxOrder",
                        "topicName"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMetrikaSource:DatatransferEndpointSettingsMetrikaSource": {
            "properties": {
                "counterIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMetrikaSourceStream:DatatransferEndpointSettingsMetrikaSourceStream"
                    }
                },
                "token": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMetrikaSourceToken:DatatransferEndpointSettingsMetrikaSourceToken"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "counterIds",
                        "streams",
                        "token"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMetrikaSourceStream:DatatransferEndpointSettingsMetrikaSourceStream": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "columns",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMetrikaSourceToken:DatatransferEndpointSettingsMetrikaSourceToken": {
            "properties": {
                "raw": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSource:DatatransferEndpointSettingsMongoSource": {
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceCollection:DatatransferEndpointSettingsMongoSourceCollection"
                    },
                    "description": "The list of the MongoDB collections that should be transferred. If omitted, all available collections will be transferred.\n"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnection:DatatransferEndpointSettingsMongoSourceConnection",
                    "description": "Connection settings.\n"
                },
                "excludedCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceExcludedCollection:DatatransferEndpointSettingsMongoSourceExcludedCollection"
                    },
                    "description": "The list of the MongoDB collections that should not be transferred.\n"
                },
                "secondaryPreferredMode": {
                    "type": "boolean",
                    "description": "Whether the secondary server should be preferred to the primary when copying data.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collections",
                        "connection",
                        "excludedCollections",
                        "secondaryPreferredMode",
                        "securityGroups",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceCollection:DatatransferEndpointSettingsMongoSourceCollection": {
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collectionName",
                        "databaseName"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnection:DatatransferEndpointSettingsMongoSourceConnection": {
            "properties": {
                "connectionOptions": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptions:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptions"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectionOptions"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptions:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptions": {
            "properties": {
                "authSource": {
                    "type": "string",
                    "description": "Name of the database associated with the credentials.\n"
                },
                "mdbClusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed MongoDB cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremise",
                    "description": "Connection settings of the on-premise MongoDB server.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsPassword:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsPassword"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSource",
                        "password",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremise": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host names of the replica set.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "TCP Port number.\n"
                },
                "replicaSet": {
                    "type": "string",
                    "description": "Replica set name.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsMode",
                    "description": "TLS settings for the server connection. Empty implies plaintext connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "port",
                        "replicaSet",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsPassword:DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoSourceExcludedCollection:DatatransferEndpointSettingsMongoSourceExcludedCollection": {
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collectionName",
                        "databaseName"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoTarget:DatatransferEndpointSettingsMongoTarget": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "How to clean collections when activating the transfer. One of `DISABLED`, `DROP` or `TRUNCATE`.\n"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnection:DatatransferEndpointSettingsMongoTargetConnection",
                    "description": "Connection settings.\n"
                },
                "database": {
                    "type": "string",
                    "description": "If not empty, then all the data will be written to the database with the specified name; otherwise the database name is the same as in the source endpoint.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cleanupPolicy",
                        "connection",
                        "database",
                        "securityGroups",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnection:DatatransferEndpointSettingsMongoTargetConnection": {
            "properties": {
                "connectionOptions": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptions:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptions",
                    "description": "Connection options.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectionOptions"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptions:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptions": {
            "properties": {
                "authSource": {
                    "type": "string",
                    "description": "Name of the database associated with the credentials.\n"
                },
                "mdbClusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed MongoDB cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremise",
                    "description": "Connection settings of the on-premise MongoDB server.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsPassword:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsPassword",
                    "description": "Password for the database access.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User for database access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authSource",
                        "password",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremise:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremise": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host names of the replica set.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "TCP Port number.\n"
                },
                "replicaSet": {
                    "type": "string",
                    "description": "Replica set name.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsMode",
                    "description": "TLS settings for the server connection. Empty implies plaintext connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "port",
                        "replicaSet",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsMode:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsPassword:DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Password for the database access.\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSource:DatatransferEndpointSettingsMysqlSource": {
            "properties": {
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourceConnection:DatatransferEndpointSettingsMysqlSourceConnection",
                    "description": "Connection settings.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the database to transfer.\n"
                },
                "excludeTablesRegexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Opposite of `include_table_regex`. The tables matching the specified regular expressions will not be transferred.\n"
                },
                "includeTablesRegexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of regular expressions of table names which should be transferred. A table name is formatted as schemaname.tablename. For example, a single regular expression may look like `^mydb.employees$`.\n"
                },
                "objectTransferSettings": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourceObjectTransferSettings:DatatransferEndpointSettingsMysqlSourceObjectTransferSettings",
                    "description": "Defines which database schema objects should be transferred, e.g. views, routines, etc. All of the attrubutes in the block are optional and should be either `BEFORE_DATA`, `AFTER_DATA` or `NEVER`.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourcePassword:DatatransferEndpointSettingsMysqlSourcePassword",
                    "description": "Password for the database access.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serviceDatabase": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: `local timezone`.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User for the database access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connection",
                        "database",
                        "excludeTablesRegexes",
                        "includeTablesRegexes",
                        "objectTransferSettings",
                        "password",
                        "securityGroups",
                        "serviceDatabase",
                        "timezone",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourceConnection:DatatransferEndpointSettingsMysqlSourceConnection": {
            "properties": {
                "mdbClusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed MySQL cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremise:DatatransferEndpointSettingsMysqlSourceConnectionOnPremise",
                    "description": "Connection settings of the on-premise MySQL server.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremise:DatatransferEndpointSettingsMysqlSourceConnectionOnPremise": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of host names of the MySQL server. Exactly one host is expected currently.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for the database connection.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsMode:DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsMode",
                    "description": "TLS settings for the server connection. Empty implies plaintext connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "port",
                        "subnetId",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsMode:DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourceObjectTransferSettings:DatatransferEndpointSettingsMysqlSourceObjectTransferSettings": {
            "properties": {
                "routine": {
                    "type": "string"
                },
                "tables": {
                    "type": "string"
                },
                "trigger": {
                    "type": "string"
                },
                "view": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "routine",
                        "tables",
                        "trigger",
                        "view"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlSourcePassword:DatatransferEndpointSettingsMysqlSourcePassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Password for the database access.\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTarget:DatatransferEndpointSettingsMysqlTarget": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "How to clean tables when activating the transfer. One of `DISABLED`, `DROP` or `TRUNCATE`.\n"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTargetConnection:DatatransferEndpointSettingsMysqlTargetConnection",
                    "description": "Connection settings.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the database to transfer.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTargetPassword:DatatransferEndpointSettingsMysqlTargetPassword",
                    "description": "Password for the database access.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serviceDatabase": {
                    "type": "string",
                    "description": "The name of the database where technical tables (`__tm_keeper`, `__tm_gtid_keeper`) will be created. Default is the value of the attribute `database`.\n"
                },
                "skipConstraintChecks": {
                    "type": "boolean",
                    "description": "When `true`, disables foreign key checks. See [foreign_key_checks](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_foreign_key_checks). `False` by default.\n"
                },
                "sqlMode": {
                    "type": "string",
                    "description": "[sql_mode](https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html) to use when interacting with the server. Defaults to `NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION`.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: `local timezone`.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User for the database access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cleanupPolicy",
                        "connection",
                        "database",
                        "password",
                        "securityGroups",
                        "serviceDatabase",
                        "skipConstraintChecks",
                        "sqlMode",
                        "timezone",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTargetConnection:DatatransferEndpointSettingsMysqlTargetConnection": {
            "properties": {
                "mdbClusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed MySQL cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremise:DatatransferEndpointSettingsMysqlTargetConnectionOnPremise",
                    "description": "Connection settings of the on-premise MySQL server.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremise:DatatransferEndpointSettingsMysqlTargetConnectionOnPremise": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of host names of the MySQL server. Exactly one host is expected currently.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for the database connection.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsMode:DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsMode",
                    "description": "TLS settings for the server connection. Empty implies plaintext connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "port",
                        "subnetId",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsMode:DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsMysqlTargetPassword:DatatransferEndpointSettingsMysqlTargetPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Password for the database access.\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSource:DatatransferEndpointSettingsPostgresSource": {
            "properties": {
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourceConnection:DatatransferEndpointSettingsPostgresSourceConnection",
                    "description": "Connection settings.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the database to transfer.\n"
                },
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tables which will not be transfered, formatted as `schemaname.tablename`.\n"
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tables to transfer, formatted as `schemaname.tablename`. If omitted or an empty list is specified, all tables will be transferred.\n"
                },
                "objectTransferSettings": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourceObjectTransferSettings:DatatransferEndpointSettingsPostgresSourceObjectTransferSettings",
                    "description": "Defines which database schema objects should be transferred, e.g. views, functions, etc. All of the attributes in this block are optional and should be either `BEFORE_DATA`, `AFTER_DATA` or `NEVER`.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourcePassword:DatatransferEndpointSettingsPostgresSourcePassword",
                    "description": "Password for the database access.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serviceSchema": {
                    "type": "string",
                    "description": "Name of the database schema in which auxiliary tables needed for the transfer will be created. Empty `service_schema` implies schema `public`.\n"
                },
                "slotGigabyteLagLimit": {
                    "type": "integer",
                    "description": "Maximum WAL size held by the replication slot, in gigabytes. Exceeding this limit will result in a replication failure and deletion of the replication slot. `Unlimited` by default.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User for the database access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connection",
                        "database",
                        "excludeTables",
                        "includeTables",
                        "objectTransferSettings",
                        "password",
                        "securityGroups",
                        "serviceSchema",
                        "slotGigabyteLagLimit",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourceConnection:DatatransferEndpointSettingsPostgresSourceConnection": {
            "properties": {
                "mdbClusterId": {
                    "type": "string"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremise:DatatransferEndpointSettingsPostgresSourceConnectionOnPremise"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremise:DatatransferEndpointSettingsPostgresSourceConnectionOnPremise": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "type": "integer"
                },
                "subnetId": {
                    "type": "string"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsMode:DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsMode"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "port",
                        "subnetId",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsMode:DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourceObjectTransferSettings:DatatransferEndpointSettingsPostgresSourceObjectTransferSettings": {
            "properties": {
                "cast": {
                    "type": "string"
                },
                "collation": {
                    "type": "string"
                },
                "constraint": {
                    "type": "string"
                },
                "defaultValues": {
                    "type": "string"
                },
                "fkConstraint": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "index": {
                    "type": "string"
                },
                "materializedView": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "primaryKey": {
                    "type": "string"
                },
                "rule": {
                    "type": "string"
                },
                "sequence": {
                    "type": "string"
                },
                "sequenceOwnedBy": {
                    "type": "string"
                },
                "sequenceSet": {
                    "type": "string"
                },
                "table": {
                    "type": "string"
                },
                "trigger": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "view": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cast",
                        "collation",
                        "constraint",
                        "defaultValues",
                        "fkConstraint",
                        "function",
                        "index",
                        "materializedView",
                        "policy",
                        "primaryKey",
                        "rule",
                        "sequence",
                        "sequenceOwnedBy",
                        "sequenceSet",
                        "table",
                        "trigger",
                        "type",
                        "view"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresSourcePassword:DatatransferEndpointSettingsPostgresSourcePassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Password for the database access.\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTarget:DatatransferEndpointSettingsPostgresTarget": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string"
                },
                "connection": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTargetConnection:DatatransferEndpointSettingsPostgresTargetConnection",
                    "description": "Connection settings.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Name of the database to transfer.\n"
                },
                "password": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTargetPassword:DatatransferEndpointSettingsPostgresTargetPassword",
                    "description": "Password for the database access.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User for the database access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cleanupPolicy",
                        "connection",
                        "database",
                        "password",
                        "securityGroups",
                        "user"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTargetConnection:DatatransferEndpointSettingsPostgresTargetConnection": {
            "properties": {
                "mdbClusterId": {
                    "type": "string",
                    "description": "Identifier of the Managed PostgreSQL cluster.\n"
                },
                "onPremise": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremise:DatatransferEndpointSettingsPostgresTargetConnectionOnPremise",
                    "description": "Connection settings of the on-premise PostgreSQL server.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremise:DatatransferEndpointSettingsPostgresTargetConnectionOnPremise": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of host names of the PostgreSQL server. Exactly one host is expected currently.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for the database connection.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                },
                "tlsMode": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsMode:DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsMode",
                    "description": "TLS settings for the server connection. Empty implies plaintext connection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hosts",
                        "port",
                        "subnetId",
                        "tlsMode"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsMode:DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsMode": {
            "properties": {
                "disabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeDisabled"
                },
                "enabled": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeEnabled"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeDisabled:DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeDisabled": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeEnabled:DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeEnabled": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "caCertificate"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsPostgresTargetPassword:DatatransferEndpointSettingsPostgresTargetPassword": {
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Password for the database access.\n",
                    "secret": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "raw"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdbSource:DatatransferEndpointSettingsYdbSource": {
            "properties": {
                "changefeedCustomName": {
                    "type": "string",
                    "description": "Custom name for changefeed.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Database path in YDB where tables are stored. Example: `/ru/transfer_manager/prod/data-transfer-yt`.\n"
                },
                "instance": {
                    "type": "string",
                    "description": "Instance of YDB. Example: `my-cute-ydb.yandex.cloud:2135`.\n"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of paths which should be uploaded. When not specified, all available tables are uploaded.\n"
                },
                "saKeyContent": {
                    "type": "string",
                    "description": "Authentication key.\n",
                    "secret": true
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID for interaction with database.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "changefeedCustomName",
                        "database",
                        "instance",
                        "paths",
                        "saKeyContent",
                        "securityGroups",
                        "serviceAccountId",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdbTarget:DatatransferEndpointSettingsYdbTarget": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "How to clean collections when activating the transfer. One of `YDB_CLEANUP_POLICY_DISABLED` or `YDB_CLEANUP_POLICY_DROP`.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Database path in YDB where tables are stored. Example: `/ru/transfer_manager/prod/data-transfer-yt`.\n"
                },
                "defaultCompression": {
                    "type": "string",
                    "description": "Compression that will be used for default columns family on YDB table creation One of `YDB_DEFAULT_COMPRESSION_UNSPECIFIED`, `YDB_DEFAULT_COMPRESSION_DISABLED`, `YDB_DEFAULT_COMPRESSION_LZ4`.\n"
                },
                "instance": {
                    "type": "string",
                    "description": "Instance of YDB. Example: `my-cute-ydb.yandex.cloud:2135`.\n"
                },
                "isTableColumnOriented": {
                    "type": "boolean",
                    "description": "Whether a column-oriented (i.e. OLAP) tables should be created. Default is `false` (create row-oriented OLTP tables).\n"
                },
                "path": {
                    "type": "string",
                    "description": "A path where resulting tables are stored.\n"
                },
                "saKeyContent": {
                    "type": "string",
                    "description": "Authentication key.\n",
                    "secret": true
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID for interaction with database.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cleanupPolicy",
                        "database",
                        "defaultCompression",
                        "instance",
                        "isTableColumnOriented",
                        "path",
                        "saKeyContent",
                        "securityGroups",
                        "serviceAccountId",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSource:DatatransferEndpointSettingsYdsSource": {
            "properties": {
                "allowTtlRewind": {
                    "type": "boolean",
                    "description": "Should continue working, if consumer read lag exceed TTL of topic.\n"
                },
                "consumer": {
                    "type": "string",
                    "description": "Consumer.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Database name.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "YDS Endpoint.\n"
                },
                "parser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParser:DatatransferEndpointSettingsYdsSourceParser",
                    "description": "Data parsing rules.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID for interaction with database.\n"
                },
                "stream": {
                    "type": "string",
                    "description": "Stream.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                },
                "supportedCodecs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported compression codec.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowTtlRewind",
                        "consumer",
                        "database",
                        "endpoint",
                        "parser",
                        "securityGroups",
                        "serviceAccountId",
                        "stream",
                        "subnetId",
                        "supportedCodecs"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParser:DatatransferEndpointSettingsYdsSourceParser": {
            "properties": {
                "auditTrailsV1Parser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserAuditTrailsV1Parser:DatatransferEndpointSettingsYdsSourceParserAuditTrailsV1Parser",
                    "description": "Parse Audit Trails data. Empty struct.\n"
                },
                "cloudLoggingParser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserCloudLoggingParser:DatatransferEndpointSettingsYdsSourceParserCloudLoggingParser",
                    "description": "Parse Cloud Logging data. Empty struct.\n"
                },
                "jsonParser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParser:DatatransferEndpointSettingsYdsSourceParserJsonParser",
                    "description": "Parse data in json format.\n"
                },
                "tskvParser": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParser:DatatransferEndpointSettingsYdsSourceParserTskvParser"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserAuditTrailsV1Parser:DatatransferEndpointSettingsYdsSourceParserAuditTrailsV1Parser": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserCloudLoggingParser:DatatransferEndpointSettingsYdsSourceParserCloudLoggingParser": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParser:DatatransferEndpointSettingsYdsSourceParserJsonParser": {
            "properties": {
                "addRestColumn": {
                    "type": "boolean"
                },
                "dataSchema": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchema:DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchema",
                    "description": "Data parsing scheme.\n"
                },
                "nullKeysAllowed": {
                    "type": "boolean"
                },
                "unescapeStringValues": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addRestColumn",
                        "dataSchema",
                        "nullKeysAllowed",
                        "unescapeStringValues"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchema:DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchema": {
            "properties": {
                "fields": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFields:DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFields",
                    "description": "Description of the data schema in the array of `fields` structure.\n"
                },
                "jsonFields": {
                    "type": "string",
                    "description": "Description of the data schema as JSON specification.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFields:DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFields": {
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFieldsField:DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFieldsField"
                    },
                    "description": "Description of the data schema in the array of `fields` structure.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fields"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFieldsField:DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFieldsField": {
            "properties": {
                "key": {
                    "type": "boolean",
                    "description": "Mark field as Primary Key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Field name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path to the field.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Mark field as required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "name",
                        "path",
                        "required",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParser:DatatransferEndpointSettingsYdsSourceParserTskvParser": {
            "properties": {
                "addRestColumn": {
                    "type": "boolean"
                },
                "dataSchema": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchema:DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchema"
                },
                "nullKeysAllowed": {
                    "type": "boolean"
                },
                "unescapeStringValues": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addRestColumn",
                        "dataSchema",
                        "nullKeysAllowed",
                        "unescapeStringValues"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchema:DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchema": {
            "properties": {
                "fields": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFields:DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFields"
                },
                "jsonFields": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFields:DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFields": {
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFieldsField:DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFieldsField"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fields"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFieldsField:DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFieldsField": {
            "properties": {
                "key": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "name",
                        "path",
                        "required",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsTarget:DatatransferEndpointSettingsYdsTarget": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Database.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "YDS Endpoint.\n"
                },
                "saveTxOrder": {
                    "type": "boolean",
                    "description": "Save transaction order.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of security groups that the transfer associated with this endpoint should use.\n"
                },
                "serializer": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsTargetSerializer:DatatransferEndpointSettingsYdsTargetSerializer",
                    "description": "Data serialization format.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID for interaction with database.\n"
                },
                "stream": {
                    "type": "string",
                    "description": "Stream.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "database",
                        "endpoint",
                        "saveTxOrder",
                        "securityGroups",
                        "serializer",
                        "serviceAccountId",
                        "stream",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsTargetSerializer:DatatransferEndpointSettingsYdsTargetSerializer": {
            "properties": {
                "serializerAuto": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerAuto:DatatransferEndpointSettingsYdsTargetSerializerSerializerAuto",
                    "description": "Empty block. Select data serialization format automatically.\n"
                },
                "serializerDebezium": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerDebezium:DatatransferEndpointSettingsYdsTargetSerializerSerializerDebezium",
                    "description": "Serialize data in json format.\n"
                },
                "serializerJson": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerJson:DatatransferEndpointSettingsYdsTargetSerializerSerializerJson",
                    "description": "Empty block. Serialize data in json format.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerAuto:DatatransferEndpointSettingsYdsTargetSerializerSerializerAuto": {
            "type": "object"
        },
        "yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerDebezium:DatatransferEndpointSettingsYdsTargetSerializerSerializerDebezium": {
            "properties": {
                "serializerParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerDebeziumSerializerParameter:DatatransferEndpointSettingsYdsTargetSerializerSerializerDebeziumSerializerParameter"
                    },
                    "description": "A list of Debezium parameters set by the structure of the `key` and `value` string fields.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serializerParameters"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerDebeziumSerializerParameter:DatatransferEndpointSettingsYdsTargetSerializerSerializerDebeziumSerializerParameter": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "value"
                    ]
                }
            }
        },
        "yandex:index/DatatransferEndpointSettingsYdsTargetSerializerSerializerJson:DatatransferEndpointSettingsYdsTargetSerializerSerializerJson": {
            "type": "object"
        },
        "yandex:index/DatatransferTransferRuntime:DatatransferTransferRuntime": {
            "properties": {
                "ycRuntime": {
                    "$ref": "#/types/yandex:index/DatatransferTransferRuntimeYcRuntime:DatatransferTransferRuntimeYcRuntime",
                    "description": "YC Runtime parameters for the transfer.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ycRuntime"
                    ]
                }
            }
        },
        "yandex:index/DatatransferTransferRuntimeYcRuntime:DatatransferTransferRuntimeYcRuntime": {
            "properties": {
                "jobCount": {
                    "type": "integer",
                    "description": "Number of workers in parallel replication.\n"
                },
                "uploadShardParams": {
                    "$ref": "#/types/yandex:index/DatatransferTransferRuntimeYcRuntimeUploadShardParams:DatatransferTransferRuntimeYcRuntimeUploadShardParams",
                    "description": "Parallel snapshot parameters.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "jobCount",
                        "uploadShardParams"
                    ]
                }
            }
        },
        "yandex:index/DatatransferTransferRuntimeYcRuntimeUploadShardParams:DatatransferTransferRuntimeYcRuntimeUploadShardParams": {
            "properties": {
                "jobCount": {
                    "type": "integer",
                    "description": "Number of workers.\n"
                },
                "processCount": {
                    "type": "integer",
                    "description": "Number of threads.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "jobCount",
                        "processCount"
                    ]
                }
            }
        },
        "yandex:index/DatatransferTransferTransformation:DatatransferTransferTransformation": {
            "properties": {
                "transformers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformer:DatatransferTransferTransformationTransformer"
                    },
                    "description": "A list of transformers. You can specify exactly 1 transformer in each element of list.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformer:DatatransferTransferTransformationTransformer": {
            "properties": {
                "convertToString": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerConvertToString:DatatransferTransferTransformationTransformerConvertToString",
                    "description": "Convert column values to strings.\n"
                },
                "filterColumns": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerFilterColumns:DatatransferTransferTransformationTransformerFilterColumns",
                    "description": "Set up a list of table columns to transfer.\n"
                },
                "filterRows": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerFilterRows:DatatransferTransferTransformationTransformerFilterRows",
                    "description": "This filter only applies to transfers with queues (Apache Kafka®) as a data source. When running a transfer, only the strings meeting the specified criteria remain in a changefeed.\n"
                },
                "maskField": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerMaskField:DatatransferTransferTransformationTransformerMaskField",
                    "description": "Mask field transformer allows you to hash data.\n"
                },
                "renameTables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerRenameTables:DatatransferTransferTransformationTransformerRenameTables",
                    "description": "Set rules for renaming tables by specifying the current names of the tables in the source and new names for these tables in the target.\n"
                },
                "replacePrimaryKey": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerReplacePrimaryKey:DatatransferTransferTransformationTransformerReplacePrimaryKey",
                    "description": "Override primary keys.\n"
                },
                "sharderTransformer": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerSharderTransformer:DatatransferTransferTransformationTransformerSharderTransformer",
                    "description": "Set the number of shards for particular tables and a list of columns whose values will be used for calculating a hash to determine a shard.\n"
                },
                "tableSplitterTransformer": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerTableSplitterTransformer:DatatransferTransferTransformationTransformerTableSplitterTransformer",
                    "description": "Splits the X table into multiple tables (X_1, X_2, ..., X_n) based on data.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerConvertToString:DatatransferTransferTransformationTransformerConvertToString": {
            "properties": {
                "columns": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerConvertToStringColumns:DatatransferTransferTransformationTransformerConvertToStringColumns",
                    "description": "List of the columns to transfer to the target tables using lists of included and excluded columns.\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerConvertToStringTables:DatatransferTransferTransformationTransformerConvertToStringTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerConvertToStringColumns:DatatransferTransferTransformationTransformerConvertToStringColumns": {
            "properties": {
                "excludeColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of columns that will be excluded to transfer.\n"
                },
                "includeColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of columns that will be included to transfer.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerConvertToStringTables:DatatransferTransferTransformationTransformerConvertToStringTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tables that will be excluded to transfer.\n"
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tables that will be included to transfer.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerFilterColumns:DatatransferTransferTransformationTransformerFilterColumns": {
            "properties": {
                "columns": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerFilterColumnsColumns:DatatransferTransferTransformationTransformerFilterColumnsColumns",
                    "description": "List of the columns to transfer to the target tables using lists of included and excluded columns.\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerFilterColumnsTables:DatatransferTransferTransformationTransformerFilterColumnsTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerFilterColumnsColumns:DatatransferTransferTransformationTransformerFilterColumnsColumns": {
            "properties": {
                "excludeColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerFilterColumnsTables:DatatransferTransferTransformationTransformerFilterColumnsTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerFilterRows:DatatransferTransferTransformationTransformerFilterRows": {
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "Filtering criterion. This can be comparison operators for numeric, string, and Boolean values, comparison to NULL, and checking whether a substring is part of a string. See details [here](https://yandex.cloud/docs/data-transfer/concepts/data-transformation#append-only-sources).\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerFilterRowsTables:DatatransferTransferTransformationTransformerFilterRowsTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerFilterRowsTables:DatatransferTransferTransformationTransformerFilterRowsTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerMaskField:DatatransferTransferTransformationTransformerMaskField": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings that specify the name of the column for data masking (a regular expression).\n"
                },
                "function": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerMaskFieldFunction:DatatransferTransferTransformationTransformerMaskFieldFunction",
                    "description": "Mask function.\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerMaskFieldTables:DatatransferTransferTransformationTransformerMaskFieldTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerMaskFieldFunction:DatatransferTransferTransformationTransformerMaskFieldFunction": {
            "properties": {
                "maskFunctionHash": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerMaskFieldFunctionMaskFunctionHash:DatatransferTransferTransformationTransformerMaskFieldFunctionMaskFunctionHash",
                    "description": "Hash mask function.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerMaskFieldFunctionMaskFunctionHash:DatatransferTransferTransformationTransformerMaskFieldFunctionMaskFunctionHash": {
            "properties": {
                "userDefinedSalt": {
                    "type": "string",
                    "description": "This string will be used in the HMAC(sha256, salt) function applied to the column data.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerMaskFieldTables:DatatransferTransferTransformationTransformerMaskFieldTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerRenameTables:DatatransferTransferTransformationTransformerRenameTables": {
            "properties": {
                "renameTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerRenameTablesRenameTable:DatatransferTransferTransformationTransformerRenameTablesRenameTable"
                    },
                    "description": "List of renaming rules.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerRenameTablesRenameTable:DatatransferTransferTransformationTransformerRenameTablesRenameTable": {
            "properties": {
                "newName": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerRenameTablesRenameTableNewName:DatatransferTransferTransformationTransformerRenameTablesRenameTableNewName",
                    "description": "Specify the new names for this table in the target.\n"
                },
                "originalName": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerRenameTablesRenameTableOriginalName:DatatransferTransferTransformationTransformerRenameTablesRenameTableOriginalName",
                    "description": "Specify the current names of the table in the source.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerRenameTablesRenameTableNewName:DatatransferTransferTransformationTransformerRenameTablesRenameTableNewName": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "nameSpace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerRenameTablesRenameTableOriginalName:DatatransferTransferTransformationTransformerRenameTablesRenameTableOriginalName": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "nameSpace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerReplacePrimaryKey:DatatransferTransferTransformationTransformerReplacePrimaryKey": {
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of columns to be used as primary keys.\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerReplacePrimaryKeyTables:DatatransferTransferTransformationTransformerReplacePrimaryKeyTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerReplacePrimaryKeyTables:DatatransferTransferTransformationTransformerReplacePrimaryKeyTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerSharderTransformer:DatatransferTransferTransformationTransformerSharderTransformer": {
            "properties": {
                "columns": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerSharderTransformerColumns:DatatransferTransferTransformationTransformerSharderTransformerColumns",
                    "description": "List of the columns to transfer to the target tables using lists of included and excluded columns.\n"
                },
                "shardsCount": {
                    "type": "integer",
                    "description": "Number of shards.\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerSharderTransformerTables:DatatransferTransferTransformationTransformerSharderTransformerTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerSharderTransformerColumns:DatatransferTransferTransformationTransformerSharderTransformerColumns": {
            "properties": {
                "excludeColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerSharderTransformerTables:DatatransferTransferTransformationTransformerSharderTransformerTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerTableSplitterTransformer:DatatransferTransferTransformationTransformerTableSplitterTransformer": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings that specify the columns in the tables to be partitioned.\n"
                },
                "splitter": {
                    "type": "string",
                    "description": "Specify the split string to be used for merging components in a new table name.\n"
                },
                "tables": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformationTransformerTableSplitterTransformerTables:DatatransferTransferTransformationTransformerTableSplitterTransformerTables",
                    "description": "Table filter.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/DatatransferTransferTransformationTransformerTableSplitterTransformerTables:DatatransferTransferTransformationTransformerTableSplitterTransformerTables": {
            "properties": {
                "excludeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/FunctionAsyncInvocation:FunctionAsyncInvocation": {
            "properties": {
                "retriesCount": {
                    "type": "integer",
                    "description": "Maximum number of retries for async invocation.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account used for async invocation.\n"
                },
                "ymqFailureTarget": {
                    "$ref": "#/types/yandex:index/FunctionAsyncInvocationYmqFailureTarget:FunctionAsyncInvocationYmqFailureTarget",
                    "description": "Target for unsuccessful async invocation.\n"
                },
                "ymqSuccessTarget": {
                    "$ref": "#/types/yandex:index/FunctionAsyncInvocationYmqSuccessTarget:FunctionAsyncInvocationYmqSuccessTarget",
                    "description": "Target for successful async invocation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/FunctionAsyncInvocationYmqFailureTarget:FunctionAsyncInvocationYmqFailureTarget": {
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "YMQ ARN.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account used for writing result to queue.\n"
                }
            },
            "type": "object",
            "required": [
                "arn",
                "serviceAccountId"
            ]
        },
        "yandex:index/FunctionAsyncInvocationYmqSuccessTarget:FunctionAsyncInvocationYmqSuccessTarget": {
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "YMQ ARN.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account used for writing result to queue.\n"
                }
            },
            "type": "object",
            "required": [
                "arn",
                "serviceAccountId"
            ]
        },
        "yandex:index/FunctionConnectivity:FunctionConnectivity": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Network the version will have access to. It's essential to specify network with subnets in all availability zones.\n"
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "yandex:index/FunctionContent:FunctionContent": {
            "properties": {
                "zipFilename": {
                    "type": "string",
                    "description": "Filename to zip archive for the version.\n"
                }
            },
            "type": "object",
            "required": [
                "zipFilename"
            ]
        },
        "yandex:index/FunctionLogOptions:FunctionLogOptions": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Is logging from function disabled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Log entries are written to default log group for specified folder.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log entries are written to specified log group.\n"
                },
                "minLevel": {
                    "type": "string",
                    "description": "Minimum log entry level.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/FunctionMetadataOptions:FunctionMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer",
                    "description": "Enables access to AWS flavored metadata (IMDSv1). Values: `0` - default, `1` - enabled, `2` - disabled.\n"
                },
                "gceHttpEndpoint": {
                    "type": "integer",
                    "description": "Enables access to GCE flavored metadata. Values: `0`- default, `1` - enabled, `2` - disabled.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsV1HttpEndpoint",
                        "gceHttpEndpoint"
                    ]
                }
            }
        },
        "yandex:index/FunctionMount:FunctionMount": {
            "properties": {
                "ephemeralDisk": {
                    "$ref": "#/types/yandex:index/FunctionMountEphemeralDisk:FunctionMountEphemeralDisk",
                    "description": "One of the available mount types. Disk available during the function execution time.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Mount’s accessibility mode. Valid values are `ro` and `rw`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the mount point. The directory where the target is mounted will be accessible at the `/function/storage/\u003cmounts.0.name\u003e` path.\n"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/FunctionMountObjectStorage:FunctionMountObjectStorage",
                    "description": "One of the available mount types. Object storage as a mount.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "mode",
                        "name"
                    ]
                }
            }
        },
        "yandex:index/FunctionMountEphemeralDisk:FunctionMountEphemeralDisk": {
            "properties": {
                "blockSizeKb": {
                    "type": "integer",
                    "description": "Optional block size of the ephemeral disk in KB.\n"
                },
                "sizeGb": {
                    "type": "integer",
                    "description": "Size of the ephemeral disk in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "sizeGb"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSizeKb",
                        "sizeGb"
                    ]
                }
            }
        },
        "yandex:index/FunctionMountObjectStorage:FunctionMountObjectStorage": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the mounting bucket.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "yandex:index/FunctionPackage:FunctionPackage": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "Name of the bucket that stores the code for the version.\n"
                },
                "objectName": {
                    "type": "string",
                    "description": "Name of the object in the bucket that stores the code for the version.\n"
                },
                "sha256": {
                    "type": "string",
                    "description": "SHA256 hash of the version deployment package.\n"
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "objectName"
            ]
        },
        "yandex:index/FunctionScalingPolicyPolicy:FunctionScalingPolicyPolicy": {
            "properties": {
                "tag": {
                    "type": "string",
                    "description": "Yandex Cloud Function version tag for Yandex Cloud Function scaling policy.\n"
                },
                "zoneInstancesLimit": {
                    "type": "integer",
                    "description": "Max number of instances in one zone for Yandex Cloud Function with tag.\n"
                },
                "zoneRequestsLimit": {
                    "type": "integer",
                    "description": "Max number of requests in one zone for Yandex Cloud Function with tag.\n"
                }
            },
            "type": "object",
            "required": [
                "tag"
            ]
        },
        "yandex:index/FunctionSecret:FunctionSecret": {
            "properties": {
                "environmentVariable": {
                    "type": "string",
                    "description": "Function's environment variable in which secret's value will be stored. Must begin with a letter (A-Z, a-z).\n"
                },
                "id": {
                    "type": "string",
                    "description": "Secret's ID.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Secret's entries key which value will be stored in environment variable.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Secret's version ID.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentVariable",
                "id",
                "key",
                "versionId"
            ]
        },
        "yandex:index/FunctionStorageMount:FunctionStorageMount": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the mounting bucket.\n"
                },
                "mountPointName": {
                    "type": "string",
                    "description": "Name of the mount point. The directory where the bucket is mounted will be accessible at the `/function/storage/\u003cmount_point\u003e` path.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Mount the bucket in read-only mode.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "mountPointName"
            ]
        },
        "yandex:index/FunctionTriggerContainer:FunctionTriggerContainer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Yandex Cloud Serverless Container ID for Yandex Cloud Functions Trigger.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.\n"
                },
                "retryAttempts": {
                    "type": "string",
                    "description": "Retry attempts for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.\n"
                },
                "retryInterval": {
                    "type": "string",
                    "description": "Retry interval in seconds for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "yandex:index/FunctionTriggerContainerRegistry:FunctionTriggerContainerRegistry": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "createImage": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `create image` event for Yandex Cloud Functions Trigger.\n"
                },
                "createImageTag": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `create image tag` event for Yandex Cloud Functions Trigger.\n"
                },
                "deleteImage": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `delete image` event for Yandex Cloud Functions Trigger.\n"
                },
                "deleteImageTag": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `delete image tag` event for Yandex Cloud Functions Trigger.\n"
                },
                "imageName": {
                    "type": "string",
                    "description": "Image name filter setting for Yandex Cloud Functions Trigger.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "Container Registry ID for Yandex Cloud Functions Trigger.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Image tag filter setting for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "registryId"
            ]
        },
        "yandex:index/FunctionTriggerDataStreams:FunctionTriggerDataStreams": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Stream database for Yandex Cloud Functions Trigger.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID to access data stream for Yandex Cloud Functions Trigger.\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "Stream name for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "database",
                "serviceAccountId",
                "streamName"
            ]
        },
        "yandex:index/FunctionTriggerDlq:FunctionTriggerDlq": {
            "properties": {
                "queueId": {
                    "type": "string",
                    "description": "ID of Dead Letter Queue for Trigger (Queue ARN).\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service Account ID for Dead Letter Queue for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "queueId",
                "serviceAccountId"
            ]
        },
        "yandex:index/FunctionTriggerFunction:FunctionTriggerFunction": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Yandex Cloud Function ID.\n"
                },
                "retryAttempts": {
                    "type": "string",
                    "description": "Retry attempts for Yandex Cloud Function for Yandex Cloud Functions Trigger.\n"
                },
                "retryInterval": {
                    "type": "string",
                    "description": "Retry interval in seconds for Yandex Cloud Function for Yandex Cloud Functions Trigger.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID for Yandex Cloud Function.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Tag for Yandex Cloud Function for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "yandex:index/FunctionTriggerIot:FunctionTriggerIot": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "deviceId": {
                    "type": "string",
                    "description": "IoT Device ID for Yandex Cloud Functions Trigger.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "IoT Registry ID for Yandex Cloud Functions Trigger.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "IoT Topic for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "registryId"
            ]
        },
        "yandex:index/FunctionTriggerLogGroup:FunctionTriggerLogGroup": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "batchSize": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "logGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "logGroupIds"
            ]
        },
        "yandex:index/FunctionTriggerLogging:FunctionTriggerLogging": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Logging group ID for Yandex Cloud Functions Trigger.\n"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Logging level filter setting for Yandex Cloud Functions Trigger.\n"
                },
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Resource ID filter setting for Yandex Cloud Functions Trigger.\n"
                },
                "resourceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Resource type filter setting for Yandex Cloud Functions Trigger.\n"
                },
                "streamNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Logging stream name filter setting for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "groupId"
            ]
        },
        "yandex:index/FunctionTriggerMail:FunctionTriggerMail": {
            "properties": {
                "attachmentsBucketId": {
                    "type": "string",
                    "description": "Object Storage Bucket ID for Yandex Cloud Functions Trigger.\n"
                },
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account ID to access object storage for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff"
            ]
        },
        "yandex:index/FunctionTriggerMessageQueue:FunctionTriggerMessageQueue": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "queueId": {
                    "type": "string",
                    "description": "Message Queue ID for Yandex Cloud Functions Trigger.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Message Queue Service Account ID for Yandex Cloud Functions Trigger.\n"
                },
                "visibilityTimeout": {
                    "type": "string",
                    "description": "Visibility timeout for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "queueId",
                "serviceAccountId"
            ]
        },
        "yandex:index/FunctionTriggerObjectStorage:FunctionTriggerObjectStorage": {
            "properties": {
                "batchCutoff": {
                    "type": "string",
                    "description": "Batch Duration in seconds for Yandex Cloud Functions Trigger.\n"
                },
                "batchSize": {
                    "type": "string",
                    "description": "Batch Size for Yandex Cloud Functions Trigger.\n"
                },
                "bucketId": {
                    "type": "string",
                    "description": "Object Storage Bucket ID for Yandex Cloud Functions Trigger.\n"
                },
                "create": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `create` event for Yandex Cloud Functions Trigger.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `delete` event for Yandex Cloud Functions Trigger.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix for Object Storage for Yandex Cloud Functions Trigger.\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix for Object Storage for Yandex Cloud Functions Trigger.\n"
                },
                "update": {
                    "type": "boolean",
                    "description": "Boolean flag for setting `update` event for Yandex Cloud Functions Trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "bucketId"
            ]
        },
        "yandex:index/FunctionTriggerTimer:FunctionTriggerTimer": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "Cron expression for timer for Yandex Cloud Functions Trigger.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "Payload to be passed to function.\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression"
            ]
        },
        "yandex:index/IamServiceAccountApiKeyOutputToLockbox:IamServiceAccountApiKeyOutputToLockbox": {
            "properties": {
                "entryForSecretKey": {
                    "type": "string",
                    "description": "entry that will store the value of secret_key\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "ID of the Lockbox secret where to store the sensible values.\n"
                }
            },
            "type": "object",
            "required": [
                "entryForSecretKey",
                "secretId"
            ]
        },
        "yandex:index/IamServiceAccountKeyOutputToLockbox:IamServiceAccountKeyOutputToLockbox": {
            "properties": {
                "entryForPrivateKey": {
                    "type": "string",
                    "description": "entry that will store the value of private_key\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "ID of the Lockbox secret where to store the sensible values.\n"
                }
            },
            "type": "object",
            "required": [
                "entryForPrivateKey",
                "secretId"
            ]
        },
        "yandex:index/IamServiceAccountStaticAccessKeyOutputToLockbox:IamServiceAccountStaticAccessKeyOutputToLockbox": {
            "properties": {
                "entryForAccessKey": {
                    "type": "string",
                    "description": "entry that will store the value of access_key\n"
                },
                "entryForSecretKey": {
                    "type": "string",
                    "description": "entry that will store the value of secret_key\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "ID of the Lockbox secret where to store the sensible values.\n"
                }
            },
            "type": "object",
            "required": [
                "entryForAccessKey",
                "entryForSecretKey",
                "secretId"
            ]
        },
        "yandex:index/IotCoreBrokerLogOptions:IotCoreBrokerLogOptions": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Is logging for broker disabled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Log entries are written to default log group for specified folder.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log entries are written to specified log group.\n"
                },
                "minLevel": {
                    "type": "string",
                    "description": "Minimum log entry level.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/IotCoreRegistryLogOptions:IotCoreRegistryLogOptions": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Is logging for registry disabled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Log entries are written to default log group for specified folder.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log entries are written to specified log group.\n"
                },
                "minLevel": {
                    "type": "string",
                    "description": "Minimum log entry level.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/KubernetesClusterKmsProvider:KubernetesClusterKmsProvider": {
            "properties": {
                "keyId": {
                    "type": "string",
                    "description": "KMS key ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/KubernetesClusterMaster:KubernetesClusterMaster": {
            "properties": {
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.\n"
                },
                "etcdClusterSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "externalV4Address": {
                    "type": "string",
                    "description": "An IPv4 external network address that is assigned to the master.\n"
                },
                "externalV4Endpoint": {
                    "type": "string",
                    "description": "External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).\n"
                },
                "externalV6Address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "externalV6Endpoint": {
                    "type": "string"
                },
                "internalV4Address": {
                    "type": "string",
                    "description": "An IPv4 internal network address that is assigned to the master.\n"
                },
                "internalV4Endpoint": {
                    "type": "string",
                    "description": "Internal endpoint that can be used to connect to the master from cloud networks.\n"
                },
                "maintenancePolicy": {
                    "$ref": "#/types/yandex:index/KubernetesClusterMasterMaintenancePolicy:KubernetesClusterMasterMaintenancePolicy",
                    "description": "Maintenance policy for Kubernetes master. If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time. Revision upgrades are performed only within the same minor version, e.g. 1.29. Minor version upgrades (e.g. 1.29-\u003e1.30) should be performed manually.\n"
                },
                "masterLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesClusterMasterMasterLocation:KubernetesClusterMasterMasterLocation"
                    },
                    "description": "Cluster master's instances locations array (zone and subnet). Cannot be used together with `zonal` or `regional`. Currently, supports either one, for zonal master, or three instances of `master_location`. Can be updated in place. When creating regional cluster (three master instances), its `region` will be evaluated automatically by backend.\n"
                },
                "masterLogging": {
                    "$ref": "#/types/yandex:index/KubernetesClusterMasterMasterLogging:KubernetesClusterMasterMasterLogging",
                    "description": "Master Logging options.\n"
                },
                "publicIp": {
                    "type": "boolean",
                    "description": "When `true`, Kubernetes master will have visible ipv4 address.\n",
                    "willReplaceOnChanges": true
                },
                "regional": {
                    "$ref": "#/types/yandex:index/KubernetesClusterMasterRegional:KubernetesClusterMasterRegional",
                    "description": "Initialize parameters for Regional Master (highly available master).\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Kubernetes that will be used for master.\n"
                },
                "versionInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesClusterMasterVersionInfo:KubernetesClusterMasterVersionInfo"
                    },
                    "description": "Information about cluster version.\n"
                },
                "zonal": {
                    "$ref": "#/types/yandex:index/KubernetesClusterMasterZonal:KubernetesClusterMasterZonal",
                    "description": "Initialize parameters for Zonal Master (single node master).\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clusterCaCertificate",
                        "etcdClusterSize",
                        "externalV4Address",
                        "externalV4Endpoint",
                        "externalV6Endpoint",
                        "internalV4Address",
                        "internalV4Endpoint",
                        "maintenancePolicy",
                        "masterLocations",
                        "publicIp",
                        "regional",
                        "version",
                        "versionInfos",
                        "zonal"
                    ]
                }
            }
        },
        "yandex:index/KubernetesClusterMasterMaintenancePolicy:KubernetesClusterMasterMaintenancePolicy": {
            "properties": {
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesClusterMasterMaintenancePolicyMaintenanceWindow:KubernetesClusterMasterMaintenancePolicyMaintenanceWindow"
                    },
                    "description": "This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time. To specify time of day interval, for all days, one element should be provided, with two fields set, `start_time` and `duration`. Please see `zonal_cluster_resource_name` config example.\n\nTo allow maintenance only on specific days of week, please provide list of elements, with all fields set. Only one time interval (`duration`) is allowed for each day of week. Please see `regional_cluster_resource_name` config example\n"
                }
            },
            "type": "object",
            "required": [
                "autoUpgrade"
            ]
        },
        "yandex:index/KubernetesClusterMasterMaintenancePolicyMaintenanceWindow:KubernetesClusterMasterMaintenancePolicyMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "day",
                        "duration",
                        "startTime"
                    ]
                }
            }
        },
        "yandex:index/KubernetesClusterMasterMasterLocation:KubernetesClusterMasterMasterLocation": {
            "properties": {
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "ID of the availability zone.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "subnetId",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/KubernetesClusterMasterMasterLogging:KubernetesClusterMasterMasterLogging": {
            "properties": {
                "auditEnabled": {
                    "type": "boolean",
                    "description": "Boolean flag that specifies if kube-apiserver audit logs should be sent to Yandex Cloud Logging.\n"
                },
                "clusterAutoscalerEnabled": {
                    "type": "boolean",
                    "description": "Boolean flag that specifies if cluster-autoscaler logs should be sent to Yandex Cloud Logging.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean flag that specifies if master components logs should be sent to [Yandex Cloud Logging](https://yandex.cloud/docs/logging/). The exact components that will send their logs must be configured via the options described below.\n\n\u003e Only one of `log_group_id` or `folder_id` (or none) may be specified. If `log_group_id` is specified, logs will be sent to this specific Log group. If `folder_id` is specified, logs will be sent to **default** Log group of this folder. If none of two is specified, logs will be sent to **default** Log group of the **same** folder as Kubernetes cluster.\n"
                },
                "eventsEnabled": {
                    "type": "boolean",
                    "description": "Boolean flag that specifies if kubernetes cluster events should be sent to Yandex Cloud Logging.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "ID of the folder default Log group of which should be used to collect logs.\n"
                },
                "kubeApiserverEnabled": {
                    "type": "boolean",
                    "description": "Boolean flag that specifies if kube-apiserver logs should be sent to Yandex Cloud Logging.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "ID of the Yandex Cloud Logging [Log group](https://yandex.cloud/docs/logging/concepts/log-group).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/KubernetesClusterMasterRegional:KubernetesClusterMasterRegional": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesClusterMasterRegionalLocation:KubernetesClusterMasterRegionalLocation"
                    },
                    "description": "Array of locations, where master instances will be allocated.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Name of availability region (e.g. `ru-central1`), where master instances will be allocated.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "locations",
                        "region"
                    ]
                }
            }
        },
        "yandex:index/KubernetesClusterMasterRegionalLocation:KubernetesClusterMasterRegionalLocation": {
            "properties": {
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet.\n",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "ID of the availability zone.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/KubernetesClusterMasterVersionInfo:KubernetesClusterMasterVersionInfo": {
            "properties": {
                "currentVersion": {
                    "type": "string",
                    "description": "Current Kubernetes version, major.minor (e.g. 1.30).\n"
                },
                "newRevisionAvailable": {
                    "type": "boolean",
                    "description": "Boolean flag. Newer revisions may include Kubernetes patches (e.g `1.30.1` \u003e `1.30.2`) as well as some internal component updates - new features or bug fixes in yandex-specific components either on the master or node\n"
                },
                "newRevisionSummary": {
                    "type": "string",
                    "description": "Human readable description of the changes to be applied when updating to the latest revision. Empty if new_revision_available is false.\n"
                },
                "versionDeprecated": {
                    "type": "boolean",
                    "description": "Boolean flag. The current version is on the deprecation schedule, component (master or node group) should be upgraded.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "currentVersion",
                        "newRevisionAvailable",
                        "newRevisionSummary",
                        "versionDeprecated"
                    ]
                }
            }
        },
        "yandex:index/KubernetesClusterMasterZonal:KubernetesClusterMasterZonal": {
            "properties": {
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.\n",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "ID of the availability zone.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/KubernetesClusterNetworkImplementation:KubernetesClusterNetworkImplementation": {
            "properties": {
                "cilium": {
                    "$ref": "#/types/yandex:index/KubernetesClusterNetworkImplementationCilium:KubernetesClusterNetworkImplementationCilium",
                    "description": "Cilium network implementation configuration. No options exist.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/KubernetesClusterNetworkImplementationCilium:KubernetesClusterNetworkImplementationCilium": {
            "type": "object"
        },
        "yandex:index/KubernetesNodeGroupAllocationPolicy:KubernetesNodeGroupAllocationPolicy": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupAllocationPolicyLocation:KubernetesNodeGroupAllocationPolicyLocation"
                    },
                    "description": "Repeated field, that specify subnets (zones), that will be used by node group compute instances. Subnet specified by `subnet_id` should be allocated in zone specified by 'zone' argument.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "locations"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupAllocationPolicyLocation:KubernetesNodeGroupAllocationPolicyLocation": {
            "properties": {
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet, that will be used by one compute instance in node group.\n",
                    "deprecationMessage": "The 'subnet_id' field has been deprecated. Please use 'subnet_ids under network_interface' instead.",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "ID of the availability zone where for one compute instance in node group.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "subnetId",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupDeployPolicy:KubernetesNodeGroupDeployPolicy": {
            "properties": {
                "maxExpansion": {
                    "type": "integer",
                    "description": "The maximum number of instances that can be temporarily allocated above the group's target size during the update.\n"
                },
                "maxUnavailable": {
                    "type": "integer",
                    "description": "The maximum number of running instances that can be taken offline during update.\n"
                }
            },
            "type": "object",
            "required": [
                "maxExpansion",
                "maxUnavailable"
            ]
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplate:KubernetesNodeGroupInstanceTemplate": {
            "properties": {
                "bootDisk": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateBootDisk:KubernetesNodeGroupInstanceTemplateBootDisk",
                    "description": "The specifications for boot disks that will be attached to the instance.\n"
                },
                "containerNetwork": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateContainerNetwork:KubernetesNodeGroupInstanceTemplateContainerNetwork",
                    "description": "Container network configuration.\n"
                },
                "containerRuntime": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateContainerRuntime:KubernetesNodeGroupInstanceTemplateContainerRuntime",
                    "description": "Container runtime configuration.\n"
                },
                "gpuSettings": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateGpuSettings:KubernetesNodeGroupInstanceTemplateGpuSettings",
                    "description": "GPU settings.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels that will be assigned to compute nodes (instances), created by the Node Group.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys. **Note**: key `user-data` won't be provided into instances. It reserved for internal activity in `kubernetes_node_group` resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name template of the instance. In order to be unique it must contain at least one of instance unique placeholders:\n* `{instance.short_id}\n* `{instance.index}`\n* combination of `{instance.zone_id}` and `{instance.index_in_zone}`\n\nExample: `my-instance-{instance.index}`.\nIf not set, default is used: `{instance_group.id}-{instance.short_id}`. It may also contain another placeholders, see [Compute Instance group metadata doc](https://yandex.cloud/docs/compute/instancegroup/api-ref/grpc/InstanceGroup) for full list.\n"
                },
                "nat": {
                    "type": "boolean",
                    "description": "Enables NAT for node group compute instances.\n",
                    "deprecationMessage": "The 'nat' field has been deprecated. Please use 'nat under network_interface' instead.",
                    "willReplaceOnChanges": true
                },
                "networkAccelerationType": {
                    "type": "string",
                    "description": "Type of network acceleration. Values: `standard`, `software_accelerated`.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateNetworkInterface:KubernetesNodeGroupInstanceTemplateNetworkInterface"
                    },
                    "description": "An array with the network interfaces that will be attached to the instance.\n"
                },
                "placementPolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplatePlacementPolicy:KubernetesNodeGroupInstanceTemplatePlacementPolicy",
                    "description": "The placement policy configuration.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The ID of the hardware platform configuration for the node group compute instances.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateResources:KubernetesNodeGroupInstanceTemplateResources"
                },
                "schedulingPolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateSchedulingPolicy:KubernetesNodeGroupInstanceTemplateSchedulingPolicy",
                    "description": "The scheduling policy for the instances in node group.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootDisk",
                        "containerNetwork",
                        "containerRuntime",
                        "gpuSettings",
                        "metadata",
                        "nat",
                        "networkAccelerationType",
                        "networkInterfaces",
                        "platformId",
                        "resources",
                        "schedulingPolicy"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateBootDisk:KubernetesNodeGroupInstanceTemplateBootDisk": {
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "The size of the disk in GB. Allowed minimal size: 64 GB.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The disk type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "size",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateContainerNetwork:KubernetesNodeGroupInstanceTemplateContainerNetwork": {
            "properties": {
                "podMtu": {
                    "type": "integer",
                    "description": "MTU for pods.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "podMtu"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateContainerRuntime:KubernetesNodeGroupInstanceTemplateContainerRuntime": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of container runtime. Values: `docker`, `containerd`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateGpuSettings:KubernetesNodeGroupInstanceTemplateGpuSettings": {
            "properties": {
                "gpuClusterId": {
                    "type": "string",
                    "description": "GPU cluster id.\n",
                    "willReplaceOnChanges": true
                },
                "gpuEnvironment": {
                    "type": "string",
                    "description": "GPU environment. Values: `runc`, `runc_drivers_cuda`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "gpuEnvironment"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateNetworkInterface:KubernetesNodeGroupInstanceTemplateNetworkInterface": {
            "properties": {
                "ipv4": {
                    "type": "boolean",
                    "description": "Allocate an IPv4 address for the interface. The default value is `true`.\n"
                },
                "ipv4DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord:KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord"
                    },
                    "description": "List of configurations for creating ipv4 DNS records.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "If true, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.\n"
                },
                "ipv6DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord"
                    },
                    "description": "List of configurations for creating ipv6 DNS records.\n"
                },
                "nat": {
                    "type": "boolean",
                    "description": "A public address that can be used to access the internet over NAT.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security group IDs for network interface.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the subnets.\n"
                }
            },
            "type": "object",
            "required": [
                "subnetIds"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipv6",
                        "nat",
                        "subnetIds"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord:KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone ID (if not set, private zone is used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN.\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to `true`, also create a PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL (in seconds).\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ]
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone ID (if not set, private zone is used).\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "DNS record FQDN.\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "When set to `true`, also create a PTR DNS record.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "DNS record TTL (in seconds).\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ]
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplatePlacementPolicy:KubernetesNodeGroupInstanceTemplatePlacementPolicy": {
            "properties": {
                "placementGroupId": {
                    "type": "string",
                    "description": "Specifies the id of the Placement Group to assign to the instances.\n"
                }
            },
            "type": "object",
            "required": [
                "placementGroupId"
            ]
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateResources:KubernetesNodeGroupInstanceTemplateResources": {
            "properties": {
                "coreFraction": {
                    "type": "integer",
                    "description": "Baseline core performance as a percent.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "Number of CPU cores allocated to the instance.\n"
                },
                "gpus": {
                    "type": "integer",
                    "description": "Number of GPU cores allocated to the instance.\n"
                },
                "memory": {
                    "type": "number",
                    "description": "The memory size allocated to the instance.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "coreFraction",
                        "cores",
                        "memory"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupInstanceTemplateSchedulingPolicy:KubernetesNodeGroupInstanceTemplateSchedulingPolicy": {
            "properties": {
                "preemptible": {
                    "type": "boolean",
                    "description": "Specifies if the instance is preemptible. Defaults to `false`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "preemptible"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupMaintenancePolicy:KubernetesNodeGroupMaintenancePolicy": {
            "properties": {
                "autoRepair": {
                    "type": "boolean",
                    "description": "Flag that specifies if node group can be repaired automatically. When omitted, default value is `true`.\n"
                },
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "Flag specifies if node group can be upgraded automatically. When omitted, default value is `true`.\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupMaintenancePolicyMaintenanceWindow:KubernetesNodeGroupMaintenancePolicyMaintenanceWindow"
                    },
                    "description": "Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.\n\nTo specify time of day interval, for all days, one element should be provided, with two fields set, `start_time` and `duration`.\n\nTo allow maintenance only on specific days of week, please provide list of elements, with all fields set. Only one time interval is allowed for each day of week. Please see `my_node_group` config example.\n"
                }
            },
            "type": "object",
            "required": [
                "autoRepair",
                "autoUpgrade"
            ]
        },
        "yandex:index/KubernetesNodeGroupMaintenancePolicyMaintenanceWindow:KubernetesNodeGroupMaintenancePolicyMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "day",
                        "duration",
                        "startTime"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupScalePolicy:KubernetesNodeGroupScalePolicy": {
            "properties": {
                "autoScale": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupScalePolicyAutoScale:KubernetesNodeGroupScalePolicyAutoScale",
                    "description": "Scale policy for an autoscaled node group.\n",
                    "willReplaceOnChanges": true
                },
                "fixedScale": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupScalePolicyFixedScale:KubernetesNodeGroupScalePolicyFixedScale",
                    "description": "Scale policy for a fixed scale node group.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/KubernetesNodeGroupScalePolicyAutoScale:KubernetesNodeGroupScalePolicyAutoScale": {
            "properties": {
                "initial": {
                    "type": "integer",
                    "description": "Initial number of instances in the node group.\n"
                },
                "max": {
                    "type": "integer",
                    "description": "Maximum number of instances in the node group.\n"
                },
                "min": {
                    "type": "integer",
                    "description": "Minimum number of instances in the node group.\n"
                }
            },
            "type": "object",
            "required": [
                "initial",
                "max",
                "min"
            ]
        },
        "yandex:index/KubernetesNodeGroupScalePolicyFixedScale:KubernetesNodeGroupScalePolicyFixedScale": {
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "The number of instances in the node group.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "size"
                    ]
                }
            }
        },
        "yandex:index/KubernetesNodeGroupVersionInfo:KubernetesNodeGroupVersionInfo": {
            "properties": {
                "currentVersion": {
                    "type": "string",
                    "description": "Current Kubernetes version, major.minor (e.g. `1.30`).\n"
                },
                "newRevisionAvailable": {
                    "type": "boolean",
                    "description": "True/false flag. Newer revisions may include Kubernetes patches (e.g `1.30.1` \u003e `1.30.2`) as well as some internal component updates - new features or bug fixes in yandex-specific components either on the master or nodes.\n"
                },
                "newRevisionSummary": {
                    "type": "string",
                    "description": "Human readable description of the changes to be applied when updating to the latest revision. Empty if new_revision_available is false.\n"
                },
                "versionDeprecated": {
                    "type": "boolean",
                    "description": "True/false flag. The current version is on the deprecation schedule, component (master or node group) should be upgraded.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "currentVersion",
                        "newRevisionAvailable",
                        "newRevisionSummary",
                        "versionDeprecated"
                    ]
                }
            }
        },
        "yandex:index/LbNetworkLoadBalancerAttachedTargetGroup:LbNetworkLoadBalancerAttachedTargetGroup": {
            "properties": {
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbNetworkLoadBalancerAttachedTargetGroupHealthcheck:LbNetworkLoadBalancerAttachedTargetGroupHealthcheck"
                    },
                    "description": "A HealthCheck resource.\n\n\u003e One of `http_options` or `tcp_options` should be specified.\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "ID of the target group.\n"
                }
            },
            "type": "object",
            "required": [
                "healthchecks",
                "targetGroupId"
            ]
        },
        "yandex:index/LbNetworkLoadBalancerAttachedTargetGroupHealthcheck:LbNetworkLoadBalancerAttachedTargetGroupHealthcheck": {
            "properties": {
                "healthyThreshold": {
                    "type": "integer",
                    "description": "Number of successful health checks required in order to set the `HEALTHY` status for the target.\n"
                },
                "httpOptions": {
                    "$ref": "#/types/yandex:index/LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions:LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions",
                    "description": "Options for HTTP health check.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between health checks. The default is 2 seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the health check. The name must be unique for each target group that attached to a single load balancer.\n"
                },
                "tcpOptions": {
                    "$ref": "#/types/yandex:index/LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions:LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions",
                    "description": "Options for TCP health check.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for a target to return a response for the health check. The default is 1 second.\n"
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "Number of failed health checks before changing the status to `UNHEALTHY`. The default is 2.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions:LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "URL path to set for health checking requests for every target in the target group. For example `/ping`. The default path is `/`.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port to use for HTTP health checks.\n"
                }
            },
            "type": "object",
            "required": [
                "port"
            ]
        },
        "yandex:index/LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions:LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "Port to use for TCP health checks.\n"
                }
            },
            "type": "object",
            "required": [
                "port"
            ]
        },
        "yandex:index/LbNetworkLoadBalancerListener:LbNetworkLoadBalancerListener": {
            "properties": {
                "externalAddressSpec": {
                    "$ref": "#/types/yandex:index/LbNetworkLoadBalancerListenerExternalAddressSpec:LbNetworkLoadBalancerListenerExternalAddressSpec",
                    "description": "External IP address specification.\n"
                },
                "internalAddressSpec": {
                    "$ref": "#/types/yandex:index/LbNetworkLoadBalancerListenerInternalAddressSpec:LbNetworkLoadBalancerListenerInternalAddressSpec",
                    "description": "Internal IP address specification.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the listener. The name must be unique for each listener on a single load balancer.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for incoming traffic.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for incoming traffic. TCP or UDP and the default is TCP.\n"
                },
                "targetPort": {
                    "type": "integer",
                    "description": "Port of a target. The default is the same as listener's port.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "port",
                        "protocol",
                        "targetPort"
                    ]
                }
            }
        },
        "yandex:index/LbNetworkLoadBalancerListenerExternalAddressSpec:LbNetworkLoadBalancerListenerExternalAddressSpec": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "External IP address for a listener. IP address will be allocated if it wasn't been set.\n"
                },
                "ipVersion": {
                    "type": "string",
                    "description": "IP version of the external addresses that the load balancer works with. Must be one of `ipv4` or `ipv6`. The default is `ipv4`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address"
                    ]
                }
            }
        },
        "yandex:index/LbNetworkLoadBalancerListenerInternalAddressSpec:LbNetworkLoadBalancerListenerInternalAddressSpec": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Internal IP address for a listener. Must belong to the subnet that is referenced in subnet_id. IP address will be allocated if it wasn't been set.\n"
                },
                "ipVersion": {
                    "type": "string",
                    "description": "IP version of the external addresses that the load balancer works with. Must be one of `ipv4` or `ipv6`. The default is `ipv4`.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet to which the internal IP address belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/LbTargetGroupTarget:LbTargetGroupTarget": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IP address of the target.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet that targets are connected to. All targets in the target group must be connected to the same subnet within a single availability zone.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "subnetId"
            ]
        },
        "yandex:index/LoadtestingAgentComputeInstance:LoadtestingAgentComputeInstance": {
            "properties": {
                "bootDisk": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstanceBootDisk:LoadtestingAgentComputeInstanceBootDisk",
                    "description": "Boot disk specifications for the instance.\n",
                    "willReplaceOnChanges": true
                },
                "computedLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The set of labels `key:value` pairs assigned to this instance. This includes user custom `labels` and predefined items created by Yandex Cloud Load Testing.\n"
                },
                "computedMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The set of metadata `key:value` pairs assigned to this instance. This includes user custom `metadata`, and predefined items created by Yandex Cloud Load Testing.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs to assign to the instance.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of metadata key/value pairs to make available from within the instance.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstanceNetworkInterface:LoadtestingAgentComputeInstanceNetworkInterface"
                    },
                    "description": "Network specifications for the instance. This can be used multiple times for adding multiple interfaces.\n",
                    "willReplaceOnChanges": true
                },
                "platformId": {
                    "type": "string",
                    "description": "The Compute platform for virtual machine.\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstanceResources:LoadtestingAgentComputeInstanceResources",
                    "description": "Compute resource specifications for the instance.\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The ID of the service account authorized for this load testing agent. Service account should have `loadtesting.generatorClient` or `loadtesting.externalAgent` role in the folder.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "bootDisk",
                "networkInterfaces",
                "resources",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootDisk",
                        "computedLabels",
                        "computedMetadata",
                        "networkInterfaces",
                        "platformId",
                        "resources",
                        "serviceAccountId",
                        "zoneId"
                    ]
                }
            }
        },
        "yandex:index/LoadtestingAgentComputeInstanceBootDisk:LoadtestingAgentComputeInstanceBootDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean",
                    "description": "Whether the disk is auto-deleted when the instance is deleted. The default value is true.\n",
                    "willReplaceOnChanges": true
                },
                "deviceName": {
                    "type": "string",
                    "description": "This value can be used to reference the device under `/dev/disk/by-id/`.\n",
                    "willReplaceOnChanges": true
                },
                "diskId": {
                    "type": "string",
                    "description": "The ID of created disk.\n"
                },
                "initializeParams": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstanceBootDiskInitializeParams:LoadtestingAgentComputeInstanceBootDiskInitializeParams",
                    "description": "Parameters for creating a disk alongside the instance.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "initializeParams"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceName",
                        "diskId",
                        "initializeParams"
                    ]
                }
            }
        },
        "yandex:index/LoadtestingAgentComputeInstanceBootDiskInitializeParams:LoadtestingAgentComputeInstanceBootDiskInitializeParams": {
            "properties": {
                "blockSize": {
                    "type": "integer",
                    "description": "Block size of the disk, specified in bytes.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of the boot disk.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A name of the boot disk.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the disk in GB. Defaults to 15 GB.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The disk type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSize",
                        "description",
                        "name"
                    ]
                }
            }
        },
        "yandex:index/LoadtestingAgentComputeInstanceNetworkInterface:LoadtestingAgentComputeInstanceNetworkInterface": {
            "properties": {
                "index": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Manual set static IP address.\n",
                    "willReplaceOnChanges": true
                },
                "ipv4": {
                    "type": "boolean",
                    "description": "Flag for allocating IPv4 address for the network interface.\n",
                    "willReplaceOnChanges": true
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Flag for allocating IPv6 address for the network interface.\n",
                    "willReplaceOnChanges": true
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "Manual set static IPv6 address.\n",
                    "willReplaceOnChanges": true
                },
                "macAddress": {
                    "type": "string"
                },
                "nat": {
                    "type": "boolean",
                    "description": "Flag for using NAT.\n",
                    "willReplaceOnChanges": true
                },
                "natIpAddress": {
                    "type": "string",
                    "description": "A public address that can be used to access the internet over NAT.\n",
                    "willReplaceOnChanges": true
                },
                "natIpVersion": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security group ids for network interface.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.\n"
                }
            },
            "type": "object",
            "required": [
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "index",
                        "ipAddress",
                        "ipv6",
                        "ipv6Address",
                        "macAddress",
                        "natIpAddress",
                        "natIpVersion",
                        "securityGroupIds",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/LoadtestingAgentComputeInstanceResources:LoadtestingAgentComputeInstanceResources": {
            "properties": {
                "coreFraction": {
                    "type": "integer",
                    "description": "If provided, specifies baseline core performance as a percent.\n",
                    "willReplaceOnChanges": true
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores for the instance. Defaults to 2 cores.\n",
                    "willReplaceOnChanges": true
                },
                "memory": {
                    "type": "number",
                    "description": "The memory size in GB. Defaults to 2 GB.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/LoadtestingAgentLogSettings:LoadtestingAgentLogSettings": {
            "properties": {
                "logGroupId": {
                    "type": "string",
                    "description": "The ID of cloud logging group to which the load testing agent sends logs.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/LockboxSecretPasswordPayloadSpecification:LockboxSecretPasswordPayloadSpecification": {
            "properties": {
                "excludedPunctuation": {
                    "type": "string",
                    "description": "String of punctuation characters to exclude from the default. Requires `include_punctuation = true`. Default is empty.\n"
                },
                "includeDigits": {
                    "type": "boolean",
                    "description": "Use digits in the generated password. Default is true.\n"
                },
                "includeLowercase": {
                    "type": "boolean",
                    "description": "Use lowercase letters in the generated password. Default is true.\n"
                },
                "includePunctuation": {
                    "type": "boolean",
                    "description": "Use punctuations (`!\"#$%\u0026'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~`) in the generated password. Default is true.\n"
                },
                "includeUppercase": {
                    "type": "boolean",
                    "description": "Use capital letters in the generated password. Default is true.\n"
                },
                "includedPunctuation": {
                    "type": "string",
                    "description": "String of specific punctuation characters to use. Requires `include_punctuation = true`. Default is empty.\n"
                },
                "length": {
                    "type": "integer",
                    "description": "Length of generated password. Default is `36`.\n"
                },
                "passwordKey": {
                    "type": "string",
                    "description": "The key with which the generated password will be placed in the secret version.\n"
                }
            },
            "type": "object",
            "required": [
                "passwordKey"
            ]
        },
        "yandex:index/LockboxSecretVersionEntry:LockboxSecretVersionEntry": {
            "properties": {
                "command": {
                    "$ref": "#/types/yandex:index/LockboxSecretVersionEntryCommand:LockboxSecretVersionEntryCommand",
                    "description": "The command that generates the text value of the entry.\n",
                    "willReplaceOnChanges": true
                },
                "key": {
                    "type": "string",
                    "description": "The key of the entry.\n",
                    "willReplaceOnChanges": true
                },
                "textValue": {
                    "type": "string",
                    "description": "The text value of the entry.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "yandex:index/LockboxSecretVersionEntryCommand:LockboxSecretVersionEntryCommand": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of arguments to be passed to the script/command.\n",
                    "willReplaceOnChanges": true
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of environment variables to set before calling the script/command.\n",
                    "willReplaceOnChanges": true
                },
                "path": {
                    "type": "string",
                    "description": "The path to the script or command to execute.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "yandex:index/MdbClickhouseClusterAccess:MdbClickhouseClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for DataLens.\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for DataTransfer.\n"
                },
                "metrika": {
                    "type": "boolean",
                    "description": "Allow access for Yandex.Metrika.\n"
                },
                "serverless": {
                    "type": "boolean",
                    "description": "Allow access for Serverless.\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allow access for Web SQL.\n"
                },
                "yandexQuery": {
                    "type": "boolean",
                    "description": "Allow access for YandexQuery.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbClickhouseClusterBackupWindowStart:MdbClickhouseClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbClickhouseClusterClickhouse:MdbClickhouseClusterClickhouse": {
            "properties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfig:MdbClickhouseClusterClickhouseConfig",
                    "description": "ClickHouse server parameters. For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/settings-list).\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseResources:MdbClickhouseClusterClickhouseResources",
                    "description": "Resources allocated to hosts of the ClickHouse subcluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "config",
                        "resources"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfig:MdbClickhouseClusterClickhouseConfig": {
            "properties": {
                "asynchronousInsertLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable asynchronous_insert_log system table.\n"
                },
                "asynchronousInsertLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that asynchronous_insert_log can grow to before old data will be removed.\n"
                },
                "asynchronousInsertLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that asynchronous_insert_log records will be retained before removal.\n"
                },
                "asynchronousMetricLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable asynchronous_metric_log system table.\n"
                },
                "asynchronousMetricLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that asynchronous_metric_log can grow to before old data will be removed.\n"
                },
                "asynchronousMetricLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that asynchronous_metric_log records will be retained before removal.\n"
                },
                "backgroundBufferFlushSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for performing flush operations for Buffer-engine tables in the background.\n"
                },
                "backgroundCommonPoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for MergeTree-engine tables in a background.\n"
                },
                "backgroundDistributedSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for executing distributed sends.\n"
                },
                "backgroundFetchesPoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for fetching data parts from another replica for MergeTree-engine tables in a background.\n"
                },
                "backgroundMergesMutationsConcurrencyRatio": {
                    "type": "integer",
                    "description": "Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently.\n"
                },
                "backgroundMessageBrokerSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for executing background operations for message streaming.\n"
                },
                "backgroundMovePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for moving data parts to another disk or volume for MergeTree-engine tables in a background.\n"
                },
                "backgroundPoolSize": {
                    "type": "integer",
                    "description": "Sets the number of threads performing background merges and mutations for MergeTree-engine tables.\n"
                },
                "backgroundSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for constantly executing some lightweight periodic operations for replicated tables, Kafka streaming, and DNS cache updates.\n"
                },
                "compressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigCompression:MdbClickhouseClusterClickhouseConfigCompression"
                    },
                    "description": "Data compression configuration.\n"
                },
                "defaultDatabase": {
                    "type": "string",
                    "description": "Default database name.\n"
                },
                "dictionariesLazyLoad": {
                    "type": "boolean",
                    "description": "Lazy loading of dictionaries. If true, then each dictionary is loaded on the first use.\n"
                },
                "geobaseEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable geobase.\n"
                },
                "geobaseUri": {
                    "type": "string",
                    "description": "Address of the archive with the user geobase in Object Storage.\n"
                },
                "graphiteRollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigGraphiteRollup:MdbClickhouseClusterClickhouseConfigGraphiteRollup"
                    },
                    "description": "Graphite rollup configuration.\n"
                },
                "jdbcBridge": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigJdbcBridge:MdbClickhouseClusterClickhouseConfigJdbcBridge",
                    "description": "JDBC bridge configuration.\n"
                },
                "kafka": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigKafka:MdbClickhouseClusterClickhouseConfigKafka",
                    "description": "Kafka connection configuration.\n"
                },
                "kafkaTopics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigKafkaTopic:MdbClickhouseClusterClickhouseConfigKafkaTopic"
                    },
                    "description": "Kafka topic connection configuration.\n"
                },
                "keepAliveTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that ClickHouse waits for incoming requests for HTTP protocol before closing the connection.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Logging level.\n"
                },
                "markCacheSize": {
                    "type": "integer",
                    "description": "Maximum size of cache for marks\n"
                },
                "maxConcurrentQueries": {
                    "type": "integer",
                    "description": "Limit on total number of concurrently executed queries.\n"
                },
                "maxConnections": {
                    "type": "integer",
                    "description": "Max server connections.\n"
                },
                "maxPartitionSizeToDrop": {
                    "type": "integer",
                    "description": "Restriction on dropping partitions.\n"
                },
                "maxTableSizeToDrop": {
                    "type": "integer",
                    "description": "Restriction on deleting tables.\n"
                },
                "mergeTree": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigMergeTree:MdbClickhouseClusterClickhouseConfigMergeTree",
                    "description": "MergeTree engine configuration.\n"
                },
                "metricLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable metric_log system table.\n"
                },
                "metricLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that metric_log can grow to before old data will be removed.\n"
                },
                "metricLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that metric_log records will be retained before removal.\n"
                },
                "opentelemetrySpanLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable opentelemetry_span_log system table.\n"
                },
                "opentelemetrySpanLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that opentelemetry_span_log can grow to before old data will be removed.\n"
                },
                "opentelemetrySpanLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that opentelemetry_span_log records will be retained before removal.\n"
                },
                "partLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that part_log can grow to before old data will be removed.\n"
                },
                "partLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that part_log records will be retained before removal.\n"
                },
                "queryCache": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigQueryCache:MdbClickhouseClusterClickhouseConfigQueryCache",
                    "description": "Query cache configuration.\n"
                },
                "queryLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that query_log can grow to before old data will be removed.\n"
                },
                "queryLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that query_log records will be retained before removal.\n"
                },
                "queryMaskingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigQueryMaskingRule:MdbClickhouseClusterClickhouseConfigQueryMaskingRule"
                    },
                    "description": "Query masking rules configuration.\n"
                },
                "queryThreadLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable query_thread_log system table.\n"
                },
                "queryThreadLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that query_thread_log can grow to before old data will be removed.\n"
                },
                "queryThreadLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that query_thread_log records will be retained before removal.\n"
                },
                "queryViewsLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable query_views_log system table.\n"
                },
                "queryViewsLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that query_views_log can grow to before old data will be removed.\n"
                },
                "queryViewsLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that query_views_log records will be retained before removal.\n"
                },
                "rabbitmq": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigRabbitmq:MdbClickhouseClusterClickhouseConfigRabbitmq",
                    "description": "RabbitMQ connection configuration.\n"
                },
                "sessionLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable session_log system table.\n"
                },
                "sessionLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that session_log can grow to before old data will be removed.\n"
                },
                "sessionLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that session_log records will be retained before removal.\n"
                },
                "textLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable text_log system table.\n"
                },
                "textLogLevel": {
                    "type": "string",
                    "description": "Logging level for text_log system table.\n"
                },
                "textLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that text_log can grow to before old data will be removed.\n"
                },
                "textLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that text_log records will be retained before removal.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The server's time zone.\n"
                },
                "totalMemoryProfilerStep": {
                    "type": "integer",
                    "description": "Whenever server memory usage becomes larger than every next step in number of bytes the memory profiler will collect the allocating stack trace.\n"
                },
                "traceLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable trace_log system table.\n"
                },
                "traceLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that trace_log can grow to before old data will be removed.\n"
                },
                "traceLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that trace_log records will be retained before removal.\n"
                },
                "uncompressedCacheSize": {
                    "type": "integer",
                    "description": "Cache size (in bytes) for uncompressed data used by table engines from the MergeTree family. Zero means disabled.\n"
                },
                "zookeeperLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable zookeeper_log system table.\n"
                },
                "zookeeperLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that zookeeper_log can grow to before old data will be removed.\n"
                },
                "zookeeperLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that zookeeper_log records will be retained before removal.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "asynchronousInsertLogEnabled",
                        "asynchronousInsertLogRetentionSize",
                        "asynchronousInsertLogRetentionTime",
                        "asynchronousMetricLogEnabled",
                        "asynchronousMetricLogRetentionSize",
                        "asynchronousMetricLogRetentionTime",
                        "backgroundBufferFlushSchedulePoolSize",
                        "backgroundCommonPoolSize",
                        "backgroundDistributedSchedulePoolSize",
                        "backgroundFetchesPoolSize",
                        "backgroundMergesMutationsConcurrencyRatio",
                        "backgroundMessageBrokerSchedulePoolSize",
                        "backgroundMovePoolSize",
                        "backgroundPoolSize",
                        "backgroundSchedulePoolSize",
                        "defaultDatabase",
                        "dictionariesLazyLoad",
                        "geobaseEnabled",
                        "geobaseUri",
                        "jdbcBridge",
                        "kafka",
                        "keepAliveTimeout",
                        "logLevel",
                        "markCacheSize",
                        "maxConcurrentQueries",
                        "maxConnections",
                        "maxPartitionSizeToDrop",
                        "maxTableSizeToDrop",
                        "mergeTree",
                        "metricLogEnabled",
                        "metricLogRetentionSize",
                        "metricLogRetentionTime",
                        "opentelemetrySpanLogEnabled",
                        "opentelemetrySpanLogRetentionSize",
                        "opentelemetrySpanLogRetentionTime",
                        "partLogRetentionSize",
                        "partLogRetentionTime",
                        "queryCache",
                        "queryLogRetentionSize",
                        "queryLogRetentionTime",
                        "queryThreadLogEnabled",
                        "queryThreadLogRetentionSize",
                        "queryThreadLogRetentionTime",
                        "queryViewsLogEnabled",
                        "queryViewsLogRetentionSize",
                        "queryViewsLogRetentionTime",
                        "rabbitmq",
                        "sessionLogEnabled",
                        "sessionLogRetentionSize",
                        "sessionLogRetentionTime",
                        "textLogEnabled",
                        "textLogLevel",
                        "textLogRetentionSize",
                        "textLogRetentionTime",
                        "timezone",
                        "totalMemoryProfilerStep",
                        "traceLogEnabled",
                        "traceLogRetentionSize",
                        "traceLogRetentionTime",
                        "uncompressedCacheSize",
                        "zookeeperLogEnabled",
                        "zookeeperLogRetentionSize",
                        "zookeeperLogRetentionTime"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigCompression:MdbClickhouseClusterClickhouseConfigCompression": {
            "properties": {
                "level": {
                    "type": "integer",
                    "description": "Compression level for `ZSTD` method.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Compression method. Two methods are available: `LZ4` and `zstd`.\n"
                },
                "minPartSize": {
                    "type": "integer",
                    "description": "Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.\n"
                },
                "minPartSizeRatio": {
                    "type": "number",
                    "description": "Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.\n"
                }
            },
            "type": "object",
            "required": [
                "method",
                "minPartSize",
                "minPartSizeRatio"
            ]
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigGraphiteRollup:MdbClickhouseClusterClickhouseConfigGraphiteRollup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Graphite rollup configuration name.\n"
                },
                "pathColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the metric name (Graphite sensor). Default value: Path.\n"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern:MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern"
                    },
                    "description": "Set of thinning rules.\n"
                },
                "timeColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the time of measuring the metric. Default value: Time.\n"
                },
                "valueColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the value of the metric at the time set in `time_column_name`. Default value: Value.\n"
                },
                "versionColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the version of the metric. Default value: Timestamp.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "pathColumnName",
                        "timeColumnName",
                        "valueColumnName",
                        "versionColumnName"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern:MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern": {
            "properties": {
                "function": {
                    "type": "string",
                    "description": "Aggregation function name.\n"
                },
                "regexp": {
                    "type": "string",
                    "description": "Regular expression that the metric name must match.\n"
                },
                "retentions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention:MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention"
                    },
                    "description": "Retain parameters.\n"
                }
            },
            "type": "object",
            "required": [
                "function"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "function",
                        "regexp"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention:MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention": {
            "properties": {
                "age": {
                    "type": "integer",
                    "description": "Minimum data age in seconds.\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "Accuracy of determining the age of the data in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "age",
                "precision"
            ]
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigJdbcBridge:MdbClickhouseClusterClickhouseConfigJdbcBridge": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of jdbc bridge.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of jdbc bridge. Default value: 9019.\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigKafka:MdbClickhouseClusterClickhouseConfigKafka": {
            "properties": {
                "autoOffsetReset": {
                    "type": "string",
                    "description": "Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking 'message-\u003eerr'.\n"
                },
                "debug": {
                    "type": "string",
                    "description": "A comma-separated list of debug contexts to enable.\n"
                },
                "enableSslCertificateVerification": {
                    "type": "boolean",
                    "description": "Enable verification of SSL certificates.\n"
                },
                "maxPollIntervalMs": {
                    "type": "integer",
                    "description": "Maximum allowed time between calls to consume messages (e.g., `rd_kafka_consumer_poll()` for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "SASL mechanism used in kafka authentication.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "User password on kafka server.\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username on kafka server.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol used to connect to kafka server.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autoOffsetReset",
                        "debug",
                        "enableSslCertificateVerification",
                        "maxPollIntervalMs",
                        "saslMechanism",
                        "saslPassword",
                        "saslUsername",
                        "securityProtocol",
                        "sessionTimeoutMs"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigKafkaTopic:MdbClickhouseClusterClickhouseConfigKafkaTopic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Kafka topic name.\n"
                },
                "settings": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouseConfigKafkaTopicSettings:MdbClickhouseClusterClickhouseConfigKafkaTopicSettings",
                    "description": "Kafka connection settings.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigKafkaTopicSettings:MdbClickhouseClusterClickhouseConfigKafkaTopicSettings": {
            "properties": {
                "autoOffsetReset": {
                    "type": "string",
                    "description": "Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking 'message-\u003eerr'.\n"
                },
                "debug": {
                    "type": "string",
                    "description": "A comma-separated list of debug contexts to enable.\n"
                },
                "enableSslCertificateVerification": {
                    "type": "boolean",
                    "description": "Enable verification of SSL certificates.\n"
                },
                "maxPollIntervalMs": {
                    "type": "integer",
                    "description": "Maximum allowed time between calls to consume messages (e.g., `rd_kafka_consumer_poll()` for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "SASL mechanism used in kafka authentication.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "User password on kafka server.\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username on kafka server.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol used to connect to kafka server.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autoOffsetReset",
                        "debug",
                        "enableSslCertificateVerification",
                        "maxPollIntervalMs",
                        "sessionTimeoutMs"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigMergeTree:MdbClickhouseClusterClickhouseConfigMergeTree": {
            "properties": {
                "allowRemoteFsZeroCopyReplication": {
                    "type": "boolean",
                    "description": "When this setting has a value greater than zero only a single replica starts the merge immediately if merged part on shared storage and allow_remote_fs_zero_copy_replication is enabled.\n"
                },
                "checkSampleColumnIsCorrect": {
                    "type": "boolean",
                    "description": "Enables the check at table creation, that the data type of a column for sampling or sampling expression is correct. The data type must be one of unsigned integer types: UInt8, UInt16, UInt32, UInt64. Default value: true.\n"
                },
                "cleanupDelayPeriod": {
                    "type": "integer",
                    "description": "Minimum period to clean old queue logs, blocks hashes and parts.\n"
                },
                "inactivePartsToDelayInsert": {
                    "type": "integer",
                    "description": "If the number of inactive parts in a single partition in the table at least that many the inactive_parts_to_delay_insert value, an INSERT artificially slows down. It is useful when a server fails to clean up parts quickly enough.\n"
                },
                "inactivePartsToThrowInsert": {
                    "type": "integer",
                    "description": "If the number of inactive parts in a single partition more than the inactive_parts_to_throw_insert value, INSERT is interrupted with the `Too many inactive parts (N). Parts cleaning are processing significantly slower than inserts` exception.\n"
                },
                "maxAvgPartSizeForTooManyParts": {
                    "type": "integer",
                    "description": "The `too many parts` check according to `parts_to_delay_insert` and `parts_to_throw_insert` will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.\n"
                },
                "maxBytesToMergeAtMaxSpaceInPool": {
                    "type": "integer",
                    "description": "The maximum total parts size (in bytes) to be merged into one part, if there are enough resources available. max_bytes_to_merge_at_max_space_in_pool -- roughly corresponds to the maximum possible part size created by an automatic background merge.\n"
                },
                "maxBytesToMergeAtMinSpaceInPool": {
                    "type": "integer",
                    "description": "Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.\n"
                },
                "maxCleanupDelayPeriod": {
                    "type": "integer",
                    "description": "Maximum period to clean old queue logs, blocks hashes and parts. Default value: 300 seconds.\n"
                },
                "maxMergeSelectingSleepMs": {
                    "type": "integer",
                    "description": "Maximum sleep time for merge selecting, a lower setting will trigger selecting tasks in background_schedule_pool frequently which result in large amount of requests to zookeeper in large-scale clusters. Default value: 60000 milliseconds (60 seconds).\n"
                },
                "maxNumberOfMergesWithTtlInPool": {
                    "type": "integer",
                    "description": "When there is more than specified number of merges with TTL entries in pool, do not assign new merge with TTL.\n"
                },
                "maxPartsInTotal": {
                    "type": "integer",
                    "description": "Maximum number of parts in all partitions.\n"
                },
                "maxReplicatedMergesInQueue": {
                    "type": "integer",
                    "description": "Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.\n"
                },
                "mergeMaxBlockSize": {
                    "type": "integer",
                    "description": "The number of rows that are read from the merged parts into memory. Default value: 8192.\n"
                },
                "mergeSelectingSleepMs": {
                    "type": "integer",
                    "description": "Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.\n"
                },
                "mergeWithRecompressionTtlTimeout": {
                    "type": "integer",
                    "description": "Minimum delay in seconds before repeating a merge with recompression TTL. Default value: 14400 seconds (4 hours).\n"
                },
                "mergeWithTtlTimeout": {
                    "type": "integer",
                    "description": "Minimum delay in seconds before repeating a merge with delete TTL. Default value: 14400 seconds (4 hours).\n"
                },
                "minAgeToForceMergeOnPartitionOnly": {
                    "type": "boolean",
                    "description": "Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.\n"
                },
                "minAgeToForceMergeSeconds": {
                    "type": "integer",
                    "description": "Merge parts if every part in the range is older than the value of `min_age_to_force_merge_seconds`.\n"
                },
                "minBytesForWidePart": {
                    "type": "integer",
                    "description": "Minimum number of bytes in a data part that can be stored in Wide format. You can set one, both or none of these settings.\n"
                },
                "minRowsForWidePart": {
                    "type": "integer",
                    "description": "Minimum number of rows in a data part that can be stored in Wide format. You can set one, both or none of these settings.\n"
                },
                "numberOfFreeEntriesInPoolToExecuteMutation": {
                    "type": "integer",
                    "description": "When there is less than specified number of free entries in pool, do not execute part mutations. This is to leave free threads for regular merges and avoid `Too many parts`. Default value: 20.\n"
                },
                "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge": {
                    "type": "integer",
                    "description": "Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.\n"
                },
                "partsToDelayInsert": {
                    "type": "integer",
                    "description": "Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table\n"
                },
                "partsToThrowInsert": {
                    "type": "integer",
                    "description": "Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.\n"
                },
                "replicatedDeduplicationWindow": {
                    "type": "integer",
                    "description": "Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).\n"
                },
                "replicatedDeduplicationWindowSeconds": {
                    "type": "integer",
                    "description": "Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).\n"
                },
                "ttlOnlyDropParts": {
                    "type": "boolean",
                    "description": "Enables zero-copy replication when a replica is located on a remote filesystem.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowRemoteFsZeroCopyReplication",
                        "checkSampleColumnIsCorrect",
                        "cleanupDelayPeriod",
                        "inactivePartsToDelayInsert",
                        "inactivePartsToThrowInsert",
                        "maxAvgPartSizeForTooManyParts",
                        "maxBytesToMergeAtMaxSpaceInPool",
                        "maxBytesToMergeAtMinSpaceInPool",
                        "maxCleanupDelayPeriod",
                        "maxMergeSelectingSleepMs",
                        "maxNumberOfMergesWithTtlInPool",
                        "maxPartsInTotal",
                        "maxReplicatedMergesInQueue",
                        "mergeMaxBlockSize",
                        "mergeSelectingSleepMs",
                        "mergeWithRecompressionTtlTimeout",
                        "mergeWithTtlTimeout",
                        "minAgeToForceMergeOnPartitionOnly",
                        "minAgeToForceMergeSeconds",
                        "minBytesForWidePart",
                        "minRowsForWidePart",
                        "numberOfFreeEntriesInPoolToExecuteMutation",
                        "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge",
                        "partsToDelayInsert",
                        "partsToThrowInsert",
                        "replicatedDeduplicationWindow",
                        "replicatedDeduplicationWindowSeconds",
                        "ttlOnlyDropParts"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigQueryCache:MdbClickhouseClusterClickhouseConfigQueryCache": {
            "properties": {
                "maxEntries": {
                    "type": "integer",
                    "description": "The maximum number of SELECT query results stored in the cache. Default value: 1024.\n"
                },
                "maxEntrySizeInBytes": {
                    "type": "integer",
                    "description": "The maximum size in bytes SELECT query results may have to be saved in the cache. Default value: 1048576 (1 MiB).\n"
                },
                "maxEntrySizeInRows": {
                    "type": "integer",
                    "description": "The maximum number of rows SELECT query results may have to be saved in the cache. Default value: 30000000 (30 mil).\n"
                },
                "maxSizeInBytes": {
                    "type": "integer",
                    "description": "The maximum cache size in bytes. 0 means the query cache is disabled. Default value: 1073741824 (1 GiB).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxEntries",
                        "maxEntrySizeInBytes",
                        "maxEntrySizeInRows",
                        "maxSizeInBytes"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigQueryMaskingRule:MdbClickhouseClusterClickhouseConfigQueryMaskingRule": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name for the rule.\n"
                },
                "regexp": {
                    "type": "string",
                    "description": "RE2 compatible regular expression.\n"
                },
                "replace": {
                    "type": "string",
                    "description": "Substitution string for sensitive data. Default value: six asterisks.\n"
                }
            },
            "type": "object",
            "required": [
                "regexp"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "regexp",
                        "replace"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseConfigRabbitmq:MdbClickhouseClusterClickhouseConfigRabbitmq": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "RabbitMQ user password.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "RabbitMQ username.\n"
                },
                "vhost": {
                    "type": "string",
                    "description": "RabbitMQ vhost. Default: `\\`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "password",
                        "username",
                        "vhost"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterClickhouseResources:MdbClickhouseClusterClickhouseResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ClickHouse host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ClickHouse hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ClickHouse host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskSize",
                        "diskTypeId",
                        "resourcePresetId"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterCloudStorage:MdbClickhouseClusterCloudStorage": {
            "properties": {
                "dataCacheEnabled": {
                    "type": "boolean",
                    "description": "Enables temporary storage in the cluster repository of data requested from the object repository.\n"
                },
                "dataCacheMaxSize": {
                    "type": "integer",
                    "description": "Defines the maximum amount of memory (in bytes) allocated in the cluster storage for temporary storage of data requested from the object storage.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.\n"
                },
                "moveFactor": {
                    "type": "number",
                    "description": "Sets the minimum free space ratio in the cluster storage. If the free space is lower than this value, the data is transferred to Yandex Object Storage. Acceptable values are 0 to 1, inclusive.\n"
                },
                "preferNotToMerge": {
                    "type": "boolean",
                    "description": "Disables merging of data parts in `Yandex Object Storage`.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataCacheEnabled",
                        "dataCacheMaxSize",
                        "enabled",
                        "moveFactor",
                        "preferNotToMerge"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterDatabase:MdbClickhouseClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbClickhouseClusterFormatSchema:MdbClickhouseClusterFormatSchema": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the format schema.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the format schema.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Format schema file URL. You can only use format schemas stored in Yandex Object Storage.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "uri"
            ]
        },
        "yandex:index/MdbClickhouseClusterHost:MdbClickhouseClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard to which the host belongs.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the host to be deployed. Can be either `CLICKHOUSE` or `ZOOKEEPER`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "shardName",
                        "subnetId",
                        "type",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterMaintenanceWindow:MdbClickhouseClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbClickhouseClusterMlModel:MdbClickhouseClusterMlModel": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the ml model.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the model.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Model file URL. You can only use models stored in Yandex Object Storage.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "uri"
            ]
        },
        "yandex:index/MdbClickhouseClusterShard:MdbClickhouseClusterShard": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of shard.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterShardResources:MdbClickhouseClusterShardResources",
                    "description": "Resources allocated to host of the shard. The resources specified for the shard takes precedence over the resources specified for the cluster.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of shard.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "resources",
                        "weight"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterShardGroup:MdbClickhouseClusterShardGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the shard group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the shard group, used as cluster name in Distributed tables.\n"
                },
                "shardNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of shards names that belong to the shard group.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "shardNames"
            ]
        },
        "yandex:index/MdbClickhouseClusterShardResources:MdbClickhouseClusterShardResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ClickHouse host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ClickHouse hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ClickHouse host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskSize",
                        "diskTypeId",
                        "resourcePresetId"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterUser:MdbClickhouseClusterUser": {
            "properties": {
                "connectionManager": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Connection Manager connection configuration. Filled in by the server automatically.\n"
                },
                "generatePassword": {
                    "type": "boolean",
                    "description": "Generate password using Connection Manager. Allowed values: `true` or `false`. It's used only during user creation and is ignored during updating.\n\n\u003e **Must specify either password or generate_password**.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterUserPermission:MdbClickhouseClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                },
                "quotas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterUserQuota:MdbClickhouseClusterUserQuota"
                    },
                    "description": "Set of user quotas.\n"
                },
                "settings": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterUserSettings:MdbClickhouseClusterUserSettings",
                    "description": "Custom settings for user.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectionManager",
                        "name",
                        "permissions",
                        "quotas",
                        "settings"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterUserPermission:MdbClickhouseClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MdbClickhouseClusterUserQuota:MdbClickhouseClusterUserQuota": {
            "properties": {
                "errors": {
                    "type": "integer",
                    "description": "The number of queries that threw exception.\n"
                },
                "executionTime": {
                    "type": "integer",
                    "description": "The total query execution time, in milliseconds (wall time).\n"
                },
                "intervalDuration": {
                    "type": "integer",
                    "description": "Duration of interval for quota in milliseconds.\n"
                },
                "queries": {
                    "type": "integer",
                    "description": "The total number of queries.\n"
                },
                "readRows": {
                    "type": "integer",
                    "description": "The total number of source rows read from tables for running the query, on all remote servers.\n"
                },
                "resultRows": {
                    "type": "integer",
                    "description": "The total number of rows given as the result.\n"
                }
            },
            "type": "object",
            "required": [
                "intervalDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "errors",
                        "executionTime",
                        "intervalDuration",
                        "queries",
                        "readRows",
                        "resultRows"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterUserSettings:MdbClickhouseClusterUserSettings": {
            "properties": {
                "addHttpCorsHeader": {
                    "type": "boolean",
                    "description": "Include CORS headers in HTTP responses.\n"
                },
                "allowDdl": {
                    "type": "boolean",
                    "description": "Allows or denies DDL queries.\n"
                },
                "allowIntrospectionFunctions": {
                    "type": "boolean",
                    "description": "Enables introspections functions for query profiling.\n"
                },
                "allowSuspiciousLowCardinalityTypes": {
                    "type": "boolean",
                    "description": "Allows specifying LowCardinality modifier for types of small fixed size (8 or less) in CREATE TABLE statements. Enabling this may increase merge times and memory consumption.\n"
                },
                "anyJoinDistinctRightTableKeys": {
                    "type": "boolean",
                    "description": "Enables legacy ClickHouse server behavior in ANY INNER|LEFT JOIN operations.\n"
                },
                "asyncInsert": {
                    "type": "boolean",
                    "description": "Enables asynchronous inserts. Disabled by default.\n"
                },
                "asyncInsertBusyTimeout": {
                    "type": "integer",
                    "description": "The maximum timeout in milliseconds since the first INSERT query before inserting collected data. If the parameter is set to 0, the timeout is disabled. Default value: 200.\n"
                },
                "asyncInsertMaxDataSize": {
                    "type": "integer",
                    "description": "The maximum size of the unparsed data in bytes collected per query before being inserted. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 100000.\n"
                },
                "asyncInsertStaleTimeout": {
                    "type": "integer",
                    "description": "The maximum timeout in milliseconds since the last INSERT query before dumping collected data. If enabled, the settings prolongs the async_insert_busy_timeout with every INSERT query as long as async_insert_max_data_size is not exceeded.\n"
                },
                "asyncInsertThreads": {
                    "type": "integer",
                    "description": "The maximum number of threads for background data parsing and insertion. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 16.\n"
                },
                "cancelHttpReadonlyQueriesOnClientClose": {
                    "type": "boolean",
                    "description": "Cancels HTTP read-only queries (e.g. SELECT) when a client closes the connection without waiting for the response. Default value: false.\n"
                },
                "compile": {
                    "type": "boolean",
                    "description": "Enable compilation of queries.\n"
                },
                "compileExpressions": {
                    "type": "boolean",
                    "description": "Turn on expression compilation.\n"
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "Connect timeout in milliseconds on the socket used for communicating with the client.\n"
                },
                "connectTimeoutWithFailover": {
                    "type": "integer",
                    "description": "The timeout in milliseconds for connecting to a remote server for a Distributed table engine, if the ‘shard’ and ‘replica’ sections are used in the cluster definition. If unsuccessful, several attempts are made to connect to various replicas. Default value: 50.\n"
                },
                "countDistinctImplementation": {
                    "type": "string",
                    "description": "Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.\n"
                },
                "dateTimeInputFormat": {
                    "type": "string",
                    "description": "Allows choosing a parser of the text representation of date and time, one of: `best_effort`, `basic`, `best_effort_us`. Default value: `basic`. Cloud default value: `best_effort`.\n"
                },
                "dateTimeOutputFormat": {
                    "type": "string",
                    "description": "Allows choosing different output formats of the text representation of date and time, one of: `simple`, `iso`, `unix_timestamp`. Default value: `simple`.\n"
                },
                "deduplicateBlocksInDependentMaterializedViews": {
                    "type": "boolean",
                    "description": "Enables or disables the deduplication check for materialized views that receive data from `Replicated` tables.\n"
                },
                "distinctOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow when using DISTINCT. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "distributedAggregationMemoryEfficient": {
                    "type": "boolean",
                    "description": "Determine the behavior of distributed subqueries.\n"
                },
                "distributedDdlTaskTimeout": {
                    "type": "integer",
                    "description": "Timeout for DDL queries, in milliseconds.\n"
                },
                "distributedProductMode": {
                    "type": "string",
                    "description": "Changes the behavior of distributed subqueries.\n"
                },
                "emptyResultForAggregationByEmptySet": {
                    "type": "boolean",
                    "description": "Allows to return empty result.\n"
                },
                "enableHttpCompression": {
                    "type": "boolean",
                    "description": "Enables or disables data compression in the response to an HTTP request.\n"
                },
                "fallbackToStaleReplicasForDistributedQueries": {
                    "type": "boolean",
                    "description": "Forces a query to an out-of-date replica if updated data is not available.\n"
                },
                "flattenNested": {
                    "type": "boolean",
                    "description": "Sets the data format of a nested columns.\n"
                },
                "forceIndexByDate": {
                    "type": "boolean",
                    "description": "Disables query execution if the index can’t be used by date.\n"
                },
                "forcePrimaryKey": {
                    "type": "boolean",
                    "description": "Disables query execution if indexing by the primary key is not possible.\n"
                },
                "formatRegexp": {
                    "type": "string",
                    "description": "Regular expression (for Regexp format).\n"
                },
                "formatRegexpSkipUnmatched": {
                    "type": "boolean",
                    "description": "Skip lines unmatched by regular expression.\n"
                },
                "groupByOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow while GROUP BY operation. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n* `any` - perform approximate GROUP BY operation by continuing aggregation for the keys that got into the set, but don’t add new keys to the set.\n"
                },
                "groupByTwoLevelThreshold": {
                    "type": "integer",
                    "description": "Sets the threshold of the number of keys, after that the two-level aggregation should be used.\n"
                },
                "groupByTwoLevelThresholdBytes": {
                    "type": "integer",
                    "description": "Sets the threshold of the number of bytes, after that the two-level aggregation should be used.\n"
                },
                "hedgedConnectionTimeoutMs": {
                    "type": "integer",
                    "description": "Connection timeout for establishing connection with replica for Hedged requests. Default value: 50 milliseconds.\n"
                },
                "httpConnectionTimeout": {
                    "type": "integer",
                    "description": "Timeout for HTTP connection in milliseconds.\n"
                },
                "httpHeadersProgressInterval": {
                    "type": "integer",
                    "description": "Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.\n"
                },
                "httpReceiveTimeout": {
                    "type": "integer",
                    "description": "Timeout for HTTP connection in milliseconds.\n"
                },
                "httpSendTimeout": {
                    "type": "integer",
                    "description": "Timeout for HTTP connection in milliseconds.\n"
                },
                "idleConnectionTimeout": {
                    "type": "integer",
                    "description": "Timeout to close idle TCP connections after specified number of seconds. Default value: 3600 seconds.\n"
                },
                "inputFormatDefaultsForOmittedFields": {
                    "type": "boolean",
                    "description": "When performing INSERT queries, replace omitted input column values with default values of the respective columns.\n"
                },
                "inputFormatImportNestedJson": {
                    "type": "boolean",
                    "description": "Enables or disables the insertion of JSON data with nested objects.\n"
                },
                "inputFormatNullAsDefault": {
                    "type": "boolean",
                    "description": "Enables or disables the initialization of NULL fields with default values, if data type of these fields is not nullable.\n"
                },
                "inputFormatParallelParsing": {
                    "type": "boolean",
                    "description": "Enables or disables order-preserving parallel parsing of data formats. Supported only for TSV, TKSV, CSV and JSONEachRow formats.\n"
                },
                "inputFormatValuesInterpretExpressions": {
                    "type": "boolean",
                    "description": "Enables or disables the full SQL parser if the fast stream parser can’t parse the data.\n"
                },
                "inputFormatWithNamesUseHeader": {
                    "type": "boolean",
                    "description": "Enables or disables checking the column order when inserting data.\n"
                },
                "insertKeeperMaxRetries": {
                    "type": "integer",
                    "description": "The setting sets the maximum number of retries for ClickHouse Keeper (or ZooKeeper) requests during insert into replicated MergeTree. Only Keeper requests which failed due to network error, Keeper session timeout, or request timeout are considered for retries.\n"
                },
                "insertNullAsDefault": {
                    "type": "boolean",
                    "description": "Enables the insertion of default values instead of NULL into columns with not nullable data type. Default value: true.\n"
                },
                "insertQuorum": {
                    "type": "integer",
                    "description": "Enables the quorum writes.\n"
                },
                "insertQuorumParallel": {
                    "type": "boolean",
                    "description": "Enables or disables parallelism for quorum INSERT queries.\n"
                },
                "insertQuorumTimeout": {
                    "type": "integer",
                    "description": "Write to a quorum timeout in milliseconds.\n"
                },
                "joinAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which JOIN algorithm is used. Possible values:\n* `hash` - hash join algorithm is used. The most generic implementation that supports all combinations of kind and strictness and multiple join keys that are combined with OR in the JOIN ON section.\n* `parallel_hash` - a variation of hash join that splits the data into buckets and builds several hash tables instead of one concurrently to speed up this process.\n* `partial_merge` - a variation of the sort-merge algorithm, where only the right table is fully sorted.\n* `direct` - this algorithm can be applied when the storage for the right table supports key-value requests.\n* `auto` - when set to auto, hash join is tried first, and the algorithm is switched on the fly to another algorithm if the memory limit is violated.\n* `full_sorting_merge` - sort-merge algorithm with full sorting joined tables before joining.\n* `prefer_partial_merge` - clickHouse always tries to use partial_merge join if possible, otherwise, it uses hash. Deprecated, same as partial_merge,hash.\n"
                },
                "joinOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow in JOIN. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "joinUseNulls": {
                    "type": "boolean",
                    "description": "Sets the type of JOIN behavior. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.\n"
                },
                "joinedSubqueryRequiresAlias": {
                    "type": "boolean",
                    "description": "Require aliases for subselects and table functions in FROM that more than one table is present.\n"
                },
                "loadBalancing": {
                    "type": "string",
                    "description": "Specifies the algorithm of replicas selection that is used for distributed query processing, one of: random, nearest_hostname, in_order, first_or_random, round_robin. Default value: random.\n"
                },
                "localFilesystemReadMethod": {
                    "type": "string",
                    "description": "Method of reading data from local filesystem. Possible values:\n* `read` - abort query execution, return an error.\n* `pread` - abort query execution, return an error.\n* `pread_threadpool` - stop query execution, return partial result. If the parameter is set to 0 (default), no hops is allowed.\n"
                },
                "logQueryThreads": {
                    "type": "boolean",
                    "description": "Setting up query threads logging. Query threads log into the system.query_thread_log table. This setting has effect only when log_queries is true. Queries’ threads run by ClickHouse with this setup are logged according to the rules in the query_thread_log server configuration parameter. Default value: `true`.\n"
                },
                "lowCardinalityAllowInNativeFormat": {
                    "type": "boolean",
                    "description": "Allows or restricts using the LowCardinality data type with the Native format.\n"
                },
                "maxAstDepth": {
                    "type": "integer",
                    "description": "Maximum abstract syntax tree depth.\n"
                },
                "maxAstElements": {
                    "type": "integer",
                    "description": "Maximum abstract syntax tree elements.\n"
                },
                "maxBlockSize": {
                    "type": "integer",
                    "description": "A recommendation for what size of the block (in a count of rows) to load from tables.\n"
                },
                "maxBytesBeforeExternalGroupBy": {
                    "type": "integer",
                    "description": "Limit in bytes for using memory for GROUP BY before using swap on disk.\n"
                },
                "maxBytesBeforeExternalSort": {
                    "type": "integer",
                    "description": "This setting is equivalent of the max_bytes_before_external_group_by setting, except for it is for sort operation (ORDER BY), not aggregation.\n"
                },
                "maxBytesInDistinct": {
                    "type": "integer",
                    "description": "Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.\n"
                },
                "maxBytesInJoin": {
                    "type": "integer",
                    "description": "Limit on maximum size of the hash table for JOIN, in bytes.\n"
                },
                "maxBytesInSet": {
                    "type": "integer",
                    "description": "Limit on the number of bytes in the set resulting from the execution of the IN section.\n"
                },
                "maxBytesToRead": {
                    "type": "integer",
                    "description": "Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.\n"
                },
                "maxBytesToSort": {
                    "type": "integer",
                    "description": "Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.\n"
                },
                "maxBytesToTransfer": {
                    "type": "integer",
                    "description": "Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.\n"
                },
                "maxColumnsToRead": {
                    "type": "integer",
                    "description": "Limits the maximum number of columns that can be read from a table in a single query.\n"
                },
                "maxConcurrentQueriesForUser": {
                    "type": "integer",
                    "description": "The maximum number of concurrent requests per user. Default value: 0 (no limit).\n"
                },
                "maxExecutionTime": {
                    "type": "integer",
                    "description": "Limits the maximum query execution time in milliseconds.\n"
                },
                "maxExpandedAstElements": {
                    "type": "integer",
                    "description": "Maximum abstract syntax tree depth after after expansion of aliases.\n"
                },
                "maxFinalThreads": {
                    "type": "integer",
                    "description": "Sets the maximum number of parallel threads for the SELECT query data read phase with the FINAL modifier.\n"
                },
                "maxHttpGetRedirects": {
                    "type": "integer",
                    "description": "Limits the maximum number of HTTP GET redirect hops for URL-engine tables.\n"
                },
                "maxInsertBlockSize": {
                    "type": "integer",
                    "description": "The size of blocks (in a count of rows) to form for insertion into a table.\n"
                },
                "maxInsertThreads": {
                    "type": "integer",
                    "description": "The maximum number of threads to execute the INSERT SELECT query. Default value: 0.\n"
                },
                "maxMemoryUsage": {
                    "type": "integer",
                    "description": "Limits the maximum memory usage (in bytes) for processing queries on a single server.\n"
                },
                "maxMemoryUsageForUser": {
                    "type": "integer",
                    "description": "Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.\n"
                },
                "maxNetworkBandwidth": {
                    "type": "integer",
                    "description": "Limits the speed of the data exchange over the network in bytes per second.\n"
                },
                "maxNetworkBandwidthForUser": {
                    "type": "integer",
                    "description": "Limits the speed of the data exchange over the network in bytes per second.\n"
                },
                "maxParserDepth": {
                    "type": "integer",
                    "description": "Limits maximum recursion depth in the recursive descent parser. Allows controlling the stack size. Zero means unlimited.\n"
                },
                "maxQuerySize": {
                    "type": "integer",
                    "description": "The maximum part of a query that can be taken to RAM for parsing with the SQL parser.\n"
                },
                "maxReadBufferSize": {
                    "type": "integer",
                    "description": "The maximum size of the buffer to read from the filesystem.\n"
                },
                "maxReplicaDelayForDistributedQueries": {
                    "type": "integer",
                    "description": "Disables lagging replicas for distributed queries.\n"
                },
                "maxResultBytes": {
                    "type": "integer",
                    "description": "Limits the number of bytes in the result.\n"
                },
                "maxResultRows": {
                    "type": "integer",
                    "description": "Limits the number of rows in the result.\n"
                },
                "maxRowsInDistinct": {
                    "type": "integer",
                    "description": "Limits the maximum number of different rows when using DISTINCT.\n"
                },
                "maxRowsInJoin": {
                    "type": "integer",
                    "description": "Limit on maximum size of the hash table for JOIN, in rows.\n"
                },
                "maxRowsInSet": {
                    "type": "integer",
                    "description": "Limit on the number of rows in the set resulting from the execution of the IN section.\n"
                },
                "maxRowsToGroupBy": {
                    "type": "integer",
                    "description": "Limits the maximum number of unique keys received from aggregation function.\n"
                },
                "maxRowsToRead": {
                    "type": "integer",
                    "description": "Limits the maximum number of rows that can be read from a table when running a query.\n"
                },
                "maxRowsToSort": {
                    "type": "integer",
                    "description": "Limits the maximum number of rows that can be read from a table for sorting.\n"
                },
                "maxRowsToTransfer": {
                    "type": "integer",
                    "description": "Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.\n"
                },
                "maxTemporaryColumns": {
                    "type": "integer",
                    "description": "Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.\n"
                },
                "maxTemporaryDataOnDiskSizeForQuery": {
                    "type": "integer",
                    "description": "The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running queries. Zero means unlimited.\n"
                },
                "maxTemporaryDataOnDiskSizeForUser": {
                    "type": "integer",
                    "description": "The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running user queries. Zero means unlimited.\n"
                },
                "maxTemporaryNonConstColumns": {
                    "type": "integer",
                    "description": "Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.\n"
                },
                "maxThreads": {
                    "type": "integer",
                    "description": "The maximum number of query processing threads, excluding threads for retrieving data from remote servers.\n"
                },
                "memoryOvercommitRatioDenominator": {
                    "type": "integer",
                    "description": "It represents soft memory limit in case when hard limit is reached on user level. This value is used to compute overcommit ratio for the query. Zero means skip the query.\n"
                },
                "memoryOvercommitRatioDenominatorForUser": {
                    "type": "integer",
                    "description": "It represents soft memory limit in case when hard limit is reached on global level. This value is used to compute overcommit ratio for the query. Zero means skip the query.\n"
                },
                "memoryProfilerSampleProbability": {
                    "type": "number",
                    "description": "Collect random allocations and deallocations and write them into system.trace_log with 'MemorySample' trace_type. The probability is for every alloc/free regardless to the size of the allocation. Possible values: from 0 to 1. Default: 0.\n"
                },
                "memoryProfilerStep": {
                    "type": "integer",
                    "description": "Memory profiler step (in bytes). If the next query step requires more memory than this parameter specifies, the memory profiler collects the allocating stack trace. Values lower than a few megabytes slow down query processing. Default value: 4194304 (4 MB). Zero means disabled memory profiler.\n"
                },
                "memoryUsageOvercommitMaxWaitMicroseconds": {
                    "type": "integer",
                    "description": "Maximum time thread will wait for memory to be freed in the case of memory overcommit on a user level. If the timeout is reached and memory is not freed, an exception is thrown.\n"
                },
                "mergeTreeMaxBytesToUseCache": {
                    "type": "integer",
                    "description": "If ClickHouse should read more than merge_tree_max_bytes_to_use_cache bytes in one query, it doesn’t use the cache of uncompressed blocks.\n"
                },
                "mergeTreeMaxRowsToUseCache": {
                    "type": "integer",
                    "description": "If ClickHouse should read more than merge_tree_max_rows_to_use_cache rows in one query, it doesn’t use the cache of uncompressed blocks.\n"
                },
                "mergeTreeMinBytesForConcurrentRead": {
                    "type": "integer",
                    "description": "If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.\n"
                },
                "mergeTreeMinRowsForConcurrentRead": {
                    "type": "integer",
                    "description": "If the number of rows to be read from a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read then ClickHouse tries to perform a concurrent reading from this file on several threads.\n"
                },
                "minBytesToUseDirectIo": {
                    "type": "integer",
                    "description": "The minimum data volume required for using direct I/O access to the storage disk.\n"
                },
                "minCountToCompile": {
                    "type": "integer",
                    "description": "How many times to potentially use a compiled chunk of code before running compilation.\n"
                },
                "minCountToCompileExpression": {
                    "type": "integer",
                    "description": "A query waits for expression compilation process to complete prior to continuing execution.\n"
                },
                "minExecutionSpeed": {
                    "type": "integer",
                    "description": "Minimal execution speed in rows per second.\n"
                },
                "minExecutionSpeedBytes": {
                    "type": "integer",
                    "description": "Minimal execution speed in bytes per second.\n"
                },
                "minInsertBlockSizeBytes": {
                    "type": "integer",
                    "description": "Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.\n"
                },
                "minInsertBlockSizeRows": {
                    "type": "integer",
                    "description": "Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.\n"
                },
                "outputFormatJsonQuote64bitIntegers": {
                    "type": "boolean",
                    "description": "If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.\n"
                },
                "outputFormatJsonQuoteDenormals": {
                    "type": "boolean",
                    "description": "Enables +nan, -nan, +inf, -inf outputs in JSON output format.\n"
                },
                "preferLocalhostReplica": {
                    "type": "boolean",
                    "description": "Enables/disables preferable using the localhost replica when processing distributed queries. Default value: true.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Query priority.\n"
                },
                "quotaMode": {
                    "type": "string",
                    "description": "Quota accounting mode.\n"
                },
                "readOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow while read. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "readonly": {
                    "type": "integer",
                    "description": "Restricts permissions for reading data, write data and change settings queries.\n"
                },
                "receiveTimeout": {
                    "type": "integer",
                    "description": "Receive timeout in milliseconds on the socket used for communicating with the client.\n"
                },
                "remoteFilesystemReadMethod": {
                    "type": "string",
                    "description": "Method of reading data from remote filesystem, one of: `read`, `threadpool`.\n"
                },
                "replicationAlterPartitionsSync": {
                    "type": "integer",
                    "description": "For ALTER ... ATTACH|DETACH|DROP queries, you can use the replication_alter_partitions_sync setting to set up waiting.\n"
                },
                "resultOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow in result. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "selectSequentialConsistency": {
                    "type": "boolean",
                    "description": "Enables or disables sequential consistency for SELECT queries.\n"
                },
                "sendProgressInHttpHeaders": {
                    "type": "boolean",
                    "description": "Enables or disables `X-ClickHouse-Progress` HTTP response headers in clickhouse-server responses.\n"
                },
                "sendTimeout": {
                    "type": "integer",
                    "description": "Send timeout in milliseconds on the socket used for communicating with the client.\n"
                },
                "setOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow in the set resulting. Possible values:\n  * `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "skipUnavailableShards": {
                    "type": "boolean",
                    "description": "Enables or disables silently skipping of unavailable shards.\n"
                },
                "sortOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow while sort. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "timeoutBeforeCheckingExecutionSpeed": {
                    "type": "integer",
                    "description": "Timeout (in seconds) between checks of execution speed. It is checked that execution speed is not less that specified in min_execution_speed parameter. Must be at least 1000.\n"
                },
                "timeoutOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "transferOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "transformNullIn": {
                    "type": "boolean",
                    "description": "Enables equality of NULL values for IN operator.\n"
                },
                "useHedgedRequests": {
                    "type": "boolean",
                    "description": "Enables hedged requests logic for remote queries. It allows to establish many connections with different replicas for query. New connection is enabled in case existent connection(s) with replica(s) were not established within hedged_connection_timeout or no data was received within receive_data_timeout. Query uses the first connection which send non empty progress packet (or data packet, if allow_changing_replica_until_first_data_packet); other connections are cancelled. Queries with max_parallel_replicas \u003e 1 are supported. Default value: true.\n"
                },
                "useUncompressedCache": {
                    "type": "boolean",
                    "description": "Whether to use a cache of uncompressed blocks.\n"
                },
                "waitForAsyncInsert": {
                    "type": "boolean",
                    "description": "Enables waiting for processing of asynchronous insertion. If enabled, server returns OK only after the data is inserted.\n"
                },
                "waitForAsyncInsertTimeout": {
                    "type": "integer",
                    "description": "The timeout (in seconds) for waiting for processing of asynchronous insertion. Value must be at least 1000 (1 second).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addHttpCorsHeader",
                        "allowDdl",
                        "allowIntrospectionFunctions",
                        "allowSuspiciousLowCardinalityTypes",
                        "anyJoinDistinctRightTableKeys",
                        "asyncInsert",
                        "asyncInsertBusyTimeout",
                        "asyncInsertMaxDataSize",
                        "asyncInsertStaleTimeout",
                        "asyncInsertThreads",
                        "cancelHttpReadonlyQueriesOnClientClose",
                        "compile",
                        "compileExpressions",
                        "connectTimeout",
                        "connectTimeoutWithFailover",
                        "countDistinctImplementation",
                        "dateTimeInputFormat",
                        "dateTimeOutputFormat",
                        "deduplicateBlocksInDependentMaterializedViews",
                        "distinctOverflowMode",
                        "distributedAggregationMemoryEfficient",
                        "distributedDdlTaskTimeout",
                        "distributedProductMode",
                        "emptyResultForAggregationByEmptySet",
                        "enableHttpCompression",
                        "fallbackToStaleReplicasForDistributedQueries",
                        "flattenNested",
                        "forceIndexByDate",
                        "forcePrimaryKey",
                        "formatRegexp",
                        "formatRegexpSkipUnmatched",
                        "groupByOverflowMode",
                        "groupByTwoLevelThreshold",
                        "groupByTwoLevelThresholdBytes",
                        "hedgedConnectionTimeoutMs",
                        "httpConnectionTimeout",
                        "httpHeadersProgressInterval",
                        "httpReceiveTimeout",
                        "httpSendTimeout",
                        "idleConnectionTimeout",
                        "inputFormatDefaultsForOmittedFields",
                        "inputFormatImportNestedJson",
                        "inputFormatNullAsDefault",
                        "inputFormatParallelParsing",
                        "inputFormatValuesInterpretExpressions",
                        "inputFormatWithNamesUseHeader",
                        "insertKeeperMaxRetries",
                        "insertNullAsDefault",
                        "insertQuorum",
                        "insertQuorumParallel",
                        "insertQuorumTimeout",
                        "joinAlgorithms",
                        "joinOverflowMode",
                        "joinUseNulls",
                        "joinedSubqueryRequiresAlias",
                        "loadBalancing",
                        "localFilesystemReadMethod",
                        "logQueryThreads",
                        "lowCardinalityAllowInNativeFormat",
                        "maxAstDepth",
                        "maxAstElements",
                        "maxBlockSize",
                        "maxBytesBeforeExternalGroupBy",
                        "maxBytesBeforeExternalSort",
                        "maxBytesInDistinct",
                        "maxBytesInJoin",
                        "maxBytesInSet",
                        "maxBytesToRead",
                        "maxBytesToSort",
                        "maxBytesToTransfer",
                        "maxColumnsToRead",
                        "maxConcurrentQueriesForUser",
                        "maxExecutionTime",
                        "maxExpandedAstElements",
                        "maxFinalThreads",
                        "maxHttpGetRedirects",
                        "maxInsertBlockSize",
                        "maxInsertThreads",
                        "maxMemoryUsage",
                        "maxMemoryUsageForUser",
                        "maxNetworkBandwidth",
                        "maxNetworkBandwidthForUser",
                        "maxParserDepth",
                        "maxQuerySize",
                        "maxReadBufferSize",
                        "maxReplicaDelayForDistributedQueries",
                        "maxResultBytes",
                        "maxResultRows",
                        "maxRowsInDistinct",
                        "maxRowsInJoin",
                        "maxRowsInSet",
                        "maxRowsToGroupBy",
                        "maxRowsToRead",
                        "maxRowsToSort",
                        "maxRowsToTransfer",
                        "maxTemporaryColumns",
                        "maxTemporaryDataOnDiskSizeForQuery",
                        "maxTemporaryDataOnDiskSizeForUser",
                        "maxTemporaryNonConstColumns",
                        "maxThreads",
                        "memoryOvercommitRatioDenominator",
                        "memoryOvercommitRatioDenominatorForUser",
                        "memoryProfilerSampleProbability",
                        "memoryProfilerStep",
                        "memoryUsageOvercommitMaxWaitMicroseconds",
                        "mergeTreeMaxBytesToUseCache",
                        "mergeTreeMaxRowsToUseCache",
                        "mergeTreeMinBytesForConcurrentRead",
                        "mergeTreeMinRowsForConcurrentRead",
                        "minBytesToUseDirectIo",
                        "minCountToCompile",
                        "minCountToCompileExpression",
                        "minExecutionSpeed",
                        "minExecutionSpeedBytes",
                        "minInsertBlockSizeBytes",
                        "minInsertBlockSizeRows",
                        "outputFormatJsonQuote64bitIntegers",
                        "outputFormatJsonQuoteDenormals",
                        "preferLocalhostReplica",
                        "priority",
                        "quotaMode",
                        "readOverflowMode",
                        "readonly",
                        "receiveTimeout",
                        "remoteFilesystemReadMethod",
                        "replicationAlterPartitionsSync",
                        "resultOverflowMode",
                        "selectSequentialConsistency",
                        "sendProgressInHttpHeaders",
                        "sendTimeout",
                        "setOverflowMode",
                        "skipUnavailableShards",
                        "sortOverflowMode",
                        "timeoutBeforeCheckingExecutionSpeed",
                        "timeoutOverflowMode",
                        "transferOverflowMode",
                        "transformNullIn",
                        "useHedgedRequests",
                        "useUncompressedCache",
                        "waitForAsyncInsert",
                        "waitForAsyncInsertTimeout"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterZookeeper:MdbClickhouseClusterZookeeper": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterZookeeperResources:MdbClickhouseClusterZookeeperResources",
                    "description": "Resources allocated to hosts of the ZooKeeper subcluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "resources"
                    ]
                }
            }
        },
        "yandex:index/MdbClickhouseClusterZookeeperResources:MdbClickhouseClusterZookeeperResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ZooKeeper host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ZooKeeper hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ZooKeeper host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskSize",
                        "diskTypeId",
                        "resourcePresetId"
                    ]
                }
            }
        },
        "yandex:index/MdbElasticsearchClusterConfig:MdbElasticsearchClusterConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string",
                    "description": "Password for admin user of Elasticsearch.\n",
                    "secret": true
                },
                "dataNode": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfigDataNode:MdbElasticsearchClusterConfigDataNode",
                    "description": "Configuration for Elasticsearch data nodes subcluster.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "Edition of Elasticsearch. For more information, see [the official documentation](https://yandex.cloud/docs/managed-elasticsearch/concepts/es-editions).\n"
                },
                "masterNode": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfigMasterNode:MdbElasticsearchClusterConfigMasterNode",
                    "description": "Configuration for Elasticsearch master nodes subcluster.\n"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of Elasticsearch plugins to install.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Elasticsearch.\n"
                }
            },
            "type": "object",
            "required": [
                "adminPassword",
                "dataNode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminPassword",
                        "dataNode",
                        "edition",
                        "version"
                    ]
                }
            }
        },
        "yandex:index/MdbElasticsearchClusterConfigDataNode:MdbElasticsearchClusterConfigDataNode": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfigDataNodeResources:MdbElasticsearchClusterConfigDataNodeResources",
                    "description": "Resources allocated to hosts of the Elasticsearch data nodes subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ]
        },
        "yandex:index/MdbElasticsearchClusterConfigDataNodeResources:MdbElasticsearchClusterConfigDataNodeResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of Elasticsearch hosts.\n",
                    "willReplaceOnChanges": true
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-elasticsearch/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbElasticsearchClusterConfigMasterNode:MdbElasticsearchClusterConfigMasterNode": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfigMasterNodeResources:MdbElasticsearchClusterConfigMasterNodeResources",
                    "description": "Resources allocated to hosts of the Elasticsearch master nodes subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ]
        },
        "yandex:index/MdbElasticsearchClusterConfigMasterNodeResources:MdbElasticsearchClusterConfigMasterNodeResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of Elasticsearch hosts.\n",
                    "willReplaceOnChanges": true
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-elasticsearch/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbElasticsearchClusterHost:MdbElasticsearchClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "User defined host name.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the host to be deployed. Can be either `DATA_NODE` or `MASTER_NODE`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "name",
                        "subnetId",
                        "type",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/MdbElasticsearchClusterMaintenanceWindow:MdbElasticsearchClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbGreenplumClusterAccess:MdbGreenplumClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer)\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allows access for [SQL queries in the management console](https://yandex.cloud/docs/managed-mysql/operations/web-sql-query).\n"
                },
                "yandexQuery": {
                    "type": "boolean",
                    "description": "Allow access for [Yandex Query](https://yandex.cloud/services/query)\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterBackgroundActivity:MdbGreenplumClusterBackgroundActivity": {
            "properties": {
                "analyzeAndVacuums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum:MdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum"
                    },
                    "description": "Block to configure 'ANALYZE' and 'VACUUM' daily operations.\n"
                },
                "queryKillerIdleInTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction:MdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction"
                    },
                    "description": "Block to configure script that kills long running queries that are in `idle in transaction` state.\n"
                },
                "queryKillerIdles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivityQueryKillerIdle:MdbGreenplumClusterBackgroundActivityQueryKillerIdle"
                    },
                    "description": "Block to configure script that kills long running queries that are in `idle` state.\n"
                },
                "queryKillerLongRunnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivityQueryKillerLongRunning:MdbGreenplumClusterBackgroundActivityQueryKillerLongRunning"
                    },
                    "description": "Block to configure script that kills long running queries (in any state).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum:MdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum": {
            "properties": {
                "analyzeTimeout": {
                    "type": "integer",
                    "description": "Maximum duration of the `ANALYZE` operation, in seconds. The default value is `36000`. As soon as this period expires, the `ANALYZE` operation will be forced to terminate.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Time of day in 'HH:MM' format when scripts should run.\n"
                },
                "vacuumTimeout": {
                    "type": "integer",
                    "description": "Maximum duration of the `VACUUM` operation, in seconds. The default value is `36000`. As soon as this period expires, the `VACUUM` operation will be forced to terminate.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterBackgroundActivityQueryKillerIdle:MdbGreenplumClusterBackgroundActivityQueryKillerIdle": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Flag that indicates whether script is enabled.\n"
                },
                "ignoreUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users to ignore when considering queries to terminate.\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Maximum duration for this type of queries (in seconds).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction:MdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Flag that indicates whether script is enabled.\n"
                },
                "ignoreUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users to ignore when considering queries to terminate.\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Maximum duration for this type of queries (in seconds).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterBackgroundActivityQueryKillerLongRunning:MdbGreenplumClusterBackgroundActivityQueryKillerLongRunning": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Flag that indicates whether script is enabled.\n"
                },
                "ignoreUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users to ignore when considering queries to terminate.\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Maximum duration for this type of queries (in seconds).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterBackupWindowStart:MdbGreenplumClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started (UTC).\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started (UTC).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterCloudStorage:MdbGreenplumClusterCloudStorage": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Whether to use cloud storage or not.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterLogging:MdbGreenplumClusterLogging": {
            "properties": {
                "commandCenterEnabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "greenplumEnabled": {
                    "type": "boolean"
                },
                "logGroupId": {
                    "type": "string"
                },
                "poolerEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterMaintenanceWindow:MdbGreenplumClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of the week (in `DDD` format). Allowed values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of the day in UTC (in `HH` format). Allowed value is between 0 and 23.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbGreenplumClusterMasterHost:MdbGreenplumClusterMasterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Flag indicating that master hosts should be created with a public IP address.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "assignPublicIp",
                        "fqdn"
                    ]
                }
            }
        },
        "yandex:index/MdbGreenplumClusterMasterSubcluster:MdbGreenplumClusterMasterSubcluster": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterMasterSubclusterResources:MdbGreenplumClusterMasterSubclusterResources",
                    "description": "Resources allocated to hosts for master subcluster of the Greenplum cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ]
        },
        "yandex:index/MdbGreenplumClusterMasterSubclusterResources:MdbGreenplumClusterMasterSubclusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbGreenplumClusterPoolerConfig:MdbGreenplumClusterPoolerConfig": {
            "properties": {
                "poolClientIdleTimeout": {
                    "type": "integer",
                    "description": "Value for `pool_client_idle_timeout` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer).\n"
                },
                "poolSize": {
                    "type": "integer",
                    "description": "Value for `pool_size` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer).\n"
                },
                "poolingMode": {
                    "type": "string",
                    "description": "Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterPxfConfig:MdbGreenplumClusterPxfConfig": {
            "properties": {
                "connectionTimeout": {
                    "type": "integer",
                    "description": "The Tomcat server connection timeout for read operations in seconds. Value is between 5 and 600.\n"
                },
                "maxThreads": {
                    "type": "integer",
                    "description": "The maximum number of PXF tomcat threads. Value is between 1 and 1024.\n"
                },
                "poolAllowCoreThreadTimeout": {
                    "type": "boolean",
                    "description": "Identifies whether or not core streaming threads are allowed to time out.\n"
                },
                "poolCoreSize": {
                    "type": "integer",
                    "description": "The number of core streaming threads. Value is between 1 and 1024.\n"
                },
                "poolMaxSize": {
                    "type": "integer",
                    "description": "The maximum allowed number of core streaming threads. Value is between 1 and 1024.\n"
                },
                "poolQueueCapacity": {
                    "type": "integer",
                    "description": "The capacity of the core streaming thread pool queue. Value is positive.\n"
                },
                "uploadTimeout": {
                    "type": "integer",
                    "description": "The Tomcat server connection timeout for write operations in seconds. Value is between 5 and 600.\n"
                },
                "xms": {
                    "type": "integer",
                    "description": "Maximum JVM heap size for PXF daemon. Value is between 64 and 16384.\n"
                },
                "xmx": {
                    "type": "integer",
                    "description": "Initial JVM heap size for PXF daemon. Value is between 64 and 16384.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbGreenplumClusterSegmentHost:MdbGreenplumClusterSegmentHost": {
            "properties": {
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn"
                    ]
                }
            }
        },
        "yandex:index/MdbGreenplumClusterSegmentSubcluster:MdbGreenplumClusterSegmentSubcluster": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterSegmentSubclusterResources:MdbGreenplumClusterSegmentSubclusterResources",
                    "description": "Resources allocated to hosts for segment subcluster of the Greenplum cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ]
        },
        "yandex:index/MdbGreenplumClusterSegmentSubclusterResources:MdbGreenplumClusterSegmentSubclusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbKafkaClusterConfig:MdbKafkaClusterConfig": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigAccess:MdbKafkaClusterConfigAccess",
                    "description": "Access policy to the Kafka cluster.\n"
                },
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Determines whether each broker will be assigned a public IP address. The default is `false`.\n"
                },
                "brokersCount": {
                    "type": "integer",
                    "description": "Count of brokers per availability zone. The default is `1`.\n"
                },
                "diskSizeAutoscaling": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigDiskSizeAutoscaling:MdbKafkaClusterConfigDiskSizeAutoscaling",
                    "description": "Disk autoscaling settings of the Kafka cluster.\n"
                },
                "kafka": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigKafka:MdbKafkaClusterConfigKafka",
                    "description": "Configuration of the Kafka subcluster.\n"
                },
                "kraft": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigKraft:MdbKafkaClusterConfigKraft",
                    "description": "Configuration of the KRaft-controller subcluster.\n"
                },
                "restApi": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigRestApi:MdbKafkaClusterConfigRestApi",
                    "description": "REST API settings of the Kafka cluster.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Enables managed schema registry on cluster. The default is `false`.\n"
                },
                "unmanagedTopics": {
                    "type": "boolean",
                    "deprecationMessage": "The 'unmanaged_topics' field has been deprecated, because feature enabled permanently and can't be disabled."
                },
                "version": {
                    "type": "string",
                    "description": "Version of the Kafka server software.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of availability zones.\n"
                },
                "zookeeper": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigZookeeper:MdbKafkaClusterConfigZookeeper",
                    "description": "Configuration of the ZooKeeper subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "kafka",
                "version",
                "zones"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "access",
                        "diskSizeAutoscaling",
                        "kafka",
                        "kraft",
                        "restApi",
                        "version",
                        "zones",
                        "zookeeper"
                    ]
                }
            }
        },
        "yandex:index/MdbKafkaClusterConfigAccess:MdbKafkaClusterConfigAccess": {
            "properties": {
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaClusterConfigDiskSizeAutoscaling:MdbKafkaClusterConfigDiskSizeAutoscaling": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Maximum possible size of disk in bytes.\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Percent of disk utilization. Disk will autoscale immediately, if this threshold reached. Value is between 0 and 100. Default value is 0 (autoscaling disabled). Must be not less then 'planned_usage_threshold' value.\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Percent of disk utilization. During maintenance disk will autoscale, if this threshold reached. Value is between 0 and 100. Default value is 0 (autoscaling disabled).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbKafkaClusterConfigKafka:MdbKafkaClusterConfigKafka": {
            "properties": {
                "kafkaConfig": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigKafkaKafkaConfig:MdbKafkaClusterConfigKafkaKafkaConfig",
                    "description": "User-defined settings for the Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/operations/cluster-update) and [the Kafka documentation](https://kafka.apache.org/documentation/#configuration).\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigKafkaResources:MdbKafkaClusterConfigKafkaResources",
                    "description": "Resources allocated to hosts of the Kafka subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ]
        },
        "yandex:index/MdbKafkaClusterConfigKafkaKafkaConfig:MdbKafkaClusterConfigKafkaKafkaConfig": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "boolean",
                    "description": "Enable auto creation of topic on the server.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Compression type of kafka topics.\n"
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "description": "The replication factor for automatically created topics, and for topics created with -1 as the replication factor.\n"
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "description": "The number of messages accumulated on a log partition before messages are flushed to disk.\n"
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "description": "The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.\n"
                },
                "logFlushSchedulerIntervalMs": {
                    "type": "string",
                    "description": "The frequency in ms that the log flusher checks whether any log needs to be flushed to disk.\n"
                },
                "logPreallocate": {
                    "type": "boolean",
                    "description": "Should pre allocate file when create new segment?\n"
                },
                "logRetentionBytes": {
                    "type": "string",
                    "description": "The maximum size of the log before deleting it.\n"
                },
                "logRetentionHours": {
                    "type": "string",
                    "description": "The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property.\n"
                },
                "logRetentionMinutes": {
                    "type": "string",
                    "description": "The number of minutes to keep a log file before deleting it (in minutes), secondary to log.retention.ms property. If not set, the value in log.retention.hours is used.\n"
                },
                "logRetentionMs": {
                    "type": "string",
                    "description": "The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.\n"
                },
                "logSegmentBytes": {
                    "type": "string",
                    "description": "The maximum size of a single log file.\n"
                },
                "messageMaxBytes": {
                    "type": "string",
                    "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\n"
                },
                "numPartitions": {
                    "type": "string",
                    "description": "The default number of log partitions per topic.\n"
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "description": "For subscribed consumers, committed offset of a specific partition will be expired and discarded after this period of time.\n"
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "description": "The number of bytes of messages to attempt to fetch for each partition.\n"
                },
                "saslEnabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SASL mechanisms enabled in the Kafka server.\n"
                },
                "socketReceiveBufferBytes": {
                    "type": "string",
                    "description": "The SO_RCVBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.\n"
                },
                "socketSendBufferBytes": {
                    "type": "string",
                    "description": "The SO_SNDBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.\n"
                },
                "sslCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of cipher suites.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaClusterConfigKafkaResources:MdbKafkaClusterConfigKafkaResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a Kafka host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of Kafka hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a Kafka host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbKafkaClusterConfigKraft:MdbKafkaClusterConfigKraft": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigKraftResources:MdbKafkaClusterConfigKraftResources",
                    "description": "Resources allocated to hosts of the KRaft-controller subcluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "resources"
                    ]
                }
            }
        },
        "yandex:index/MdbKafkaClusterConfigKraftResources:MdbKafkaClusterConfigKraftResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a KRaft-controller host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of KRaft-controller hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/storage).\n",
                    "willReplaceOnChanges": true
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a KRaft-controller host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskSize",
                        "diskTypeId",
                        "resourcePresetId"
                    ]
                }
            }
        },
        "yandex:index/MdbKafkaClusterConfigRestApi:MdbKafkaClusterConfigRestApi": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables REST API on cluster. The default is `false`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaClusterConfigZookeeper:MdbKafkaClusterConfigZookeeper": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfigZookeeperResources:MdbKafkaClusterConfigZookeeperResources",
                    "description": "Resources allocated to hosts of the ZooKeeper subcluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "resources"
                    ]
                }
            }
        },
        "yandex:index/MdbKafkaClusterConfigZookeeperResources:MdbKafkaClusterConfigZookeeperResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ZooKeeper host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ZooKeeper hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/storage).\n",
                    "willReplaceOnChanges": true
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ZooKeeper host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskSize",
                        "diskTypeId",
                        "resourcePresetId"
                    ]
                }
            }
        },
        "yandex:index/MdbKafkaClusterHost:MdbKafkaClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "The flag that defines whether a public IP address is assigned to the node.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Health of the host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the host in the cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "assignPublicIp",
                        "health",
                        "name",
                        "role",
                        "subnetId",
                        "zoneId"
                    ]
                }
            }
        },
        "yandex:index/MdbKafkaClusterMaintenanceWindow:MdbKafkaClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of the week (in `DDD` format). Allowed values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of the day in UTC (in `HH` format). Allowed value is between 1 and 24.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbKafkaClusterTopic:MdbKafkaClusterTopic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the topic.\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of the topic's partitions.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "Amount of data copies (replicas) for the topic in the cluster.\n"
                },
                "topicConfig": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterTopicTopicConfig:MdbKafkaClusterTopicTopicConfig",
                    "description": "User-defined settings for the topic. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/operations/cluster-topics#update-topic) and [the Kafka documentation](https://kafka.apache.org/documentation/#configuration).\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "partitions",
                "replicationFactor"
            ]
        },
        "yandex:index/MdbKafkaClusterTopicTopicConfig:MdbKafkaClusterTopicTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "Retention policy to use on log segments.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Compression type of kafka topic.\n"
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "The amount of time to retain delete tombstone markers for log compacted topics.\n"
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "The time to wait before deleting a file from the filesystem.\n"
                },
                "flushMessages": {
                    "type": "string",
                    "description": "This setting allows specifying an interval at which we will force an fsync of data written to the log.\n"
                },
                "flushMs": {
                    "type": "string",
                    "description": "This setting allows specifying a time interval at which we will force an fsync of data written to the log.\n"
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\n"
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.\n"
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "When a producer sets acks to \"all\" (or \"-1\"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.\n"
                },
                "preallocate": {
                    "type": "boolean",
                    "description": "True if we should preallocate the file on disk when creating a new log segment.\n"
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "retentionMs": {
                    "type": "string",
                    "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "This configuration controls the segment file size for the log.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaClusterUser:MdbKafkaClusterUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterUserPermission:MdbKafkaClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "password"
            ]
        },
        "yandex:index/MdbKafkaClusterUserPermission:MdbKafkaClusterUserPermission": {
            "properties": {
                "allowHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of hosts, to which this permission grants access to. Only ip-addresses allowed as value of single host.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role type to grant to the topic.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic that the permission grants access to.\n"
                }
            },
            "type": "object",
            "required": [
                "role",
                "topicName"
            ]
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormaker:MdbKafkaConnectorConnectorConfigMirrormaker": {
            "properties": {
                "replicationFactor": {
                    "type": "integer",
                    "description": "Replication factor for topics created in target cluster.\n"
                },
                "sourceCluster": {
                    "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster:MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster",
                    "description": "Settings for source cluster.\n"
                },
                "targetCluster": {
                    "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster:MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster",
                    "description": "Settings for target cluster.\n"
                },
                "topics": {
                    "type": "string",
                    "description": "The pattern for topic names to be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "replicationFactor",
                "sourceCluster",
                "targetCluster",
                "topics"
            ]
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster:MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Name of the cluster. Used also as a topic prefix.\n"
                },
                "externalClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster:MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster"
                    },
                    "description": "Connection settings for external cluster.\n"
                },
                "thisClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster:MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster"
                    },
                    "description": "Using this section in the cluster definition (source or target) means it's this cluster.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster:MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "List of bootstrap servers to connect to cluster.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "Type of SASL authentification mechanism to use.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "Password to use in SASL authentification mechanism\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username to use in SASL authentification mechanism.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol to use.\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers"
            ]
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster:MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster": {
            "type": "object"
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster:MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Name of the cluster. Used also as a topic prefix.\n"
                },
                "externalClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster:MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster"
                    },
                    "description": "Connection settings for external cluster.\n"
                },
                "thisClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster:MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster"
                    },
                    "description": "Using this section in the cluster definition (source or target) means it's this cluster.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster:MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "List of bootstrap servers to connect to cluster.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "Type of SASL authentification mechanism to use.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "Password to use in SASL authentification mechanism\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username to use in SASL authentification mechanism.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol to use.\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers"
            ]
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster:MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster": {
            "type": "object"
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigS3Sink:MdbKafkaConnectorConnectorConfigS3Sink": {
            "properties": {
                "fileCompressionType": {
                    "type": "string",
                    "description": "Compression type for messages. Cannot be changed.\n",
                    "willReplaceOnChanges": true
                },
                "fileMaxRecords": {
                    "type": "integer",
                    "description": "Max records per file.\n"
                },
                "s3Connection": {
                    "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigS3SinkS3Connection:MdbKafkaConnectorConnectorConfigS3SinkS3Connection",
                    "description": "Settings for connection to s3-compatible storage.\n"
                },
                "topics": {
                    "type": "string",
                    "description": "The pattern for topic names to be copied to s3 bucket.\n"
                }
            },
            "type": "object",
            "required": [
                "fileCompressionType",
                "s3Connection",
                "topics"
            ]
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigS3SinkS3Connection:MdbKafkaConnectorConnectorConfigS3SinkS3Connection": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "Name of the bucket in s3-compatible storage.\n"
                },
                "externalS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3:MdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3"
                    },
                    "description": "Connection params for external s3-compatible storage.\n"
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "externalS3s"
            ]
        },
        "yandex:index/MdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3:MdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "ID of aws-compatible static key.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "URL of s3-compatible storage.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of s3-compatible storage. [Available region list](https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html).\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "Secret key of aws-compatible static key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "yandex:index/MdbKafkaTopicTopicConfig:MdbKafkaTopicTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "Retention policy to use on log segments.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Compression type of kafka topic.\n"
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "The amount of time to retain delete tombstone markers for log compacted topics.\n"
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "The time to wait before deleting a file from the filesystem.\n"
                },
                "flushMessages": {
                    "type": "string",
                    "description": "This setting allows specifying an interval at which we will force an fsync of data written to the log.\n"
                },
                "flushMs": {
                    "type": "string",
                    "description": "This setting allows specifying a time interval at which we will force an fsync of data written to the log.\n"
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\n"
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.\n"
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "When a producer sets acks to \"all\" (or \"-1\"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.\n"
                },
                "preallocate": {
                    "type": "boolean",
                    "description": "True if we should preallocate the file on disk when creating a new log segment.\n"
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "retentionMs": {
                    "type": "string",
                    "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "This configuration controls the segment file size for the log.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbKafkaUserPermission:MdbKafkaUserPermission": {
            "properties": {
                "allowHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of hosts, to which this permission grants access to. Only ip-addresses allowed as value of single host.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role type to grant to the topic.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic that the permission grants access to.\n"
                }
            },
            "type": "object",
            "required": [
                "role",
                "topicName"
            ]
        },
        "yandex:index/MdbMongodbClusterClusterConfig:MdbMongodbClusterClusterConfig": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigAccess:MdbMongodbClusterClusterConfigAccess",
                    "description": "Access policy to the MongoDB cluster.\n"
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "Retain period of automatically created backup in days.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigBackupWindowStart:MdbMongodbClusterClusterConfigBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "featureCompatibilityVersion": {
                    "type": "string",
                    "description": "Feature compatibility version of MongoDB. If not provided version is taken. Can be either `6.0`, `5.0`, `4.4` and `4.2`.\n"
                },
                "mongocfg": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongocfg:MdbMongodbClusterClusterConfigMongocfg",
                    "description": "Configuration of the mongocfg service.\n"
                },
                "mongod": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongod:MdbMongodbClusterClusterConfigMongod",
                    "description": "Configuration of the mongod service.\n"
                },
                "mongos": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongos:MdbMongodbClusterClusterConfigMongos",
                    "description": "Configuration of the mongos service.\n"
                },
                "performanceDiagnostics": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigPerformanceDiagnostics:MdbMongodbClusterClusterConfigPerformanceDiagnostics",
                    "description": "Performance diagnostics to the MongoDB cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the MongoDB server software. Can be either `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`, `6.0` and `6.0-enterprise`.\n"
                }
            },
            "type": "object",
            "required": [
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "access",
                        "backupRetainPeriodDays",
                        "backupWindowStart",
                        "featureCompatibilityVersion",
                        "mongocfg",
                        "mongod",
                        "mongos",
                        "performanceDiagnostics",
                        "version"
                    ]
                }
            }
        },
        "yandex:index/MdbMongodbClusterClusterConfigAccess:MdbMongodbClusterClusterConfigAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allow access for [WebSQL](https://yandex.cloud/ru/docs/websql/).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigBackupWindowStart:MdbMongodbClusterClusterConfigBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongocfg:MdbMongodbClusterClusterConfigMongocfg": {
            "properties": {
                "net": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongocfgNet:MdbMongodbClusterClusterConfigMongocfgNet",
                    "description": "A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).\n"
                },
                "operationProfiling": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongocfgOperationProfiling:MdbMongodbClusterClusterConfigMongocfgOperationProfiling",
                    "description": "A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).\n"
                },
                "storage": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongocfgStorage:MdbMongodbClusterClusterConfigMongocfgStorage",
                    "description": "A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongocfgNet:MdbMongodbClusterClusterConfigMongocfgNet": {
            "properties": {
                "maxIncomingConnections": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongocfgOperationProfiling:MdbMongodbClusterClusterConfigMongocfgOperationProfiling": {
            "properties": {
                "mode": {
                    "type": "string"
                },
                "slowOpThreshold": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongocfgStorage:MdbMongodbClusterClusterConfigMongocfgStorage": {
            "properties": {
                "wiredTiger": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongocfgStorageWiredTiger:MdbMongodbClusterClusterConfigMongocfgStorageWiredTiger"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongocfgStorageWiredTiger:MdbMongodbClusterClusterConfigMongocfgStorageWiredTiger": {
            "properties": {
                "cacheSizeGb": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongod:MdbMongodbClusterClusterConfigMongod": {
            "properties": {
                "auditLog": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodAuditLog:MdbMongodbClusterClusterConfigMongodAuditLog",
                    "description": "A set of audit log settings (see the [auditLog](https://www.mongodb.com/docs/manual/reference/configuration-options/#auditlog-options) option). Available only in enterprise edition.\n"
                },
                "net": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodNet:MdbMongodbClusterClusterConfigMongodNet",
                    "description": "A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).\n"
                },
                "operationProfiling": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodOperationProfiling:MdbMongodbClusterClusterConfigMongodOperationProfiling",
                    "description": "A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).\n"
                },
                "security": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodSecurity:MdbMongodbClusterClusterConfigMongodSecurity",
                    "description": "A set of MongoDB Security settings (see the [security](https://www.mongodb.com/docs/manual/reference/configuration-options/#security-options) option). Available only in enterprise edition.\n"
                },
                "setParameter": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodSetParameter:MdbMongodbClusterClusterConfigMongodSetParameter",
                    "description": "A set of MongoDB Server Parameters (see the [setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option) option).\n"
                },
                "storage": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodStorage:MdbMongodbClusterClusterConfigMongodStorage",
                    "description": "A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auditLog",
                        "security",
                        "setParameter"
                    ]
                }
            }
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodAuditLog:MdbMongodbClusterClusterConfigMongodAuditLog": {
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "Configuration of the audit log filter in JSON format. For more information see [auditLog.filter](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.filter) description in the official documentation. Available only in enterprise edition.\n"
                },
                "runtimeConfiguration": {
                    "type": "boolean",
                    "description": "Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see [auditLog.runtimeConfiguration](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.runtimeConfiguration) description in the official documentation. Available only in enterprise edition.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodNet:MdbMongodbClusterClusterConfigMongodNet": {
            "properties": {
                "compressors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.\n"
                },
                "maxIncomingConnections": {
                    "type": "integer",
                    "description": "The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodOperationProfiling:MdbMongodbClusterClusterConfigMongodOperationProfiling": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.\n"
                },
                "slowOpSampleRate": {
                    "type": "number",
                    "description": "The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the [operationProfiling.slowOpSampleRate](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpSampleRate) description in the official documentation.\n"
                },
                "slowOpThreshold": {
                    "type": "integer",
                    "description": "The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodSecurity:MdbMongodbClusterClusterConfigMongodSecurity": {
            "properties": {
                "enableEncryption": {
                    "type": "boolean",
                    "description": "Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see [security.enableEncryption](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.enableEncryption) description in the official documentation. Available only in enterprise edition.\n"
                },
                "kmip": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodSecurityKmip:MdbMongodbClusterClusterConfigMongodSecurityKmip",
                    "description": "Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see [Encryption tutorial](https://www.mongodb.com/docs/rapid/tutorial/configure-encryption) ). Requires `enable_encryption` to be true. The structure is documented below. Available only in enterprise edition.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "kmip"
                    ]
                }
            }
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodSecurityKmip:MdbMongodbClusterClusterConfigMongodSecurityKmip": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "description": "String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see [security.kmip.clientCertificateFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.clientCertificateFile) description in the official documentation.\n"
                },
                "keyIdentifier": {
                    "type": "string",
                    "description": "Unique KMIP identifier for an existing key within the KMIP server. For more information see [security.kmip.keyIdentifier](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.keyIdentifier) description in the official documentation.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number to use to communicate with the KMIP server. Default: 5696 For more information see [security.kmip.port](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.port) description in the official documentation.\n"
                },
                "serverCa": {
                    "type": "string",
                    "description": "Path to CA File. Used for validating secure client connection to KMIP server. For more information see [security.kmip.serverCAFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverCAFile) description in the official documentation.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Hostname or IP address of the KMIP server to connect to. For more information see [security.kmip.serverName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverName) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodSetParameter:MdbMongodbClusterClusterConfigMongodSetParameter": {
            "properties": {
                "auditAuthorizationSuccess": {
                    "type": "boolean",
                    "description": "Enables the auditing of authorization successes. Can be either true or false. For more information, see the [auditAuthorizationSuccess](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.auditAuthorizationSuccess) description in the official documentation. Available only in enterprise edition.\n"
                },
                "enableFlowControl": {
                    "type": "boolean",
                    "description": "Enables the flow control. Can be either true or false. For more information, see the [enableFlowControl](https://www.mongodb.com/docs/rapid/reference/parameters/#mongodb-parameter-param.enableFlowControl) description in the official documentation.\n"
                },
                "minSnapshotHistoryWindowInSeconds": {
                    "type": "integer",
                    "description": "The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the [minSnapshotHistoryWindowInSeconds](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.minSnapshotHistoryWindowInSeconds) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodStorage:MdbMongodbClusterClusterConfigMongodStorage": {
            "properties": {
                "journal": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodStorageJournal:MdbMongodbClusterClusterConfigMongodStorageJournal",
                    "description": "The durability journal to ensure data files remain valid and recoverable.\n"
                },
                "wiredTiger": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongodStorageWiredTiger:MdbMongodbClusterClusterConfigMongodStorageWiredTiger",
                    "description": "The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option). These settings available only on `mongod` hosts.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodStorageJournal:MdbMongodbClusterClusterConfigMongodStorageJournal": {
            "properties": {
                "commitInterval": {
                    "type": "integer",
                    "description": "The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the [storage.journal.commitIntervalMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.journal.commitIntervalMs) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongodStorageWiredTiger:MdbMongodbClusterClusterConfigMongodStorageWiredTiger": {
            "properties": {
                "blockCompressor": {
                    "type": "string",
                    "description": "Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on `mongod` hosts. For more information, see the [storage.wiredTiger.collectionConfig.blockCompressor](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.collectionConfig.blockCompressor) description in the official documentation.\n"
                },
                "cacheSizeGb": {
                    "type": "number",
                    "description": "Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.\n"
                },
                "prefixCompression": {
                    "type": "boolean",
                    "description": "Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the [storage.wiredTiger.indexConfig.prefixCompression](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.indexConfig.prefixCompression) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongos:MdbMongodbClusterClusterConfigMongos": {
            "properties": {
                "net": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfigMongosNet:MdbMongodbClusterClusterConfigMongosNet",
                    "description": "A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigMongosNet:MdbMongodbClusterClusterConfigMongosNet": {
            "properties": {
                "compressors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxIncomingConnections": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterClusterConfigPerformanceDiagnostics:MdbMongodbClusterClusterConfigPerformanceDiagnostics": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable performance diagnostics.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterDatabase:MdbMongodbClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongocfg:MdbMongodbClusterDiskSizeAutoscalingMongocfg": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongod:MdbMongodbClusterDiskSizeAutoscalingMongod": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongoinfra:MdbMongodbClusterDiskSizeAutoscalingMongoinfra": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongos:MdbMongodbClusterDiskSizeAutoscalingMongos": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbMongodbClusterHost:MdbMongodbClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Should this host have assigned public IP assigned. Can be either `true` or `false`.\n"
                },
                "health": {
                    "type": "string",
                    "description": "The health of the host.\n"
                },
                "hostParameters": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterHostHostParameters:MdbMongodbClusterHostHostParameters",
                    "description": "The parameters of mongod host in replicaset.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host. Computed on server side.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of the cluster (either PRIMARY or SECONDARY).\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard to which the host belongs. Only for sharded cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to `mongod`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "subnetId",
                "zoneId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "health",
                        "hostParameters",
                        "name",
                        "role",
                        "shardName",
                        "subnetId",
                        "zoneId"
                    ]
                }
            }
        },
        "yandex:index/MdbMongodbClusterHostHostParameters:MdbMongodbClusterHostHostParameters": {
            "properties": {
                "hidden": {
                    "type": "boolean",
                    "description": "Should this host be hidden in replicaset. Can be either `true` of `false`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.hidden).\n"
                },
                "priority": {
                    "type": "number",
                    "description": "A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.priority).\n"
                },
                "secondaryDelaySecs": {
                    "type": "integer",
                    "description": "The number of seconds `behind` the primary that this replica set member should `lag`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.secondaryDelaySecs).\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value pairs to assign for the replica set member. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.tags).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMongodbClusterMaintenanceWindow:MdbMongodbClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbMongodbClusterResources:MdbMongodbClusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbMongodbClusterResourcesMongocfg:MdbMongodbClusterResourcesMongocfg": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbMongodbClusterResourcesMongod:MdbMongodbClusterResourcesMongod": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbMongodbClusterResourcesMongoinfra:MdbMongodbClusterResourcesMongoinfra": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbMongodbClusterResourcesMongos:MdbMongodbClusterResourcesMongos": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbMongodbClusterRestore:MdbMongodbClusterRestore": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://yandex.cloud/docs/managed-mongodb/operations/cluster-backups).\n",
                    "willReplaceOnChanges": true
                },
                "time": {
                    "type": "string",
                    "description": "Timestamp of the moment to which the MongoDB cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "backupId"
            ]
        },
        "yandex:index/MdbMongodbClusterUser:MdbMongodbClusterUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterUserPermission:MdbMongodbClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "password",
                        "permissions"
                    ]
                }
            }
        },
        "yandex:index/MdbMongodbClusterUserPermission:MdbMongodbClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles of the user in this database. For more information see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts/users-and-roles).\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MdbMysqlClusterAccess:MdbMysqlClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allows access for [SQL queries in the management console](https://yandex.cloud/docs/managed-mysql/operations/web-sql-query).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMysqlClusterBackupWindowStart:MdbMysqlClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMysqlClusterDatabase:MdbMysqlClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbMysqlClusterHost:MdbMysqlClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address. It can be changed on the fly only when `name` is set.\n"
                },
                "backupPriority": {
                    "type": "integer",
                    "description": "Host backup priority. Value is between 0 and 100, default is 0.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Host state name. It should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please refer to `replication_source_name` parameter.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Host master promotion priority. Value is between 0 and 100, default is 0.\n"
                },
                "replicationSource": {
                    "type": "string",
                    "description": "Host replication source (fqdn), when replication_source is empty then host is in HA group.\n"
                },
                "replicationSourceName": {
                    "type": "string",
                    "description": "Host replication source name points to host's `name` from which this host should replicate. When not set then host in HA group. It works only when `name` is set.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "replicationSource",
                        "subnetId",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/MdbMysqlClusterMaintenanceWindow:MdbMysqlClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of the week (in `DDD` format). Allowed values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of the day in UTC (in `HH` format). Allowed value is between 0 and 23.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbMysqlClusterPerformanceDiagnostics:MdbMysqlClusterPerformanceDiagnostics": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable performance diagnostics.\n"
                },
                "sessionsSamplingInterval": {
                    "type": "integer",
                    "description": "Interval (in seconds) for my_stat_activity sampling Acceptable values are 1 to 86400, inclusive.\n"
                },
                "statementsSamplingInterval": {
                    "type": "integer",
                    "description": "Interval (in seconds) for my_stat_statements sampling Acceptable values are 1 to 86400, inclusive.\n"
                }
            },
            "type": "object",
            "required": [
                "sessionsSamplingInterval",
                "statementsSamplingInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "sessionsSamplingInterval",
                        "statementsSamplingInterval"
                    ]
                }
            }
        },
        "yandex:index/MdbMysqlClusterResources:MdbMysqlClusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MySQL host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MySQL hosts.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MySQL host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mysql/concepts/instance-types).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbMysqlClusterRestore:MdbMysqlClusterRestore": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "Backup ID. The cluster will be created from the specified backup. [How to get a list of MySQL backups](https://yandex.cloud/docs/managed-mysql/operations/cluster-backups).\n",
                    "willReplaceOnChanges": true
                },
                "time": {
                    "type": "string",
                    "description": "Timestamp of the moment to which the MySQL cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "backupId"
            ]
        },
        "yandex:index/MdbMysqlClusterUser:MdbMysqlClusterUser": {
            "properties": {
                "authenticationPlugin": {
                    "type": "string",
                    "description": "Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version 5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`).\n"
                },
                "connectionLimits": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterUserConnectionLimits:MdbMysqlClusterUserConnectionLimits",
                    "description": "User's connection limits. If not specified there will be no changes. Default value is -1. When these parameters are set to -1, backend default values will be actually used.\n"
                },
                "globalPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List user's global permissions. Allowed permissions: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list use empty list. If the attribute is not specified there will be no changes.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterUserPermission:MdbMysqlClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authenticationPlugin",
                        "connectionLimits",
                        "globalPermissions",
                        "name",
                        "password",
                        "permissions"
                    ]
                }
            }
        },
        "yandex:index/MdbMysqlClusterUserConnectionLimits:MdbMysqlClusterUserConnectionLimits": {
            "properties": {
                "maxConnectionsPerHour": {
                    "type": "integer",
                    "description": "Max connections per hour.\n"
                },
                "maxQuestionsPerHour": {
                    "type": "integer",
                    "description": "Max questions per hour.\n"
                },
                "maxUpdatesPerHour": {
                    "type": "integer",
                    "description": "Max updates per hour.\n"
                },
                "maxUserConnections": {
                    "type": "integer",
                    "description": "Max user connections.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMysqlClusterUserPermission:MdbMysqlClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List user's roles in the database. Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`, `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MdbMysqlUserConnectionLimits:MdbMysqlUserConnectionLimits": {
            "properties": {
                "maxConnectionsPerHour": {
                    "type": "integer",
                    "description": "Max connections per hour.\n"
                },
                "maxQuestionsPerHour": {
                    "type": "integer",
                    "description": "Max questions per hour.\n"
                },
                "maxUpdatesPerHour": {
                    "type": "integer",
                    "description": "Max updates per hour.\n"
                },
                "maxUserConnections": {
                    "type": "integer",
                    "description": "Max user connections.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbMysqlUserPermission:MdbMysqlUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List user's roles in the database. Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`, `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MdbPostgresqlClusterConfig:MdbPostgresqlClusterConfig": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfigAccess:MdbPostgresqlClusterConfigAccess",
                    "description": "Access policy to the PostgreSQL cluster.\n"
                },
                "autofailover": {
                    "type": "boolean",
                    "description": "Configuration setting which enables/disables autofailover in cluster.\n"
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "The period in days during which backups are stored.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfigBackupWindowStart:MdbPostgresqlClusterConfigBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "diskSizeAutoscaling": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfigDiskSizeAutoscaling:MdbPostgresqlClusterConfigDiskSizeAutoscaling",
                    "description": "Cluster disk size autoscaling settings.\n"
                },
                "performanceDiagnostics": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfigPerformanceDiagnostics:MdbPostgresqlClusterConfigPerformanceDiagnostics",
                    "description": "Cluster performance diagnostics settings. [YC Documentation](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/cluster_service#PerformanceDiagnostics).\n"
                },
                "poolerConfig": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfigPoolerConfig:MdbPostgresqlClusterConfigPoolerConfig",
                    "description": "Configuration of the connection pooler.\n"
                },
                "postgresqlConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "PostgreSQL cluster config. Detail info in `postresql config` section.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfigResources:MdbPostgresqlClusterConfigResources",
                    "description": "Resources allocated to hosts of the PostgreSQL cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the PostgreSQL cluster. (allowed versions are: 10, 10-1c, 11, 11-1c, 12, 12-1c, 13, 13-1c, 14, 14-1c, 15, 15-1c, 16, 17).\n"
                }
            },
            "type": "object",
            "required": [
                "resources",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "access",
                        "autofailover",
                        "backupRetainPeriodDays",
                        "backupWindowStart",
                        "diskSizeAutoscaling",
                        "performanceDiagnostics",
                        "postgresqlConfig",
                        "resources",
                        "version"
                    ]
                }
            }
        },
        "yandex:index/MdbPostgresqlClusterConfigAccess:MdbPostgresqlClusterConfigAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).\n"
                },
                "serverless": {
                    "type": "boolean",
                    "description": "Allow access for [connection to managed databases from functions](https://yandex.cloud/docs/functions/operations/database-connection).\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allow access for [SQL queries in the management console](https://yandex.cloud/docs/managed-postgresql/operations/web-sql-query).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "webSql"
                    ]
                }
            }
        },
        "yandex:index/MdbPostgresqlClusterConfigBackupWindowStart:MdbPostgresqlClusterConfigBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started (UTC).\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The hour at which backup will be started (UTC).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbPostgresqlClusterConfigDiskSizeAutoscaling:MdbPostgresqlClusterConfigDiskSizeAutoscaling": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbPostgresqlClusterConfigPerformanceDiagnostics:MdbPostgresqlClusterConfigPerformanceDiagnostics": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable performance diagnostics.\n"
                },
                "sessionsSamplingInterval": {
                    "type": "integer",
                    "description": "Interval (in seconds) for pg_stat_activity sampling Acceptable values are 1 to 86400, inclusive.\n"
                },
                "statementsSamplingInterval": {
                    "type": "integer",
                    "description": "Interval (in seconds) for pg_stat_statements sampling Acceptable values are 1 to 86400, inclusive.\n"
                }
            },
            "type": "object",
            "required": [
                "sessionsSamplingInterval",
                "statementsSamplingInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "sessionsSamplingInterval",
                        "statementsSamplingInterval"
                    ]
                }
            }
        },
        "yandex:index/MdbPostgresqlClusterConfigPoolerConfig:MdbPostgresqlClusterConfigPoolerConfig": {
            "properties": {
                "poolDiscard": {
                    "type": "boolean",
                    "description": "Setting `pool_discard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).\n"
                },
                "poolingMode": {
                    "type": "string",
                    "description": "Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbPostgresqlClusterConfigResources:MdbPostgresqlClusterConfigResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a PostgreSQL host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of PostgreSQL hosts.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a PostgreSQL host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-postgresql/concepts/instance-types).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbPostgresqlClusterDatabase:MdbPostgresqlClusterDatabase": {
            "properties": {
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterDatabaseExtension:MdbPostgresqlClusterDatabaseExtension"
                    }
                },
                "lcCollate": {
                    "type": "string"
                },
                "lcType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "templateDb": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "owner"
            ]
        },
        "yandex:index/MdbPostgresqlClusterDatabaseExtension:MdbPostgresqlClusterDatabaseExtension": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbPostgresqlClusterHost:MdbPostgresqlClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address on creation. It can be changed on the fly only when `name` is set.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Host state name. It should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replication_source_name` parameter.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Host priority in HA group. It works only when `name` is set.\n",
                    "deprecationMessage": "The field has not affected anything. You can safely delete it."
                },
                "replicationSource": {
                    "type": "string",
                    "description": "Host replication source (fqdn), when replication_source is empty then host is in HA group.\n"
                },
                "replicationSourceName": {
                    "type": "string",
                    "description": "Host replication source name points to host's `name` from which this host should replicate. When not set then host in HA group. It works only when `name` is set.\n"
                },
                "role": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "replicationSource",
                        "role",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/MdbPostgresqlClusterMaintenanceWindow:MdbPostgresqlClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of the week (in `DDD` format). Allowed values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of the day in UTC (in `HH` format). Allowed value is between 1 and 24.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbPostgresqlClusterRestore:MdbPostgresqlClusterRestore": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://yandex.cloud/docs/managed-postgresql/operations/cluster-backups).\n",
                    "willReplaceOnChanges": true
                },
                "time": {
                    "type": "string",
                    "description": "Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.\n",
                    "willReplaceOnChanges": true
                },
                "timeInclusive": {
                    "type": "boolean",
                    "description": "Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before. Possible values:\n* `false` (default) — the restore point refers to the first backup moment before [time].\n* `true` — the restore point refers to the first backup point after [time].\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "backupId"
            ]
        },
        "yandex:index/MdbPostgresqlClusterUser:MdbPostgresqlClusterUser": {
            "properties": {
                "connLimit": {
                    "type": "integer"
                },
                "grants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "login": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterUserPermission:MdbPostgresqlClusterUserPermission"
                    }
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connLimit",
                        "grants",
                        "name",
                        "password",
                        "permissions",
                        "settings"
                    ]
                }
            }
        },
        "yandex:index/MdbPostgresqlClusterUserPermission:MdbPostgresqlClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MdbPostgresqlDatabaseExtension:MdbPostgresqlDatabaseExtension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the database extension. For more information on available extensions see [the official documentation](https://yandex.cloud/docs/managed-postgresql/operations/cluster-extensions).\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the extension.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbPostgresqlUserPermission:MdbPostgresqlUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MdbRedisClusterAccess:MdbRedisClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for DataLens. Can be either `true` or `false`.\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allow access for Web SQL. Can be either `true` or `false`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataLens",
                        "webSql"
                    ]
                }
            }
        },
        "yandex:index/MdbRedisClusterConfig:MdbRedisClusterConfig": {
            "properties": {
                "allowDataLoss": {
                    "type": "boolean",
                    "description": "Allows some data to be lost in favor of faster switchover/restart by RDSync.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterConfigBackupWindowStart:MdbRedisClusterConfigBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "clientOutputBufferLimitNormal": {
                    "type": "string",
                    "description": "Normal clients output buffer limits. See [redis config file](https://github.com/redis/redis/blob/6.2/redis.conf#L1841).\n"
                },
                "clientOutputBufferLimitPubsub": {
                    "type": "string",
                    "description": "Pubsub clients output buffer limits. See [redis config file](https://github.com/redis/redis/blob/6.2/redis.conf#L1843).\n"
                },
                "clusterAllowPubsubshardWhenDown": {
                    "type": "boolean",
                    "description": "Permits Pub/Sub shard operations when cluster is down.\n"
                },
                "clusterAllowReadsWhenDown": {
                    "type": "boolean",
                    "description": "Allows read operations when cluster is down.\n"
                },
                "clusterRequireFullCoverage": {
                    "type": "boolean",
                    "description": "Controls whether all hash slots must be covered by nodes.\n"
                },
                "databases": {
                    "type": "integer",
                    "description": "Number of databases (changing requires redis-server restart).\n"
                },
                "ioThreadsAllowed": {
                    "type": "boolean",
                    "description": "Allow Redis to use io-threads.\n"
                },
                "lfuDecayTime": {
                    "type": "integer",
                    "description": "The time, in minutes, that must elapse in order for the key counter to be divided by two (or decremented if it has a value less \u003c= 10).\n"
                },
                "lfuLogFactor": {
                    "type": "integer",
                    "description": "Determines how the frequency counter represents key hits.\n"
                },
                "luaTimeLimit": {
                    "type": "integer",
                    "description": "Maximum time in milliseconds for Lua scripts.\n"
                },
                "maxmemoryPercent": {
                    "type": "integer",
                    "description": "Redis maxmemory usage in percent\n"
                },
                "maxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis key eviction policy for a dataset that reaches maximum memory. Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).\n"
                },
                "notifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Select the events that Redis will notify among a set of classes.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the Redis cluster.\n",
                    "secret": true
                },
                "replBacklogSizePercent": {
                    "type": "integer",
                    "description": "Replication backlog size as a percentage of flavor maxmemory.\n"
                },
                "slowlogLogSlowerThan": {
                    "type": "integer",
                    "description": "Log slow queries below this number in microseconds.\n"
                },
                "slowlogMaxLen": {
                    "type": "integer",
                    "description": "Slow queries log length.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Close the connection after a client is idle for N seconds.\n"
                },
                "turnBeforeSwitchover": {
                    "type": "boolean",
                    "description": "Allows to turn before switchover in RDSync.\n"
                },
                "useLuajit": {
                    "type": "boolean",
                    "description": "Use JIT for lua scripts and functions.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Redis.\n"
                },
                "zsetMaxListpackEntries": {
                    "type": "integer",
                    "description": "Controls max number of entries in zset before conversion from memory-efficient listpack to CPU-efficient hash table and skiplist\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "backupWindowStart",
                        "clientOutputBufferLimitNormal",
                        "clientOutputBufferLimitPubsub",
                        "databases",
                        "ioThreadsAllowed",
                        "maxmemoryPolicy",
                        "notifyKeyspaceEvents",
                        "password",
                        "slowlogLogSlowerThan",
                        "slowlogMaxLen",
                        "timeout",
                        "useLuajit",
                        "version"
                    ]
                }
            }
        },
        "yandex:index/MdbRedisClusterConfigBackupWindowStart:MdbRedisClusterConfigBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbRedisClusterDiskSizeAutoscaling:MdbRedisClusterDiskSizeAutoscaling": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/MdbRedisClusterHost:MdbRedisClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address or not.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "replicaPriority": {
                    "type": "integer",
                    "description": "Replica priority of a current replica (usable for non-sharded only).\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard to which the host belongs.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "shardName",
                        "subnetId",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/MdbRedisClusterMaintenanceWindow:MdbRedisClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/MdbRedisClusterResources:MdbRedisClusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of Redis hosts - environment default is used if missing.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-redis/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskSize",
                        "diskTypeId",
                        "resourcePresetId"
                    ]
                }
            }
        },
        "yandex:index/MdbSqlserverClusterBackupWindowStart:MdbSqlserverClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MdbSqlserverClusterDatabase:MdbSqlserverClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/MdbSqlserverClusterHost:MdbSqlserverClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fqdn",
                        "subnetId",
                        "zone"
                    ]
                }
            }
        },
        "yandex:index/MdbSqlserverClusterResources:MdbSqlserverClusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a SQLServer host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of SQLServer hosts.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a SQLServer host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-sqlserver/concepts/instance-types).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/MdbSqlserverClusterUser:MdbSqlserverClusterUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterUserPermission:MdbSqlserverClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "password"
            ]
        },
        "yandex:index/MdbSqlserverClusterUserPermission:MdbSqlserverClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List user's roles in the database. Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "yandex:index/MonitoringDashboardParametrization:MonitoringDashboardParametrization": {
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardParametrizationParameter:MonitoringDashboardParametrizationParameter"
                    },
                    "description": "Dashboard parameters.\n"
                },
                "selectors": {
                    "type": "string",
                    "description": "Dashboard predefined parameters selector.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardParametrizationParameter:MonitoringDashboardParametrizationParameter": {
            "properties": {
                "customs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardParametrizationParameterCustom:MonitoringDashboardParametrizationParameterCustom"
                    },
                    "description": "Custom values parameter. Oneof: label_values, custom, text.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Parameter description.\n"
                },
                "hidden": {
                    "type": "boolean",
                    "description": "UI-visibility\n"
                },
                "id": {
                    "type": "string",
                    "description": "Parameter identifier.\n"
                },
                "labelValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardParametrizationParameterLabelValue:MonitoringDashboardParametrizationParameterLabelValue"
                    },
                    "description": "Label values parameter. Oneof: label_values, custom, text.\n"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardParametrizationParameterText:MonitoringDashboardParametrizationParameterText"
                    },
                    "description": "Text parameter. Oneof: label_values, custom, text.\n"
                },
                "title": {
                    "type": "string",
                    "description": "UI-visible title of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "yandex:index/MonitoringDashboardParametrizationParameterCustom:MonitoringDashboardParametrizationParameterCustom": {
            "properties": {
                "defaultValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default value.\n"
                },
                "multiselectable": {
                    "type": "boolean",
                    "description": "Specifies the multiselectable values of parameter.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Parameter values.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardParametrizationParameterLabelValue:MonitoringDashboardParametrizationParameterLabelValue": {
            "properties": {
                "defaultValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default value.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Folder ID.\n"
                },
                "labelKey": {
                    "type": "string",
                    "description": "Label key to list label values.\n"
                },
                "multiselectable": {
                    "type": "boolean",
                    "description": "Specifies the multiselectable values of parameter.\n"
                },
                "selectors": {
                    "type": "string",
                    "description": "Selectors to select metric label values.\n"
                }
            },
            "type": "object",
            "required": [
                "labelKey"
            ]
        },
        "yandex:index/MonitoringDashboardParametrizationParameterText:MonitoringDashboardParametrizationParameterText": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "Default value.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidget:MonitoringDashboardWidget": {
            "properties": {
                "charts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChart:MonitoringDashboardWidgetChart"
                    },
                    "description": "Chart widget settings.\n"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetPosition:MonitoringDashboardWidgetPosition"
                    },
                    "description": "Widget layout position.\n"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetText:MonitoringDashboardWidgetText"
                    },
                    "description": "Text widget settings.\n"
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetTitle:MonitoringDashboardWidgetTitle"
                    },
                    "description": "Title widget settings.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChart:MonitoringDashboardWidgetChart": {
            "properties": {
                "chartId": {
                    "type": "string",
                    "description": "Chart ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Chart description in dashboard (not enabled in UI).\n"
                },
                "displayLegend": {
                    "type": "boolean",
                    "description": "Enable legend under chart.\n"
                },
                "freeze": {
                    "type": "string",
                    "description": "Fixed time interval for chart. Values:\n- FREEZE_DURATION_HOUR: Last hour.\n- FREEZE_DURATION_DAY: Last day = last 24 hours.\n- FREEZE_DURATION_WEEK: Last 7 days.\n- FREEZE_DURATION_MONTH: Last 31 days.\n"
                },
                "nameHidingSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartNameHidingSetting:MonitoringDashboardWidgetChartNameHidingSetting"
                    },
                    "description": "Name hiding settings\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartQuery:MonitoringDashboardWidgetChartQuery"
                    },
                    "description": "Queries settings.\n"
                },
                "seriesOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartSeriesOverride:MonitoringDashboardWidgetChartSeriesOverride"
                    },
                    "description": "Time series settings.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Chart widget title.\n"
                },
                "visualizationSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSetting:MonitoringDashboardWidgetChartVisualizationSetting"
                    },
                    "description": "Visualization settings.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "freeze"
                    ]
                }
            }
        },
        "yandex:index/MonitoringDashboardWidgetChartNameHidingSetting:MonitoringDashboardWidgetChartNameHidingSetting": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "positive": {
                    "type": "boolean",
                    "description": "True if we want to show concrete series names only, false if we want to hide concrete series names\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartQuery:MonitoringDashboardWidgetChartQuery": {
            "properties": {
                "downsamplings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartQueryDownsampling:MonitoringDashboardWidgetChartQueryDownsampling"
                    },
                    "description": "Downsampling settings\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartQueryTarget:MonitoringDashboardWidgetChartQueryTarget"
                    },
                    "description": "Downsampling settings\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartQueryDownsampling:MonitoringDashboardWidgetChartQueryDownsampling": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Disable downsampling\n"
                },
                "gapFilling": {
                    "type": "string",
                    "description": "Parameters for filling gaps in data\n"
                },
                "gridAggregation": {
                    "type": "string",
                    "description": "Function that is used for downsampling\n"
                },
                "gridInterval": {
                    "type": "integer",
                    "description": "Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point\n"
                },
                "maxPoints": {
                    "type": "integer",
                    "description": "Maximum number of points to be returned\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartQueryTarget:MonitoringDashboardWidgetChartQueryTarget": {
            "properties": {
                "hidden": {
                    "type": "boolean",
                    "description": "Checks that target is visible or invisible\n"
                },
                "query": {
                    "type": "string",
                    "description": "Required. Query\n"
                },
                "textMode": {
                    "type": "boolean",
                    "description": "Text mode\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartSeriesOverride:MonitoringDashboardWidgetChartSeriesOverride": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Series name\n"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartSeriesOverrideSetting:MonitoringDashboardWidgetChartSeriesOverrideSetting"
                    },
                    "description": "Override settings\n"
                },
                "targetIndex": {
                    "type": "string",
                    "description": "Target index\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartSeriesOverrideSetting:MonitoringDashboardWidgetChartSeriesOverrideSetting": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "Series color or empty\n"
                },
                "growDown": {
                    "type": "boolean",
                    "description": "Stack grow down\n"
                },
                "name": {
                    "type": "string",
                    "description": "Series name or empty\n"
                },
                "stackName": {
                    "type": "string",
                    "description": "Stack name or empty\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type\n"
                },
                "yaxisPosition": {
                    "type": "string",
                    "description": "Yaxis position\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type",
                        "yaxisPosition"
                    ]
                }
            }
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSetting:MonitoringDashboardWidgetChartVisualizationSetting": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Aggregation\n"
                },
                "colorSchemeSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting"
                    },
                    "description": "Color scheme settings\n"
                },
                "heatmapSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting:MonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting"
                    },
                    "description": "Heatmap settings\n"
                },
                "interpolate": {
                    "type": "string",
                    "description": "Interpolate\n"
                },
                "normalize": {
                    "type": "boolean",
                    "description": "Normalize\n"
                },
                "showLabels": {
                    "type": "boolean",
                    "description": "Show chart labels\n"
                },
                "title": {
                    "type": "string",
                    "description": "Inside chart title\n"
                },
                "type": {
                    "type": "string",
                    "description": "Visualization type\n"
                },
                "yaxisSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingYaxisSetting:MonitoringDashboardWidgetChartVisualizationSettingYaxisSetting"
                    },
                    "description": "Y axis settings\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "aggregation",
                        "interpolate",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting": {
            "properties": {
                "automatics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic"
                    },
                    "description": "Automatic color scheme\n"
                },
                "gradients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient"
                    },
                    "description": "Gradient color scheme\n"
                },
                "standards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard"
                    },
                    "description": "Standard color scheme\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic": {
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient": {
            "properties": {
                "greenValue": {
                    "type": "string",
                    "description": "Gradient green value\n"
                },
                "redValue": {
                    "type": "string",
                    "description": "Gradient red value\n"
                },
                "violetValue": {
                    "type": "string",
                    "description": "Gradient violet_value\n"
                },
                "yellowValue": {
                    "type": "string",
                    "description": "Gradient yellow value\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard:MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard": {
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting:MonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting": {
            "properties": {
                "greenValue": {
                    "type": "string",
                    "description": "Heatmap green value\n"
                },
                "redValue": {
                    "type": "string",
                    "description": "Heatmap red value\n"
                },
                "violetValue": {
                    "type": "string",
                    "description": "Heatmap violet_value\n"
                },
                "yellowValue": {
                    "type": "string",
                    "description": "Heatmap yellow value\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingYaxisSetting:MonitoringDashboardWidgetChartVisualizationSettingYaxisSetting": {
            "properties": {
                "lefts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft:MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft"
                    },
                    "description": "Left Y axis settings\n"
                },
                "rights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight:MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight"
                    },
                    "description": "Right Y axis settings\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft:MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft": {
            "properties": {
                "max": {
                    "type": "string",
                    "description": "Max value in extended number format or empty\n"
                },
                "min": {
                    "type": "string",
                    "description": "Min value in extended number format or empty\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "Tick value precision (null as default, 0-7 in other cases)\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title or empty\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type\n"
                },
                "unitFormat": {
                    "type": "string",
                    "description": "Unit format\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "type",
                        "unitFormat"
                    ]
                }
            }
        },
        "yandex:index/MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight:MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight": {
            "properties": {
                "max": {
                    "type": "string",
                    "description": "Max value in extended number format or empty\n"
                },
                "min": {
                    "type": "string",
                    "description": "Min value in extended number format or empty\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "Tick value precision (null as default, 0-7 in other cases)\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title or empty\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type\n"
                },
                "unitFormat": {
                    "type": "string",
                    "description": "Unit format\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetPosition:MonitoringDashboardWidgetPosition": {
            "properties": {
                "h": {
                    "type": "integer",
                    "description": "Height.\n"
                },
                "w": {
                    "type": "integer",
                    "description": "Weight.\n"
                },
                "x": {
                    "type": "integer",
                    "description": "X-axis top-left corner coordinate.\n"
                },
                "y": {
                    "type": "integer",
                    "description": "Y-axis top-left corner coordinate.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetText:MonitoringDashboardWidgetText": {
            "properties": {
                "text": {
                    "type": "string",
                    "description": "Widget text.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/MonitoringDashboardWidgetTitle:MonitoringDashboardWidgetTitle": {
            "properties": {
                "size": {
                    "type": "string",
                    "description": "Title size.\nTitle size. Values:\n- TITLE_SIZE_XS: Extra small size.\n- TITLE_SIZE_S: Small size.\n- TITLE_SIZE_M: Middle size.\n- TITLE_SIZE_L: Large size.\n"
                },
                "text": {
                    "type": "string",
                    "description": "Title text.\n"
                }
            },
            "type": "object",
            "required": [
                "text"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "size",
                        "text"
                    ]
                }
            }
        },
        "yandex:index/OrganizationmanagerOsLoginSettingsSshCertificateSettings:OrganizationmanagerOsLoginSettingsSshCertificateSettings": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables usage of SSH certificates signed by trusted Certification Authority (CA).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/OrganizationmanagerOsLoginSettingsUserSshKeySettings:OrganizationmanagerOsLoginSettingsUserSshKeySettings": {
            "properties": {
                "allowManageOwnKeys": {
                    "type": "boolean",
                    "description": "If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables or disables usage of ssh keys assigned to a specific subject.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/OrganizationmanagerSamlFederationSecuritySettings:OrganizationmanagerSamlFederationSecuritySettings": {
            "properties": {
                "encryptedAssertions": {
                    "type": "boolean",
                    "description": "Enable encrypted assertions.\n"
                },
                "forceAuthn": {
                    "type": "boolean",
                    "description": "Force authentication on session expiration\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "encryptedAssertions",
                        "forceAuthn"
                    ]
                }
            }
        },
        "yandex:index/ServerlessContainerConnectivity:ServerlessContainerConnectivity": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Network the revision will have access to.\n"
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "yandex:index/ServerlessContainerImage:ServerlessContainerImage": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of arguments for Yandex Cloud Serverless Container.\n"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of commands for Yandex Cloud Serverless Container.\n"
                },
                "digest": {
                    "type": "string",
                    "description": "Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.\n"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of image that will be deployed as Yandex Cloud Serverless Container.\n"
                },
                "workDir": {
                    "type": "string",
                    "description": "Working directory for Yandex Cloud Serverless Container.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "digest",
                        "url"
                    ]
                }
            }
        },
        "yandex:index/ServerlessContainerLogOptions:ServerlessContainerLogOptions": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Is logging from container disabled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Log entries are written to default log group for specified folder.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log entries are written to specified log group.\n"
                },
                "minLevel": {
                    "type": "string",
                    "description": "Minimum log entry level.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/ServerlessContainerMetadataOptions:ServerlessContainerMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer",
                    "description": "Enables access to AWS flavored metadata (IMDSv1). Values: `0` - default, `1` - enabled, `2` - disabled.\n"
                },
                "gceHttpEndpoint": {
                    "type": "integer",
                    "description": "Enables access to GCE flavored metadata. Values: `0`- default, `1` - enabled, `2` - disabled.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsV1HttpEndpoint",
                        "gceHttpEndpoint"
                    ]
                }
            }
        },
        "yandex:index/ServerlessContainerMount:ServerlessContainerMount": {
            "properties": {
                "ephemeralDisk": {
                    "$ref": "#/types/yandex:index/ServerlessContainerMountEphemeralDisk:ServerlessContainerMountEphemeralDisk",
                    "description": "One of the available mount types. Disk available during the function execution time.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Mount’s accessibility mode. Valid values are `ro` and `rw`.\n"
                },
                "mountPointPath": {
                    "type": "string",
                    "description": "Path inside the container to access the directory in which the target is mounted.\n"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/ServerlessContainerMountObjectStorage:ServerlessContainerMountObjectStorage",
                    "description": "Available mount types. Object storage as a mount.\n"
                }
            },
            "type": "object",
            "required": [
                "mountPointPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "mode",
                        "mountPointPath"
                    ]
                }
            }
        },
        "yandex:index/ServerlessContainerMountEphemeralDisk:ServerlessContainerMountEphemeralDisk": {
            "properties": {
                "blockSizeKb": {
                    "type": "integer",
                    "description": "Block size of the ephemeral disk in KB.\n"
                },
                "sizeGb": {
                    "type": "integer",
                    "description": "Size of the ephemeral disk in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "sizeGb"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockSizeKb",
                        "sizeGb"
                    ]
                }
            }
        },
        "yandex:index/ServerlessContainerMountObjectStorage:ServerlessContainerMountObjectStorage": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the mounting bucket.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "yandex:index/ServerlessContainerProvisionPolicy:ServerlessContainerProvisionPolicy": {
            "properties": {
                "minInstances": {
                    "type": "integer",
                    "description": "Minimum number of prepared instances that are always ready to serve requests.\n"
                }
            },
            "type": "object",
            "required": [
                "minInstances"
            ]
        },
        "yandex:index/ServerlessContainerRuntime:ServerlessContainerRuntime": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/ServerlessContainerSecret:ServerlessContainerSecret": {
            "properties": {
                "environmentVariable": {
                    "type": "string",
                    "description": "Container's environment variable in which secret's value will be stored. Must begin with a letter (A-Z, a-z).\n"
                },
                "id": {
                    "type": "string",
                    "description": "Secret's ID.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Secret's entries key which value will be stored in environment variable.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Secret's version ID.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentVariable",
                "id",
                "key",
                "versionId"
            ]
        },
        "yandex:index/ServerlessContainerStorageMount:ServerlessContainerStorageMount": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the mounting bucket.\n"
                },
                "mountPointPath": {
                    "type": "string",
                    "description": "Path inside the container to access the directory in which the bucket is mounted.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Mount the bucket in read-only mode.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "mountPointPath"
            ]
        },
        "yandex:index/ServerlessEventrouterConnectorYd:ServerlessEventrouterConnectorYd": {
            "properties": {
                "consumer": {
                    "type": "string",
                    "description": "Consumer name\n"
                },
                "database": {
                    "type": "string",
                    "description": "Stream database\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has read permission on the stream\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "Stream name, absolute or relative\n"
                }
            },
            "type": "object",
            "required": [
                "consumer",
                "database",
                "serviceAccountId",
                "streamName"
            ]
        },
        "yandex:index/ServerlessEventrouterConnectorYmq:ServerlessEventrouterConnectorYmq": {
            "properties": {
                "batchSize": {
                    "type": "integer",
                    "description": "Batch size for polling\n"
                },
                "pollingTimeout": {
                    "type": "string",
                    "description": "Queue polling timeout\n"
                },
                "queueArn": {
                    "type": "string",
                    "description": "Queue ARN. Example: yrn:yc:ymq:ru-central1:aoe***:test\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has read access to the queue\n"
                },
                "visibilityTimeout": {
                    "type": "string",
                    "description": "Queue visibility timeout override\n"
                }
            },
            "type": "object",
            "required": [
                "queueArn",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSize",
                        "pollingTimeout",
                        "queueArn",
                        "serviceAccountId",
                        "visibilityTimeout"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleContainer:ServerlessEventrouterRuleContainer": {
            "properties": {
                "batchSettings": {
                    "$ref": "#/types/yandex:index/ServerlessEventrouterRuleContainerBatchSettings:ServerlessEventrouterRuleContainerBatchSettings",
                    "description": "Batch settings\n"
                },
                "containerId": {
                    "type": "string",
                    "description": "Container ID\n"
                },
                "containerRevisionId": {
                    "type": "string",
                    "description": "Container revision ID\n"
                },
                "path": {
                    "type": "string",
                    "description": "Endpoint HTTP path to invoke\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which should be used to call a container\n"
                }
            },
            "type": "object",
            "required": [
                "containerId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSettings",
                        "containerId"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleContainerBatchSettings:ServerlessEventrouterRuleContainerBatchSettings": {
            "properties": {
                "cutoff": {
                    "type": "string",
                    "description": "Maximum batch size: rule will send a batch if its lifetime exceeds this value\n"
                },
                "maxBytes": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if total size of events exceeds this value\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if number of events exceeds this value\n"
                }
            },
            "type": "object",
            "required": [
                "cutoff"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cutoff",
                        "maxBytes",
                        "maxCount"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleFunction:ServerlessEventrouterRuleFunction": {
            "properties": {
                "batchSettings": {
                    "$ref": "#/types/yandex:index/ServerlessEventrouterRuleFunctionBatchSettings:ServerlessEventrouterRuleFunctionBatchSettings",
                    "description": "Batch settings\n"
                },
                "functionId": {
                    "type": "string",
                    "description": "Function ID\n"
                },
                "functionTag": {
                    "type": "string",
                    "description": "Function tag\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has call permission on the function\n"
                }
            },
            "type": "object",
            "required": [
                "functionId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSettings",
                        "functionId"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleFunctionBatchSettings:ServerlessEventrouterRuleFunctionBatchSettings": {
            "properties": {
                "cutoff": {
                    "type": "string",
                    "description": "Maximum batch size: rule will send a batch if its lifetime exceeds this value\n"
                },
                "maxBytes": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if total size of events exceeds this value\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if number of events exceeds this value\n"
                }
            },
            "type": "object",
            "required": [
                "cutoff"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cutoff",
                        "maxBytes",
                        "maxCount"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleGatewayWebsocketBroadcast:ServerlessEventrouterRuleGatewayWebsocketBroadcast": {
            "properties": {
                "batchSettings": {
                    "$ref": "#/types/yandex:index/ServerlessEventrouterRuleGatewayWebsocketBroadcastBatchSettings:ServerlessEventrouterRuleGatewayWebsocketBroadcastBatchSettings",
                    "description": "Batch settings\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "Gateway ID\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has permission for writing to websockets\n"
                }
            },
            "type": "object",
            "required": [
                "gatewayId",
                "path",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSettings",
                        "gatewayId",
                        "path",
                        "serviceAccountId"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleGatewayWebsocketBroadcastBatchSettings:ServerlessEventrouterRuleGatewayWebsocketBroadcastBatchSettings": {
            "properties": {
                "cutoff": {
                    "type": "string",
                    "description": "Maximum batch size: rule will send a batch if its lifetime exceeds this value\n"
                },
                "maxBytes": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if total size of events exceeds this value\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if number of events exceeds this value\n"
                }
            },
            "type": "object",
            "required": [
                "cutoff"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cutoff",
                        "maxBytes",
                        "maxCount"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleLogging:ServerlessEventrouterRuleLogging": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "Folder ID\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log group ID\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has permission for writing logs\n"
                }
            },
            "type": "object",
            "required": [
                "serviceAccountId"
            ]
        },
        "yandex:index/ServerlessEventrouterRuleWorkflow:ServerlessEventrouterRuleWorkflow": {
            "properties": {
                "batchSettings": {
                    "$ref": "#/types/yandex:index/ServerlessEventrouterRuleWorkflowBatchSettings:ServerlessEventrouterRuleWorkflowBatchSettings",
                    "description": "Batch settings\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which should be used to start workflow\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "Workflow ID\n"
                }
            },
            "type": "object",
            "required": [
                "serviceAccountId",
                "workflowId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "batchSettings",
                        "serviceAccountId",
                        "workflowId"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleWorkflowBatchSettings:ServerlessEventrouterRuleWorkflowBatchSettings": {
            "properties": {
                "cutoff": {
                    "type": "string",
                    "description": "Maximum batch size: rule will send a batch if its lifetime exceeds this value\n"
                },
                "maxBytes": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if total size of events exceeds this value\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if number of events exceeds this value\n"
                }
            },
            "type": "object",
            "required": [
                "cutoff"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cutoff",
                        "maxBytes",
                        "maxCount"
                    ]
                }
            }
        },
        "yandex:index/ServerlessEventrouterRuleYd:ServerlessEventrouterRuleYd": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Stream database\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account, which has write permission on the stream\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "Full stream name, like /ru-central1/aoegtvhtp8ob********/cc8004q4lbo6********/test\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "serviceAccountId",
                "streamName"
            ]
        },
        "yandex:index/ServerlessEventrouterRuleYmq:ServerlessEventrouterRuleYmq": {
            "properties": {
                "queueArn": {
                    "type": "string",
                    "description": "Queue ARN. Example: yrn:yc:ymq:ru-central1:aoe***:test\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has write access to the queue\n"
                }
            },
            "type": "object",
            "required": [
                "queueArn",
                "serviceAccountId"
            ]
        },
        "yandex:index/SmartcaptchaCaptchaOverrideVariant:SmartcaptchaCaptchaOverrideVariant": {
            "properties": {
                "challengeType": {
                    "type": "string",
                    "description": "Additional task type of the captcha.\n"
                },
                "complexity": {
                    "type": "string",
                    "description": "Complexity of the captcha.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the rule. 0-512 characters long.\n"
                },
                "preCheckType": {
                    "type": "string",
                    "description": "Basic check type of the captcha.\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier of the variant.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRule:SmartcaptchaCaptchaSecurityRule": {
            "properties": {
                "condition": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleCondition:SmartcaptchaCaptchaSecurityRuleCondition",
                    "description": "The condition for matching the rule. You can find all possibilities of condition in [gRPC specs](https://github.com/yandex-cloud/cloudapi/blob/master/yandex/cloud/smartcaptcha/v1/captcha.proto).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the rule. 0-512 characters long.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule. The name is unique within the captcha. 1-50 characters long.\n"
                },
                "overrideVariantUuid": {
                    "type": "string",
                    "description": "Variant UUID to show in case of match the rule. Keep empty to use defaults.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the rule. Lower value means higher priority.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleCondition:SmartcaptchaCaptchaSecurityRuleCondition": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHeader:SmartcaptchaCaptchaSecurityRuleConditionHeader"
                    }
                },
                "host": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHost:SmartcaptchaCaptchaSecurityRuleConditionHost"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIp:SmartcaptchaCaptchaSecurityRuleConditionSourceIp"
                },
                "uri": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUri:SmartcaptchaCaptchaSecurityRuleConditionUri"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHeader:SmartcaptchaCaptchaSecurityRuleConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHeaderValue:SmartcaptchaCaptchaSecurityRuleConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHeaderValue:SmartcaptchaCaptchaSecurityRuleConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHost:SmartcaptchaCaptchaSecurityRuleConditionHost": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHostHost:SmartcaptchaCaptchaSecurityRuleConditionHostHost"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionHostHost:SmartcaptchaCaptchaSecurityRuleConditionHostHost": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIp:SmartcaptchaCaptchaSecurityRuleConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch:SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUri:SmartcaptchaCaptchaSecurityRuleConditionUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUriPath:SmartcaptchaCaptchaSecurityRuleConditionUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUriQuery:SmartcaptchaCaptchaSecurityRuleConditionUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUriPath:SmartcaptchaCaptchaSecurityRuleConditionUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUriQuery:SmartcaptchaCaptchaSecurityRuleConditionUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUriQueryValue:SmartcaptchaCaptchaSecurityRuleConditionUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SmartcaptchaCaptchaSecurityRuleConditionUriQueryValue:SmartcaptchaCaptchaSecurityRuleConditionUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketAnonymousAccessFlags:StorageBucketAnonymousAccessFlags": {
            "properties": {
                "configRead": {
                    "type": "boolean"
                },
                "list": {
                    "type": "boolean",
                    "description": "Allows to list object in bucket anonymously.\n"
                },
                "read": {
                    "type": "boolean",
                    "description": "Allows to read objects in bucket anonymously.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketCorsRule:StorageBucketCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which headers are allowed.\n"
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which origins are allowed.\n"
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies expose header in the response.\n"
                },
                "maxAgeSeconds": {
                    "type": "integer",
                    "description": "Specifies time in seconds that browser can cache the response for a preflight request.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ]
        },
        "yandex:index/StorageBucketGrant:StorageBucketGrant": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Canonical user id to grant for. Used only when type is `CanonicalUser`.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `FULL_CONTROL`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI address to grant for. Used only when type is Group.\n"
                }
            },
            "type": "object",
            "required": [
                "permissions",
                "type"
            ]
        },
        "yandex:index/StorageBucketHttps:StorageBucketHttps": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "Id of the certificate in Certificate Manager, that will be used for bucket.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateId"
            ]
        },
        "yandex:index/StorageBucketLifecycleRule:StorageBucketLifecycleRule": {
            "properties": {
                "abortIncompleteMultipartUploadDays": {
                    "type": "integer",
                    "description": "Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies lifecycle rule status.\n"
                },
                "expiration": {
                    "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleExpiration:StorageBucketLifecycleRuleExpiration",
                    "description": "Specifies a period in the object's expire.\n"
                },
                "filter": {
                    "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleFilter:StorageBucketLifecycleRuleFilter",
                    "description": "Filter block identifies one or more objects to which the rule applies. A Filter must have exactly one of Prefix, Tag, or And specified. The filter supports options listed below.\n\nAt least one of `abort_incomplete_multipart_upload_days`, `expiration`, `transition`, `noncurrent_version_expiration`, `noncurrent_version_transition` must be specified.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the rule. Must be less than or equal to 255 characters in length.\n"
                },
                "noncurrentVersionExpiration": {
                    "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleNoncurrentVersionExpiration:StorageBucketLifecycleRuleNoncurrentVersionExpiration",
                    "description": "Specifies when noncurrent object versions expire.\n"
                },
                "noncurrentVersionTransitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleNoncurrentVersionTransition:StorageBucketLifecycleRuleNoncurrentVersionTransition"
                    },
                    "description": "Specifies when noncurrent object versions transitions.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Object key prefix identifying one or more objects to which the rule applies.\n",
                    "deprecationMessage": "Use filter instead"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleTransition:StorageBucketLifecycleRuleTransition"
                    },
                    "description": "Specifies a period in the object's transitions.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "id"
                    ]
                }
            }
        },
        "yandex:index/StorageBucketLifecycleRuleExpiration:StorageBucketLifecycleRuleExpiration": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Specifies the date after which you want the corresponding action to take effect.\n"
                },
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days after object creation when the specific rule action takes effect.\n"
                },
                "expiredObjectDeleteMarker": {
                    "type": "boolean",
                    "description": "n a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketLifecycleRuleFilter:StorageBucketLifecycleRuleFilter": {
            "properties": {
                "and": {
                    "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleFilterAnd:StorageBucketLifecycleRuleFilterAnd",
                    "description": "A logical `and` operator applied to one or more filter parameters. It should be used when two or more of the above parameters are used.\n"
                },
                "objectSizeGreaterThan": {
                    "type": "integer",
                    "description": "Minimum object size to which the rule applies.\n"
                },
                "objectSizeLessThan": {
                    "type": "integer",
                    "description": "Maximum object size to which the rule applies.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Object key prefix identifying one or more objects to which the rule applies.\n"
                },
                "tag": {
                    "$ref": "#/types/yandex:index/StorageBucketLifecycleRuleFilterTag:StorageBucketLifecycleRuleFilterTag",
                    "description": "A key and value pair for filtering objects. E.g.: `key=key1, value=value1`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketLifecycleRuleFilterAnd:StorageBucketLifecycleRuleFilterAnd": {
            "properties": {
                "objectSizeGreaterThan": {
                    "type": "integer",
                    "description": "Minimum object size to which the rule applies.\n"
                },
                "objectSizeLessThan": {
                    "type": "integer",
                    "description": "Maximum object size to which the rule applies.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Object key prefix identifying one or more objects to which the rule applies.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags) for more information.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketLifecycleRuleFilterTag:StorageBucketLifecycleRuleFilterTag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/StorageBucketLifecycleRuleNoncurrentVersionExpiration:StorageBucketLifecycleRuleNoncurrentVersionExpiration": {
            "properties": {
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days noncurrent object versions expire.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketLifecycleRuleNoncurrentVersionTransition:StorageBucketLifecycleRuleNoncurrentVersionTransition": {
            "properties": {
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days noncurrent object versions transition.\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Specifies the storage class to which you want the noncurrent object versions to transition. Supported values: [`STANDARD_IA`, `COLD`, `ICE`].\n"
                }
            },
            "type": "object",
            "required": [
                "storageClass"
            ]
        },
        "yandex:index/StorageBucketLifecycleRuleTransition:StorageBucketLifecycleRuleTransition": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Specifies the date after which you want the corresponding action to take effect.\n"
                },
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days after object creation when the specific rule action takes effect.\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Specifies the storage class to which you want the object to transition. Supported values: [`STANDARD_IA`, `COLD`, `ICE`].\n"
                }
            },
            "type": "object",
            "required": [
                "storageClass"
            ]
        },
        "yandex:index/StorageBucketLogging:StorageBucketLogging": {
            "properties": {
                "targetBucket": {
                    "type": "string",
                    "description": "The name of the bucket that will receive the log objects.\n"
                },
                "targetPrefix": {
                    "type": "string",
                    "description": "To specify a key prefix for log objects.\n"
                }
            },
            "type": "object",
            "required": [
                "targetBucket"
            ]
        },
        "yandex:index/StorageBucketObjectLockConfiguration:StorageBucketObjectLockConfiguration": {
            "properties": {
                "objectLockEnabled": {
                    "type": "string",
                    "description": "Enable object locking in a bucket. Require versioning to be enabled.\n"
                },
                "rule": {
                    "$ref": "#/types/yandex:index/StorageBucketObjectLockConfigurationRule:StorageBucketObjectLockConfigurationRule",
                    "description": "Specifies a default locking configuration for added objects. Require object_lock_enabled to be enabled.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketObjectLockConfigurationRule:StorageBucketObjectLockConfigurationRule": {
            "properties": {
                "defaultRetention": {
                    "$ref": "#/types/yandex:index/StorageBucketObjectLockConfigurationRuleDefaultRetention:StorageBucketObjectLockConfigurationRuleDefaultRetention",
                    "description": "Default retention object.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultRetention"
            ]
        },
        "yandex:index/StorageBucketObjectLockConfigurationRuleDefaultRetention:StorageBucketObjectLockConfigurationRuleDefaultRetention": {
            "properties": {
                "days": {
                    "type": "integer",
                    "description": "Specifies a retention period in days after uploading an object version. It must be a positive integer. You can't set it simultaneously with `years`.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies a type of object lock. One of `[\"GOVERNANCE\", \"COMPLIANCE\"]`.\n"
                },
                "years": {
                    "type": "integer",
                    "description": "Specifies a retention period in years after uploading an object version. It must be a positive integer. You can't set it simultaneously with `days`.\n"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "yandex:index/StorageBucketServerSideEncryptionConfiguration:StorageBucketServerSideEncryptionConfiguration": {
            "properties": {
                "rule": {
                    "$ref": "#/types/yandex:index/StorageBucketServerSideEncryptionConfigurationRule:StorageBucketServerSideEncryptionConfigurationRule",
                    "description": "A single object for server-side encryption by default configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "rule"
            ]
        },
        "yandex:index/StorageBucketServerSideEncryptionConfigurationRule:StorageBucketServerSideEncryptionConfigurationRule": {
            "properties": {
                "applyServerSideEncryptionByDefault": {
                    "$ref": "#/types/yandex:index/StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault:StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault",
                    "description": "A single object for setting server-side encryption by default.\n"
                }
            },
            "type": "object",
            "required": [
                "applyServerSideEncryptionByDefault"
            ]
        },
        "yandex:index/StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault:StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault": {
            "properties": {
                "kmsMasterKeyId": {
                    "type": "string",
                    "description": "The KMS master key ID used for the SSE-KMS encryption.\n"
                },
                "sseAlgorithm": {
                    "type": "string",
                    "description": "The server-side encryption algorithm to use. Single valid value is `aws:kms`.\n"
                }
            },
            "type": "object",
            "required": [
                "kmsMasterKeyId",
                "sseAlgorithm"
            ]
        },
        "yandex:index/StorageBucketVersioning:StorageBucketVersioning": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/StorageBucketWebsite:StorageBucketWebsite": {
            "properties": {
                "errorDocument": {
                    "type": "string",
                    "description": "An absolute path to the document to return in case of a 4XX error.\n"
                },
                "indexDocument": {
                    "type": "string",
                    "description": "Storage returns this index document when requests are made to the root domain or any of the subfolders (unless using `redirect_all_requests_to`).\n"
                },
                "redirectAllRequestsTo": {
                    "type": "string",
                    "description": "A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.\n"
                },
                "routingRules": {
                    "type": "string",
                    "description": "A JSON array containing [routing rules](https://yandex.cloud/docs/storage/s3/api-ref/hosting/upload#request-scheme) describing redirect behavior and when redirects are applied.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule. 0-512 characters long.\n"
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "This allows you to evaluate backend capabilities and find the optimum limit values. Requests will not be blocked in this mode.\n"
                },
                "dynamicQuota": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota",
                    "description": "Dynamic quota. Grouping requests by a certain attribute and limiting the number of groups.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule. The name is unique within the ARL profile. 1-50 characters long.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Determines the priority in case there are several matched rules. Enter an integer within the range of 1 and 999999. The rule priority must be unique within the entire ARL profile. A lower numeric value means a higher priority.\n"
                },
                "staticQuota": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota",
                    "description": "Static quota. Counting each request individually.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action in case of exceeding this quota. Possible values: `DENY`.\n"
                },
                "characteristics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic"
                    },
                    "description": "List of characteristics.\n\n\u003e Exactly one characteristic specifier: `simple_characteristic` or `key_characteristic` should be specified.\n"
                },
                "condition": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition",
                    "description": "The condition for matching the rule. You can find all possibilities of condition in [gRPC specs](https://github.com/yandex-cloud/cloudapi/blob/master/yandex/cloud/smartwebsecurity/v1/security_profile.proto).\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "Desired maximum number of requests per period.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "Period of time in seconds.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean",
                    "description": "Determines case-sensitive or case-insensitive keys matching.\n"
                },
                "keyCharacteristic": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic",
                    "description": "Characteristic based on key match in the Query params, HTTP header, and HTTP cookie attributes. See [Rules](https://yandex.cloud/docs/smartwebsecurity/concepts/arl#requests-counting) for more details.\n"
                },
                "simpleCharacteristic": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic",
                    "description": "Characteristic automatically based on the Request path, HTTP method, IP address, Region, and Host attributes. See [Rules](https://yandex.cloud/docs/smartwebsecurity/concepts/arl#requests-counting) for more details.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of key characteristic. Possible values: `COOKIE_KEY`, `HEADER_KEY`, `QUERY_KEY`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "String value of the key.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of simple characteristic. Possible values: `REQUEST_PATH`, `HTTP_METHOD`, `IP`, `GEO`, `HOST`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition": {
            "properties": {
                "authority": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader"
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod"
                },
                "requestUri": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action in case of exceeding this quota. Possible values: `DENY`.\n"
                },
                "condition": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition",
                    "description": "The condition for matching the rule. You can find all possibilities of condition in [gRPC specs](https://github.com/yandex-cloud/cloudapi/blob/master/yandex/cloud/smartwebsecurity/v1/security_profile.proto).\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "Desired maximum number of requests per period.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "Period of time in seconds.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition": {
            "properties": {
                "authority": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader"
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod"
                },
                "requestUri": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRule:SwsSecurityProfileSecurityRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the rule. 0-512 characters long.\n"
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "This mode allows you to test your security profile or a single rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule. The name is unique within the security profile. 1-50 characters long.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Determines the priority for checking the incoming traffic.\n"
                },
                "ruleCondition": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleCondition:SwsSecurityProfileSecurityRuleRuleCondition",
                    "description": "Rule actions, see [Rule actions](https://yandex.cloud/en/docs/smartwebsecurity/concepts/rules#rule-action).\n"
                },
                "smartProtection": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtection:SwsSecurityProfileSecurityRuleSmartProtection",
                    "description": "Smart Protection rule, see [Smart Protection rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/rules#smart-protection-rules).\n"
                },
                "waf": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWaf:SwsSecurityProfileSecurityRuleWaf",
                    "description": "Web Application Firewall (WAF) rule, see [WAF rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/rules#waf-rules).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleCondition:SwsSecurityProfileSecurityRuleRuleCondition": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to perform if this rule matched. Possible values: `ALLOW` or `DENY`.\n"
                },
                "condition": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionCondition:SwsSecurityProfileSecurityRuleRuleConditionCondition",
                    "description": "The condition for matching the rule. You can find all possibilities of condition in [gRPC specs](https://github.com/yandex-cloud/cloudapi/blob/master/yandex/cloud/smartwebsecurity/v1/security_profile.proto).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionCondition:SwsSecurityProfileSecurityRuleRuleConditionCondition": {
            "properties": {
                "authority": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionAuthority:SwsSecurityProfileSecurityRuleRuleConditionConditionAuthority"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHeader:SwsSecurityProfileSecurityRuleRuleConditionConditionHeader"
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod:SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod"
                },
                "requestUri": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionAuthority:SwsSecurityProfileSecurityRuleRuleConditionConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority:SwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority:SwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHeader:SwsSecurityProfileSecurityRuleRuleConditionConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue:SwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue:SwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod:SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod:SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod:SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue:SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch:SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtection:SwsSecurityProfileSecurityRuleSmartProtection": {
            "properties": {
                "condition": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionCondition:SwsSecurityProfileSecurityRuleSmartProtectionCondition",
                    "description": "The condition for matching the rule. You can find all possibilities of condition in [gRPC specs](https://github.com/yandex-cloud/cloudapi/blob/master/yandex/cloud/smartwebsecurity/v1/security_profile.proto).\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of protection. Possible values: `FULL` (full protection means that the traffic will be checked based on ML models and behavioral analysis, with suspicious requests being sent to SmartCaptcha) or `API` (API protection means checking the traffic based on ML models and behavioral analysis without sending suspicious requests to SmartCaptcha. The suspicious requests will be blocked).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionCondition:SwsSecurityProfileSecurityRuleSmartProtectionCondition": {
            "properties": {
                "authority": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority:SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHeader:SwsSecurityProfileSecurityRuleSmartProtectionConditionHeader"
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod:SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod"
                },
                "requestUri": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority:SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority:SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority:SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHeader:SwsSecurityProfileSecurityRuleSmartProtectionConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue:SwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue:SwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod:SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod:SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod:SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue:SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch:SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWaf:SwsSecurityProfileSecurityRuleWaf": {
            "properties": {
                "condition": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafCondition:SwsSecurityProfileSecurityRuleWafCondition",
                    "description": "The condition for matching the rule. You can find all possibilities of condition in [gRPC specs](https://github.com/yandex-cloud/cloudapi/blob/master/yandex/cloud/smartwebsecurity/v1/security_profile.proto).\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of protection. Possible values: `FULL` (full protection means that the traffic will be checked based on ML models and behavioral analysis, with suspicious requests being sent to SmartCaptcha) or `API` (API protection means checking the traffic based on ML models and behavioral analysis without sending suspicious requests to SmartCaptcha. The suspicious requests will be blocked).\n"
                },
                "wafProfileId": {
                    "type": "string",
                    "description": "ID of WAF profile to use in this rule.\n"
                }
            },
            "type": "object",
            "required": [
                "wafProfileId"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafCondition:SwsSecurityProfileSecurityRuleWafCondition": {
            "properties": {
                "authority": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionAuthority:SwsSecurityProfileSecurityRuleWafConditionAuthority"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionHeader:SwsSecurityProfileSecurityRuleWafConditionHeader"
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionHttpMethod:SwsSecurityProfileSecurityRuleWafConditionHttpMethod"
                },
                "requestUri": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUri:SwsSecurityProfileSecurityRuleWafConditionRequestUri"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIp:SwsSecurityProfileSecurityRuleWafConditionSourceIp"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionAuthority:SwsSecurityProfileSecurityRuleWafConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority:SwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority:SwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionHeader:SwsSecurityProfileSecurityRuleWafConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionHeaderValue:SwsSecurityProfileSecurityRuleWafConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionHeaderValue:SwsSecurityProfileSecurityRuleWafConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionHttpMethod:SwsSecurityProfileSecurityRuleWafConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod:SwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod:SwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUri:SwsSecurityProfileSecurityRuleWafConditionRequestUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUriPath:SwsSecurityProfileSecurityRuleWafConditionRequestUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUriQuery:SwsSecurityProfileSecurityRuleWafConditionRequestUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUriPath:SwsSecurityProfileSecurityRuleWafConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUriQuery:SwsSecurityProfileSecurityRuleWafConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue:SwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue:SwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIp:SwsSecurityProfileSecurityRuleWafConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch:SwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileAnalyzeRequestBody:SwsWafProfileAnalyzeRequestBody": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Possible to turn analyzer on and turn if off.\n"
                },
                "sizeLimit": {
                    "type": "integer",
                    "description": "Maximum size of body to pass to analyzer. In kilobytes.\n"
                },
                "sizeLimitAction": {
                    "type": "string",
                    "description": "Action to perform if maximum size of body exceeded. Possible values: `IGNORE` and `DENY`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileCoreRuleSet:SwsWafProfileCoreRuleSet": {
            "properties": {
                "inboundAnomalyScore": {
                    "type": "integer",
                    "description": "Anomaly score. Enter an integer within the range of 2 and 10000. The higher this value, the more likely it is that the request that satisfies the rule is an attack. See [Rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#anomaly) for more details.\n"
                },
                "paranoiaLevel": {
                    "type": "integer",
                    "description": "Paranoia level. Enter an integer within the range of 1 and 4. Paranoia level classifies rules according to their aggression. The higher the paranoia level, the better your protection, but also the higher the probability of WAF false positives. See [Rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#paranoia) for more details. NOTE: this option has no effect on enabling or disabling rules, it is used only as recommendation for user to enable all rules with paranoia_level \u003c= this value.\n"
                },
                "ruleSet": {
                    "$ref": "#/types/yandex:index/SwsWafProfileCoreRuleSetRuleSet:SwsWafProfileCoreRuleSetRuleSet"
                }
            },
            "type": "object",
            "required": [
                "ruleSet"
            ]
        },
        "yandex:index/SwsWafProfileCoreRuleSetRuleSet:SwsWafProfileCoreRuleSetRuleSet": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "version"
            ]
        },
        "yandex:index/SwsWafProfileExclusionRule:SwsWafProfileExclusionRule": {
            "properties": {
                "condition": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleCondition:SwsWafProfileExclusionRuleCondition"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the rule. 0-512 characters long.\n"
                },
                "excludeRules": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleExcludeRules:SwsWafProfileExclusionRuleExcludeRules",
                    "description": "Exclude rules.\n"
                },
                "logExcluded": {
                    "type": "boolean",
                    "description": "Records the fact that an exception rule is triggered.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of exclusion rule.\n"
                }
            },
            "type": "object",
            "required": [
                "excludeRules"
            ]
        },
        "yandex:index/SwsWafProfileExclusionRuleCondition:SwsWafProfileExclusionRuleCondition": {
            "properties": {
                "authority": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionAuthority:SwsWafProfileExclusionRuleConditionAuthority"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionHeader:SwsWafProfileExclusionRuleConditionHeader"
                    }
                },
                "httpMethod": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionHttpMethod:SwsWafProfileExclusionRuleConditionHttpMethod"
                },
                "requestUri": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionRequestUri:SwsWafProfileExclusionRuleConditionRequestUri"
                },
                "sourceIp": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionSourceIp:SwsWafProfileExclusionRuleConditionSourceIp"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionAuthority:SwsWafProfileExclusionRuleConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionAuthorityAuthority:SwsWafProfileExclusionRuleConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionAuthorityAuthority:SwsWafProfileExclusionRuleConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionHeader:SwsWafProfileExclusionRuleConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionHeaderValue:SwsWafProfileExclusionRuleConditionHeaderValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionHeaderValue:SwsWafProfileExclusionRuleConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionHttpMethod:SwsWafProfileExclusionRuleConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionHttpMethodHttpMethod:SwsWafProfileExclusionRuleConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionHttpMethodHttpMethod:SwsWafProfileExclusionRuleConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionRequestUri:SwsWafProfileExclusionRuleConditionRequestUri": {
            "properties": {
                "path": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionRequestUriPath:SwsWafProfileExclusionRuleConditionRequestUriPath"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionRequestUriQuery:SwsWafProfileExclusionRuleConditionRequestUriQuery"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionRequestUriPath:SwsWafProfileExclusionRuleConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionRequestUriQuery:SwsWafProfileExclusionRuleConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionRequestUriQueryValue:SwsWafProfileExclusionRuleConditionRequestUriQueryValue"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionRequestUriQueryValue:SwsWafProfileExclusionRuleConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionSourceIp:SwsWafProfileExclusionRuleConditionSourceIp": {
            "properties": {
                "geoIpMatch": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch:SwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch"
                },
                "geoIpNotMatch": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch:SwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch"
                },
                "ipRangesMatch": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch:SwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch"
                },
                "ipRangesNotMatch": {
                    "$ref": "#/types/yandex:index/SwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch:SwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch:SwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch:SwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch:SwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch:SwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileExclusionRuleExcludeRules:SwsWafProfileExclusionRuleExcludeRules": {
            "properties": {
                "excludeAll": {
                    "type": "boolean",
                    "description": "Set this option true to exclude all rules.\n"
                },
                "ruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of rules to exclude.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/SwsWafProfileRule:SwsWafProfileRule": {
            "properties": {
                "isBlocking": {
                    "type": "boolean",
                    "description": "Determines is it rule blocking or not.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Determines is it rule enabled or not.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "Rule ID.\n"
                }
            },
            "type": "object",
            "required": [
                "ruleId"
            ]
        },
        "yandex:index/VpcAddressDnsRecord:VpcAddressDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "DNS zone id to create record at.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "FQDN for record to address.\n"
                },
                "ptr": {
                    "type": "boolean",
                    "description": "If PTR record is needed.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "TTL of DNS record.\n"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn"
            ]
        },
        "yandex:index/VpcAddressExternalIpv4Address:VpcAddressExternalIpv4Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Allocated IP address.\n",
                    "willReplaceOnChanges": true
                },
                "ddosProtectionProvider": {
                    "type": "string",
                    "description": "Enable DDOS protection. Possible values are: `qrator`\n",
                    "willReplaceOnChanges": true
                },
                "outgoingSmtpCapability": {
                    "type": "string",
                    "description": "Wanted outgoing smtp capability.\n",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "ddosProtectionProvider",
                        "outgoingSmtpCapability",
                        "zoneId"
                    ]
                }
            }
        },
        "yandex:index/VpcDefaultSecurityGroupEgress:VpcDefaultSecurityGroupEgress": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "fromPort": {
                    "type": "integer",
                    "description": "Minimum port number.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource identifier.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to assign to this rule.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number (if applied to a single port).\n"
                },
                "predefinedTarget": {
                    "type": "string",
                    "description": "Special-purpose targets. `self_security_group` refers to this particular security group. `loadbalancer_healthchecks` represents [loadbalancer health check nodes](https://yandex.cloud/docs/network-load-balancer/concepts/health-check).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Target security group ID for this rule.\n"
                },
                "toPort": {
                    "type": "integer",
                    "description": "Maximum port number.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv4 addresses for this rule.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv6 addresses for this rule. `v6_cidr_blocks` argument is currently not supported. It will be available in the future.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "labels",
                        "protocol"
                    ]
                }
            }
        },
        "yandex:index/VpcDefaultSecurityGroupIngress:VpcDefaultSecurityGroupIngress": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "fromPort": {
                    "type": "integer",
                    "description": "Minimum port number.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource identifier.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to assign to this rule.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number (if applied to a single port).\n"
                },
                "predefinedTarget": {
                    "type": "string",
                    "description": "Special-purpose targets. `self_security_group` refers to this particular security group. `loadbalancer_healthchecks` represents [loadbalancer health check nodes](https://yandex.cloud/docs/network-load-balancer/concepts/health-check).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Target security group ID for this rule.\n"
                },
                "toPort": {
                    "type": "integer",
                    "description": "Maximum port number.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv4 addresses for this rule.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv6 addresses for this rule. `v6_cidr_blocks` argument is currently not supported. It will be available in the future.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "labels",
                        "protocol"
                    ]
                }
            }
        },
        "yandex:index/VpcGatewaySharedEgressGateway:VpcGatewaySharedEgressGateway": {
            "type": "object"
        },
        "yandex:index/VpcPrivateEndpointDnsOptions:VpcPrivateEndpointDnsOptions": {
            "properties": {
                "privateDnsRecordsEnabled": {
                    "type": "boolean",
                    "description": "If enabled - additional service DNS will be created.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "privateDnsRecordsEnabled"
                    ]
                }
            }
        },
        "yandex:index/VpcPrivateEndpointEndpointAddress:VpcPrivateEndpointEndpointAddress": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Specifies IP address within `subnet_id`.\n"
                },
                "addressId": {
                    "type": "string",
                    "description": "ID of the address.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet of the IP address.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "addressId",
                        "subnetId"
                    ]
                }
            }
        },
        "yandex:index/VpcPrivateEndpointObjectStorage:VpcPrivateEndpointObjectStorage": {
            "type": "object"
        },
        "yandex:index/VpcRouteTableStaticRoute:VpcRouteTableStaticRoute": {
            "properties": {
                "destinationPrefix": {
                    "type": "string",
                    "description": "Route prefix in CIDR notation.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "ID of the gateway used ad next hop.\n"
                },
                "nextHopAddress": {
                    "type": "string",
                    "description": "Address of the next hop.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/VpcSecurityGroupEgress:VpcSecurityGroupEgress": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "fromPort": {
                    "type": "integer",
                    "description": "Minimum port number.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource identifier.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to assign to this rule.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number (if applied to a single port).\n"
                },
                "predefinedTarget": {
                    "type": "string",
                    "description": "Special-purpose targets. `self_security_group` refers to this particular security group. `loadbalancer_healthchecks` represents [loadbalancer health check nodes](https://yandex.cloud/docs/network-load-balancer/concepts/health-check).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Target security group ID for this rule.\n"
                },
                "toPort": {
                    "type": "integer",
                    "description": "Maximum port number.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv4 addresses for this rule.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv6 addresses for this rule. `v6_cidr_blocks` argument is currently not supported. It will be available in the future.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "labels",
                        "protocol"
                    ]
                }
            }
        },
        "yandex:index/VpcSecurityGroupIngress:VpcSecurityGroupIngress": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "fromPort": {
                    "type": "integer",
                    "description": "Minimum port number.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource identifier.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to assign to this rule.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number (if applied to a single port).\n"
                },
                "predefinedTarget": {
                    "type": "string",
                    "description": "Special-purpose targets. `self_security_group` refers to this particular security group. `loadbalancer_healthchecks` represents [loadbalancer health check nodes](https://yandex.cloud/docs/network-load-balancer/concepts/health-check).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Target security group ID for this rule.\n"
                },
                "toPort": {
                    "type": "integer",
                    "description": "Maximum port number.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv4 addresses for this rule.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv6 addresses for this rule. `v6_cidr_blocks` argument is currently not supported. It will be available in the future.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "labels",
                        "protocol"
                    ]
                }
            }
        },
        "yandex:index/VpcSubnetDhcpOptions:VpcSubnetDhcpOptions": {
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "Domain name.\n"
                },
                "domainNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domain name server IP addresses.\n"
                },
                "ntpServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "NTP server IP addresses.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/YdbDatabaseDedicatedLocation:YdbDatabaseDedicatedLocation": {
            "properties": {
                "region": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedLocationRegion:YdbDatabaseDedicatedLocationRegion",
                    "description": "Region for the Yandex Database cluster.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "yandex:index/YdbDatabaseDedicatedLocationRegion:YdbDatabaseDedicatedLocationRegion": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Region ID for the Yandex Database cluster.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "yandex:index/YdbDatabaseDedicatedScalePolicy:YdbDatabaseDedicatedScalePolicy": {
            "properties": {
                "fixedScale": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedScalePolicyFixedScale:YdbDatabaseDedicatedScalePolicyFixedScale",
                    "description": "Fixed scaling policy for the Yandex Database cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "fixedScale"
            ]
        },
        "yandex:index/YdbDatabaseDedicatedScalePolicyFixedScale:YdbDatabaseDedicatedScalePolicyFixedScale": {
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "Number of instances for the Yandex Database cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "size"
            ]
        },
        "yandex:index/YdbDatabaseDedicatedStorageConfig:YdbDatabaseDedicatedStorageConfig": {
            "properties": {
                "groupCount": {
                    "type": "integer",
                    "description": "Amount of storage groups of selected type for the Yandex Database cluster.\n"
                },
                "storageTypeId": {
                    "type": "string",
                    "description": "Storage type ID for the Yandex Database cluster. Available presets can be obtained via `yc ydb storage-type list` command.\n"
                }
            },
            "type": "object",
            "required": [
                "groupCount",
                "storageTypeId"
            ]
        },
        "yandex:index/YdbDatabaseServerlessServerlessDatabase:YdbDatabaseServerlessServerlessDatabase": {
            "properties": {
                "enableThrottlingRcuLimit": {
                    "type": "boolean"
                },
                "provisionedRcuLimit": {
                    "type": "integer"
                },
                "storageSizeLimit": {
                    "type": "integer"
                },
                "throttlingRcuLimit": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enableThrottlingRcuLimit",
                        "provisionedRcuLimit",
                        "storageSizeLimit",
                        "throttlingRcuLimit"
                    ]
                }
            }
        },
        "yandex:index/YdbTableChangefeedConsumer:YdbTableChangefeedConsumer": {
            "properties": {
                "important": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "startingMessageTimestampMs": {
                    "type": "integer"
                },
                "supportedCodecs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "important",
                        "name",
                        "startingMessageTimestampMs",
                        "supportedCodecs"
                    ]
                }
            }
        },
        "yandex:index/YdbTableColumn:YdbTableColumn": {
            "properties": {
                "family": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notNull": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "family",
                        "name",
                        "notNull",
                        "type"
                    ]
                }
            }
        },
        "yandex:index/YdbTableFamily:YdbTableFamily": {
            "properties": {
                "compression": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "data",
                "name"
            ]
        },
        "yandex:index/YdbTablePartitioningSettings:YdbTablePartitioningSettings": {
            "properties": {
                "autoPartitioningByLoad": {
                    "type": "boolean"
                },
                "autoPartitioningBySizeEnabled": {
                    "type": "boolean"
                },
                "autoPartitioningMaxPartitionsCount": {
                    "type": "integer"
                },
                "autoPartitioningMinPartitionsCount": {
                    "type": "integer"
                },
                "autoPartitioningPartitionSizeMb": {
                    "type": "integer"
                },
                "partitionAtKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTablePartitioningSettingsPartitionAtKey:YdbTablePartitioningSettingsPartitionAtKey"
                    }
                },
                "uniformPartitions": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autoPartitioningMaxPartitionsCount",
                        "autoPartitioningMinPartitionsCount",
                        "autoPartitioningPartitionSizeMb",
                        "partitionAtKeys",
                        "uniformPartitions"
                    ]
                }
            }
        },
        "yandex:index/YdbTablePartitioningSettingsPartitionAtKey:YdbTablePartitioningSettingsPartitionAtKey": {
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "keys"
            ]
        },
        "yandex:index/YdbTableTtl:YdbTableTtl": {
            "properties": {
                "columnName": {
                    "type": "string"
                },
                "expireInterval": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "columnName",
                "expireInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "columnName",
                        "expireInterval",
                        "unit"
                    ]
                }
            }
        },
        "yandex:index/YdbTopicConsumer:YdbTopicConsumer": {
            "properties": {
                "important": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "startingMessageTimestampMs": {
                    "type": "integer"
                },
                "supportedCodecs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "important",
                        "name",
                        "startingMessageTimestampMs",
                        "supportedCodecs"
                    ]
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackend:getAlbBackendGroupGrpcBackend": {
            "properties": {
                "healthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendHealthcheck:getAlbBackendGroupGrpcBackendHealthcheck"
                },
                "loadBalancingConfig": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendLoadBalancingConfig:getAlbBackendGroupGrpcBackendLoadBalancingConfig"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "targetGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tls": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendTls:getAlbBackendGroupGrpcBackendTls"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "healthcheck",
                "loadBalancingConfig",
                "name",
                "port",
                "targetGroupIds",
                "tls",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendHealthcheck:getAlbBackendGroupGrpcBackendHealthcheck": {
            "properties": {
                "grpcHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck:getAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck"
                },
                "healthcheckPort": {
                    "type": "integer"
                },
                "healthyThreshold": {
                    "type": "integer"
                },
                "httpHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck:getAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck"
                },
                "interval": {
                    "type": "string"
                },
                "intervalJitterPercent": {
                    "type": "number"
                },
                "streamHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck:getAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck"
                },
                "timeout": {
                    "type": "string"
                },
                "unhealthyThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "grpcHealthcheck",
                "healthcheckPort",
                "healthyThreshold",
                "httpHealthcheck",
                "interval",
                "intervalJitterPercent",
                "streamHealthcheck",
                "timeout",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck:getAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck:getAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck": {
            "properties": {
                "expectedStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "host": {
                    "type": "string"
                },
                "http2": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expectedStatuses",
                "host",
                "http2",
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck:getAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck": {
            "properties": {
                "receive": {
                    "type": "string"
                },
                "send": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "receive",
                "send"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendLoadBalancingConfig:getAlbBackendGroupGrpcBackendLoadBalancingConfig": {
            "properties": {
                "localityAwareRoutingPercent": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "panicThreshold": {
                    "type": "integer"
                },
                "strictLocality": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "localityAwareRoutingPercent",
                "mode",
                "panicThreshold",
                "strictLocality"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendTls:getAlbBackendGroupGrpcBackendTls": {
            "properties": {
                "sni": {
                    "type": "string"
                },
                "validationContext": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackendTlsValidationContext:getAlbBackendGroupGrpcBackendTlsValidationContext"
                }
            },
            "type": "object",
            "required": [
                "sni",
                "validationContext"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupGrpcBackendTlsValidationContext:getAlbBackendGroupGrpcBackendTlsValidationContext": {
            "properties": {
                "trustedCaBytes": {
                    "type": "string"
                },
                "trustedCaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "trustedCaBytes",
                "trustedCaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackend:getAlbBackendGroupHttpBackend": {
            "properties": {
                "healthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendHealthcheck:getAlbBackendGroupHttpBackendHealthcheck"
                },
                "http2": {
                    "type": "boolean"
                },
                "loadBalancingConfig": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendLoadBalancingConfig:getAlbBackendGroupHttpBackendLoadBalancingConfig"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "storageBucket": {
                    "type": "string"
                },
                "targetGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tls": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendTls:getAlbBackendGroupHttpBackendTls"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "healthcheck",
                "http2",
                "loadBalancingConfig",
                "name",
                "port",
                "storageBucket",
                "targetGroupIds",
                "tls",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendHealthcheck:getAlbBackendGroupHttpBackendHealthcheck": {
            "properties": {
                "grpcHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck:getAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck"
                },
                "healthcheckPort": {
                    "type": "integer"
                },
                "healthyThreshold": {
                    "type": "integer"
                },
                "httpHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendHealthcheckHttpHealthcheck:getAlbBackendGroupHttpBackendHealthcheckHttpHealthcheck"
                },
                "interval": {
                    "type": "string"
                },
                "intervalJitterPercent": {
                    "type": "number"
                },
                "streamHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendHealthcheckStreamHealthcheck:getAlbBackendGroupHttpBackendHealthcheckStreamHealthcheck"
                },
                "timeout": {
                    "type": "string"
                },
                "unhealthyThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "grpcHealthcheck",
                "healthcheckPort",
                "healthyThreshold",
                "httpHealthcheck",
                "interval",
                "intervalJitterPercent",
                "streamHealthcheck",
                "timeout",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck:getAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendHealthcheckHttpHealthcheck:getAlbBackendGroupHttpBackendHealthcheckHttpHealthcheck": {
            "properties": {
                "expectedStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "host": {
                    "type": "string"
                },
                "http2": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expectedStatuses",
                "host",
                "http2",
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendHealthcheckStreamHealthcheck:getAlbBackendGroupHttpBackendHealthcheckStreamHealthcheck": {
            "properties": {
                "receive": {
                    "type": "string"
                },
                "send": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "receive",
                "send"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendLoadBalancingConfig:getAlbBackendGroupHttpBackendLoadBalancingConfig": {
            "properties": {
                "localityAwareRoutingPercent": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "panicThreshold": {
                    "type": "integer"
                },
                "strictLocality": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "localityAwareRoutingPercent",
                "mode",
                "panicThreshold",
                "strictLocality"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendTls:getAlbBackendGroupHttpBackendTls": {
            "properties": {
                "sni": {
                    "type": "string"
                },
                "validationContext": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackendTlsValidationContext:getAlbBackendGroupHttpBackendTlsValidationContext"
                }
            },
            "type": "object",
            "required": [
                "sni",
                "validationContext"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupHttpBackendTlsValidationContext:getAlbBackendGroupHttpBackendTlsValidationContext": {
            "properties": {
                "trustedCaBytes": {
                    "type": "string"
                },
                "trustedCaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "trustedCaBytes",
                "trustedCaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupSessionAffinity:getAlbBackendGroupSessionAffinity": {
            "properties": {
                "connection": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupSessionAffinityConnection:getAlbBackendGroupSessionAffinityConnection",
                    "description": "IP address affinity\n"
                },
                "cookie": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupSessionAffinityCookie:getAlbBackendGroupSessionAffinityCookie",
                    "description": "Cookie affinity\n"
                },
                "header": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupSessionAffinityHeader:getAlbBackendGroupSessionAffinityHeader",
                    "description": "Request header affinity\n"
                }
            },
            "type": "object",
            "required": [
                "connection",
                "cookie",
                "header"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupSessionAffinityConnection:getAlbBackendGroupSessionAffinityConnection": {
            "properties": {
                "sourceIp": {
                    "type": "boolean",
                    "description": "Use source IP address\n"
                }
            },
            "type": "object",
            "required": [
                "sourceIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupSessionAffinityCookie:getAlbBackendGroupSessionAffinityCookie": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the HTTP cookie\n"
                },
                "ttl": {
                    "type": "string",
                    "description": "TTL for the cookie (if not set, session cookie will be used)\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupSessionAffinityHeader:getAlbBackendGroupSessionAffinityHeader": {
            "properties": {
                "headerName": {
                    "type": "string",
                    "description": "The name of the request header that will be used\n"
                }
            },
            "type": "object",
            "required": [
                "headerName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackend:getAlbBackendGroupStreamBackend": {
            "properties": {
                "enableProxyProtocol": {
                    "type": "boolean"
                },
                "healthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendHealthcheck:getAlbBackendGroupStreamBackendHealthcheck"
                },
                "keepConnectionsOnHostHealthFailure": {
                    "type": "boolean"
                },
                "loadBalancingConfig": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendLoadBalancingConfig:getAlbBackendGroupStreamBackendLoadBalancingConfig"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "targetGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tls": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendTls:getAlbBackendGroupStreamBackendTls"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enableProxyProtocol",
                "healthcheck",
                "loadBalancingConfig",
                "name",
                "port",
                "targetGroupIds",
                "tls",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendHealthcheck:getAlbBackendGroupStreamBackendHealthcheck": {
            "properties": {
                "grpcHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck:getAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck"
                },
                "healthcheckPort": {
                    "type": "integer"
                },
                "healthyThreshold": {
                    "type": "integer"
                },
                "httpHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendHealthcheckHttpHealthcheck:getAlbBackendGroupStreamBackendHealthcheckHttpHealthcheck"
                },
                "interval": {
                    "type": "string"
                },
                "intervalJitterPercent": {
                    "type": "number"
                },
                "streamHealthcheck": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendHealthcheckStreamHealthcheck:getAlbBackendGroupStreamBackendHealthcheckStreamHealthcheck"
                },
                "timeout": {
                    "type": "string"
                },
                "unhealthyThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "grpcHealthcheck",
                "healthcheckPort",
                "healthyThreshold",
                "httpHealthcheck",
                "interval",
                "intervalJitterPercent",
                "streamHealthcheck",
                "timeout",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck:getAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendHealthcheckHttpHealthcheck:getAlbBackendGroupStreamBackendHealthcheckHttpHealthcheck": {
            "properties": {
                "expectedStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "host": {
                    "type": "string"
                },
                "http2": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expectedStatuses",
                "host",
                "http2",
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendHealthcheckStreamHealthcheck:getAlbBackendGroupStreamBackendHealthcheckStreamHealthcheck": {
            "properties": {
                "receive": {
                    "type": "string"
                },
                "send": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "receive",
                "send"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendLoadBalancingConfig:getAlbBackendGroupStreamBackendLoadBalancingConfig": {
            "properties": {
                "localityAwareRoutingPercent": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "panicThreshold": {
                    "type": "integer"
                },
                "strictLocality": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "localityAwareRoutingPercent",
                "mode",
                "panicThreshold",
                "strictLocality"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendTls:getAlbBackendGroupStreamBackendTls": {
            "properties": {
                "sni": {
                    "type": "string"
                },
                "validationContext": {
                    "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackendTlsValidationContext:getAlbBackendGroupStreamBackendTlsValidationContext"
                }
            },
            "type": "object",
            "required": [
                "sni",
                "validationContext"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbBackendGroupStreamBackendTlsValidationContext:getAlbBackendGroupStreamBackendTlsValidationContext": {
            "properties": {
                "trustedCaBytes": {
                    "type": "string"
                },
                "trustedCaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "trustedCaBytes",
                "trustedCaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbHttpRouterRouteOption:getAlbHttpRouterRouteOption": {
            "properties": {
                "rbacs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbHttpRouterRouteOptionRbac:getAlbHttpRouterRouteOptionRbac"
                    }
                },
                "securityProfileId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "rbacs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbHttpRouterRouteOptionRbac:getAlbHttpRouterRouteOptionRbac": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbHttpRouterRouteOptionRbacPrincipal:getAlbHttpRouterRouteOptionRbacPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "principals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbHttpRouterRouteOptionRbacPrincipal:getAlbHttpRouterRouteOptionRbacPrincipal": {
            "properties": {
                "andPrincipals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipal:getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "andPrincipals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipal:getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipal": {
            "properties": {
                "any": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeader:getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeader"
                    }
                },
                "remoteIp": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "any",
                "headers",
                "remoteIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeader:getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeaderValue:getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeaderValue:getAlbHttpRouterRouteOptionRbacPrincipalAndPrincipalHeaderValue": {
            "properties": {
                "exact": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exact",
                "prefix",
                "regex"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerAllocationPolicy:getAlbLoadBalancerAllocationPolicy": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerAllocationPolicyLocation:getAlbLoadBalancerAllocationPolicyLocation"
                    },
                    "description": "Unique set of locations.\n"
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerAllocationPolicyLocation:getAlbLoadBalancerAllocationPolicyLocation": {
            "properties": {
                "disableTraffic": {
                    "type": "boolean",
                    "description": "If set, will disable all L7 instances in the zone for request handling.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet that location is located at.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "Unique set of locations.\n"
                }
            },
            "type": "object",
            "required": [
                "disableTraffic",
                "subnetId",
                "zoneId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListener:getAlbLoadBalancerListener": {
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerEndpoint:getAlbLoadBalancerListenerEndpoint"
                    },
                    "description": "Network endpoint (addresses and ports) of the listener.\n"
                },
                "https": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerHttp:getAlbLoadBalancerListenerHttp"
                    },
                    "description": "HTTP handler that sets plain text HTTP router.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the listener.\n"
                },
                "stream": {
                    "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerStream:getAlbLoadBalancerListenerStream",
                    "description": "Stream configuration\n"
                },
                "tls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTl:getAlbLoadBalancerListenerTl"
                    },
                    "description": "TLS configuration\n"
                }
            },
            "type": "object",
            "required": [
                "endpoints",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerEndpoint:getAlbLoadBalancerListenerEndpoint": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerEndpointAddress:getAlbLoadBalancerListenerEndpointAddress"
                    },
                    "description": "One or more addresses to listen on.\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "One or more ports to listen on.\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerEndpointAddress:getAlbLoadBalancerListenerEndpointAddress": {
            "properties": {
                "externalIpv4Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerEndpointAddressExternalIpv4Address:getAlbLoadBalancerListenerEndpointAddressExternalIpv4Address"
                    },
                    "description": "External IPv4 address.\n"
                },
                "externalIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerEndpointAddressExternalIpv6Address:getAlbLoadBalancerListenerEndpointAddressExternalIpv6Address"
                    },
                    "description": "External IPv6 address.\n"
                },
                "internalIpv4Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerEndpointAddressInternalIpv4Address:getAlbLoadBalancerListenerEndpointAddressInternalIpv4Address"
                    },
                    "description": "Internal IPv4 address.\n"
                }
            },
            "type": "object",
            "required": [
                "externalIpv4Addresses",
                "externalIpv6Addresses",
                "internalIpv4Addresses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerEndpointAddressExternalIpv4Address:getAlbLoadBalancerListenerEndpointAddressExternalIpv4Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Provided by the client or computed automatically.\n"
                }
            },
            "type": "object",
            "required": [
                "address"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerEndpointAddressExternalIpv6Address:getAlbLoadBalancerListenerEndpointAddressExternalIpv6Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Provided by the client or computed automatically.\n"
                }
            },
            "type": "object",
            "required": [
                "address"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerEndpointAddressInternalIpv4Address:getAlbLoadBalancerListenerEndpointAddressInternalIpv4Address": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Provided by the client or computed automatically.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet that the address belongs to.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerHttp:getAlbLoadBalancerListenerHttp": {
            "properties": {
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerHttpHandler:getAlbLoadBalancerListenerHttpHandler"
                    },
                    "description": "HTTP handler.\n"
                },
                "redirects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerHttpRedirect:getAlbLoadBalancerListenerHttpRedirect"
                    },
                    "description": "Shortcut for adding http \u003e https redirects.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getAlbLoadBalancerListenerHttpHandler:getAlbLoadBalancerListenerHttpHandler": {
            "properties": {
                "allowHttp10": {
                    "type": "boolean",
                    "description": "If set, will enable only HTTP1 protocol with HTTP1.0 support.\n"
                },
                "http2Options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerHttpHandlerHttp2Option:getAlbLoadBalancerListenerHttpHandlerHttp2Option"
                    },
                    "description": "If set, will enable HTTP2 protocol for the handler.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "HTTP router id.\n"
                },
                "rewriteRequestId": {
                    "type": "boolean",
                    "description": "When unset, will preserve the incoming `x-request-id` header, otherwise would rewrite it with a new value.\n"
                }
            },
            "type": "object",
            "required": [
                "http2Options",
                "httpRouterId",
                "rewriteRequestId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerHttpHandlerHttp2Option:getAlbLoadBalancerListenerHttpHandlerHttp2Option": {
            "properties": {
                "maxConcurrentStreams": {
                    "type": "integer",
                    "description": "Maximum number of concurrent streams.\n"
                }
            },
            "type": "object",
            "required": [
                "maxConcurrentStreams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerHttpRedirect:getAlbLoadBalancerListenerHttpRedirect": {
            "properties": {
                "httpToHttps": {
                    "type": "boolean",
                    "description": "Redirects all unencrypted HTTP requests to the same URI with scheme changed to `https`.\n"
                }
            },
            "type": "object",
            "required": [
                "httpToHttps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerStream:getAlbLoadBalancerListenerStream": {
            "properties": {
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerStreamHandler:getAlbLoadBalancerListenerStreamHandler"
                    },
                    "description": "Stream handler resource.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getAlbLoadBalancerListenerStreamHandler:getAlbLoadBalancerListenerStreamHandler": {
            "properties": {
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend Group ID.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.\n"
                }
            },
            "type": "object",
            "required": [
                "backendGroupId",
                "idleTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTl:getAlbLoadBalancerListenerTl": {
            "properties": {
                "defaultHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlDefaultHandler:getAlbLoadBalancerListenerTlDefaultHandler"
                    },
                    "description": "TLS handler resource.\n"
                },
                "sniHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlSniHandler:getAlbLoadBalancerListenerTlSniHandler"
                    },
                    "description": "Settings for handling requests with Server Name Indication (SNI)\n"
                }
            },
            "type": "object",
            "required": [
                "defaultHandlers",
                "sniHandlers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlDefaultHandler:getAlbLoadBalancerListenerTlDefaultHandler": {
            "properties": {
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate IDs in the Certificate Manager\n"
                },
                "httpHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlDefaultHandlerHttpHandler:getAlbLoadBalancerListenerTlDefaultHandlerHttpHandler"
                    },
                    "description": "HTTP handler.\n"
                },
                "streamHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlDefaultHandlerStreamHandler:getAlbLoadBalancerListenerTlDefaultHandlerStreamHandler"
                    },
                    "description": "Stream handler resource.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlDefaultHandlerHttpHandler:getAlbLoadBalancerListenerTlDefaultHandlerHttpHandler": {
            "properties": {
                "allowHttp10": {
                    "type": "boolean",
                    "description": "If set, will enable only HTTP1 protocol with HTTP1.0 support.\n"
                },
                "http2Options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlDefaultHandlerHttpHandlerHttp2Option:getAlbLoadBalancerListenerTlDefaultHandlerHttpHandlerHttp2Option"
                    },
                    "description": "If set, will enable HTTP2 protocol for the handler.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "HTTP router id.\n"
                },
                "rewriteRequestId": {
                    "type": "boolean",
                    "description": "When unset, will preserve the incoming `x-request-id` header, otherwise would rewrite it with a new value.\n"
                }
            },
            "type": "object",
            "required": [
                "http2Options",
                "httpRouterId",
                "rewriteRequestId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlDefaultHandlerHttpHandlerHttp2Option:getAlbLoadBalancerListenerTlDefaultHandlerHttpHandlerHttp2Option": {
            "properties": {
                "maxConcurrentStreams": {
                    "type": "integer",
                    "description": "Maximum number of concurrent streams.\n"
                }
            },
            "type": "object",
            "required": [
                "maxConcurrentStreams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlDefaultHandlerStreamHandler:getAlbLoadBalancerListenerTlDefaultHandlerStreamHandler": {
            "properties": {
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend Group ID.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.\n"
                }
            },
            "type": "object",
            "required": [
                "backendGroupId",
                "idleTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlSniHandler:getAlbLoadBalancerListenerTlSniHandler": {
            "properties": {
                "handlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandler:getAlbLoadBalancerListenerTlSniHandlerHandler"
                    },
                    "description": "TLS handler resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SNI handler\n"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Server names that are matched by the SNI handler\n"
                }
            },
            "type": "object",
            "required": [
                "handlers",
                "name",
                "serverNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandler:getAlbLoadBalancerListenerTlSniHandlerHandler": {
            "properties": {
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate IDs in the Certificate Manager\n"
                },
                "httpHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandler:getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandler"
                    },
                    "description": "HTTP handler.\n"
                },
                "streamHandlers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandlerStreamHandler:getAlbLoadBalancerListenerTlSniHandlerHandlerStreamHandler"
                    },
                    "description": "Stream handler resource.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandler:getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandler": {
            "properties": {
                "allowHttp10": {
                    "type": "boolean",
                    "description": "If set, will enable only HTTP1 protocol with HTTP1.0 support.\n"
                },
                "http2Options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandlerHttp2Option:getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandlerHttp2Option"
                    },
                    "description": "If set, will enable HTTP2 protocol for the handler.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "HTTP router id.\n"
                },
                "rewriteRequestId": {
                    "type": "boolean",
                    "description": "When unset, will preserve the incoming `x-request-id` header, otherwise would rewrite it with a new value.\n"
                }
            },
            "type": "object",
            "required": [
                "http2Options",
                "httpRouterId",
                "rewriteRequestId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandlerHttp2Option:getAlbLoadBalancerListenerTlSniHandlerHandlerHttpHandlerHttp2Option": {
            "properties": {
                "maxConcurrentStreams": {
                    "type": "integer",
                    "description": "Maximum number of concurrent streams.\n"
                }
            },
            "type": "object",
            "required": [
                "maxConcurrentStreams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerListenerTlSniHandlerHandlerStreamHandler:getAlbLoadBalancerListenerTlSniHandlerHandlerStreamHandler": {
            "properties": {
                "backendGroupId": {
                    "type": "string",
                    "description": "Backend Group ID.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.\n"
                }
            },
            "type": "object",
            "required": [
                "backendGroupId",
                "idleTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerLogOption:getAlbLoadBalancerLogOption": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Set to `true` to disable Cloud Logging for the balancer.\n"
                },
                "discardRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbLoadBalancerLogOptionDiscardRule:getAlbLoadBalancerLogOptionDiscardRule"
                    },
                    "description": "List of rules to discard a fraction of logs.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Cloud Logging group ID to send logs to.\n"
                }
            },
            "type": "object",
            "required": [
                "disable",
                "discardRules",
                "logGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbLoadBalancerLogOptionDiscardRule:getAlbLoadBalancerLogOptionDiscardRule": {
            "properties": {
                "discardPercent": {
                    "type": "integer",
                    "description": "The percent of logs which will be discarded.\n"
                },
                "grpcCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of grpc codes by name\n"
                },
                "httpCodeIntervals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of http code intervals *1XX*-*5XX* or *ALL*\n"
                },
                "httpCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of http codes *100*-*599*.\n"
                }
            },
            "type": "object",
            "required": [
                "discardPercent",
                "grpcCodes",
                "httpCodeIntervals",
                "httpCodes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbTargetGroupTarget:getAlbTargetGroupTarget": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "privateIpv4Address": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostModifyRequestHeader:getAlbVirtualHostModifyRequestHeader": {
            "properties": {
                "append": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remove": {
                    "type": "boolean"
                },
                "replace": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "append",
                "name",
                "remove",
                "replace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostModifyResponseHeader:getAlbVirtualHostModifyResponseHeader": {
            "properties": {
                "append": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remove": {
                    "type": "boolean"
                },
                "replace": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "append",
                "name",
                "remove",
                "replace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRateLimit:getAlbVirtualHostRateLimit": {
            "properties": {
                "allRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRateLimitAllRequest:getAlbVirtualHostRateLimitAllRequest"
                    },
                    "description": "Rate limit configuration applied to all incoming requests\n"
                },
                "requestsPerIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRateLimitRequestsPerIp:getAlbVirtualHostRateLimitRequestsPerIp"
                    },
                    "description": "Rate limit configuration applied separately for each set of requests grouped by client IP address\n"
                }
            },
            "type": "object",
            "required": [
                "allRequests",
                "requestsPerIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRateLimitAllRequest:getAlbVirtualHostRateLimitAllRequest": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object",
            "required": [
                "perMinute",
                "perSecond"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRateLimitRequestsPerIp:getAlbVirtualHostRateLimitRequestsPerIp": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object",
            "required": [
                "perMinute",
                "perSecond"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRoute:getAlbVirtualHostRoute": {
            "properties": {
                "grpcRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRoute:getAlbVirtualHostRouteGrpcRoute"
                    }
                },
                "httpRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRoute:getAlbVirtualHostRouteHttpRoute"
                    }
                },
                "name": {
                    "type": "string"
                },
                "routeOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteRouteOption:getAlbVirtualHostRouteRouteOption"
                    }
                }
            },
            "type": "object",
            "required": [
                "grpcRoutes",
                "httpRoutes",
                "name",
                "routeOptions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRoute:getAlbVirtualHostRouteGrpcRoute": {
            "properties": {
                "grpcMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcMatch:getAlbVirtualHostRouteGrpcRouteGrpcMatch"
                    }
                },
                "grpcRouteActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteAction:getAlbVirtualHostRouteGrpcRouteGrpcRouteAction"
                    }
                },
                "grpcStatusResponseActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction:getAlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction"
                    }
                }
            },
            "type": "object",
            "required": [
                "grpcMatches",
                "grpcRouteActions",
                "grpcStatusResponseActions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcMatch:getAlbVirtualHostRouteGrpcRouteGrpcMatch": {
            "properties": {
                "fqmns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcMatchFqmn:getAlbVirtualHostRouteGrpcRouteGrpcMatchFqmn"
                    }
                }
            },
            "type": "object",
            "required": [
                "fqmns"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcMatchFqmn:getAlbVirtualHostRouteGrpcRouteGrpcMatchFqmn": {
            "properties": {
                "exact": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exact",
                "prefix",
                "regex"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteAction:getAlbVirtualHostRouteGrpcRouteGrpcRouteAction": {
            "properties": {
                "autoHostRewrite": {
                    "type": "boolean"
                },
                "backendGroupId": {
                    "type": "string"
                },
                "hostRewrite": {
                    "type": "string"
                },
                "idleTimeout": {
                    "type": "string"
                },
                "maxTimeout": {
                    "type": "string"
                },
                "rateLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit:getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit"
                    },
                    "description": "Rate limit configuration applied for a whole virtual host\n"
                }
            },
            "type": "object",
            "required": [
                "autoHostRewrite",
                "backendGroupId",
                "hostRewrite",
                "idleTimeout",
                "maxTimeout",
                "rateLimits"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit:getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimit": {
            "properties": {
                "allRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequest:getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequest"
                    },
                    "description": "Rate limit configuration applied to all incoming requests\n"
                },
                "requestsPerIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp:getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp"
                    },
                    "description": "Rate limit configuration applied separately for each set of requests grouped by client IP address\n"
                }
            },
            "type": "object",
            "required": [
                "allRequests",
                "requestsPerIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequest:getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitAllRequest": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object",
            "required": [
                "perMinute",
                "perSecond"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp:getAlbVirtualHostRouteGrpcRouteGrpcRouteActionRateLimitRequestsPerIp": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object",
            "required": [
                "perMinute",
                "perSecond"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction:getAlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRoute:getAlbVirtualHostRouteHttpRoute": {
            "properties": {
                "directResponseActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteDirectResponseAction:getAlbVirtualHostRouteHttpRouteDirectResponseAction"
                    }
                },
                "httpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteHttpMatch:getAlbVirtualHostRouteHttpRouteHttpMatch"
                    }
                },
                "httpRouteActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteAction:getAlbVirtualHostRouteHttpRouteHttpRouteAction"
                    }
                },
                "redirectActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteRedirectAction:getAlbVirtualHostRouteHttpRouteRedirectAction"
                    }
                }
            },
            "type": "object",
            "required": [
                "directResponseActions",
                "httpMatches",
                "httpRouteActions",
                "redirectActions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteDirectResponseAction:getAlbVirtualHostRouteHttpRouteDirectResponseAction": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "body",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteHttpMatch:getAlbVirtualHostRouteHttpRouteHttpMatch": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteHttpMatchPath:getAlbVirtualHostRouteHttpRouteHttpMatchPath"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods",
                "paths"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteHttpMatchPath:getAlbVirtualHostRouteHttpRouteHttpMatchPath": {
            "properties": {
                "exact": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exact",
                "prefix",
                "regex"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteAction:getAlbVirtualHostRouteHttpRouteHttpRouteAction": {
            "properties": {
                "autoHostRewrite": {
                    "type": "boolean"
                },
                "backendGroupId": {
                    "type": "string"
                },
                "hostRewrite": {
                    "type": "string"
                },
                "idleTimeout": {
                    "type": "string"
                },
                "prefixRewrite": {
                    "type": "string"
                },
                "rateLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit:getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit"
                    },
                    "description": "Rate limit configuration applied for a whole virtual host\n"
                },
                "timeout": {
                    "type": "string"
                },
                "upgradeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "autoHostRewrite",
                "backendGroupId",
                "hostRewrite",
                "idleTimeout",
                "prefixRewrite",
                "rateLimits",
                "timeout",
                "upgradeTypes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit:getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimit": {
            "properties": {
                "allRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequest:getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequest"
                    },
                    "description": "Rate limit configuration applied to all incoming requests\n"
                },
                "requestsPerIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp:getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp"
                    },
                    "description": "Rate limit configuration applied separately for each set of requests grouped by client IP address\n"
                }
            },
            "type": "object",
            "required": [
                "allRequests",
                "requestsPerIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequest:getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitAllRequest": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object",
            "required": [
                "perMinute",
                "perSecond"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp:getAlbVirtualHostRouteHttpRouteHttpRouteActionRateLimitRequestsPerIp": {
            "properties": {
                "perMinute": {
                    "type": "integer",
                    "description": "Limit value specified with per minute time unit\n"
                },
                "perSecond": {
                    "type": "integer",
                    "description": "Limit value specified with per second time unit\n"
                }
            },
            "type": "object",
            "required": [
                "perMinute",
                "perSecond"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteHttpRouteRedirectAction:getAlbVirtualHostRouteHttpRouteRedirectAction": {
            "properties": {
                "removeQuery": {
                    "type": "boolean"
                },
                "replaceHost": {
                    "type": "string"
                },
                "replacePath": {
                    "type": "string"
                },
                "replacePort": {
                    "type": "integer"
                },
                "replacePrefix": {
                    "type": "string"
                },
                "replaceScheme": {
                    "type": "string"
                },
                "responseCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "removeQuery",
                "replaceHost",
                "replacePath",
                "replacePort",
                "replacePrefix",
                "replaceScheme",
                "responseCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteOption:getAlbVirtualHostRouteOption": {
            "properties": {
                "rbacs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteOptionRbac:getAlbVirtualHostRouteOptionRbac"
                    }
                },
                "securityProfileId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "rbacs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteOptionRbac:getAlbVirtualHostRouteOptionRbac": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteOptionRbacPrincipal:getAlbVirtualHostRouteOptionRbacPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "principals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteOptionRbacPrincipal:getAlbVirtualHostRouteOptionRbacPrincipal": {
            "properties": {
                "andPrincipals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipal:getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "andPrincipals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipal:getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipal": {
            "properties": {
                "any": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeader:getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeader"
                    }
                },
                "remoteIp": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "any",
                "headers",
                "remoteIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeader:getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeaderValue:getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeaderValue:getAlbVirtualHostRouteOptionRbacPrincipalAndPrincipalHeaderValue": {
            "properties": {
                "exact": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exact",
                "prefix",
                "regex"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteRouteOption:getAlbVirtualHostRouteRouteOption": {
            "properties": {
                "rbacs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteRouteOptionRbac:getAlbVirtualHostRouteRouteOptionRbac"
                    }
                },
                "securityProfileId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "rbacs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteRouteOptionRbac:getAlbVirtualHostRouteRouteOptionRbac": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipal:getAlbVirtualHostRouteRouteOptionRbacPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "principals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipal:getAlbVirtualHostRouteRouteOptionRbacPrincipal": {
            "properties": {
                "andPrincipals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipal:getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipal"
                    }
                }
            },
            "type": "object",
            "required": [
                "andPrincipals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipal:getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipal": {
            "properties": {
                "any": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeader:getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeader"
                    }
                },
                "remoteIp": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "any",
                "headers",
                "remoteIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeader:getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeaderValue:getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeaderValue:getAlbVirtualHostRouteRouteOptionRbacPrincipalAndPrincipalHeaderValue": {
            "properties": {
                "exact": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exact",
                "prefix",
                "regex"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getApiGatewayCanary:getApiGatewayCanary": {
            "properties": {
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/getApiGatewayConnectivity:getApiGatewayConnectivity": {
            "properties": {
                "networkId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "yandex:index/getApiGatewayCustomDomain:getApiGatewayCustomDomain": {
            "properties": {
                "certificateId": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateId",
                "domainId",
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "certificateId",
                        "fqdn"
                    ]
                }
            }
        },
        "yandex:index/getApiGatewayLogOption:getApiGatewayLogOption": {
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "logGroupId": {
                    "type": "string"
                },
                "minLevel": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "disabled",
                "folderId",
                "logGroupId",
                "minLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailDataStreamDestination:getAuditTrailsTrailDataStreamDestination": {
            "properties": {
                "databaseId": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "databaseId",
                "streamName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilter:getAuditTrailsTrailFilter": {
            "properties": {
                "eventFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterEventFilter:getAuditTrailsTrailFilterEventFilter"
                    }
                },
                "pathFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterPathFilter:getAuditTrailsTrailFilterPathFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "eventFilters",
                "pathFilters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterEventFilter:getAuditTrailsTrailFilterEventFilter": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterEventFilterCategory:getAuditTrailsTrailFilterEventFilterCategory"
                    }
                },
                "pathFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterEventFilterPathFilter:getAuditTrailsTrailFilterEventFilterPathFilter"
                    }
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "pathFilters",
                "service"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterEventFilterCategory:getAuditTrailsTrailFilterEventFilterCategory": {
            "properties": {
                "plane": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "plane",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterEventFilterPathFilter:getAuditTrailsTrailFilterEventFilterPathFilter": {
            "properties": {
                "anyFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterEventFilterPathFilterAnyFilter:getAuditTrailsTrailFilterEventFilterPathFilterAnyFilter"
                    }
                },
                "someFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterEventFilterPathFilterSomeFilter:getAuditTrailsTrailFilterEventFilterPathFilterSomeFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "anyFilters",
                "someFilters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterEventFilterPathFilterAnyFilter:getAuditTrailsTrailFilterEventFilterPathFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterEventFilterPathFilterSomeFilter:getAuditTrailsTrailFilterEventFilterPathFilterSomeFilter": {
            "properties": {
                "anyFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter:getAuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter"
                    }
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "anyFilters",
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter:getAuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterPathFilter:getAuditTrailsTrailFilterPathFilter": {
            "properties": {
                "anyFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterPathFilterAnyFilter:getAuditTrailsTrailFilterPathFilterAnyFilter"
                    }
                },
                "someFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterPathFilterSomeFilter:getAuditTrailsTrailFilterPathFilterSomeFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "anyFilters",
                "someFilters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterPathFilterAnyFilter:getAuditTrailsTrailFilterPathFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterPathFilterSomeFilter:getAuditTrailsTrailFilterPathFilterSomeFilter": {
            "properties": {
                "anyFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilterPathFilterSomeFilterAnyFilter:getAuditTrailsTrailFilterPathFilterSomeFilterAnyFilter"
                    }
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "anyFilters",
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilterPathFilterSomeFilterAnyFilter:getAuditTrailsTrailFilterPathFilterSomeFilterAnyFilter": {
            "properties": {
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilteringPolicy:getAuditTrailsTrailFilteringPolicy": {
            "properties": {
                "dataEventsFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilteringPolicyDataEventsFilter:getAuditTrailsTrailFilteringPolicyDataEventsFilter"
                    }
                },
                "managementEventsFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilteringPolicyManagementEventsFilter:getAuditTrailsTrailFilteringPolicyManagementEventsFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "dataEventsFilters",
                "managementEventsFilters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilteringPolicyDataEventsFilter:getAuditTrailsTrailFilteringPolicyDataEventsFilter": {
            "properties": {
                "excludedEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includedEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope:getAuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope"
                    }
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "excludedEvents",
                "includedEvents",
                "resourceScopes",
                "service"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope:getAuditTrailsTrailFilteringPolicyDataEventsFilterResourceScope": {
            "properties": {
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilteringPolicyManagementEventsFilter:getAuditTrailsTrailFilteringPolicyManagementEventsFilter": {
            "properties": {
                "resourceScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getAuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope:getAuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope"
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceScopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope:getAuditTrailsTrailFilteringPolicyManagementEventsFilterResourceScope": {
            "properties": {
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailLoggingDestination:getAuditTrailsTrailLoggingDestination": {
            "properties": {
                "logGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "logGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getAuditTrailsTrailStorageDestination:getAuditTrailsTrailStorageDestination": {
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "objectPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "objectPrefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getBackupPolicyReattempt:getBackupPolicyReattempt": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "string"
                },
                "maxAttempts": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "interval",
                "maxAttempts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getBackupPolicyRetention:getBackupPolicyRetention": {
            "properties": {
                "afterBackup": {
                    "type": "boolean"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getBackupPolicyRetentionRule:getBackupPolicyRetentionRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "afterBackup",
                "rules"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getBackupPolicyRetentionRule:getBackupPolicyRetentionRule": {
            "properties": {
                "maxAge": {
                    "type": "string",
                    "description": "Deletes backups that older than `max_age`. Exactly one of `max_count` or `max_age` should be set.\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Deletes backups if it's count exceeds `max_count`. Exactly one of `max_count` or `max_age` should be set.\n"
                },
                "repeatPeriods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Possible types: `REPEATE_PERIOD_UNSPECIFIED`, `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`. Specifies repeat period of the backupset.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getBackupPolicyScheduling:getBackupPolicyScheduling": {
            "properties": {
                "backupSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getBackupPolicySchedulingBackupSet:getBackupPolicySchedulingBackupSet"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "maxParallelBackups": {
                    "type": "integer"
                },
                "randomMaxDelay": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "weeklyBackupDay": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "maxParallelBackups",
                "randomMaxDelay",
                "scheme",
                "weeklyBackupDay"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getBackupPolicySchedulingBackupSet:getBackupPolicySchedulingBackupSet": {
            "properties": {
                "executeByInterval": {
                    "type": "integer"
                },
                "executeByTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getBackupPolicySchedulingBackupSetExecuteByTime:getBackupPolicySchedulingBackupSetExecuteByTime"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "executeByInterval",
                "executeByTimes",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getBackupPolicySchedulingBackupSetExecuteByTime:getBackupPolicySchedulingBackupSetExecuteByTime": {
            "properties": {
                "includeLastDayOfMonth": {
                    "type": "boolean"
                },
                "monthdays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "months": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "repeatAts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repeatEvery": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "weekdays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "includeLastDayOfMonth",
                "monthdays",
                "months",
                "repeatAts",
                "repeatEvery",
                "type",
                "weekdays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getBackupPolicyVmSnapshotReattempt:getBackupPolicyVmSnapshotReattempt": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "string"
                },
                "maxAttempts": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "interval",
                "maxAttempts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getCdnOriginGroupOrigin:getCdnOriginGroupOrigin": {
            "properties": {
                "backup": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "originGroupId": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "originGroupId",
                "source"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getCdnResourceOptions:getCdnResourceOptions": {
            "properties": {
                "allowedHttpMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP methods for your CDN content. By default the following methods are allowed: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS. In case some methods are not allowed to the user, they will get the 405 (Method Not Allowed) response. If the method is not supported, the user gets the 501 (Not Implemented) response.\n"
                },
                "browserCacheSettings": {
                    "type": "integer",
                    "description": "Set up a cache period for the end-users browser. Content will be cached due to origin settings. If there are no cache settings on your origin, the content will not be cached. The list of HTTP response codes that can be cached in browsers: 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Other response codes will not be cached. The default value is 4 days.\n"
                },
                "cacheHttpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List HTTP headers that must be included in responses to clients.\n"
                },
                "cors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Parameter that lets browsers get access to selected resources from a domain different to a domain from which the request is received.\n"
                },
                "customHostHeader": {
                    "type": "string",
                    "description": "Custom value for the Host header. Your server must be able to process requests with the chosen header.\n"
                },
                "customServerName": {
                    "type": "string",
                    "description": "Wildcard additional CNAME. If a resource has a wildcard additional CNAME, you can use your own certificate for content delivery via HTTPS.\n"
                },
                "disableCache": {
                    "type": "boolean",
                    "description": "Setup a cache status.\n"
                },
                "disableProxyForceRanges": {
                    "type": "boolean",
                    "description": "Disabling proxy force ranges.\n"
                },
                "edgeCacheSettings": {
                    "type": "integer",
                    "description": "Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers. Responses with other codes will not be cached.\n"
                },
                "enableIpUrlSigning": {
                    "type": "boolean",
                    "description": "Enable access limiting by IP addresses, option available only with setting secure_key.\n"
                },
                "fetchedCompressed": {
                    "type": "boolean",
                    "description": "Option helps you to reduce the bandwidth between origin and CDN servers. Also, content delivery speed becomes higher because of reducing the time for compressing files in a CDN.\n"
                },
                "forwardHostHeader": {
                    "type": "boolean",
                    "description": "Choose the Forward Host header option if is important to send in the request to the Origin the same Host header as was sent in the request to CDN server.\n"
                },
                "gzipOn": {
                    "type": "boolean",
                    "description": "GZip compression at CDN servers reduces file size by 70% and can be as high as 90%.\n"
                },
                "ignoreCookie": {
                    "type": "boolean",
                    "description": "Set for ignoring cookie.\n"
                },
                "ignoreQueryParams": {
                    "type": "boolean",
                    "description": "Files with different query parameters are cached as objects with the same key regardless of the parameter value. selected by default.\n"
                },
                "ipAddressAcl": {
                    "$ref": "#/types/yandex:index/getCdnResourceOptionsIpAddressAcl:getCdnResourceOptionsIpAddressAcl"
                },
                "proxyCacheMethodsSet": {
                    "type": "boolean",
                    "description": "Allows caching for GET, HEAD and POST requests.\n"
                },
                "queryParamsBlacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Files with the specified query parameters are cached as objects with the same key, files with other parameters are cached as objects with different keys.\n"
                },
                "queryParamsWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Files with the specified query parameters are cached as objects with different keys, files with other parameters are cached as objects with the same key.\n"
                },
                "redirectHttpToHttps": {
                    "type": "boolean",
                    "description": "Set up a redirect from HTTP to HTTPS.\n"
                },
                "redirectHttpsToHttp": {
                    "type": "boolean",
                    "description": "Set up a redirect from HTTPS to HTTP.\n"
                },
                "secureKey": {
                    "type": "string",
                    "description": "Set secure key for url encoding to protect contect and limit access by IP addresses and time limits.\n"
                },
                "slice": {
                    "type": "boolean",
                    "description": "Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte. The origin must support HTTP Range requests.\n"
                },
                "staticRequestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set up custom headers that CDN servers will send in requests to origins.\n"
                },
                "staticResponseHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedHttpMethods",
                "browserCacheSettings",
                "cacheHttpHeaders",
                "cors",
                "customHostHeader",
                "customServerName",
                "disableCache",
                "disableProxyForceRanges",
                "edgeCacheSettings",
                "enableIpUrlSigning",
                "fetchedCompressed",
                "forwardHostHeader",
                "gzipOn",
                "ignoreCookie",
                "ignoreQueryParams",
                "ipAddressAcl",
                "proxyCacheMethodsSet",
                "queryParamsBlacklists",
                "queryParamsWhitelists",
                "redirectHttpToHttps",
                "redirectHttpsToHttp",
                "secureKey",
                "slice",
                "staticRequestHeaders",
                "staticResponseHeaders"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getCdnResourceOptionsIpAddressAcl:getCdnResourceOptionsIpAddressAcl": {
            "properties": {
                "exceptedValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of specified IP addresses to be allowed or denied depending on acl policy type.\n"
                },
                "policyType": {
                    "type": "string",
                    "description": "The policy type for ACL. One of `allow` or `deny` values.\n"
                }
            },
            "type": "object",
            "required": [
                "exceptedValues",
                "policyType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getCdnResourceSslCertificate:getCdnResourceSslCertificate": {
            "properties": {
                "certificateManagerId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "type"
                    ]
                }
            }
        },
        "yandex:index/getCmCertificateChallenge:getCmCertificateChallenge": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "dnsName": {
                    "type": "string"
                },
                "dnsType": {
                    "type": "string"
                },
                "dnsValue": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "httpContent": {
                    "type": "string"
                },
                "httpUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "dnsName",
                "dnsType",
                "dnsValue",
                "domain",
                "httpContent",
                "httpUrl",
                "message",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeDiskDiskPlacementPolicy:getComputeDiskDiskPlacementPolicy": {
            "properties": {
                "diskPlacementGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskPlacementGroupId"
            ]
        },
        "yandex:index/getComputeDiskHardwareGeneration:getComputeDiskHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeDiskHardwareGenerationGeneration2Feature:getComputeDiskHardwareGenerationGeneration2Feature"
                    }
                },
                "legacyFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeDiskHardwareGenerationLegacyFeature:getComputeDiskHardwareGenerationLegacyFeature"
                    }
                }
            },
            "type": "object",
            "required": [
                "generation2Features",
                "legacyFeatures"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeDiskHardwareGenerationGeneration2Feature:getComputeDiskHardwareGenerationGeneration2Feature": {
            "type": "object"
        },
        "yandex:index/getComputeDiskHardwareGenerationLegacyFeature:getComputeDiskHardwareGenerationLegacyFeature": {
            "properties": {
                "pciTopology": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "pciTopology"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeImageHardwareGeneration:getComputeImageHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeImageHardwareGenerationGeneration2Feature:getComputeImageHardwareGenerationGeneration2Feature"
                    }
                },
                "legacyFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeImageHardwareGenerationLegacyFeature:getComputeImageHardwareGenerationLegacyFeature"
                    }
                }
            },
            "type": "object",
            "required": [
                "generation2Features",
                "legacyFeatures"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeImageHardwareGenerationGeneration2Feature:getComputeImageHardwareGenerationGeneration2Feature": {
            "type": "object"
        },
        "yandex:index/getComputeImageHardwareGenerationLegacyFeature:getComputeImageHardwareGenerationLegacyFeature": {
            "properties": {
                "pciTopology": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "pciTopology"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceBootDisk:getComputeInstanceBootDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean"
                },
                "deviceName": {
                    "type": "string"
                },
                "diskId": {
                    "type": "string"
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceBootDiskInitializeParam:getComputeInstanceBootDiskInitializeParam"
                    }
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "autoDelete",
                "deviceName",
                "diskId",
                "initializeParams",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceBootDiskInitializeParam:getComputeInstanceBootDiskInitializeParam": {
            "properties": {
                "blockSize": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "blockSize",
                "description",
                "imageId",
                "kmsKeyId",
                "name",
                "size",
                "snapshotId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceFilesystem:getComputeInstanceFilesystem": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "filesystemId": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "filesystemId",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupAllocationPolicy:getComputeInstanceGroupAllocationPolicy": {
            "properties": {
                "instanceTagsPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupAllocationPolicyInstanceTagsPool:getComputeInstanceGroupAllocationPolicyInstanceTagsPool"
                    }
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceTagsPools",
                "zones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupAllocationPolicyInstanceTagsPool:getComputeInstanceGroupAllocationPolicyInstanceTagsPool": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tags",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupApplicationBalancerState:getComputeInstanceGroupApplicationBalancerState": {
            "properties": {
                "statusMessage": {
                    "type": "string"
                },
                "targetGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "statusMessage",
                "targetGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupApplicationLoadBalancer:getComputeInstanceGroupApplicationLoadBalancer": {
            "properties": {
                "ignoreHealthChecks": {
                    "type": "boolean"
                },
                "maxOpeningTrafficDuration": {
                    "type": "integer"
                },
                "statusMessage": {
                    "type": "string"
                },
                "targetGroupDescription": {
                    "type": "string"
                },
                "targetGroupId": {
                    "type": "string"
                },
                "targetGroupLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "targetGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ignoreHealthChecks",
                "maxOpeningTrafficDuration",
                "statusMessage",
                "targetGroupDescription",
                "targetGroupId",
                "targetGroupLabels",
                "targetGroupName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupDeployPolicy:getComputeInstanceGroupDeployPolicy": {
            "properties": {
                "maxCreating": {
                    "type": "integer"
                },
                "maxDeleting": {
                    "type": "integer"
                },
                "maxExpansion": {
                    "type": "integer"
                },
                "maxUnavailable": {
                    "type": "integer"
                },
                "startupDuration": {
                    "type": "integer"
                },
                "strategy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "maxCreating",
                "maxDeleting",
                "maxExpansion",
                "maxUnavailable",
                "startupDuration",
                "strategy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupHealthCheck:getComputeInstanceGroupHealthCheck": {
            "properties": {
                "healthyThreshold": {
                    "type": "integer"
                },
                "httpOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupHealthCheckHttpOption:getComputeInstanceGroupHealthCheckHttpOption"
                    }
                },
                "interval": {
                    "type": "integer"
                },
                "tcpOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupHealthCheckTcpOption:getComputeInstanceGroupHealthCheckTcpOption"
                    }
                },
                "timeout": {
                    "type": "integer"
                },
                "unhealthyThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "healthyThreshold",
                "httpOptions",
                "interval",
                "tcpOptions",
                "timeout",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupHealthCheckHttpOption:getComputeInstanceGroupHealthCheckHttpOption": {
            "properties": {
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "path",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupHealthCheckTcpOption:getComputeInstanceGroupHealthCheckTcpOption": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstance:getComputeInstanceGroupInstance": {
            "properties": {
                "fqdn": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "instanceTag": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceNetworkInterface:getComputeInstanceGroupInstanceNetworkInterface"
                    }
                },
                "status": {
                    "type": "string"
                },
                "statusChangedAt": {
                    "type": "string"
                },
                "statusMessage": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fqdn",
                "instanceId",
                "instanceTag",
                "name",
                "networkInterfaces",
                "status",
                "statusChangedAt",
                "statusMessage",
                "zoneId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceNetworkInterface:getComputeInstanceGroupInstanceNetworkInterface": {
            "properties": {
                "index": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "nat": {
                    "type": "boolean"
                },
                "natIpAddress": {
                    "type": "string"
                },
                "natIpVersion": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "ipAddress",
                "ipv4",
                "ipv6",
                "ipv6Address",
                "macAddress",
                "nat",
                "natIpAddress",
                "natIpVersion",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplate:getComputeInstanceGroupInstanceTemplate": {
            "properties": {
                "bootDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateBootDisk:getComputeInstanceGroupInstanceTemplateBootDisk"
                    }
                },
                "description": {
                    "type": "string"
                },
                "filesystems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateFilesystem:getComputeInstanceGroupInstanceTemplateFilesystem"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateMetadataOptions:getComputeInstanceGroupInstanceTemplateMetadataOptions"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterface:getComputeInstanceGroupInstanceTemplateNetworkInterface"
                    }
                },
                "networkSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateNetworkSetting:getComputeInstanceGroupInstanceTemplateNetworkSetting"
                    }
                },
                "placementPolicy": {
                    "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplatePlacementPolicy:getComputeInstanceGroupInstanceTemplatePlacementPolicy"
                },
                "platformId": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateResource:getComputeInstanceGroupInstanceTemplateResource"
                    }
                },
                "schedulingPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateSchedulingPolicy:getComputeInstanceGroupInstanceTemplateSchedulingPolicy"
                    }
                },
                "secondaryDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateSecondaryDisk:getComputeInstanceGroupInstanceTemplateSecondaryDisk"
                    }
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bootDisks",
                "description",
                "hostname",
                "labels",
                "metadata",
                "metadataOptions",
                "name",
                "networkInterfaces",
                "networkSettings",
                "platformId",
                "resources",
                "schedulingPolicies",
                "secondaryDisks",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateBootDisk:getComputeInstanceGroupInstanceTemplateBootDisk": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "diskId": {
                    "type": "string"
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateBootDiskInitializeParam:getComputeInstanceGroupInstanceTemplateBootDiskInitializeParam"
                    }
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "diskId",
                "initializeParams",
                "mode",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateBootDiskInitializeParam:getComputeInstanceGroupInstanceTemplateBootDiskInitializeParam": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "imageId",
                "size",
                "snapshotId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateFilesystem:getComputeInstanceGroupInstanceTemplateFilesystem": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "filesystemId": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "filesystemId",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateMetadataOptions:getComputeInstanceGroupInstanceTemplateMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer"
                },
                "awsV1HttpToken": {
                    "type": "integer"
                },
                "gceHttpEndpoint": {
                    "type": "integer"
                },
                "gceHttpToken": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "awsV1HttpEndpoint",
                "awsV1HttpToken",
                "gceHttpEndpoint",
                "gceHttpToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterface:getComputeInstanceGroupInstanceTemplateNetworkInterface": {
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord:getComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord"
                    }
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "ipv6DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:getComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord"
                    }
                },
                "nat": {
                    "type": "boolean"
                },
                "natDnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord:getComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord"
                    }
                },
                "natIpAddress": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "dnsRecords",
                "ipAddress",
                "ipv4",
                "ipv6",
                "ipv6Address",
                "ipv6DnsRecords",
                "nat",
                "natDnsRecords",
                "natIpAddress",
                "networkId",
                "securityGroupIds",
                "subnetIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord:getComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:getComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord:getComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateNetworkSetting:getComputeInstanceGroupInstanceTemplateNetworkSetting": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplatePlacementPolicy:getComputeInstanceGroupInstanceTemplatePlacementPolicy": {
            "properties": {
                "placementGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "placementGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateResource:getComputeInstanceGroupInstanceTemplateResource": {
            "properties": {
                "coreFraction": {
                    "type": "integer"
                },
                "cores": {
                    "type": "integer"
                },
                "gpus": {
                    "type": "integer"
                },
                "memory": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "coreFraction",
                "cores",
                "gpus",
                "memory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateSchedulingPolicy:getComputeInstanceGroupInstanceTemplateSchedulingPolicy": {
            "properties": {
                "preemptible": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "preemptible"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateSecondaryDisk:getComputeInstanceGroupInstanceTemplateSecondaryDisk": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "diskId": {
                    "type": "string"
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParam:getComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParam"
                    }
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "diskId",
                "initializeParams",
                "mode",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParam:getComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParam": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "imageId",
                "size",
                "snapshotId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupLoadBalancer:getComputeInstanceGroupLoadBalancer": {
            "properties": {
                "ignoreHealthChecks": {
                    "type": "boolean"
                },
                "maxOpeningTrafficDuration": {
                    "type": "integer"
                },
                "statusMessage": {
                    "type": "string"
                },
                "targetGroupDescription": {
                    "type": "string"
                },
                "targetGroupId": {
                    "type": "string"
                },
                "targetGroupLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "targetGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ignoreHealthChecks",
                "maxOpeningTrafficDuration",
                "statusMessage",
                "targetGroupDescription",
                "targetGroupId",
                "targetGroupLabels",
                "targetGroupName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupLoadBalancerState:getComputeInstanceGroupLoadBalancerState": {
            "properties": {
                "statusMessage": {
                    "type": "string"
                },
                "targetGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "statusMessage",
                "targetGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupScalePolicy:getComputeInstanceGroupScalePolicy": {
            "properties": {
                "autoScales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupScalePolicyAutoScale:getComputeInstanceGroupScalePolicyAutoScale"
                    }
                },
                "fixedScales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupScalePolicyFixedScale:getComputeInstanceGroupScalePolicyFixedScale"
                    }
                },
                "testAutoScales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupScalePolicyTestAutoScale:getComputeInstanceGroupScalePolicyTestAutoScale"
                    }
                }
            },
            "type": "object",
            "required": [
                "autoScales",
                "fixedScales",
                "testAutoScales"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupScalePolicyAutoScale:getComputeInstanceGroupScalePolicyAutoScale": {
            "properties": {
                "autoScaleType": {
                    "type": "string"
                },
                "cpuUtilizationTarget": {
                    "type": "number"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupScalePolicyAutoScaleCustomRule:getComputeInstanceGroupScalePolicyAutoScaleCustomRule"
                    }
                },
                "initialSize": {
                    "type": "integer"
                },
                "maxSize": {
                    "type": "integer"
                },
                "measurementDuration": {
                    "type": "integer"
                },
                "minZoneSize": {
                    "type": "integer"
                },
                "stabilizationDuration": {
                    "type": "integer"
                },
                "warmupDuration": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "autoScaleType",
                "cpuUtilizationTarget",
                "customRules",
                "initialSize",
                "maxSize",
                "measurementDuration",
                "minZoneSize",
                "stabilizationDuration",
                "warmupDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupScalePolicyAutoScaleCustomRule:getComputeInstanceGroupScalePolicyAutoScaleCustomRule": {
            "properties": {
                "folderId": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metricName": {
                    "type": "string"
                },
                "metricType": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "target": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "folderId",
                "labels",
                "metricName",
                "metricType",
                "ruleType",
                "service",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupScalePolicyFixedScale:getComputeInstanceGroupScalePolicyFixedScale": {
            "properties": {
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupScalePolicyTestAutoScale:getComputeInstanceGroupScalePolicyTestAutoScale": {
            "properties": {
                "autoScaleType": {
                    "type": "string"
                },
                "cpuUtilizationTarget": {
                    "type": "number"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceGroupScalePolicyTestAutoScaleCustomRule:getComputeInstanceGroupScalePolicyTestAutoScaleCustomRule"
                    }
                },
                "initialSize": {
                    "type": "integer"
                },
                "maxSize": {
                    "type": "integer"
                },
                "measurementDuration": {
                    "type": "integer"
                },
                "minZoneSize": {
                    "type": "integer"
                },
                "stabilizationDuration": {
                    "type": "integer"
                },
                "warmupDuration": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "autoScaleType",
                "cpuUtilizationTarget",
                "customRules",
                "initialSize",
                "maxSize",
                "measurementDuration",
                "minZoneSize",
                "stabilizationDuration",
                "warmupDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceGroupScalePolicyTestAutoScaleCustomRule:getComputeInstanceGroupScalePolicyTestAutoScaleCustomRule": {
            "properties": {
                "folderId": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metricName": {
                    "type": "string"
                },
                "metricType": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "target": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "folderId",
                "labels",
                "metricName",
                "metricType",
                "ruleType",
                "service",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceHardwareGeneration:getComputeInstanceHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceHardwareGenerationGeneration2Feature:getComputeInstanceHardwareGenerationGeneration2Feature"
                    }
                },
                "legacyFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceHardwareGenerationLegacyFeature:getComputeInstanceHardwareGenerationLegacyFeature"
                    }
                }
            },
            "type": "object",
            "required": [
                "generation2Features",
                "legacyFeatures"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceHardwareGenerationGeneration2Feature:getComputeInstanceHardwareGenerationGeneration2Feature": {
            "type": "object"
        },
        "yandex:index/getComputeInstanceHardwareGenerationLegacyFeature:getComputeInstanceHardwareGenerationLegacyFeature": {
            "properties": {
                "pciTopology": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "pciTopology"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceLocalDisk:getComputeInstanceLocalDisk": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "sizeBytes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "sizeBytes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "sizeBytes"
                    ]
                }
            }
        },
        "yandex:index/getComputeInstanceMetadataOptions:getComputeInstanceMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer"
                },
                "awsV1HttpToken": {
                    "type": "integer"
                },
                "gceHttpEndpoint": {
                    "type": "integer"
                },
                "gceHttpToken": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "awsV1HttpEndpoint",
                "awsV1HttpToken",
                "gceHttpEndpoint",
                "gceHttpToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceNetworkInterface:getComputeInstanceNetworkInterface": {
            "properties": {
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceNetworkInterfaceDnsRecord:getComputeInstanceNetworkInterfaceDnsRecord"
                    }
                },
                "index": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "ipv6DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceNetworkInterfaceIpv6DnsRecord:getComputeInstanceNetworkInterfaceIpv6DnsRecord"
                    }
                },
                "macAddress": {
                    "type": "string"
                },
                "nat": {
                    "type": "boolean"
                },
                "natDnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstanceNetworkInterfaceNatDnsRecord:getComputeInstanceNetworkInterfaceNatDnsRecord"
                    }
                },
                "natIpAddress": {
                    "type": "string"
                },
                "natIpVersion": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dnsRecords",
                "index",
                "ipAddress",
                "ipv4",
                "ipv6",
                "ipv6Address",
                "ipv6DnsRecords",
                "macAddress",
                "nat",
                "natDnsRecords",
                "natIpAddress",
                "natIpVersion",
                "securityGroupIds",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceNetworkInterfaceDnsRecord:getComputeInstanceNetworkInterfaceDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceNetworkInterfaceIpv6DnsRecord:getComputeInstanceNetworkInterfaceIpv6DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceNetworkInterfaceNatDnsRecord:getComputeInstanceNetworkInterfaceNatDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstancePlacementPolicy:getComputeInstancePlacementPolicy": {
            "properties": {
                "hostAffinityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeInstancePlacementPolicyHostAffinityRule:getComputeInstancePlacementPolicyHostAffinityRule"
                    }
                },
                "placementGroupId": {
                    "type": "string"
                },
                "placementGroupPartition": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "hostAffinityRules"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstancePlacementPolicyHostAffinityRule:getComputeInstancePlacementPolicyHostAffinityRule": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "op": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "op",
                "values"
            ]
        },
        "yandex:index/getComputeInstanceResource:getComputeInstanceResource": {
            "properties": {
                "coreFraction": {
                    "type": "integer"
                },
                "cores": {
                    "type": "integer"
                },
                "gpus": {
                    "type": "integer"
                },
                "memory": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "coreFraction",
                "cores",
                "gpus",
                "memory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeInstanceSchedulingPolicy:getComputeInstanceSchedulingPolicy": {
            "properties": {
                "preemptible": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "yandex:index/getComputeInstanceSecondaryDisk:getComputeInstanceSecondaryDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean"
                },
                "deviceName": {
                    "type": "string"
                },
                "diskId": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "autoDelete",
                "deviceName",
                "diskId",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeSnapshotHardwareGeneration:getComputeSnapshotHardwareGeneration": {
            "properties": {
                "generation2Features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeSnapshotHardwareGenerationGeneration2Feature:getComputeSnapshotHardwareGenerationGeneration2Feature"
                    }
                },
                "legacyFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getComputeSnapshotHardwareGenerationLegacyFeature:getComputeSnapshotHardwareGenerationLegacyFeature"
                    }
                }
            },
            "type": "object",
            "required": [
                "generation2Features",
                "legacyFeatures"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeSnapshotHardwareGenerationGeneration2Feature:getComputeSnapshotHardwareGenerationGeneration2Feature": {
            "type": "object"
        },
        "yandex:index/getComputeSnapshotHardwareGenerationLegacyFeature:getComputeSnapshotHardwareGenerationLegacyFeature": {
            "properties": {
                "pciTopology": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "pciTopology"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeSnapshotScheduleSchedulePolicy:getComputeSnapshotScheduleSchedulePolicy": {
            "properties": {
                "expression": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "startAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getComputeSnapshotScheduleSnapshotSpec:getComputeSnapshotScheduleSnapshotSpec": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "labels"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getContainerRepositoryLifecyclePolicyRule:getContainerRepositoryLifecyclePolicyRule": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "expirePeriod": {
                    "type": "string"
                },
                "retainedTop": {
                    "type": "integer"
                },
                "tagRegexp": {
                    "type": "string"
                },
                "untagged": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "description",
                "expirePeriod",
                "retainedTop",
                "tagRegexp",
                "untagged"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getDataprocClusterClusterConfig:getDataprocClusterClusterConfig": {
            "properties": {
                "hadoops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getDataprocClusterClusterConfigHadoop:getDataprocClusterClusterConfigHadoop"
                    },
                    "description": "Yandex Data Processing specific options.\n"
                },
                "subclusterSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getDataprocClusterClusterConfigSubclusterSpec:getDataprocClusterClusterConfigSubclusterSpec"
                    },
                    "description": "Configuration of the Yandex Data Processing subcluster.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version of Yandex Data Processing image.\n"
                }
            },
            "type": "object",
            "required": [
                "hadoops",
                "subclusterSpecs",
                "versionId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getDataprocClusterClusterConfigHadoop:getDataprocClusterClusterConfigHadoop": {
            "properties": {
                "initializationActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getDataprocClusterClusterConfigHadoopInitializationAction:getDataprocClusterClusterConfigHadoopInitializationAction"
                    },
                    "description": "List of initialization scripts.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value pairs that are used to configure cluster services.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of services to run on Yandex Data Processing cluster.\n"
                },
                "sshPublicKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://yandex.cloud/docs/data-proc/operations/connect).\n"
                }
            },
            "type": "object",
            "required": [
                "initializationActions",
                "properties",
                "services",
                "sshPublicKeys"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getDataprocClusterClusterConfigHadoopInitializationAction:getDataprocClusterClusterConfigHadoopInitializationAction": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of arguments of the initialization script.\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "Script execution timeout, in seconds.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Script URI.\n"
                }
            },
            "type": "object",
            "required": [
                "args",
                "timeout",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getDataprocClusterClusterConfigSubclusterSpec:getDataprocClusterClusterConfigSubclusterSpec": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "If `true` then assign public IP addresses to the hosts of the subclusters.\n"
                },
                "autoscalingConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getDataprocClusterClusterConfigSubclusterSpecAutoscalingConfig:getDataprocClusterClusterConfigSubclusterSpecAutoscalingConfig"
                    },
                    "description": "Autoscaling configuration for compute subclusters.\n"
                },
                "hostsCount": {
                    "type": "integer",
                    "description": "Number of hosts within Yandex Data Processing subcluster.\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the subcluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Yandex Data Processing subcluster.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getDataprocClusterClusterConfigSubclusterSpecResource:getDataprocClusterClusterConfigSubclusterSpecResource"
                    },
                    "description": "Resources allocated to each host of the Yandex Data Processing subcluster.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the subcluster in the Yandex Data Processing cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.\n"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "autoscalingConfigs",
                "hostsCount",
                "id",
                "name",
                "resources",
                "role",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getDataprocClusterClusterConfigSubclusterSpecAutoscalingConfig:getDataprocClusterClusterConfigSubclusterSpecAutoscalingConfig": {
            "properties": {
                "cpuUtilizationTarget": {
                    "type": "string",
                    "description": "Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.\n"
                },
                "decommissionTimeout": {
                    "type": "string",
                    "description": "Timeout to gracefully decommission nodes during downscaling. In seconds.\n"
                },
                "maxHostsCount": {
                    "type": "integer",
                    "description": "Maximum number of nodes in autoscaling subclusters.\n"
                },
                "measurementDuration": {
                    "type": "string",
                    "description": "Time in seconds allotted for averaging metrics.\n"
                },
                "preemptible": {
                    "type": "boolean",
                    "description": "Use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see [Preemptible Virtual Machines](https://yandex.cloud/docs/compute/concepts/preemptible-vm).\n"
                },
                "stabilizationDuration": {
                    "type": "string",
                    "description": "Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.\n"
                },
                "warmupDuration": {
                    "type": "string",
                    "description": "The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.\n"
                }
            },
            "type": "object",
            "required": [
                "cpuUtilizationTarget",
                "decommissionTimeout",
                "maxHostsCount",
                "measurementDuration",
                "preemptible",
                "stabilizationDuration",
                "warmupDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getDataprocClusterClusterConfigSubclusterSpecResource:getDataprocClusterClusterConfigSubclusterSpecResource": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of a host. One of `network-hdd` (default) or `network-ssd`.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://yandex.cloud/docs/data-proc/concepts/instance-types).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionAsyncInvocation:getFunctionAsyncInvocation": {
            "properties": {
                "retriesCount": {
                    "type": "integer"
                },
                "serviceAccountId": {
                    "type": "string"
                },
                "ymqFailureTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getFunctionAsyncInvocationYmqFailureTarget:getFunctionAsyncInvocationYmqFailureTarget"
                    }
                },
                "ymqSuccessTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getFunctionAsyncInvocationYmqSuccessTarget:getFunctionAsyncInvocationYmqSuccessTarget"
                    }
                }
            },
            "type": "object",
            "required": [
                "retriesCount",
                "serviceAccountId",
                "ymqFailureTargets",
                "ymqSuccessTargets"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionAsyncInvocationYmqFailureTarget:getFunctionAsyncInvocationYmqFailureTarget": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "arn",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionAsyncInvocationYmqSuccessTarget:getFunctionAsyncInvocationYmqSuccessTarget": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "arn",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionConnectivity:getFunctionConnectivity": {
            "properties": {
                "networkId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "yandex:index/getFunctionLogOption:getFunctionLogOption": {
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "logGroupId": {
                    "type": "string"
                },
                "minLevel": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "disabled",
                "folderId",
                "logGroupId",
                "minLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionMetadataOptions:getFunctionMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer"
                },
                "gceHttpEndpoint": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "awsV1HttpEndpoint",
                "gceHttpEndpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionMount:getFunctionMount": {
            "properties": {
                "ephemeralDisk": {
                    "$ref": "#/types/yandex:index/getFunctionMountEphemeralDisk:getFunctionMountEphemeralDisk"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/getFunctionMountObjectStorage:getFunctionMountObjectStorage"
                }
            },
            "type": "object",
            "required": [
                "mode",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "name"
                    ]
                }
            }
        },
        "yandex:index/getFunctionMountEphemeralDisk:getFunctionMountEphemeralDisk": {
            "properties": {
                "blockSizeKb": {
                    "type": "integer"
                },
                "sizeGb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "blockSizeKb",
                "sizeGb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "sizeGb"
                    ]
                }
            }
        },
        "yandex:index/getFunctionMountObjectStorage:getFunctionMountObjectStorage": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "yandex:index/getFunctionScalingPolicyPolicy:getFunctionScalingPolicyPolicy": {
            "properties": {
                "tag": {
                    "type": "string"
                },
                "zoneInstancesLimit": {
                    "type": "integer"
                },
                "zoneRequestsLimit": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionSecret:getFunctionSecret": {
            "properties": {
                "environmentVariable": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "environmentVariable",
                "id",
                "key",
                "versionId"
            ]
        },
        "yandex:index/getFunctionStorageMount:getFunctionStorageMount": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "mountPointName": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "mountPointName"
            ]
        },
        "yandex:index/getFunctionTriggerContainer:getFunctionTriggerContainer": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "retryAttempts": {
                    "type": "string"
                },
                "retryInterval": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "path",
                "retryAttempts",
                "retryInterval",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerContainerRegistry:getFunctionTriggerContainerRegistry": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "createImage": {
                    "type": "boolean"
                },
                "createImageTag": {
                    "type": "boolean"
                },
                "deleteImage": {
                    "type": "boolean"
                },
                "deleteImageTag": {
                    "type": "boolean"
                },
                "imageName": {
                    "type": "string"
                },
                "registryId": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "createImage",
                "createImageTag",
                "deleteImage",
                "deleteImageTag",
                "imageName",
                "registryId",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerDataStream:getFunctionTriggerDataStream": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "boolean"
                },
                "streamName": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "database",
                "serviceAccountId",
                "streamName",
                "suffix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerDlq:getFunctionTriggerDlq": {
            "properties": {
                "queueId": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "queueId",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerFunction:getFunctionTriggerFunction": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "retryAttempts": {
                    "type": "string"
                },
                "retryInterval": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "retryAttempts",
                "retryInterval",
                "serviceAccountId",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerIot:getFunctionTriggerIot": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "registryId": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "deviceId",
                "registryId",
                "topic"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerLogGroup:getFunctionTriggerLogGroup": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "logGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "logGroupIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerLogging:getFunctionTriggerLogging": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "streamNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "groupId",
                "levels",
                "resourceIds",
                "resourceTypes",
                "streamNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerMail:getFunctionTriggerMail": {
            "properties": {
                "attachmentsBucketId": {
                    "type": "string"
                },
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachmentsBucketId",
                "batchCutoff",
                "batchSize",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerMessageQueue:getFunctionTriggerMessageQueue": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "queueId": {
                    "type": "string"
                },
                "serviceAccountId": {
                    "type": "string"
                },
                "visibilityTimeout": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "queueId",
                "serviceAccountId",
                "visibilityTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerObjectStorage:getFunctionTriggerObjectStorage": {
            "properties": {
                "batchCutoff": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "bucketId": {
                    "type": "string"
                },
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "update": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "batchCutoff",
                "batchSize",
                "bucketId",
                "create",
                "delete",
                "prefix",
                "suffix",
                "update"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getFunctionTriggerTimer:getFunctionTriggerTimer": {
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "payload"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getIamPolicyBinding:getIamPolicyBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following values:\n* **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.\n* **serviceAccount:{service_account_id}**: A unique service account ID.\n* **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.\n* **group:{group_id}**: A unique group ID.\n* **system:group:federation:{federation_id}:users**: All users in federation.\n* **system:group:organization:{organization_id}:users**: All users in organization.\n* **system:allAuthenticatedUsers**: All authenticated users.\n* **system:allUsers**: All users, including unauthenticated ones.\n\n\u003e For more information about system groups, see the [documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role/permission that will be granted to the members. See the [IAM Roles](https://yandex.cloud/docs/iam/concepts/access-control/roles) documentation for a complete list of roles.\n"
                }
            },
            "type": "object",
            "required": [
                "members",
                "role"
            ]
        },
        "yandex:index/getIotCoreBrokerLogOption:getIotCoreBrokerLogOption": {
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "logGroupId": {
                    "type": "string"
                },
                "minLevel": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "disabled",
                "folderId",
                "logGroupId",
                "minLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getIotCoreRegistryLogOption:getIotCoreRegistryLogOption": {
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "logGroupId": {
                    "type": "string"
                },
                "minLevel": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "disabled",
                "folderId",
                "logGroupId",
                "minLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterKmsProvider:getKubernetesClusterKmsProvider": {
            "properties": {
                "keyId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "keyId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMaster:getKubernetesClusterMaster": {
            "properties": {
                "clusterCaCertificate": {
                    "type": "string"
                },
                "etcdClusterSize": {
                    "type": "integer"
                },
                "externalV4Address": {
                    "type": "string"
                },
                "externalV4Endpoint": {
                    "type": "string"
                },
                "externalV6Address": {
                    "type": "string"
                },
                "externalV6Endpoint": {
                    "type": "string"
                },
                "internalV4Address": {
                    "type": "string"
                },
                "internalV4Endpoint": {
                    "type": "string"
                },
                "maintenancePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterMaintenancePolicy:getKubernetesClusterMasterMaintenancePolicy"
                    }
                },
                "masterLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterMasterLocation:getKubernetesClusterMasterMasterLocation"
                    }
                },
                "masterLoggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterMasterLogging:getKubernetesClusterMasterMasterLogging"
                    }
                },
                "publicIp": {
                    "type": "boolean"
                },
                "regionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterRegional:getKubernetesClusterMasterRegional"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                },
                "versionInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterVersionInfo:getKubernetesClusterMasterVersionInfo"
                    }
                },
                "zonals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterZonal:getKubernetesClusterMasterZonal"
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterCaCertificate",
                "etcdClusterSize",
                "externalV4Address",
                "externalV4Endpoint",
                "externalV6Address",
                "externalV6Endpoint",
                "internalV4Address",
                "internalV4Endpoint",
                "maintenancePolicies",
                "masterLocations",
                "masterLoggings",
                "publicIp",
                "regionals",
                "securityGroupIds",
                "version",
                "versionInfos",
                "zonals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterMaintenancePolicy:getKubernetesClusterMasterMaintenancePolicy": {
            "properties": {
                "autoUpgrade": {
                    "type": "boolean"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterMasterMaintenancePolicyMaintenanceWindow:getKubernetesClusterMasterMaintenancePolicyMaintenanceWindow"
                    }
                }
            },
            "type": "object",
            "required": [
                "autoUpgrade",
                "maintenanceWindows"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterMaintenancePolicyMaintenanceWindow:getKubernetesClusterMasterMaintenancePolicyMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "duration",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterMasterLocation:getKubernetesClusterMasterMasterLocation": {
            "properties": {
                "subnetId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "subnetId",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterMasterLogging:getKubernetesClusterMasterMasterLogging": {
            "properties": {
                "auditEnabled": {
                    "type": "boolean"
                },
                "clusterAutoscalerEnabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "eventsEnabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "kubeApiserverEnabled": {
                    "type": "boolean"
                },
                "logGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "auditEnabled",
                "clusterAutoscalerEnabled",
                "enabled",
                "eventsEnabled",
                "folderId",
                "kubeApiserverEnabled",
                "logGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterRegional:getKubernetesClusterMasterRegional": {
            "properties": {
                "region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterVersionInfo:getKubernetesClusterMasterVersionInfo": {
            "properties": {
                "currentVersion": {
                    "type": "string"
                },
                "newRevisionAvailable": {
                    "type": "boolean"
                },
                "newRevisionSummary": {
                    "type": "string"
                },
                "versionDeprecated": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "currentVersion",
                "newRevisionAvailable",
                "newRevisionSummary",
                "versionDeprecated"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterMasterZonal:getKubernetesClusterMasterZonal": {
            "properties": {
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterNetworkImplementation:getKubernetesClusterNetworkImplementation": {
            "properties": {
                "cilia": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesClusterNetworkImplementationCilium:getKubernetesClusterNetworkImplementationCilium"
                    }
                }
            },
            "type": "object",
            "required": [
                "cilia"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesClusterNetworkImplementationCilium:getKubernetesClusterNetworkImplementationCilium": {
            "properties": {
                "routingMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "routingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupAllocationPolicy:getKubernetesNodeGroupAllocationPolicy": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupAllocationPolicyLocation:getKubernetesNodeGroupAllocationPolicyLocation"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupAllocationPolicyLocation:getKubernetesNodeGroupAllocationPolicyLocation": {
            "properties": {
                "subnetId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "subnetId",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupDeployPolicy:getKubernetesNodeGroupDeployPolicy": {
            "properties": {
                "maxExpansion": {
                    "type": "integer"
                },
                "maxUnavailable": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxExpansion",
                "maxUnavailable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplate:getKubernetesNodeGroupInstanceTemplate": {
            "properties": {
                "bootDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateBootDisk:getKubernetesNodeGroupInstanceTemplateBootDisk"
                    }
                },
                "containerNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateContainerNetwork:getKubernetesNodeGroupInstanceTemplateContainerNetwork"
                    }
                },
                "containerRuntime": {
                    "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateContainerRuntime:getKubernetesNodeGroupInstanceTemplateContainerRuntime"
                },
                "gpuSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateGpuSetting:getKubernetesNodeGroupInstanceTemplateGpuSetting"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nat": {
                    "type": "boolean"
                },
                "networkAccelerationType": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateNetworkInterface:getKubernetesNodeGroupInstanceTemplateNetworkInterface"
                    }
                },
                "placementPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplatePlacementPolicy:getKubernetesNodeGroupInstanceTemplatePlacementPolicy"
                    }
                },
                "platformId": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateResource:getKubernetesNodeGroupInstanceTemplateResource"
                    }
                },
                "schedulingPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateSchedulingPolicy:getKubernetesNodeGroupInstanceTemplateSchedulingPolicy"
                    }
                }
            },
            "type": "object",
            "required": [
                "bootDisks",
                "containerNetworks",
                "containerRuntime",
                "gpuSettings",
                "labels",
                "metadata",
                "name",
                "nat",
                "networkAccelerationType",
                "networkInterfaces",
                "platformId",
                "resources",
                "schedulingPolicies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateBootDisk:getKubernetesNodeGroupInstanceTemplateBootDisk": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateContainerNetwork:getKubernetesNodeGroupInstanceTemplateContainerNetwork": {
            "properties": {
                "podMtu": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "podMtu"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateContainerRuntime:getKubernetesNodeGroupInstanceTemplateContainerRuntime": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateGpuSetting:getKubernetesNodeGroupInstanceTemplateGpuSetting": {
            "properties": {
                "gpuClusterId": {
                    "type": "string"
                },
                "gpuEnvironment": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "gpuClusterId",
                "gpuEnvironment"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateNetworkInterface:getKubernetesNodeGroupInstanceTemplateNetworkInterface": {
            "properties": {
                "ipv4": {
                    "type": "boolean"
                },
                "ipv4DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord:getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord"
                    }
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6DnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord"
                    }
                },
                "nat": {
                    "type": "boolean"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipv4",
                "ipv4DnsRecords",
                "ipv6",
                "ipv6DnsRecords",
                "nat",
                "securityGroupIds",
                "subnetIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord:getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord:getKubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplatePlacementPolicy:getKubernetesNodeGroupInstanceTemplatePlacementPolicy": {
            "properties": {
                "placementGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "placementGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateResource:getKubernetesNodeGroupInstanceTemplateResource": {
            "properties": {
                "coreFraction": {
                    "type": "integer"
                },
                "cores": {
                    "type": "integer"
                },
                "gpus": {
                    "type": "integer"
                },
                "memory": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "coreFraction",
                "cores",
                "gpus",
                "memory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupInstanceTemplateSchedulingPolicy:getKubernetesNodeGroupInstanceTemplateSchedulingPolicy": {
            "properties": {
                "preemptible": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "preemptible"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupMaintenancePolicy:getKubernetesNodeGroupMaintenancePolicy": {
            "properties": {
                "autoRepair": {
                    "type": "boolean"
                },
                "autoUpgrade": {
                    "type": "boolean"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupMaintenancePolicyMaintenanceWindow:getKubernetesNodeGroupMaintenancePolicyMaintenanceWindow"
                    }
                }
            },
            "type": "object",
            "required": [
                "autoRepair",
                "autoUpgrade",
                "maintenanceWindows"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupMaintenancePolicyMaintenanceWindow:getKubernetesNodeGroupMaintenancePolicyMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "duration",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupScalePolicy:getKubernetesNodeGroupScalePolicy": {
            "properties": {
                "autoScales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupScalePolicyAutoScale:getKubernetesNodeGroupScalePolicyAutoScale"
                    }
                },
                "fixedScales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getKubernetesNodeGroupScalePolicyFixedScale:getKubernetesNodeGroupScalePolicyFixedScale"
                    }
                }
            },
            "type": "object",
            "required": [
                "autoScales",
                "fixedScales"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupScalePolicyAutoScale:getKubernetesNodeGroupScalePolicyAutoScale": {
            "properties": {
                "initial": {
                    "type": "integer"
                },
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "initial",
                "max",
                "min"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupScalePolicyFixedScale:getKubernetesNodeGroupScalePolicyFixedScale": {
            "properties": {
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getKubernetesNodeGroupVersionInfo:getKubernetesNodeGroupVersionInfo": {
            "properties": {
                "currentVersion": {
                    "type": "string"
                },
                "newRevisionAvailable": {
                    "type": "boolean"
                },
                "newRevisionSummary": {
                    "type": "string"
                },
                "versionDeprecated": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "currentVersion",
                "newRevisionAvailable",
                "newRevisionSummary",
                "versionDeprecated"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerAttachedTargetGroup:getLbNetworkLoadBalancerAttachedTargetGroup": {
            "properties": {
                "healthchecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerAttachedTargetGroupHealthcheck:getLbNetworkLoadBalancerAttachedTargetGroupHealthcheck"
                    }
                },
                "targetGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "healthchecks",
                "targetGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerAttachedTargetGroupHealthcheck:getLbNetworkLoadBalancerAttachedTargetGroupHealthcheck": {
            "properties": {
                "healthyThreshold": {
                    "type": "integer"
                },
                "httpOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOption:getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOption"
                    }
                },
                "interval": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tcpOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOption:getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOption"
                    }
                },
                "timeout": {
                    "type": "integer"
                },
                "unhealthyThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "healthyThreshold",
                "httpOptions",
                "interval",
                "name",
                "tcpOptions",
                "timeout",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOption:getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOption": {
            "properties": {
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "path",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOption:getLbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOption": {
            "properties": {
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerListener:getLbNetworkLoadBalancerListener": {
            "properties": {
                "externalAddressSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerListenerExternalAddressSpec:getLbNetworkLoadBalancerListenerExternalAddressSpec"
                    }
                },
                "internalAddressSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerListenerInternalAddressSpec:getLbNetworkLoadBalancerListenerInternalAddressSpec"
                    }
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "targetPort": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "externalAddressSpecs",
                "internalAddressSpecs",
                "name",
                "port",
                "protocol",
                "targetPort"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerListenerExternalAddressSpec:getLbNetworkLoadBalancerListenerExternalAddressSpec": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "ipVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbNetworkLoadBalancerListenerInternalAddressSpec:getLbNetworkLoadBalancerListenerInternalAddressSpec": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "ipVersion",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLbTargetGroupTarget:getLbTargetGroupTarget": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLoadtestingAgentComputeInstance:getLoadtestingAgentComputeInstance": {
            "properties": {
                "bootDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLoadtestingAgentComputeInstanceBootDisk:getLoadtestingAgentComputeInstanceBootDisk"
                    }
                },
                "computedLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "computedMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLoadtestingAgentComputeInstanceNetworkInterface:getLoadtestingAgentComputeInstanceNetworkInterface"
                    }
                },
                "platformId": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLoadtestingAgentComputeInstanceResource:getLoadtestingAgentComputeInstanceResource"
                    }
                },
                "serviceAccountId": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bootDisks",
                "computedLabels",
                "computedMetadata",
                "labels",
                "metadata",
                "networkInterfaces",
                "platformId",
                "resources",
                "serviceAccountId",
                "zoneId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLoadtestingAgentComputeInstanceBootDisk:getLoadtestingAgentComputeInstanceBootDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean"
                },
                "deviceName": {
                    "type": "string"
                },
                "diskId": {
                    "type": "string"
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getLoadtestingAgentComputeInstanceBootDiskInitializeParam:getLoadtestingAgentComputeInstanceBootDiskInitializeParam"
                    }
                }
            },
            "type": "object",
            "required": [
                "autoDelete",
                "deviceName",
                "diskId",
                "initializeParams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLoadtestingAgentComputeInstanceBootDiskInitializeParam:getLoadtestingAgentComputeInstanceBootDiskInitializeParam": {
            "properties": {
                "blockSize": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "blockSize",
                "description",
                "name",
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLoadtestingAgentComputeInstanceNetworkInterface:getLoadtestingAgentComputeInstanceNetworkInterface": {
            "properties": {
                "index": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "nat": {
                    "type": "boolean"
                },
                "natIpAddress": {
                    "type": "string"
                },
                "natIpVersion": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "ipAddress",
                "ipv4",
                "ipv6",
                "ipv6Address",
                "macAddress",
                "nat",
                "natIpAddress",
                "natIpVersion",
                "securityGroupIds",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLoadtestingAgentComputeInstanceResource:getLoadtestingAgentComputeInstanceResource": {
            "properties": {
                "coreFraction": {
                    "type": "integer"
                },
                "cores": {
                    "type": "integer"
                },
                "memory": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "coreFraction",
                "cores",
                "memory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLoadtestingAgentLogSettings:getLoadtestingAgentLogSettings": {
            "properties": {
                "logGroupId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/getLockboxSecretCurrentVersion:getLockboxSecretCurrentVersion": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The version creation timestamp.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The version description.\n"
                },
                "destroyAt": {
                    "type": "string",
                    "description": "The version destroy timestamp.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The version ID.\n"
                },
                "payloadEntryKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of keys that the version contains (doesn't include the values).\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "The secret ID the version belongs to (it's the same as the `secret_id` argument indicated above)\n"
                },
                "status": {
                    "type": "string",
                    "description": "The version status.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "destroyAt",
                "id",
                "payloadEntryKeys",
                "secretId",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLockboxSecretPasswordPayloadSpecification:getLockboxSecretPasswordPayloadSpecification": {
            "properties": {
                "excludedPunctuation": {
                    "type": "string"
                },
                "includeDigits": {
                    "type": "boolean"
                },
                "includeLowercase": {
                    "type": "boolean"
                },
                "includePunctuation": {
                    "type": "boolean"
                },
                "includeUppercase": {
                    "type": "boolean"
                },
                "includedPunctuation": {
                    "type": "string"
                },
                "length": {
                    "type": "integer"
                },
                "passwordKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "excludedPunctuation",
                "includeDigits",
                "includeLowercase",
                "includePunctuation",
                "includeUppercase",
                "includedPunctuation",
                "length",
                "passwordKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getLockboxSecretVersionEntry:getLockboxSecretVersionEntry": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "textValue": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "textValue"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterAccess:getMdbClickhouseClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for DataLens.\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for DataTransfer.\n"
                },
                "metrika": {
                    "type": "boolean",
                    "description": "Allow access for Yandex.Metrika.\n"
                },
                "serverless": {
                    "type": "boolean",
                    "description": "Allow access for Serverless.\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allow access for Web SQL.\n"
                },
                "yandexQuery": {
                    "type": "boolean",
                    "description": "Allow access for YandexQuery.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterBackupWindowStart:getMdbClickhouseClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterClickhouse:getMdbClickhouseClusterClickhouse": {
            "properties": {
                "config": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfig:getMdbClickhouseClusterClickhouseConfig",
                    "description": "ClickHouse server parameters. For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/settings-list).\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseResources:getMdbClickhouseClusterClickhouseResources",
                    "description": "Resources allocated to hosts of the ClickHouse subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "config",
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfig:getMdbClickhouseClusterClickhouseConfig": {
            "properties": {
                "asynchronousInsertLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable asynchronous_insert_log system table.\n"
                },
                "asynchronousInsertLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that asynchronous_insert_log can grow to before old data will be removed.\n"
                },
                "asynchronousInsertLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that asynchronous_insert_log records will be retained before removal.\n"
                },
                "asynchronousMetricLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable asynchronous_metric_log system table.\n"
                },
                "asynchronousMetricLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that asynchronous_metric_log can grow to before old data will be removed.\n"
                },
                "asynchronousMetricLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that asynchronous_metric_log records will be retained before removal.\n"
                },
                "backgroundBufferFlushSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for performing flush operations for Buffer-engine tables in the background.\n"
                },
                "backgroundCommonPoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for MergeTree-engine tables in a background.\n"
                },
                "backgroundDistributedSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for executing distributed sends.\n"
                },
                "backgroundFetchesPoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for fetching data parts from another replica for MergeTree-engine tables in a background.\n"
                },
                "backgroundMergesMutationsConcurrencyRatio": {
                    "type": "integer",
                    "description": "Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently.\n"
                },
                "backgroundMessageBrokerSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for executing background operations for message streaming.\n"
                },
                "backgroundMovePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for moving data parts to another disk or volume for MergeTree-engine tables in a background.\n"
                },
                "backgroundPoolSize": {
                    "type": "integer",
                    "description": "Sets the number of threads performing background merges and mutations for MergeTree-engine tables.\n"
                },
                "backgroundSchedulePoolSize": {
                    "type": "integer",
                    "description": "The maximum number of threads that will be used for constantly executing some lightweight periodic operations for replicated tables, Kafka streaming, and DNS cache updates.\n"
                },
                "compressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigCompression:getMdbClickhouseClusterClickhouseConfigCompression"
                    },
                    "description": "Data compression configuration.\n"
                },
                "defaultDatabase": {
                    "type": "string",
                    "description": "Default database name.\n"
                },
                "dictionariesLazyLoad": {
                    "type": "boolean",
                    "description": "Lazy loading of dictionaries. If true, then each dictionary is loaded on the first use.\n"
                },
                "geobaseEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable geobase.\n"
                },
                "geobaseUri": {
                    "type": "string",
                    "description": "Address of the archive with the user geobase in Object Storage.\n"
                },
                "graphiteRollups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigGraphiteRollup:getMdbClickhouseClusterClickhouseConfigGraphiteRollup"
                    },
                    "description": "Graphite rollup configuration.\n"
                },
                "jdbcBridge": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigJdbcBridge:getMdbClickhouseClusterClickhouseConfigJdbcBridge",
                    "description": "JDBC bridge configuration.\n"
                },
                "kafka": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigKafka:getMdbClickhouseClusterClickhouseConfigKafka",
                    "description": "Kafka connection configuration.\n"
                },
                "kafkaTopics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigKafkaTopic:getMdbClickhouseClusterClickhouseConfigKafkaTopic"
                    },
                    "description": "Kafka topic connection configuration.\n"
                },
                "keepAliveTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that ClickHouse waits for incoming requests for HTTP protocol before closing the connection.\n"
                },
                "logLevel": {
                    "type": "string",
                    "description": "Logging level.\n"
                },
                "markCacheSize": {
                    "type": "integer",
                    "description": "Maximum size of cache for marks\n"
                },
                "maxConcurrentQueries": {
                    "type": "integer",
                    "description": "Limit on total number of concurrently executed queries.\n"
                },
                "maxConnections": {
                    "type": "integer",
                    "description": "Max server connections.\n"
                },
                "maxPartitionSizeToDrop": {
                    "type": "integer",
                    "description": "Restriction on dropping partitions.\n"
                },
                "maxTableSizeToDrop": {
                    "type": "integer",
                    "description": "Restriction on deleting tables.\n"
                },
                "mergeTree": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigMergeTree:getMdbClickhouseClusterClickhouseConfigMergeTree",
                    "description": "MergeTree engine configuration.\n"
                },
                "metricLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable metric_log system table.\n"
                },
                "metricLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that metric_log can grow to before old data will be removed.\n"
                },
                "metricLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that metric_log records will be retained before removal.\n"
                },
                "opentelemetrySpanLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable opentelemetry_span_log system table.\n"
                },
                "opentelemetrySpanLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that opentelemetry_span_log can grow to before old data will be removed.\n"
                },
                "opentelemetrySpanLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that opentelemetry_span_log records will be retained before removal.\n"
                },
                "partLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that part_log can grow to before old data will be removed.\n"
                },
                "partLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that part_log records will be retained before removal.\n"
                },
                "queryCache": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigQueryCache:getMdbClickhouseClusterClickhouseConfigQueryCache",
                    "description": "Query cache configuration.\n"
                },
                "queryLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that query_log can grow to before old data will be removed.\n"
                },
                "queryLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that query_log records will be retained before removal.\n"
                },
                "queryMaskingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigQueryMaskingRule:getMdbClickhouseClusterClickhouseConfigQueryMaskingRule"
                    },
                    "description": "Query masking rules configuration.\n"
                },
                "queryThreadLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable query_thread_log system table.\n"
                },
                "queryThreadLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that query_thread_log can grow to before old data will be removed.\n"
                },
                "queryThreadLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that query_thread_log records will be retained before removal.\n"
                },
                "queryViewsLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable query_views_log system table.\n"
                },
                "queryViewsLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that query_views_log can grow to before old data will be removed.\n"
                },
                "queryViewsLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that query_views_log records will be retained before removal.\n"
                },
                "rabbitmq": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigRabbitmq:getMdbClickhouseClusterClickhouseConfigRabbitmq",
                    "description": "RabbitMQ connection configuration.\n"
                },
                "sessionLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable session_log system table.\n"
                },
                "sessionLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that session_log can grow to before old data will be removed.\n"
                },
                "sessionLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that session_log records will be retained before removal.\n"
                },
                "textLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable text_log system table.\n"
                },
                "textLogLevel": {
                    "type": "string",
                    "description": "Logging level for text_log system table.\n"
                },
                "textLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that text_log can grow to before old data will be removed.\n"
                },
                "textLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that text_log records will be retained before removal.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The server's time zone.\n"
                },
                "totalMemoryProfilerStep": {
                    "type": "integer",
                    "description": "Whenever server memory usage becomes larger than every next step in number of bytes the memory profiler will collect the allocating stack trace.\n"
                },
                "traceLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable trace_log system table.\n"
                },
                "traceLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that trace_log can grow to before old data will be removed.\n"
                },
                "traceLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that trace_log records will be retained before removal.\n"
                },
                "uncompressedCacheSize": {
                    "type": "integer",
                    "description": "Cache size (in bytes) for uncompressed data used by table engines from the MergeTree family. Zero means disabled.\n"
                },
                "zookeeperLogEnabled": {
                    "type": "boolean",
                    "description": "Enable or disable zookeeper_log system table.\n"
                },
                "zookeeperLogRetentionSize": {
                    "type": "integer",
                    "description": "The maximum size that zookeeper_log can grow to before old data will be removed.\n"
                },
                "zookeeperLogRetentionTime": {
                    "type": "integer",
                    "description": "The maximum time that zookeeper_log records will be retained before removal.\n"
                }
            },
            "type": "object",
            "required": [
                "asynchronousInsertLogEnabled",
                "asynchronousInsertLogRetentionSize",
                "asynchronousInsertLogRetentionTime",
                "asynchronousMetricLogEnabled",
                "asynchronousMetricLogRetentionSize",
                "asynchronousMetricLogRetentionTime",
                "backgroundBufferFlushSchedulePoolSize",
                "backgroundCommonPoolSize",
                "backgroundDistributedSchedulePoolSize",
                "backgroundFetchesPoolSize",
                "backgroundMergesMutationsConcurrencyRatio",
                "backgroundMessageBrokerSchedulePoolSize",
                "backgroundMovePoolSize",
                "backgroundPoolSize",
                "backgroundSchedulePoolSize",
                "defaultDatabase",
                "dictionariesLazyLoad",
                "geobaseEnabled",
                "geobaseUri",
                "jdbcBridge",
                "kafka",
                "keepAliveTimeout",
                "logLevel",
                "markCacheSize",
                "maxConcurrentQueries",
                "maxConnections",
                "maxPartitionSizeToDrop",
                "maxTableSizeToDrop",
                "mergeTree",
                "metricLogEnabled",
                "metricLogRetentionSize",
                "metricLogRetentionTime",
                "opentelemetrySpanLogEnabled",
                "opentelemetrySpanLogRetentionSize",
                "opentelemetrySpanLogRetentionTime",
                "partLogRetentionSize",
                "partLogRetentionTime",
                "queryCache",
                "queryLogRetentionSize",
                "queryLogRetentionTime",
                "queryThreadLogEnabled",
                "queryThreadLogRetentionSize",
                "queryThreadLogRetentionTime",
                "queryViewsLogEnabled",
                "queryViewsLogRetentionSize",
                "queryViewsLogRetentionTime",
                "rabbitmq",
                "sessionLogEnabled",
                "sessionLogRetentionSize",
                "sessionLogRetentionTime",
                "textLogEnabled",
                "textLogLevel",
                "textLogRetentionSize",
                "textLogRetentionTime",
                "timezone",
                "totalMemoryProfilerStep",
                "traceLogEnabled",
                "traceLogRetentionSize",
                "traceLogRetentionTime",
                "uncompressedCacheSize",
                "zookeeperLogEnabled",
                "zookeeperLogRetentionSize",
                "zookeeperLogRetentionTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigCompression:getMdbClickhouseClusterClickhouseConfigCompression": {
            "properties": {
                "level": {
                    "type": "integer",
                    "description": "Compression level for `ZSTD` method.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Compression method. Two methods are available: `LZ4` and `zstd`.\n"
                },
                "minPartSize": {
                    "type": "integer",
                    "description": "Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.\n"
                },
                "minPartSizeRatio": {
                    "type": "number",
                    "description": "Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigGraphiteRollup:getMdbClickhouseClusterClickhouseConfigGraphiteRollup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Graphite rollup configuration name.\n"
                },
                "pathColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the metric name (Graphite sensor). Default value: Path.\n"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern:getMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern"
                    },
                    "description": "Set of thinning rules.\n"
                },
                "timeColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the time of measuring the metric. Default value: Time.\n"
                },
                "valueColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the value of the metric at the time set in `time_column_name`. Default value: Value.\n"
                },
                "versionColumnName": {
                    "type": "string",
                    "description": "The name of the column storing the version of the metric. Default value: Timestamp.\n"
                }
            },
            "type": "object",
            "required": [
                "pathColumnName",
                "timeColumnName",
                "valueColumnName",
                "versionColumnName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern:getMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern": {
            "properties": {
                "function": {
                    "type": "string",
                    "description": "Aggregation function name.\n"
                },
                "regexp": {
                    "type": "string",
                    "description": "Regular expression that the metric name must match.\n"
                },
                "retentions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention:getMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention"
                    },
                    "description": "Retain parameters.\n"
                }
            },
            "type": "object",
            "required": [
                "regexp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention:getMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention": {
            "properties": {
                "age": {
                    "type": "integer",
                    "description": "Minimum data age in seconds.\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "Accuracy of determining the age of the data in seconds.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigJdbcBridge:getMdbClickhouseClusterClickhouseConfigJdbcBridge": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of jdbc bridge.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of jdbc bridge. Default value: 9019.\n"
                }
            },
            "type": "object",
            "required": [
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigKafka:getMdbClickhouseClusterClickhouseConfigKafka": {
            "properties": {
                "autoOffsetReset": {
                    "type": "string",
                    "description": "Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking 'message-\u003eerr'.\n"
                },
                "debug": {
                    "type": "string",
                    "description": "A comma-separated list of debug contexts to enable.\n"
                },
                "enableSslCertificateVerification": {
                    "type": "boolean",
                    "description": "Enable verification of SSL certificates.\n"
                },
                "maxPollIntervalMs": {
                    "type": "integer",
                    "description": "Maximum allowed time between calls to consume messages (e.g., `rd_kafka_consumer_poll()` for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "SASL mechanism used in kafka authentication.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "User password on kafka server.\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username on kafka server.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol used to connect to kafka server.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.\n"
                }
            },
            "type": "object",
            "required": [
                "autoOffsetReset",
                "debug",
                "enableSslCertificateVerification",
                "maxPollIntervalMs",
                "saslMechanism",
                "saslPassword",
                "saslUsername",
                "securityProtocol",
                "sessionTimeoutMs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigKafkaTopic:getMdbClickhouseClusterClickhouseConfigKafkaTopic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Kafka topic name.\n"
                },
                "settings": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouseConfigKafkaTopicSettings:getMdbClickhouseClusterClickhouseConfigKafkaTopicSettings",
                    "description": "Kafka connection settings.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigKafkaTopicSettings:getMdbClickhouseClusterClickhouseConfigKafkaTopicSettings": {
            "properties": {
                "autoOffsetReset": {
                    "type": "string",
                    "description": "Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking 'message-\u003eerr'.\n"
                },
                "debug": {
                    "type": "string",
                    "description": "A comma-separated list of debug contexts to enable.\n"
                },
                "enableSslCertificateVerification": {
                    "type": "boolean",
                    "description": "Enable verification of SSL certificates.\n"
                },
                "maxPollIntervalMs": {
                    "type": "integer",
                    "description": "Maximum allowed time between calls to consume messages (e.g., `rd_kafka_consumer_poll()` for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "SASL mechanism used in kafka authentication.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "User password on kafka server.\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username on kafka server.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol used to connect to kafka server.\n"
                },
                "sessionTimeoutMs": {
                    "type": "integer",
                    "description": "Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.\n"
                }
            },
            "type": "object",
            "required": [
                "autoOffsetReset",
                "debug",
                "enableSslCertificateVerification",
                "maxPollIntervalMs",
                "sessionTimeoutMs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigMergeTree:getMdbClickhouseClusterClickhouseConfigMergeTree": {
            "properties": {
                "allowRemoteFsZeroCopyReplication": {
                    "type": "boolean",
                    "description": "When this setting has a value greater than zero only a single replica starts the merge immediately if merged part on shared storage and allow_remote_fs_zero_copy_replication is enabled.\n"
                },
                "checkSampleColumnIsCorrect": {
                    "type": "boolean",
                    "description": "Enables the check at table creation, that the data type of a column for sampling or sampling expression is correct. The data type must be one of unsigned integer types: UInt8, UInt16, UInt32, UInt64. Default value: true.\n"
                },
                "cleanupDelayPeriod": {
                    "type": "integer",
                    "description": "Minimum period to clean old queue logs, blocks hashes and parts.\n"
                },
                "inactivePartsToDelayInsert": {
                    "type": "integer",
                    "description": "If the number of inactive parts in a single partition in the table at least that many the inactive_parts_to_delay_insert value, an INSERT artificially slows down. It is useful when a server fails to clean up parts quickly enough.\n"
                },
                "inactivePartsToThrowInsert": {
                    "type": "integer",
                    "description": "If the number of inactive parts in a single partition more than the inactive_parts_to_throw_insert value, INSERT is interrupted with the `Too many inactive parts (N). Parts cleaning are processing significantly slower than inserts` exception.\n"
                },
                "maxAvgPartSizeForTooManyParts": {
                    "type": "integer",
                    "description": "The `too many parts` check according to `parts_to_delay_insert` and `parts_to_throw_insert` will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.\n"
                },
                "maxBytesToMergeAtMaxSpaceInPool": {
                    "type": "integer",
                    "description": "The maximum total parts size (in bytes) to be merged into one part, if there are enough resources available. max_bytes_to_merge_at_max_space_in_pool -- roughly corresponds to the maximum possible part size created by an automatic background merge.\n"
                },
                "maxBytesToMergeAtMinSpaceInPool": {
                    "type": "integer",
                    "description": "Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.\n"
                },
                "maxCleanupDelayPeriod": {
                    "type": "integer",
                    "description": "Maximum period to clean old queue logs, blocks hashes and parts. Default value: 300 seconds.\n"
                },
                "maxMergeSelectingSleepMs": {
                    "type": "integer",
                    "description": "Maximum sleep time for merge selecting, a lower setting will trigger selecting tasks in background_schedule_pool frequently which result in large amount of requests to zookeeper in large-scale clusters. Default value: 60000 milliseconds (60 seconds).\n"
                },
                "maxNumberOfMergesWithTtlInPool": {
                    "type": "integer",
                    "description": "When there is more than specified number of merges with TTL entries in pool, do not assign new merge with TTL.\n"
                },
                "maxPartsInTotal": {
                    "type": "integer",
                    "description": "Maximum number of parts in all partitions.\n"
                },
                "maxReplicatedMergesInQueue": {
                    "type": "integer",
                    "description": "Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.\n"
                },
                "mergeMaxBlockSize": {
                    "type": "integer",
                    "description": "The number of rows that are read from the merged parts into memory. Default value: 8192.\n"
                },
                "mergeSelectingSleepMs": {
                    "type": "integer",
                    "description": "Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.\n"
                },
                "mergeWithRecompressionTtlTimeout": {
                    "type": "integer",
                    "description": "Minimum delay in seconds before repeating a merge with recompression TTL. Default value: 14400 seconds (4 hours).\n"
                },
                "mergeWithTtlTimeout": {
                    "type": "integer",
                    "description": "Minimum delay in seconds before repeating a merge with delete TTL. Default value: 14400 seconds (4 hours).\n"
                },
                "minAgeToForceMergeOnPartitionOnly": {
                    "type": "boolean",
                    "description": "Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.\n"
                },
                "minAgeToForceMergeSeconds": {
                    "type": "integer",
                    "description": "Merge parts if every part in the range is older than the value of `min_age_to_force_merge_seconds`.\n"
                },
                "minBytesForWidePart": {
                    "type": "integer",
                    "description": "Minimum number of bytes in a data part that can be stored in Wide format. You can set one, both or none of these settings.\n"
                },
                "minRowsForWidePart": {
                    "type": "integer",
                    "description": "Minimum number of rows in a data part that can be stored in Wide format. You can set one, both or none of these settings.\n"
                },
                "numberOfFreeEntriesInPoolToExecuteMutation": {
                    "type": "integer",
                    "description": "When there is less than specified number of free entries in pool, do not execute part mutations. This is to leave free threads for regular merges and avoid `Too many parts`. Default value: 20.\n"
                },
                "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge": {
                    "type": "integer",
                    "description": "Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.\n"
                },
                "partsToDelayInsert": {
                    "type": "integer",
                    "description": "Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table\n"
                },
                "partsToThrowInsert": {
                    "type": "integer",
                    "description": "Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.\n"
                },
                "replicatedDeduplicationWindow": {
                    "type": "integer",
                    "description": "Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).\n"
                },
                "replicatedDeduplicationWindowSeconds": {
                    "type": "integer",
                    "description": "Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).\n"
                },
                "ttlOnlyDropParts": {
                    "type": "boolean",
                    "description": "Enables zero-copy replication when a replica is located on a remote filesystem.\n"
                }
            },
            "type": "object",
            "required": [
                "allowRemoteFsZeroCopyReplication",
                "checkSampleColumnIsCorrect",
                "cleanupDelayPeriod",
                "inactivePartsToDelayInsert",
                "inactivePartsToThrowInsert",
                "maxAvgPartSizeForTooManyParts",
                "maxBytesToMergeAtMaxSpaceInPool",
                "maxBytesToMergeAtMinSpaceInPool",
                "maxCleanupDelayPeriod",
                "maxMergeSelectingSleepMs",
                "maxNumberOfMergesWithTtlInPool",
                "maxPartsInTotal",
                "maxReplicatedMergesInQueue",
                "mergeMaxBlockSize",
                "mergeSelectingSleepMs",
                "mergeWithRecompressionTtlTimeout",
                "mergeWithTtlTimeout",
                "minAgeToForceMergeOnPartitionOnly",
                "minAgeToForceMergeSeconds",
                "minBytesForWidePart",
                "minRowsForWidePart",
                "numberOfFreeEntriesInPoolToExecuteMutation",
                "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge",
                "partsToDelayInsert",
                "partsToThrowInsert",
                "replicatedDeduplicationWindow",
                "replicatedDeduplicationWindowSeconds",
                "ttlOnlyDropParts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigQueryCache:getMdbClickhouseClusterClickhouseConfigQueryCache": {
            "properties": {
                "maxEntries": {
                    "type": "integer",
                    "description": "The maximum number of SELECT query results stored in the cache. Default value: 1024.\n"
                },
                "maxEntrySizeInBytes": {
                    "type": "integer",
                    "description": "The maximum size in bytes SELECT query results may have to be saved in the cache. Default value: 1048576 (1 MiB).\n"
                },
                "maxEntrySizeInRows": {
                    "type": "integer",
                    "description": "The maximum number of rows SELECT query results may have to be saved in the cache. Default value: 30000000 (30 mil).\n"
                },
                "maxSizeInBytes": {
                    "type": "integer",
                    "description": "The maximum cache size in bytes. 0 means the query cache is disabled. Default value: 1073741824 (1 GiB).\n"
                }
            },
            "type": "object",
            "required": [
                "maxEntries",
                "maxEntrySizeInBytes",
                "maxEntrySizeInRows",
                "maxSizeInBytes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigQueryMaskingRule:getMdbClickhouseClusterClickhouseConfigQueryMaskingRule": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name for the rule.\n"
                },
                "regexp": {
                    "type": "string",
                    "description": "RE2 compatible regular expression.\n"
                },
                "replace": {
                    "type": "string",
                    "description": "Substitution string for sensitive data. Default value: six asterisks.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "replace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseConfigRabbitmq:getMdbClickhouseClusterClickhouseConfigRabbitmq": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "RabbitMQ user password.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "RabbitMQ username.\n"
                },
                "vhost": {
                    "type": "string",
                    "description": "RabbitMQ vhost. Default: `\\`.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username",
                "vhost"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterClickhouseResources:getMdbClickhouseClusterClickhouseResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ClickHouse host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ClickHouse hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ClickHouse host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterCloudStorage:getMdbClickhouseClusterCloudStorage": {
            "properties": {
                "dataCacheEnabled": {
                    "type": "boolean",
                    "description": "Enables temporary storage in the cluster repository of data requested from the object repository.\n"
                },
                "dataCacheMaxSize": {
                    "type": "integer",
                    "description": "Defines the maximum amount of memory (in bytes) allocated in the cluster storage for temporary storage of data requested from the object storage.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.\n"
                },
                "moveFactor": {
                    "type": "number",
                    "description": "Sets the minimum free space ratio in the cluster storage. If the free space is lower than this value, the data is transferred to Yandex Object Storage. Acceptable values are 0 to 1, inclusive.\n"
                },
                "preferNotToMerge": {
                    "type": "boolean",
                    "description": "Disables merging of data parts in `Yandex Object Storage`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataCacheEnabled",
                "dataCacheMaxSize",
                "moveFactor",
                "preferNotToMerge"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterDatabase:getMdbClickhouseClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterFormatSchema:getMdbClickhouseClusterFormatSchema": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the format schema.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the format schema.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Format schema file URL. You can only use format schemas stored in Yandex Object Storage.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterHost:getMdbClickhouseClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard to which the host belongs.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the host to be deployed. Can be either `CLICKHOUSE` or `ZOOKEEPER`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "fqdn",
                "shardName",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterMaintenanceWindow:getMdbClickhouseClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterMlModel:getMdbClickhouseClusterMlModel": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the ml model.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the model.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Model file URL. You can only use models stored in Yandex Object Storage.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterShard:getMdbClickhouseClusterShard": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of shard.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterShardResources:getMdbClickhouseClusterShardResources",
                    "description": "Resources allocated to host of the shard. The resources specified for the shard takes precedence over the resources specified for the cluster.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of shard.\n"
                }
            },
            "type": "object",
            "required": [
                "resources",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterShardGroup:getMdbClickhouseClusterShardGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the shard group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the shard group, used as cluster name in Distributed tables.\n"
                },
                "shardNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of shards names that belong to the shard group.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterShardResources:getMdbClickhouseClusterShardResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ClickHouse host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ClickHouse hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ClickHouse host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterUser:getMdbClickhouseClusterUser": {
            "properties": {
                "connectionManager": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Connection Manager connection configuration. Filled in by the server automatically.\n"
                },
                "generatePassword": {
                    "type": "boolean",
                    "description": "Generate password using Connection Manager. Allowed values: `true` or `false`. It's used only during user creation and is ignored during updating.\n\n\u003e **Must specify either password or generate_password**.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterUserPermission:getMdbClickhouseClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                },
                "quotas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterUserQuota:getMdbClickhouseClusterUserQuota"
                    },
                    "description": "Set of user quotas.\n"
                },
                "settings": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterUserSettings:getMdbClickhouseClusterUserSettings",
                    "description": "Custom settings for user.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionManager",
                "permissions",
                "quotas",
                "settings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterUserPermission:getMdbClickhouseClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbClickhouseClusterUserQuota:getMdbClickhouseClusterUserQuota": {
            "properties": {
                "errors": {
                    "type": "integer",
                    "description": "The number of queries that threw exception.\n"
                },
                "executionTime": {
                    "type": "integer",
                    "description": "The total query execution time, in milliseconds (wall time).\n"
                },
                "intervalDuration": {
                    "type": "integer",
                    "description": "Duration of interval for quota in milliseconds.\n"
                },
                "queries": {
                    "type": "integer",
                    "description": "The total number of queries.\n"
                },
                "readRows": {
                    "type": "integer",
                    "description": "The total number of source rows read from tables for running the query, on all remote servers.\n"
                },
                "resultRows": {
                    "type": "integer",
                    "description": "The total number of rows given as the result.\n"
                }
            },
            "type": "object",
            "required": [
                "errors",
                "executionTime",
                "queries",
                "readRows",
                "resultRows"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterUserSettings:getMdbClickhouseClusterUserSettings": {
            "properties": {
                "addHttpCorsHeader": {
                    "type": "boolean",
                    "description": "Include CORS headers in HTTP responses.\n"
                },
                "allowDdl": {
                    "type": "boolean",
                    "description": "Allows or denies DDL queries.\n"
                },
                "allowIntrospectionFunctions": {
                    "type": "boolean",
                    "description": "Enables introspections functions for query profiling.\n"
                },
                "allowSuspiciousLowCardinalityTypes": {
                    "type": "boolean",
                    "description": "Allows specifying LowCardinality modifier for types of small fixed size (8 or less) in CREATE TABLE statements. Enabling this may increase merge times and memory consumption.\n"
                },
                "anyJoinDistinctRightTableKeys": {
                    "type": "boolean",
                    "description": "Enables legacy ClickHouse server behavior in ANY INNER|LEFT JOIN operations.\n"
                },
                "asyncInsert": {
                    "type": "boolean",
                    "description": "Enables asynchronous inserts. Disabled by default.\n"
                },
                "asyncInsertBusyTimeout": {
                    "type": "integer",
                    "description": "The maximum timeout in milliseconds since the first INSERT query before inserting collected data. If the parameter is set to 0, the timeout is disabled. Default value: 200.\n"
                },
                "asyncInsertMaxDataSize": {
                    "type": "integer",
                    "description": "The maximum size of the unparsed data in bytes collected per query before being inserted. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 100000.\n"
                },
                "asyncInsertStaleTimeout": {
                    "type": "integer",
                    "description": "The maximum timeout in milliseconds since the last INSERT query before dumping collected data. If enabled, the settings prolongs the async_insert_busy_timeout with every INSERT query as long as async_insert_max_data_size is not exceeded.\n"
                },
                "asyncInsertThreads": {
                    "type": "integer",
                    "description": "The maximum number of threads for background data parsing and insertion. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 16.\n"
                },
                "cancelHttpReadonlyQueriesOnClientClose": {
                    "type": "boolean",
                    "description": "Cancels HTTP read-only queries (e.g. SELECT) when a client closes the connection without waiting for the response. Default value: false.\n"
                },
                "compile": {
                    "type": "boolean",
                    "description": "Enable compilation of queries.\n"
                },
                "compileExpressions": {
                    "type": "boolean",
                    "description": "Turn on expression compilation.\n"
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "Connect timeout in milliseconds on the socket used for communicating with the client.\n"
                },
                "connectTimeoutWithFailover": {
                    "type": "integer",
                    "description": "The timeout in milliseconds for connecting to a remote server for a Distributed table engine, if the ‘shard’ and ‘replica’ sections are used in the cluster definition. If unsuccessful, several attempts are made to connect to various replicas. Default value: 50.\n"
                },
                "countDistinctImplementation": {
                    "type": "string",
                    "description": "Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.\n"
                },
                "dateTimeInputFormat": {
                    "type": "string",
                    "description": "Allows choosing a parser of the text representation of date and time, one of: `best_effort`, `basic`, `best_effort_us`. Default value: `basic`. Cloud default value: `best_effort`.\n"
                },
                "dateTimeOutputFormat": {
                    "type": "string",
                    "description": "Allows choosing different output formats of the text representation of date and time, one of: `simple`, `iso`, `unix_timestamp`. Default value: `simple`.\n"
                },
                "deduplicateBlocksInDependentMaterializedViews": {
                    "type": "boolean",
                    "description": "Enables or disables the deduplication check for materialized views that receive data from `Replicated` tables.\n"
                },
                "distinctOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow when using DISTINCT. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "distributedAggregationMemoryEfficient": {
                    "type": "boolean",
                    "description": "Determine the behavior of distributed subqueries.\n"
                },
                "distributedDdlTaskTimeout": {
                    "type": "integer",
                    "description": "Timeout for DDL queries, in milliseconds.\n"
                },
                "distributedProductMode": {
                    "type": "string",
                    "description": "Changes the behavior of distributed subqueries.\n"
                },
                "emptyResultForAggregationByEmptySet": {
                    "type": "boolean",
                    "description": "Allows to return empty result.\n"
                },
                "enableHttpCompression": {
                    "type": "boolean",
                    "description": "Enables or disables data compression in the response to an HTTP request.\n"
                },
                "fallbackToStaleReplicasForDistributedQueries": {
                    "type": "boolean",
                    "description": "Forces a query to an out-of-date replica if updated data is not available.\n"
                },
                "flattenNested": {
                    "type": "boolean",
                    "description": "Sets the data format of a nested columns.\n"
                },
                "forceIndexByDate": {
                    "type": "boolean",
                    "description": "Disables query execution if the index can’t be used by date.\n"
                },
                "forcePrimaryKey": {
                    "type": "boolean",
                    "description": "Disables query execution if indexing by the primary key is not possible.\n"
                },
                "formatRegexp": {
                    "type": "string",
                    "description": "Regular expression (for Regexp format).\n"
                },
                "formatRegexpSkipUnmatched": {
                    "type": "boolean",
                    "description": "Skip lines unmatched by regular expression.\n"
                },
                "groupByOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow while GROUP BY operation. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n* `any` - perform approximate GROUP BY operation by continuing aggregation for the keys that got into the set, but don’t add new keys to the set.\n"
                },
                "groupByTwoLevelThreshold": {
                    "type": "integer",
                    "description": "Sets the threshold of the number of keys, after that the two-level aggregation should be used.\n"
                },
                "groupByTwoLevelThresholdBytes": {
                    "type": "integer",
                    "description": "Sets the threshold of the number of bytes, after that the two-level aggregation should be used.\n"
                },
                "hedgedConnectionTimeoutMs": {
                    "type": "integer",
                    "description": "Connection timeout for establishing connection with replica for Hedged requests. Default value: 50 milliseconds.\n"
                },
                "httpConnectionTimeout": {
                    "type": "integer",
                    "description": "Timeout for HTTP connection in milliseconds.\n"
                },
                "httpHeadersProgressInterval": {
                    "type": "integer",
                    "description": "Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.\n"
                },
                "httpReceiveTimeout": {
                    "type": "integer",
                    "description": "Timeout for HTTP connection in milliseconds.\n"
                },
                "httpSendTimeout": {
                    "type": "integer",
                    "description": "Timeout for HTTP connection in milliseconds.\n"
                },
                "idleConnectionTimeout": {
                    "type": "integer",
                    "description": "Timeout to close idle TCP connections after specified number of seconds. Default value: 3600 seconds.\n"
                },
                "inputFormatDefaultsForOmittedFields": {
                    "type": "boolean",
                    "description": "When performing INSERT queries, replace omitted input column values with default values of the respective columns.\n"
                },
                "inputFormatImportNestedJson": {
                    "type": "boolean",
                    "description": "Enables or disables the insertion of JSON data with nested objects.\n"
                },
                "inputFormatNullAsDefault": {
                    "type": "boolean",
                    "description": "Enables or disables the initialization of NULL fields with default values, if data type of these fields is not nullable.\n"
                },
                "inputFormatParallelParsing": {
                    "type": "boolean",
                    "description": "Enables or disables order-preserving parallel parsing of data formats. Supported only for TSV, TKSV, CSV and JSONEachRow formats.\n"
                },
                "inputFormatValuesInterpretExpressions": {
                    "type": "boolean",
                    "description": "Enables or disables the full SQL parser if the fast stream parser can’t parse the data.\n"
                },
                "inputFormatWithNamesUseHeader": {
                    "type": "boolean",
                    "description": "Enables or disables checking the column order when inserting data.\n"
                },
                "insertKeeperMaxRetries": {
                    "type": "integer",
                    "description": "The setting sets the maximum number of retries for ClickHouse Keeper (or ZooKeeper) requests during insert into replicated MergeTree. Only Keeper requests which failed due to network error, Keeper session timeout, or request timeout are considered for retries.\n"
                },
                "insertNullAsDefault": {
                    "type": "boolean",
                    "description": "Enables the insertion of default values instead of NULL into columns with not nullable data type. Default value: true.\n"
                },
                "insertQuorum": {
                    "type": "integer",
                    "description": "Enables the quorum writes.\n"
                },
                "insertQuorumParallel": {
                    "type": "boolean",
                    "description": "Enables or disables parallelism for quorum INSERT queries.\n"
                },
                "insertQuorumTimeout": {
                    "type": "integer",
                    "description": "Write to a quorum timeout in milliseconds.\n"
                },
                "joinAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which JOIN algorithm is used. Possible values:\n* `hash` - hash join algorithm is used. The most generic implementation that supports all combinations of kind and strictness and multiple join keys that are combined with OR in the JOIN ON section.\n* `parallel_hash` - a variation of hash join that splits the data into buckets and builds several hash tables instead of one concurrently to speed up this process.\n* `partial_merge` - a variation of the sort-merge algorithm, where only the right table is fully sorted.\n* `direct` - this algorithm can be applied when the storage for the right table supports key-value requests.\n* `auto` - when set to auto, hash join is tried first, and the algorithm is switched on the fly to another algorithm if the memory limit is violated.\n* `full_sorting_merge` - sort-merge algorithm with full sorting joined tables before joining.\n* `prefer_partial_merge` - clickHouse always tries to use partial_merge join if possible, otherwise, it uses hash. Deprecated, same as partial_merge,hash.\n"
                },
                "joinOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow in JOIN. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "joinUseNulls": {
                    "type": "boolean",
                    "description": "Sets the type of JOIN behavior. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.\n"
                },
                "joinedSubqueryRequiresAlias": {
                    "type": "boolean",
                    "description": "Require aliases for subselects and table functions in FROM that more than one table is present.\n"
                },
                "loadBalancing": {
                    "type": "string",
                    "description": "Specifies the algorithm of replicas selection that is used for distributed query processing, one of: random, nearest_hostname, in_order, first_or_random, round_robin. Default value: random.\n"
                },
                "localFilesystemReadMethod": {
                    "type": "string",
                    "description": "Method of reading data from local filesystem. Possible values:\n* `read` - abort query execution, return an error.\n* `pread` - abort query execution, return an error.\n* `pread_threadpool` - stop query execution, return partial result. If the parameter is set to 0 (default), no hops is allowed.\n"
                },
                "logQueryThreads": {
                    "type": "boolean",
                    "description": "Setting up query threads logging. Query threads log into the system.query_thread_log table. This setting has effect only when log_queries is true. Queries’ threads run by ClickHouse with this setup are logged according to the rules in the query_thread_log server configuration parameter. Default value: `true`.\n"
                },
                "lowCardinalityAllowInNativeFormat": {
                    "type": "boolean",
                    "description": "Allows or restricts using the LowCardinality data type with the Native format.\n"
                },
                "maxAstDepth": {
                    "type": "integer",
                    "description": "Maximum abstract syntax tree depth.\n"
                },
                "maxAstElements": {
                    "type": "integer",
                    "description": "Maximum abstract syntax tree elements.\n"
                },
                "maxBlockSize": {
                    "type": "integer",
                    "description": "A recommendation for what size of the block (in a count of rows) to load from tables.\n"
                },
                "maxBytesBeforeExternalGroupBy": {
                    "type": "integer",
                    "description": "Limit in bytes for using memory for GROUP BY before using swap on disk.\n"
                },
                "maxBytesBeforeExternalSort": {
                    "type": "integer",
                    "description": "This setting is equivalent of the max_bytes_before_external_group_by setting, except for it is for sort operation (ORDER BY), not aggregation.\n"
                },
                "maxBytesInDistinct": {
                    "type": "integer",
                    "description": "Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.\n"
                },
                "maxBytesInJoin": {
                    "type": "integer",
                    "description": "Limit on maximum size of the hash table for JOIN, in bytes.\n"
                },
                "maxBytesInSet": {
                    "type": "integer",
                    "description": "Limit on the number of bytes in the set resulting from the execution of the IN section.\n"
                },
                "maxBytesToRead": {
                    "type": "integer",
                    "description": "Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.\n"
                },
                "maxBytesToSort": {
                    "type": "integer",
                    "description": "Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.\n"
                },
                "maxBytesToTransfer": {
                    "type": "integer",
                    "description": "Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.\n"
                },
                "maxColumnsToRead": {
                    "type": "integer",
                    "description": "Limits the maximum number of columns that can be read from a table in a single query.\n"
                },
                "maxConcurrentQueriesForUser": {
                    "type": "integer",
                    "description": "The maximum number of concurrent requests per user. Default value: 0 (no limit).\n"
                },
                "maxExecutionTime": {
                    "type": "integer",
                    "description": "Limits the maximum query execution time in milliseconds.\n"
                },
                "maxExpandedAstElements": {
                    "type": "integer",
                    "description": "Maximum abstract syntax tree depth after after expansion of aliases.\n"
                },
                "maxFinalThreads": {
                    "type": "integer",
                    "description": "Sets the maximum number of parallel threads for the SELECT query data read phase with the FINAL modifier.\n"
                },
                "maxHttpGetRedirects": {
                    "type": "integer",
                    "description": "Limits the maximum number of HTTP GET redirect hops for URL-engine tables.\n"
                },
                "maxInsertBlockSize": {
                    "type": "integer",
                    "description": "The size of blocks (in a count of rows) to form for insertion into a table.\n"
                },
                "maxInsertThreads": {
                    "type": "integer",
                    "description": "The maximum number of threads to execute the INSERT SELECT query. Default value: 0.\n"
                },
                "maxMemoryUsage": {
                    "type": "integer",
                    "description": "Limits the maximum memory usage (in bytes) for processing queries on a single server.\n"
                },
                "maxMemoryUsageForUser": {
                    "type": "integer",
                    "description": "Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.\n"
                },
                "maxNetworkBandwidth": {
                    "type": "integer",
                    "description": "Limits the speed of the data exchange over the network in bytes per second.\n"
                },
                "maxNetworkBandwidthForUser": {
                    "type": "integer",
                    "description": "Limits the speed of the data exchange over the network in bytes per second.\n"
                },
                "maxParserDepth": {
                    "type": "integer",
                    "description": "Limits maximum recursion depth in the recursive descent parser. Allows controlling the stack size. Zero means unlimited.\n"
                },
                "maxQuerySize": {
                    "type": "integer",
                    "description": "The maximum part of a query that can be taken to RAM for parsing with the SQL parser.\n"
                },
                "maxReadBufferSize": {
                    "type": "integer",
                    "description": "The maximum size of the buffer to read from the filesystem.\n"
                },
                "maxReplicaDelayForDistributedQueries": {
                    "type": "integer",
                    "description": "Disables lagging replicas for distributed queries.\n"
                },
                "maxResultBytes": {
                    "type": "integer",
                    "description": "Limits the number of bytes in the result.\n"
                },
                "maxResultRows": {
                    "type": "integer",
                    "description": "Limits the number of rows in the result.\n"
                },
                "maxRowsInDistinct": {
                    "type": "integer",
                    "description": "Limits the maximum number of different rows when using DISTINCT.\n"
                },
                "maxRowsInJoin": {
                    "type": "integer",
                    "description": "Limit on maximum size of the hash table for JOIN, in rows.\n"
                },
                "maxRowsInSet": {
                    "type": "integer",
                    "description": "Limit on the number of rows in the set resulting from the execution of the IN section.\n"
                },
                "maxRowsToGroupBy": {
                    "type": "integer",
                    "description": "Limits the maximum number of unique keys received from aggregation function.\n"
                },
                "maxRowsToRead": {
                    "type": "integer",
                    "description": "Limits the maximum number of rows that can be read from a table when running a query.\n"
                },
                "maxRowsToSort": {
                    "type": "integer",
                    "description": "Limits the maximum number of rows that can be read from a table for sorting.\n"
                },
                "maxRowsToTransfer": {
                    "type": "integer",
                    "description": "Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.\n"
                },
                "maxTemporaryColumns": {
                    "type": "integer",
                    "description": "Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.\n"
                },
                "maxTemporaryDataOnDiskSizeForQuery": {
                    "type": "integer",
                    "description": "The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running queries. Zero means unlimited.\n"
                },
                "maxTemporaryDataOnDiskSizeForUser": {
                    "type": "integer",
                    "description": "The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running user queries. Zero means unlimited.\n"
                },
                "maxTemporaryNonConstColumns": {
                    "type": "integer",
                    "description": "Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.\n"
                },
                "maxThreads": {
                    "type": "integer",
                    "description": "The maximum number of query processing threads, excluding threads for retrieving data from remote servers.\n"
                },
                "memoryOvercommitRatioDenominator": {
                    "type": "integer",
                    "description": "It represents soft memory limit in case when hard limit is reached on user level. This value is used to compute overcommit ratio for the query. Zero means skip the query.\n"
                },
                "memoryOvercommitRatioDenominatorForUser": {
                    "type": "integer",
                    "description": "It represents soft memory limit in case when hard limit is reached on global level. This value is used to compute overcommit ratio for the query. Zero means skip the query.\n"
                },
                "memoryProfilerSampleProbability": {
                    "type": "number",
                    "description": "Collect random allocations and deallocations and write them into system.trace_log with 'MemorySample' trace_type. The probability is for every alloc/free regardless to the size of the allocation. Possible values: from 0 to 1. Default: 0.\n"
                },
                "memoryProfilerStep": {
                    "type": "integer",
                    "description": "Memory profiler step (in bytes). If the next query step requires more memory than this parameter specifies, the memory profiler collects the allocating stack trace. Values lower than a few megabytes slow down query processing. Default value: 4194304 (4 MB). Zero means disabled memory profiler.\n"
                },
                "memoryUsageOvercommitMaxWaitMicroseconds": {
                    "type": "integer",
                    "description": "Maximum time thread will wait for memory to be freed in the case of memory overcommit on a user level. If the timeout is reached and memory is not freed, an exception is thrown.\n"
                },
                "mergeTreeMaxBytesToUseCache": {
                    "type": "integer",
                    "description": "If ClickHouse should read more than merge_tree_max_bytes_to_use_cache bytes in one query, it doesn’t use the cache of uncompressed blocks.\n"
                },
                "mergeTreeMaxRowsToUseCache": {
                    "type": "integer",
                    "description": "If ClickHouse should read more than merge_tree_max_rows_to_use_cache rows in one query, it doesn’t use the cache of uncompressed blocks.\n"
                },
                "mergeTreeMinBytesForConcurrentRead": {
                    "type": "integer",
                    "description": "If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.\n"
                },
                "mergeTreeMinRowsForConcurrentRead": {
                    "type": "integer",
                    "description": "If the number of rows to be read from a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read then ClickHouse tries to perform a concurrent reading from this file on several threads.\n"
                },
                "minBytesToUseDirectIo": {
                    "type": "integer",
                    "description": "The minimum data volume required for using direct I/O access to the storage disk.\n"
                },
                "minCountToCompile": {
                    "type": "integer",
                    "description": "How many times to potentially use a compiled chunk of code before running compilation.\n"
                },
                "minCountToCompileExpression": {
                    "type": "integer",
                    "description": "A query waits for expression compilation process to complete prior to continuing execution.\n"
                },
                "minExecutionSpeed": {
                    "type": "integer",
                    "description": "Minimal execution speed in rows per second.\n"
                },
                "minExecutionSpeedBytes": {
                    "type": "integer",
                    "description": "Minimal execution speed in bytes per second.\n"
                },
                "minInsertBlockSizeBytes": {
                    "type": "integer",
                    "description": "Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.\n"
                },
                "minInsertBlockSizeRows": {
                    "type": "integer",
                    "description": "Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.\n"
                },
                "outputFormatJsonQuote64bitIntegers": {
                    "type": "boolean",
                    "description": "If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.\n"
                },
                "outputFormatJsonQuoteDenormals": {
                    "type": "boolean",
                    "description": "Enables +nan, -nan, +inf, -inf outputs in JSON output format.\n"
                },
                "preferLocalhostReplica": {
                    "type": "boolean",
                    "description": "Enables/disables preferable using the localhost replica when processing distributed queries. Default value: true.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Query priority.\n"
                },
                "quotaMode": {
                    "type": "string",
                    "description": "Quota accounting mode.\n"
                },
                "readOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow while read. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "readonly": {
                    "type": "integer",
                    "description": "Restricts permissions for reading data, write data and change settings queries.\n"
                },
                "receiveTimeout": {
                    "type": "integer",
                    "description": "Receive timeout in milliseconds on the socket used for communicating with the client.\n"
                },
                "remoteFilesystemReadMethod": {
                    "type": "string",
                    "description": "Method of reading data from remote filesystem, one of: `read`, `threadpool`.\n"
                },
                "replicationAlterPartitionsSync": {
                    "type": "integer",
                    "description": "For ALTER ... ATTACH|DETACH|DROP queries, you can use the replication_alter_partitions_sync setting to set up waiting.\n"
                },
                "resultOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow in result. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "selectSequentialConsistency": {
                    "type": "boolean",
                    "description": "Enables or disables sequential consistency for SELECT queries.\n"
                },
                "sendProgressInHttpHeaders": {
                    "type": "boolean",
                    "description": "Enables or disables `X-ClickHouse-Progress` HTTP response headers in clickhouse-server responses.\n"
                },
                "sendTimeout": {
                    "type": "integer",
                    "description": "Send timeout in milliseconds on the socket used for communicating with the client.\n"
                },
                "setOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow in the set resulting. Possible values:\n  * `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "skipUnavailableShards": {
                    "type": "boolean",
                    "description": "Enables or disables silently skipping of unavailable shards.\n"
                },
                "sortOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow while sort. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "timeoutBeforeCheckingExecutionSpeed": {
                    "type": "integer",
                    "description": "Timeout (in seconds) between checks of execution speed. It is checked that execution speed is not less that specified in min_execution_speed parameter. Must be at least 1000.\n"
                },
                "timeoutOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "transferOverflowMode": {
                    "type": "string",
                    "description": "Sets behavior on overflow. Possible values:\n* `throw` - abort query execution, return an error.\n* `break` - stop query execution, return partial result.\n"
                },
                "transformNullIn": {
                    "type": "boolean",
                    "description": "Enables equality of NULL values for IN operator.\n"
                },
                "useHedgedRequests": {
                    "type": "boolean",
                    "description": "Enables hedged requests logic for remote queries. It allows to establish many connections with different replicas for query. New connection is enabled in case existent connection(s) with replica(s) were not established within hedged_connection_timeout or no data was received within receive_data_timeout. Query uses the first connection which send non empty progress packet (or data packet, if allow_changing_replica_until_first_data_packet); other connections are cancelled. Queries with max_parallel_replicas \u003e 1 are supported. Default value: true.\n"
                },
                "useUncompressedCache": {
                    "type": "boolean",
                    "description": "Whether to use a cache of uncompressed blocks.\n"
                },
                "waitForAsyncInsert": {
                    "type": "boolean",
                    "description": "Enables waiting for processing of asynchronous insertion. If enabled, server returns OK only after the data is inserted.\n"
                },
                "waitForAsyncInsertTimeout": {
                    "type": "integer",
                    "description": "The timeout (in seconds) for waiting for processing of asynchronous insertion. Value must be at least 1000 (1 second).\n"
                }
            },
            "type": "object",
            "required": [
                "addHttpCorsHeader",
                "allowDdl",
                "allowIntrospectionFunctions",
                "allowSuspiciousLowCardinalityTypes",
                "anyJoinDistinctRightTableKeys",
                "asyncInsert",
                "asyncInsertBusyTimeout",
                "asyncInsertMaxDataSize",
                "asyncInsertStaleTimeout",
                "asyncInsertThreads",
                "cancelHttpReadonlyQueriesOnClientClose",
                "compile",
                "compileExpressions",
                "connectTimeout",
                "connectTimeoutWithFailover",
                "countDistinctImplementation",
                "dateTimeInputFormat",
                "dateTimeOutputFormat",
                "deduplicateBlocksInDependentMaterializedViews",
                "distinctOverflowMode",
                "distributedAggregationMemoryEfficient",
                "distributedDdlTaskTimeout",
                "distributedProductMode",
                "emptyResultForAggregationByEmptySet",
                "enableHttpCompression",
                "fallbackToStaleReplicasForDistributedQueries",
                "flattenNested",
                "forceIndexByDate",
                "forcePrimaryKey",
                "formatRegexp",
                "formatRegexpSkipUnmatched",
                "groupByOverflowMode",
                "groupByTwoLevelThreshold",
                "groupByTwoLevelThresholdBytes",
                "hedgedConnectionTimeoutMs",
                "httpConnectionTimeout",
                "httpHeadersProgressInterval",
                "httpReceiveTimeout",
                "httpSendTimeout",
                "idleConnectionTimeout",
                "inputFormatDefaultsForOmittedFields",
                "inputFormatImportNestedJson",
                "inputFormatNullAsDefault",
                "inputFormatParallelParsing",
                "inputFormatValuesInterpretExpressions",
                "inputFormatWithNamesUseHeader",
                "insertKeeperMaxRetries",
                "insertNullAsDefault",
                "insertQuorum",
                "insertQuorumParallel",
                "insertQuorumTimeout",
                "joinAlgorithms",
                "joinOverflowMode",
                "joinUseNulls",
                "joinedSubqueryRequiresAlias",
                "loadBalancing",
                "localFilesystemReadMethod",
                "logQueryThreads",
                "lowCardinalityAllowInNativeFormat",
                "maxAstDepth",
                "maxAstElements",
                "maxBlockSize",
                "maxBytesBeforeExternalGroupBy",
                "maxBytesBeforeExternalSort",
                "maxBytesInDistinct",
                "maxBytesInJoin",
                "maxBytesInSet",
                "maxBytesToRead",
                "maxBytesToSort",
                "maxBytesToTransfer",
                "maxColumnsToRead",
                "maxConcurrentQueriesForUser",
                "maxExecutionTime",
                "maxExpandedAstElements",
                "maxFinalThreads",
                "maxHttpGetRedirects",
                "maxInsertBlockSize",
                "maxInsertThreads",
                "maxMemoryUsage",
                "maxMemoryUsageForUser",
                "maxNetworkBandwidth",
                "maxNetworkBandwidthForUser",
                "maxParserDepth",
                "maxQuerySize",
                "maxReadBufferSize",
                "maxReplicaDelayForDistributedQueries",
                "maxResultBytes",
                "maxResultRows",
                "maxRowsInDistinct",
                "maxRowsInJoin",
                "maxRowsInSet",
                "maxRowsToGroupBy",
                "maxRowsToRead",
                "maxRowsToSort",
                "maxRowsToTransfer",
                "maxTemporaryColumns",
                "maxTemporaryDataOnDiskSizeForQuery",
                "maxTemporaryDataOnDiskSizeForUser",
                "maxTemporaryNonConstColumns",
                "maxThreads",
                "memoryOvercommitRatioDenominator",
                "memoryOvercommitRatioDenominatorForUser",
                "memoryProfilerSampleProbability",
                "memoryProfilerStep",
                "memoryUsageOvercommitMaxWaitMicroseconds",
                "mergeTreeMaxBytesToUseCache",
                "mergeTreeMaxRowsToUseCache",
                "mergeTreeMinBytesForConcurrentRead",
                "mergeTreeMinRowsForConcurrentRead",
                "minBytesToUseDirectIo",
                "minCountToCompile",
                "minCountToCompileExpression",
                "minExecutionSpeed",
                "minExecutionSpeedBytes",
                "minInsertBlockSizeBytes",
                "minInsertBlockSizeRows",
                "outputFormatJsonQuote64bitIntegers",
                "outputFormatJsonQuoteDenormals",
                "preferLocalhostReplica",
                "priority",
                "quotaMode",
                "readOverflowMode",
                "readonly",
                "receiveTimeout",
                "remoteFilesystemReadMethod",
                "replicationAlterPartitionsSync",
                "resultOverflowMode",
                "selectSequentialConsistency",
                "sendProgressInHttpHeaders",
                "sendTimeout",
                "setOverflowMode",
                "skipUnavailableShards",
                "sortOverflowMode",
                "timeoutBeforeCheckingExecutionSpeed",
                "timeoutOverflowMode",
                "transferOverflowMode",
                "transformNullIn",
                "useHedgedRequests",
                "useUncompressedCache",
                "waitForAsyncInsert",
                "waitForAsyncInsertTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterZookeeper:getMdbClickhouseClusterZookeeper": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/getMdbClickhouseClusterZookeeperResources:getMdbClickhouseClusterZookeeperResources",
                    "description": "Resources allocated to hosts of the ZooKeeper subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbClickhouseClusterZookeeperResources:getMdbClickhouseClusterZookeeperResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ZooKeeper host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ZooKeeper hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ZooKeeper host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterConfig:getMdbElasticsearchClusterConfig": {
            "properties": {
                "adminPassword": {
                    "type": "string"
                },
                "dataNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbElasticsearchClusterConfigDataNode:getMdbElasticsearchClusterConfigDataNode"
                    }
                },
                "edition": {
                    "type": "string"
                },
                "masterNode": {
                    "$ref": "#/types/yandex:index/getMdbElasticsearchClusterConfigMasterNode:getMdbElasticsearchClusterConfigMasterNode"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "adminPassword",
                "dataNodes",
                "edition",
                "masterNode",
                "plugins",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterConfigDataNode:getMdbElasticsearchClusterConfigDataNode": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbElasticsearchClusterConfigDataNodeResource:getMdbElasticsearchClusterConfigDataNodeResource"
                    }
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterConfigDataNodeResource:getMdbElasticsearchClusterConfigDataNodeResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterConfigMasterNode:getMdbElasticsearchClusterConfigMasterNode": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbElasticsearchClusterConfigMasterNodeResource:getMdbElasticsearchClusterConfigMasterNodeResource"
                    }
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterConfigMasterNodeResource:getMdbElasticsearchClusterConfigMasterNodeResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterHost:getMdbElasticsearchClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean"
                },
                "fqdn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "fqdn",
                "name",
                "subnetId",
                "type",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbElasticsearchClusterMaintenanceWindow:getMdbElasticsearchClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterAccess:getMdbGreenplumClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean"
                },
                "dataTransfer": {
                    "type": "boolean"
                },
                "webSql": {
                    "type": "boolean"
                },
                "yandexQuery": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "dataLens",
                "dataTransfer",
                "webSql",
                "yandexQuery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterBackgroundActivity:getMdbGreenplumClusterBackgroundActivity": {
            "properties": {
                "analyzeAndVacuums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum:getMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum"
                    }
                },
                "queryKillerIdleInTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction:getMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction"
                    }
                },
                "queryKillerIdles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackgroundActivityQueryKillerIdle:getMdbGreenplumClusterBackgroundActivityQueryKillerIdle"
                    }
                },
                "queryKillerLongRunnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackgroundActivityQueryKillerLongRunning:getMdbGreenplumClusterBackgroundActivityQueryKillerLongRunning"
                    }
                }
            },
            "type": "object",
            "required": [
                "analyzeAndVacuums",
                "queryKillerIdles",
                "queryKillerIdleInTransactions",
                "queryKillerLongRunnings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum:getMdbGreenplumClusterBackgroundActivityAnalyzeAndVacuum": {
            "properties": {
                "analyzeTimeout": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "vacuumTimeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "analyzeTimeout",
                "startTime",
                "vacuumTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterBackgroundActivityQueryKillerIdle:getMdbGreenplumClusterBackgroundActivityQueryKillerIdle": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "ignoreUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxAge": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enable",
                "ignoreUsers",
                "maxAge"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction:getMdbGreenplumClusterBackgroundActivityQueryKillerIdleInTransaction": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "ignoreUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxAge": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enable",
                "ignoreUsers",
                "maxAge"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterBackgroundActivityQueryKillerLongRunning:getMdbGreenplumClusterBackgroundActivityQueryKillerLongRunning": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "ignoreUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxAge": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enable",
                "ignoreUsers",
                "maxAge"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterBackupWindowStart:getMdbGreenplumClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "hours",
                "minutes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterCloudStorage:getMdbGreenplumClusterCloudStorage": {
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterLogging:getMdbGreenplumClusterLogging": {
            "properties": {
                "commandCenterEnabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "greenplumEnabled": {
                    "type": "boolean"
                },
                "logGroupId": {
                    "type": "string"
                },
                "poolerEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "commandCenterEnabled",
                "enabled",
                "folderId",
                "greenplumEnabled",
                "logGroupId",
                "poolerEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterMaintenanceWindow:getMdbGreenplumClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterMasterHost:getMdbGreenplumClusterMasterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean"
                },
                "fqdn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterMasterSubcluster:getMdbGreenplumClusterMasterSubcluster": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterMasterSubclusterResource:getMdbGreenplumClusterMasterSubclusterResource"
                    }
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterMasterSubclusterResource:getMdbGreenplumClusterMasterSubclusterResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterPoolerConfig:getMdbGreenplumClusterPoolerConfig": {
            "properties": {
                "poolClientIdleTimeout": {
                    "type": "integer"
                },
                "poolSize": {
                    "type": "integer"
                },
                "poolingMode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbGreenplumClusterPxfConfig:getMdbGreenplumClusterPxfConfig": {
            "properties": {
                "connectionTimeout": {
                    "type": "integer"
                },
                "maxThreads": {
                    "type": "integer"
                },
                "poolAllowCoreThreadTimeout": {
                    "type": "boolean"
                },
                "poolCoreSize": {
                    "type": "integer"
                },
                "poolMaxSize": {
                    "type": "integer"
                },
                "poolQueueCapacity": {
                    "type": "integer"
                },
                "uploadTimeout": {
                    "type": "integer"
                },
                "xms": {
                    "type": "integer"
                },
                "xmx": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbGreenplumClusterSegmentHost:getMdbGreenplumClusterSegmentHost": {
            "properties": {
                "fqdn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fqdn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterSegmentSubcluster:getMdbGreenplumClusterSegmentSubcluster": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterSegmentSubclusterResource:getMdbGreenplumClusterSegmentSubclusterResource"
                    }
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbGreenplumClusterSegmentSubclusterResource:getMdbGreenplumClusterSegmentSubclusterResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterConfig:getMdbKafkaClusterConfig": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigAccess:getMdbKafkaClusterConfigAccess",
                    "description": "Access policy to the Kafka cluster.\n"
                },
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Determines whether each broker will be assigned a public IP address. The default is `false`.\n"
                },
                "brokersCount": {
                    "type": "integer",
                    "description": "Count of brokers per availability zone. The default is `1`.\n"
                },
                "diskSizeAutoscaling": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigDiskSizeAutoscaling:getMdbKafkaClusterConfigDiskSizeAutoscaling",
                    "description": "Disk autoscaling settings of the Kafka cluster.\n"
                },
                "kafka": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigKafka:getMdbKafkaClusterConfigKafka",
                    "description": "Configuration of the Kafka subcluster.\n"
                },
                "kraft": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigKraft:getMdbKafkaClusterConfigKraft",
                    "description": "Configuration of the KRaft-controller subcluster.\n"
                },
                "restApi": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigRestApi:getMdbKafkaClusterConfigRestApi",
                    "description": "REST API settings of the Kafka cluster.\n"
                },
                "schemaRegistry": {
                    "type": "boolean",
                    "description": "Enables managed schema registry on cluster. The default is `false`.\n"
                },
                "unmanagedTopics": {
                    "type": "boolean",
                    "deprecationMessage": "The 'unmanaged_topics' field has been deprecated, because feature enabled permanently and can't be disabled."
                },
                "version": {
                    "type": "string",
                    "description": "Version of the Kafka server software.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of availability zones.\n"
                },
                "zookeeper": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigZookeeper:getMdbKafkaClusterConfigZookeeper",
                    "description": "Configuration of the ZooKeeper subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "access",
                "diskSizeAutoscaling",
                "kafka",
                "kraft",
                "restApi",
                "version",
                "zones",
                "zookeeper"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "kafka",
                        "version",
                        "zones"
                    ]
                }
            }
        },
        "yandex:index/getMdbKafkaClusterConfigAccess:getMdbKafkaClusterConfigAccess": {
            "properties": {
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbKafkaClusterConfigDiskSizeAutoscaling:getMdbKafkaClusterConfigDiskSizeAutoscaling": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Maximum possible size of disk in bytes.\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Percent of disk utilization. Disk will autoscale immediately, if this threshold reached. Value is between 0 and 100. Default value is 0 (autoscaling disabled). Must be not less then 'planned_usage_threshold' value.\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Percent of disk utilization. During maintenance disk will autoscale, if this threshold reached. Value is between 0 and 100. Default value is 0 (autoscaling disabled).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit"
            ]
        },
        "yandex:index/getMdbKafkaClusterConfigKafka:getMdbKafkaClusterConfigKafka": {
            "properties": {
                "kafkaConfig": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigKafkaKafkaConfig:getMdbKafkaClusterConfigKafkaKafkaConfig",
                    "description": "User-defined settings for the Kafka cluster. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/operations/cluster-update) and [the Kafka documentation](https://kafka.apache.org/documentation/#configuration).\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigKafkaResources:getMdbKafkaClusterConfigKafkaResources",
                    "description": "Resources allocated to hosts of the Kafka subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ]
        },
        "yandex:index/getMdbKafkaClusterConfigKafkaKafkaConfig:getMdbKafkaClusterConfigKafkaKafkaConfig": {
            "properties": {
                "autoCreateTopicsEnable": {
                    "type": "boolean",
                    "description": "Enable auto creation of topic on the server.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Compression type of kafka topics.\n"
                },
                "defaultReplicationFactor": {
                    "type": "string",
                    "description": "The replication factor for automatically created topics, and for topics created with -1 as the replication factor.\n"
                },
                "logFlushIntervalMessages": {
                    "type": "string",
                    "description": "The number of messages accumulated on a log partition before messages are flushed to disk.\n"
                },
                "logFlushIntervalMs": {
                    "type": "string",
                    "description": "The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.\n"
                },
                "logFlushSchedulerIntervalMs": {
                    "type": "string",
                    "description": "The frequency in ms that the log flusher checks whether any log needs to be flushed to disk.\n"
                },
                "logPreallocate": {
                    "type": "boolean",
                    "description": "Should pre allocate file when create new segment?\n"
                },
                "logRetentionBytes": {
                    "type": "string",
                    "description": "The maximum size of the log before deleting it.\n"
                },
                "logRetentionHours": {
                    "type": "string",
                    "description": "The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property.\n"
                },
                "logRetentionMinutes": {
                    "type": "string",
                    "description": "The number of minutes to keep a log file before deleting it (in minutes), secondary to log.retention.ms property. If not set, the value in log.retention.hours is used.\n"
                },
                "logRetentionMs": {
                    "type": "string",
                    "description": "The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.\n"
                },
                "logSegmentBytes": {
                    "type": "string",
                    "description": "The maximum size of a single log file.\n"
                },
                "messageMaxBytes": {
                    "type": "string",
                    "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\n"
                },
                "numPartitions": {
                    "type": "string",
                    "description": "The default number of log partitions per topic.\n"
                },
                "offsetsRetentionMinutes": {
                    "type": "string",
                    "description": "For subscribed consumers, committed offset of a specific partition will be expired and discarded after this period of time.\n"
                },
                "replicaFetchMaxBytes": {
                    "type": "string",
                    "description": "The number of bytes of messages to attempt to fetch for each partition.\n"
                },
                "saslEnabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SASL mechanisms enabled in the Kafka server.\n"
                },
                "socketReceiveBufferBytes": {
                    "type": "string",
                    "description": "The SO_RCVBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.\n"
                },
                "socketSendBufferBytes": {
                    "type": "string",
                    "description": "The SO_SNDBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.\n"
                },
                "sslCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of cipher suites.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbKafkaClusterConfigKafkaResources:getMdbKafkaClusterConfigKafkaResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a Kafka host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of Kafka hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a Kafka host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ]
        },
        "yandex:index/getMdbKafkaClusterConfigKraft:getMdbKafkaClusterConfigKraft": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigKraftResources:getMdbKafkaClusterConfigKraftResources",
                    "description": "Resources allocated to hosts of the KRaft-controller subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterConfigKraftResources:getMdbKafkaClusterConfigKraftResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a KRaft-controller host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of KRaft-controller hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a KRaft-controller host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterConfigRestApi:getMdbKafkaClusterConfigRestApi": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables REST API on cluster. The default is `false`.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbKafkaClusterConfigZookeeper:getMdbKafkaClusterConfigZookeeper": {
            "properties": {
                "resources": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterConfigZookeeperResources:getMdbKafkaClusterConfigZookeeperResources",
                    "description": "Resources allocated to hosts of the ZooKeeper subcluster.\n"
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterConfigZookeeperResources:getMdbKafkaClusterConfigZookeeperResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a ZooKeeper host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of ZooKeeper hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a ZooKeeper host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterHost:getMdbKafkaClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "The flag that defines whether a public IP address is assigned to the node.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Health of the host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the host in the cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "health",
                "name",
                "role",
                "subnetId",
                "zoneId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterMaintenanceWindow:getMdbKafkaClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of the week (in `DDD` format). Allowed values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of the day in UTC (in `HH` format). Allowed value is between 1 and 24.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaClusterTopic:getMdbKafkaClusterTopic": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the topic.\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of the topic's partitions.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "Amount of data copies (replicas) for the topic in the cluster.\n"
                },
                "topicConfig": {
                    "$ref": "#/types/yandex:index/getMdbKafkaClusterTopicTopicConfig:getMdbKafkaClusterTopicTopicConfig",
                    "description": "User-defined settings for the topic. For more information, see [the official documentation](https://yandex.cloud/docs/managed-kafka/operations/cluster-topics#update-topic) and [the Kafka documentation](https://kafka.apache.org/documentation/#configuration).\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "partitions",
                "replicationFactor"
            ]
        },
        "yandex:index/getMdbKafkaClusterTopicTopicConfig:getMdbKafkaClusterTopicTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "Retention policy to use on log segments.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Compression type of kafka topic.\n"
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "The amount of time to retain delete tombstone markers for log compacted topics.\n"
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "The time to wait before deleting a file from the filesystem.\n"
                },
                "flushMessages": {
                    "type": "string",
                    "description": "This setting allows specifying an interval at which we will force an fsync of data written to the log.\n"
                },
                "flushMs": {
                    "type": "string",
                    "description": "This setting allows specifying a time interval at which we will force an fsync of data written to the log.\n"
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\n"
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.\n"
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "When a producer sets acks to \"all\" (or \"-1\"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.\n"
                },
                "preallocate": {
                    "type": "boolean",
                    "description": "True if we should preallocate the file on disk when creating a new log segment.\n"
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "retentionMs": {
                    "type": "string",
                    "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "This configuration controls the segment file size for the log.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbKafkaClusterUser:getMdbKafkaClusterUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaClusterUserPermission:getMdbKafkaClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "password"
            ]
        },
        "yandex:index/getMdbKafkaClusterUserPermission:getMdbKafkaClusterUserPermission": {
            "properties": {
                "allowHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of hosts, to which this permission grants access to. Only ip-addresses allowed as value of single host.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role type to grant to the topic.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic that the permission grants access to.\n"
                }
            },
            "type": "object",
            "required": [
                "role",
                "topicName"
            ]
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormaker:getMdbKafkaConnectorConnectorConfigMirrormaker": {
            "properties": {
                "replicationFactor": {
                    "type": "integer",
                    "description": "Replication factor for topics created in target cluster.\n"
                },
                "sourceClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster:getMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster"
                    },
                    "description": "Settings for source cluster.\n"
                },
                "targetClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster:getMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster"
                    },
                    "description": "Settings for target cluster.\n"
                },
                "topics": {
                    "type": "string",
                    "description": "The pattern for topic names to be replicated.\n"
                }
            },
            "type": "object",
            "required": [
                "replicationFactor",
                "sourceClusters",
                "targetClusters",
                "topics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster:getMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Name of the cluster. Used also as a topic prefix.\n"
                },
                "externalClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster:getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster"
                    },
                    "description": "Connection settings for external cluster.\n"
                },
                "thisClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster:getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster"
                    },
                    "description": "Using this section in the cluster definition (source or target) means it's this cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "alias",
                "externalClusters",
                "thisClusters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster:getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "List of bootstrap servers to connect to cluster.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "Type of SASL authentification mechanism to use.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "Password to use in SASL authentification mechanism\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username to use in SASL authentification mechanism.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol to use.\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers",
                "saslMechanism",
                "saslPassword",
                "saslUsername",
                "securityProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster:getMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster": {
            "type": "object"
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster:getMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Name of the cluster. Used also as a topic prefix.\n"
                },
                "externalClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster:getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster"
                    },
                    "description": "Connection settings for external cluster.\n"
                },
                "thisClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster:getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster"
                    },
                    "description": "Using this section in the cluster definition (source or target) means it's this cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "alias",
                "externalClusters",
                "thisClusters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster:getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "description": "List of bootstrap servers to connect to cluster.\n"
                },
                "saslMechanism": {
                    "type": "string",
                    "description": "Type of SASL authentification mechanism to use.\n"
                },
                "saslPassword": {
                    "type": "string",
                    "description": "Password to use in SASL authentification mechanism\n",
                    "secret": true
                },
                "saslUsername": {
                    "type": "string",
                    "description": "Username to use in SASL authentification mechanism.\n"
                },
                "securityProtocol": {
                    "type": "string",
                    "description": "Security protocol to use.\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers",
                "saslMechanism",
                "saslPassword",
                "saslUsername",
                "securityProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster:getMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster": {
            "type": "object"
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigS3Sink:getMdbKafkaConnectorConnectorConfigS3Sink": {
            "properties": {
                "fileCompressionType": {
                    "type": "string",
                    "description": "Compression type for messages. Cannot be changed.\n"
                },
                "fileMaxRecords": {
                    "type": "integer",
                    "description": "Max records per file.\n"
                },
                "s3Connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigS3SinkS3Connection:getMdbKafkaConnectorConnectorConfigS3SinkS3Connection"
                    },
                    "description": "Settings for connection to s3-compatible storage.\n"
                },
                "topics": {
                    "type": "string",
                    "description": "The pattern for topic names to be copied to s3 bucket.\n"
                }
            },
            "type": "object",
            "required": [
                "fileCompressionType",
                "fileMaxRecords",
                "s3Connections",
                "topics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigS3SinkS3Connection:getMdbKafkaConnectorConnectorConfigS3SinkS3Connection": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "Name of the bucket in s3-compatible storage.\n"
                },
                "externalS3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3:getMdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3"
                    },
                    "description": "Connection params for external s3-compatible storage.\n"
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "externalS3s"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3:getMdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "ID of aws-compatible static key.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "URL of s3-compatible storage.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of s3-compatible storage. [Available region list](https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/regions/Regions.html).\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "Secret key of aws-compatible static key.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "endpoint",
                "region",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaTopicTopicConfig:getMdbKafkaTopicTopicConfig": {
            "properties": {
                "cleanupPolicy": {
                    "type": "string",
                    "description": "Retention policy to use on log segments.\n"
                },
                "compressionType": {
                    "type": "string",
                    "description": "Compression type of kafka topic.\n"
                },
                "deleteRetentionMs": {
                    "type": "string",
                    "description": "The amount of time to retain delete tombstone markers for log compacted topics.\n"
                },
                "fileDeleteDelayMs": {
                    "type": "string",
                    "description": "The time to wait before deleting a file from the filesystem.\n"
                },
                "flushMessages": {
                    "type": "string",
                    "description": "This setting allows specifying an interval at which we will force an fsync of data written to the log.\n"
                },
                "flushMs": {
                    "type": "string",
                    "description": "This setting allows specifying a time interval at which we will force an fsync of data written to the log.\n"
                },
                "maxMessageBytes": {
                    "type": "string",
                    "description": "The largest record batch size allowed by Kafka (after compression if compression is enabled).\n"
                },
                "minCompactionLagMs": {
                    "type": "string",
                    "description": "The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.\n"
                },
                "minInsyncReplicas": {
                    "type": "string",
                    "description": "When a producer sets acks to \"all\" (or \"-1\"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.\n"
                },
                "preallocate": {
                    "type": "boolean",
                    "description": "True if we should preallocate the file on disk when creating a new log segment.\n"
                },
                "retentionBytes": {
                    "type": "string",
                    "description": "This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "retentionMs": {
                    "type": "string",
                    "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the \"delete\" retention policy.\n"
                },
                "segmentBytes": {
                    "type": "string",
                    "description": "This configuration controls the segment file size for the log.\n"
                }
            },
            "type": "object",
            "required": [
                "cleanupPolicy",
                "compressionType",
                "deleteRetentionMs",
                "fileDeleteDelayMs",
                "flushMessages",
                "flushMs",
                "maxMessageBytes",
                "minCompactionLagMs",
                "minInsyncReplicas",
                "preallocate",
                "retentionBytes",
                "retentionMs",
                "segmentBytes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbKafkaUserPermission:getMdbKafkaUserPermission": {
            "properties": {
                "allowHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of hosts, to which this permission grants access to. Only ip-addresses allowed as value of single host.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role type to grant to the topic.\n"
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic that the permission grants access to.\n"
                }
            },
            "type": "object",
            "required": [
                "allowHosts",
                "role",
                "topicName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMongodbClusterClusterConfig:getMdbMongodbClusterClusterConfig": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigAccess:getMdbMongodbClusterClusterConfigAccess",
                    "description": "Access policy to the MongoDB cluster.\n"
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "Retain period of automatically created backup in days.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigBackupWindowStart:getMdbMongodbClusterClusterConfigBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "featureCompatibilityVersion": {
                    "type": "string",
                    "description": "Feature compatibility version of MongoDB. If not provided version is taken. Can be either `6.0`, `5.0`, `4.4` and `4.2`.\n"
                },
                "mongocfg": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongocfg:getMdbMongodbClusterClusterConfigMongocfg",
                    "description": "Configuration of the mongocfg service.\n"
                },
                "mongod": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongod:getMdbMongodbClusterClusterConfigMongod",
                    "description": "Configuration of the mongod service.\n"
                },
                "mongos": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongos:getMdbMongodbClusterClusterConfigMongos",
                    "description": "Configuration of the mongos service.\n"
                },
                "performanceDiagnostics": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigPerformanceDiagnostics:getMdbMongodbClusterClusterConfigPerformanceDiagnostics",
                    "description": "Performance diagnostics to the MongoDB cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the MongoDB server software. Can be either `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`, `6.0` and `6.0-enterprise`.\n"
                }
            },
            "type": "object",
            "required": [
                "access",
                "backupRetainPeriodDays",
                "backupWindowStart",
                "featureCompatibilityVersion",
                "mongocfg",
                "mongod",
                "mongos",
                "performanceDiagnostics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMongodbClusterClusterConfigAccess:getMdbMongodbClusterClusterConfigAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean",
                    "description": "Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).\n"
                },
                "dataTransfer": {
                    "type": "boolean",
                    "description": "Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).\n"
                },
                "webSql": {
                    "type": "boolean",
                    "description": "Allow access for [WebSQL](https://yandex.cloud/ru/docs/websql/).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigBackupWindowStart:getMdbMongodbClusterClusterConfigBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongocfg:getMdbMongodbClusterClusterConfigMongocfg": {
            "properties": {
                "net": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongocfgNet:getMdbMongodbClusterClusterConfigMongocfgNet",
                    "description": "A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).\n"
                },
                "operationProfiling": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongocfgOperationProfiling:getMdbMongodbClusterClusterConfigMongocfgOperationProfiling",
                    "description": "A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).\n"
                },
                "storage": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongocfgStorage:getMdbMongodbClusterClusterConfigMongocfgStorage",
                    "description": "A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongocfgNet:getMdbMongodbClusterClusterConfigMongocfgNet": {
            "properties": {
                "maxIncomingConnections": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongocfgOperationProfiling:getMdbMongodbClusterClusterConfigMongocfgOperationProfiling": {
            "properties": {
                "mode": {
                    "type": "string"
                },
                "slowOpThreshold": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongocfgStorage:getMdbMongodbClusterClusterConfigMongocfgStorage": {
            "properties": {
                "wiredTiger": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongocfgStorageWiredTiger:getMdbMongodbClusterClusterConfigMongocfgStorageWiredTiger"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongocfgStorageWiredTiger:getMdbMongodbClusterClusterConfigMongocfgStorageWiredTiger": {
            "properties": {
                "cacheSizeGb": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongod:getMdbMongodbClusterClusterConfigMongod": {
            "properties": {
                "auditLog": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodAuditLog:getMdbMongodbClusterClusterConfigMongodAuditLog",
                    "description": "A set of audit log settings (see the [auditLog](https://www.mongodb.com/docs/manual/reference/configuration-options/#auditlog-options) option). Available only in enterprise edition.\n"
                },
                "net": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodNet:getMdbMongodbClusterClusterConfigMongodNet",
                    "description": "A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).\n"
                },
                "operationProfiling": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodOperationProfiling:getMdbMongodbClusterClusterConfigMongodOperationProfiling",
                    "description": "A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).\n"
                },
                "security": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodSecurity:getMdbMongodbClusterClusterConfigMongodSecurity",
                    "description": "A set of MongoDB Security settings (see the [security](https://www.mongodb.com/docs/manual/reference/configuration-options/#security-options) option). Available only in enterprise edition.\n"
                },
                "setParameter": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodSetParameter:getMdbMongodbClusterClusterConfigMongodSetParameter",
                    "description": "A set of MongoDB Server Parameters (see the [setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option) option).\n"
                },
                "storage": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodStorage:getMdbMongodbClusterClusterConfigMongodStorage",
                    "description": "A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).\n"
                }
            },
            "type": "object",
            "required": [
                "auditLog",
                "security",
                "setParameter"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodAuditLog:getMdbMongodbClusterClusterConfigMongodAuditLog": {
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "Configuration of the audit log filter in JSON format. For more information see [auditLog.filter](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.filter) description in the official documentation. Available only in enterprise edition.\n"
                },
                "runtimeConfiguration": {
                    "type": "boolean",
                    "description": "Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see [auditLog.runtimeConfiguration](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.runtimeConfiguration) description in the official documentation. Available only in enterprise edition.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodNet:getMdbMongodbClusterClusterConfigMongodNet": {
            "properties": {
                "compressors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.\n"
                },
                "maxIncomingConnections": {
                    "type": "integer",
                    "description": "The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodOperationProfiling:getMdbMongodbClusterClusterConfigMongodOperationProfiling": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.\n"
                },
                "slowOpSampleRate": {
                    "type": "number",
                    "description": "The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the [operationProfiling.slowOpSampleRate](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpSampleRate) description in the official documentation.\n"
                },
                "slowOpThreshold": {
                    "type": "integer",
                    "description": "The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodSecurity:getMdbMongodbClusterClusterConfigMongodSecurity": {
            "properties": {
                "enableEncryption": {
                    "type": "boolean",
                    "description": "Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see [security.enableEncryption](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.enableEncryption) description in the official documentation. Available only in enterprise edition.\n"
                },
                "kmip": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodSecurityKmip:getMdbMongodbClusterClusterConfigMongodSecurityKmip",
                    "description": "Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see [Encryption tutorial](https://www.mongodb.com/docs/rapid/tutorial/configure-encryption) ). Requires `enable_encryption` to be true. The structure is documented below. Available only in enterprise edition.\n"
                }
            },
            "type": "object",
            "required": [
                "kmip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodSecurityKmip:getMdbMongodbClusterClusterConfigMongodSecurityKmip": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "description": "String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see [security.kmip.clientCertificateFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.clientCertificateFile) description in the official documentation.\n"
                },
                "keyIdentifier": {
                    "type": "string",
                    "description": "Unique KMIP identifier for an existing key within the KMIP server. For more information see [security.kmip.keyIdentifier](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.keyIdentifier) description in the official documentation.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number to use to communicate with the KMIP server. Default: 5696 For more information see [security.kmip.port](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.port) description in the official documentation.\n"
                },
                "serverCa": {
                    "type": "string",
                    "description": "Path to CA File. Used for validating secure client connection to KMIP server. For more information see [security.kmip.serverCAFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverCAFile) description in the official documentation.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Hostname or IP address of the KMIP server to connect to. For more information see [security.kmip.serverName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverName) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodSetParameter:getMdbMongodbClusterClusterConfigMongodSetParameter": {
            "properties": {
                "auditAuthorizationSuccess": {
                    "type": "boolean",
                    "description": "Enables the auditing of authorization successes. Can be either true or false. For more information, see the [auditAuthorizationSuccess](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.auditAuthorizationSuccess) description in the official documentation. Available only in enterprise edition.\n"
                },
                "enableFlowControl": {
                    "type": "boolean",
                    "description": "Enables the flow control. Can be either true or false. For more information, see the [enableFlowControl](https://www.mongodb.com/docs/rapid/reference/parameters/#mongodb-parameter-param.enableFlowControl) description in the official documentation.\n"
                },
                "minSnapshotHistoryWindowInSeconds": {
                    "type": "integer",
                    "description": "The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the [minSnapshotHistoryWindowInSeconds](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.minSnapshotHistoryWindowInSeconds) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodStorage:getMdbMongodbClusterClusterConfigMongodStorage": {
            "properties": {
                "journal": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodStorageJournal:getMdbMongodbClusterClusterConfigMongodStorageJournal",
                    "description": "The durability journal to ensure data files remain valid and recoverable.\n"
                },
                "wiredTiger": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongodStorageWiredTiger:getMdbMongodbClusterClusterConfigMongodStorageWiredTiger",
                    "description": "The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option). These settings available only on `mongod` hosts.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodStorageJournal:getMdbMongodbClusterClusterConfigMongodStorageJournal": {
            "properties": {
                "commitInterval": {
                    "type": "integer",
                    "description": "The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the [storage.journal.commitIntervalMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.journal.commitIntervalMs) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongodStorageWiredTiger:getMdbMongodbClusterClusterConfigMongodStorageWiredTiger": {
            "properties": {
                "blockCompressor": {
                    "type": "string",
                    "description": "Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on `mongod` hosts. For more information, see the [storage.wiredTiger.collectionConfig.blockCompressor](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.collectionConfig.blockCompressor) description in the official documentation.\n"
                },
                "cacheSizeGb": {
                    "type": "number",
                    "description": "Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.\n"
                },
                "prefixCompression": {
                    "type": "boolean",
                    "description": "Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the [storage.wiredTiger.indexConfig.prefixCompression](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.indexConfig.prefixCompression) description in the official documentation.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongos:getMdbMongodbClusterClusterConfigMongos": {
            "properties": {
                "net": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfigMongosNet:getMdbMongodbClusterClusterConfigMongosNet",
                    "description": "A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigMongosNet:getMdbMongodbClusterClusterConfigMongosNet": {
            "properties": {
                "compressors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxIncomingConnections": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterClusterConfigPerformanceDiagnostics:getMdbMongodbClusterClusterConfigPerformanceDiagnostics": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable performance diagnostics.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterDatabase:getMdbMongodbClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongocfg:getMdbMongodbClusterDiskSizeAutoscalingMongocfg": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongod:getMdbMongodbClusterDiskSizeAutoscalingMongod": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongoinfra:getMdbMongodbClusterDiskSizeAutoscalingMongoinfra": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongos:getMdbMongodbClusterDiskSizeAutoscalingMongos": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterHost:getMdbMongodbClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Should this host have assigned public IP assigned. Can be either `true` or `false`.\n"
                },
                "health": {
                    "type": "string",
                    "description": "The health of the host.\n"
                },
                "hostParameters": {
                    "$ref": "#/types/yandex:index/getMdbMongodbClusterHostHostParameters:getMdbMongodbClusterHostHostParameters",
                    "description": "The parameters of mongod host in replicaset.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host. Computed on server side.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of the cluster (either PRIMARY or SECONDARY).\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard to which the host belongs. Only for sharded cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to `mongod`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "health",
                "hostParameters",
                "name",
                "role",
                "shardName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMongodbClusterHostHostParameters:getMdbMongodbClusterHostHostParameters": {
            "properties": {
                "hidden": {
                    "type": "boolean",
                    "description": "Should this host be hidden in replicaset. Can be either `true` of `false`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.hidden).\n"
                },
                "priority": {
                    "type": "number",
                    "description": "A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.priority).\n"
                },
                "secondaryDelaySecs": {
                    "type": "integer",
                    "description": "The number of seconds `behind` the primary that this replica set member should `lag`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.secondaryDelaySecs).\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value pairs to assign for the replica set member. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.tags).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterMaintenanceWindow:getMdbMongodbClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterResources:getMdbMongodbClusterResources": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterResourcesMongocfg:getMdbMongodbClusterResourcesMongocfg": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterResourcesMongod:getMdbMongodbClusterResourcesMongod": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterResourcesMongoinfra:getMdbMongodbClusterResourcesMongoinfra": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterResourcesMongos:getMdbMongodbClusterResourcesMongos": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a MongoDB host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterRestore:getMdbMongodbClusterRestore": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://yandex.cloud/docs/managed-mongodb/operations/cluster-backups).\n"
                },
                "time": {
                    "type": "string",
                    "description": "Timestamp of the moment to which the MongoDB cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMongodbClusterUser:getMdbMongodbClusterUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterUserPermission:getMdbMongodbClusterUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "type": "object",
            "required": [
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMongodbClusterUserPermission:getMdbMongodbClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "The name of the database that the permission grants access to.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles of the user in this database. For more information see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts/users-and-roles).\n"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMysqlClusterAccess:getMdbMysqlClusterAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean"
                },
                "dataTransfer": {
                    "type": "boolean"
                },
                "webSql": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "dataLens",
                "dataTransfer",
                "webSql"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterBackupWindowStart:getMdbMysqlClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "yandex:index/getMdbMysqlClusterDatabase:getMdbMysqlClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterHost:getMdbMysqlClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean"
                },
                "backupPriority": {
                    "type": "integer"
                },
                "fqdn": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "replicationSource": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fqdn",
                "replicationSource",
                "subnetId",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterMaintenanceWindow:getMdbMysqlClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterPerformanceDiagnostic:getMdbMysqlClusterPerformanceDiagnostic": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "sessionsSamplingInterval": {
                    "type": "integer"
                },
                "statementsSamplingInterval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "sessionsSamplingInterval",
                "statementsSamplingInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterResource:getMdbMysqlClusterResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterUser:getMdbMysqlClusterUser": {
            "properties": {
                "authenticationPlugin": {
                    "type": "string"
                },
                "connectionLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbMysqlClusterUserConnectionLimit:getMdbMysqlClusterUserConnectionLimit"
                    }
                },
                "globalPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbMysqlClusterUserPermission:getMdbMysqlClusterUserPermission"
                    }
                }
            },
            "type": "object",
            "required": [
                "authenticationPlugin",
                "connectionLimits",
                "globalPermissions",
                "name",
                "password",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterUserConnectionLimit:getMdbMysqlClusterUserConnectionLimit": {
            "properties": {
                "maxConnectionsPerHour": {
                    "type": "integer"
                },
                "maxQuestionsPerHour": {
                    "type": "integer"
                },
                "maxUpdatesPerHour": {
                    "type": "integer"
                },
                "maxUserConnections": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxConnectionsPerHour",
                "maxQuestionsPerHour",
                "maxUpdatesPerHour",
                "maxUserConnections"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlClusterUserPermission:getMdbMysqlClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlUserConnectionLimit:getMdbMysqlUserConnectionLimit": {
            "properties": {
                "maxConnectionsPerHour": {
                    "type": "integer"
                },
                "maxQuestionsPerHour": {
                    "type": "integer"
                },
                "maxUpdatesPerHour": {
                    "type": "integer"
                },
                "maxUserConnections": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxConnectionsPerHour",
                "maxQuestionsPerHour",
                "maxUpdatesPerHour",
                "maxUserConnections"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbMysqlUserPermission:getMdbMysqlUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfig:getMdbPostgresqlClusterConfig": {
            "properties": {
                "accesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfigAccess:getMdbPostgresqlClusterConfigAccess"
                    }
                },
                "autofailover": {
                    "type": "boolean"
                },
                "backupRetainPeriodDays": {
                    "type": "integer"
                },
                "backupWindowStarts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfigBackupWindowStart:getMdbPostgresqlClusterConfigBackupWindowStart"
                    }
                },
                "diskSizeAutoscalings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfigDiskSizeAutoscaling:getMdbPostgresqlClusterConfigDiskSizeAutoscaling"
                    }
                },
                "performanceDiagnostics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfigPerformanceDiagnostic:getMdbPostgresqlClusterConfigPerformanceDiagnostic"
                    }
                },
                "poolerConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfigPoolerConfig:getMdbPostgresqlClusterConfigPoolerConfig"
                    }
                },
                "postgresqlConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfigResource:getMdbPostgresqlClusterConfigResource"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accesses",
                "autofailover",
                "backupRetainPeriodDays",
                "backupWindowStarts",
                "diskSizeAutoscalings",
                "performanceDiagnostics",
                "poolerConfigs",
                "postgresqlConfig",
                "resources",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfigAccess:getMdbPostgresqlClusterConfigAccess": {
            "properties": {
                "dataLens": {
                    "type": "boolean"
                },
                "dataTransfer": {
                    "type": "boolean"
                },
                "serverless": {
                    "type": "boolean"
                },
                "webSql": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "dataLens",
                "dataTransfer",
                "serverless",
                "webSql"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfigBackupWindowStart:getMdbPostgresqlClusterConfigBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "hours",
                "minutes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfigDiskSizeAutoscaling:getMdbPostgresqlClusterConfigDiskSizeAutoscaling": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer"
                },
                "emergencyUsageThreshold": {
                    "type": "integer"
                },
                "plannedUsageThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit",
                "emergencyUsageThreshold",
                "plannedUsageThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfigPerformanceDiagnostic:getMdbPostgresqlClusterConfigPerformanceDiagnostic": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "sessionsSamplingInterval": {
                    "type": "integer"
                },
                "statementsSamplingInterval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "sessionsSamplingInterval",
                "statementsSamplingInterval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfigPoolerConfig:getMdbPostgresqlClusterConfigPoolerConfig": {
            "properties": {
                "poolDiscard": {
                    "type": "boolean"
                },
                "poolingMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "poolDiscard",
                "poolingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterConfigResource:getMdbPostgresqlClusterConfigResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterDatabase:getMdbPostgresqlClusterDatabase": {
            "properties": {
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterDatabaseExtension:getMdbPostgresqlClusterDatabaseExtension"
                    }
                },
                "lcCollate": {
                    "type": "string"
                },
                "lcType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "templateDb": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "owner"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterDatabaseExtension:getMdbPostgresqlClusterDatabaseExtension": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterHost:getMdbPostgresqlClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean"
                },
                "fqdn": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "deprecationMessage": "The field has not affected anything. You can safely delete it."
                },
                "replicationSource": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "fqdn",
                "priority",
                "replicationSource",
                "role",
                "subnetId",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterMaintenanceWindow:getMdbPostgresqlClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterUser:getMdbPostgresqlClusterUser": {
            "properties": {
                "connLimit": {
                    "type": "integer"
                },
                "grants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "login": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbPostgresqlClusterUserPermission:getMdbPostgresqlClusterUserPermission"
                    }
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "connLimit",
                "grants",
                "name",
                "permissions",
                "settings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlClusterUserPermission:getMdbPostgresqlClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbPostgresqlDatabaseExtension:getMdbPostgresqlDatabaseExtension": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "yandex:index/getMdbPostgresqlUserPermission:getMdbPostgresqlUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbRedisClusterConfig:getMdbRedisClusterConfig": {
            "properties": {
                "allowDataLoss": {
                    "type": "boolean",
                    "description": "Allows some data to be lost in favor of faster switchover/restart by RDSync.\n"
                },
                "backupWindowStarts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbRedisClusterConfigBackupWindowStart:getMdbRedisClusterConfigBackupWindowStart"
                    },
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "clientOutputBufferLimitNormal": {
                    "type": "string",
                    "description": "Normal clients output buffer limits. See [redis config file](https://github.com/redis/redis/blob/6.2/redis.conf#L1841).\n"
                },
                "clientOutputBufferLimitPubsub": {
                    "type": "string",
                    "description": "Pubsub clients output buffer limits. See [redis config file](https://github.com/redis/redis/blob/6.2/redis.conf#L1843).\n"
                },
                "clusterAllowPubsubshardWhenDown": {
                    "type": "boolean",
                    "description": "Permits Pub/Sub shard operations when cluster is down.\n"
                },
                "clusterAllowReadsWhenDown": {
                    "type": "boolean",
                    "description": "Allows read operations when cluster is down.\n"
                },
                "clusterRequireFullCoverage": {
                    "type": "boolean",
                    "description": "Controls whether all hash slots must be covered by nodes.\n"
                },
                "databases": {
                    "type": "integer",
                    "description": "Number of databases (changing requires redis-server restart).\n"
                },
                "ioThreadsAllowed": {
                    "type": "boolean",
                    "description": "Allow Redis to use io-threads.\n"
                },
                "lfuDecayTime": {
                    "type": "integer",
                    "description": "The time, in minutes, that must elapse in order for the key counter to be divided by two (or decremented if it has a value less \u003c= 10).\n"
                },
                "lfuLogFactor": {
                    "type": "integer",
                    "description": "Determines how the frequency counter represents key hits.\n"
                },
                "luaTimeLimit": {
                    "type": "integer",
                    "description": "Maximum time in milliseconds for Lua scripts.\n"
                },
                "maxmemoryPercent": {
                    "type": "integer",
                    "description": "Redis maxmemory usage in percent\n"
                },
                "maxmemoryPolicy": {
                    "type": "string",
                    "description": "Redis key eviction policy for a dataset that reaches maximum memory. Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).\n"
                },
                "notifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Select the events that Redis will notify among a set of classes.\n"
                },
                "replBacklogSizePercent": {
                    "type": "integer",
                    "description": "Replication backlog size as a percentage of flavor maxmemory.\n"
                },
                "slowlogLogSlowerThan": {
                    "type": "integer",
                    "description": "Log slow queries below this number in microseconds.\n"
                },
                "slowlogMaxLen": {
                    "type": "integer",
                    "description": "Slow queries log length.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Close the connection after a client is idle for N seconds.\n"
                },
                "turnBeforeSwitchover": {
                    "type": "boolean",
                    "description": "Allows to turn before switchover in RDSync.\n"
                },
                "useLuajit": {
                    "type": "boolean",
                    "description": "Use JIT for lua scripts and functions.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Redis\n"
                },
                "zsetMaxListpackEntries": {
                    "type": "integer",
                    "description": "Controls max number of entries in zset before conversion from memory-efficient listpack to CPU-efficient hash table and skiplist\n"
                }
            },
            "type": "object",
            "required": [
                "allowDataLoss",
                "backupWindowStarts",
                "clientOutputBufferLimitNormal",
                "clientOutputBufferLimitPubsub",
                "clusterAllowPubsubshardWhenDown",
                "clusterAllowReadsWhenDown",
                "clusterRequireFullCoverage",
                "databases",
                "ioThreadsAllowed",
                "lfuDecayTime",
                "lfuLogFactor",
                "luaTimeLimit",
                "maxmemoryPercent",
                "maxmemoryPolicy",
                "notifyKeyspaceEvents",
                "replBacklogSizePercent",
                "slowlogLogSlowerThan",
                "slowlogMaxLen",
                "timeout",
                "turnBeforeSwitchover",
                "useLuajit",
                "version",
                "zsetMaxListpackEntries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbRedisClusterConfigBackupWindowStart:getMdbRedisClusterConfigBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer",
                    "description": "The hour at which backup will be started.\n"
                },
                "minutes": {
                    "type": "integer",
                    "description": "The minute at which backup will be started.\n"
                }
            },
            "type": "object",
            "required": [
                "hours",
                "minutes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbRedisClusterDiskSizeAutoscaling:getMdbRedisClusterDiskSizeAutoscaling": {
            "properties": {
                "diskSizeLimit": {
                    "type": "integer",
                    "description": "Limit of disk size after autoscaling (GiB).\n"
                },
                "emergencyUsageThreshold": {
                    "type": "integer",
                    "description": "Immediate autoscaling disk usage (percent).\n"
                },
                "plannedUsageThreshold": {
                    "type": "integer",
                    "description": "Maintenance window autoscaling disk usage (percent).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSizeLimit",
                "emergencyUsageThreshold",
                "plannedUsageThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbRedisClusterHost:getMdbRedisClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the host should get a public IP address or not.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name of the host.\n"
                },
                "replicaPriority": {
                    "type": "integer",
                    "description": "Replica priority of a current replica (usable for non-sharded only).\n"
                },
                "shardName": {
                    "type": "string",
                    "description": "The name of the shard to which the host belongs.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "fqdn",
                "replicaPriority",
                "shardName",
                "subnetId",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbRedisClusterMaintenanceWindow:getMdbRedisClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.\n"
                },
                "hour": {
                    "type": "integer",
                    "description": "Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.\n"
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbRedisClusterResource:getMdbRedisClusterResource": {
            "properties": {
                "diskSize": {
                    "type": "integer",
                    "description": "Volume of the storage available to a host, in gigabytes.\n"
                },
                "diskTypeId": {
                    "type": "string",
                    "description": "Type of the storage of Redis hosts - environment default is used if missing.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-redis/concepts).\n"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbSqlserverClusterBackupWindowStart:getMdbSqlserverClusterBackupWindowStart": {
            "properties": {
                "hours": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "hours",
                "minutes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbSqlserverClusterDatabase:getMdbSqlserverClusterDatabase": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbSqlserverClusterHost:getMdbSqlserverClusterHost": {
            "properties": {
                "assignPublicIp": {
                    "type": "boolean"
                },
                "fqdn": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "fqdn",
                "subnetId",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbSqlserverClusterResource:getMdbSqlserverClusterResource": {
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "diskTypeId": {
                    "type": "string"
                },
                "resourcePresetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskSize",
                "diskTypeId",
                "resourcePresetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbSqlserverClusterUser:getMdbSqlserverClusterUser": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMdbSqlserverClusterUserPermission:getMdbSqlserverClusterUserPermission"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "password",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMdbSqlserverClusterUserPermission:getMdbSqlserverClusterUserPermission": {
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardParametrization:getMonitoringDashboardParametrization": {
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardParametrizationParameter:getMonitoringDashboardParametrizationParameter"
                    },
                    "description": "Dashboard parameter\n"
                },
                "selectors": {
                    "type": "string",
                    "description": "Predefined selectors\n"
                }
            },
            "type": "object",
            "required": [
                "parameters",
                "selectors"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardParametrizationParameter:getMonitoringDashboardParametrizationParameter": {
            "properties": {
                "customs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardParametrizationParameterCustom:getMonitoringDashboardParametrizationParameterCustom"
                    },
                    "description": "Custom parameter\n"
                },
                "description": {
                    "type": "string",
                    "description": "Parameter description\n"
                },
                "hidden": {
                    "type": "boolean",
                    "description": "UI-visibility\n"
                },
                "id": {
                    "type": "string",
                    "description": "Parameter identifier\n"
                },
                "labelValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardParametrizationParameterLabelValue:getMonitoringDashboardParametrizationParameterLabelValue"
                    },
                    "description": "Label values parameter\n"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardParametrizationParameterText:getMonitoringDashboardParametrizationParameterText"
                    },
                    "description": "Text parameter\n"
                },
                "title": {
                    "type": "string",
                    "description": "UI-visible title of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "customs",
                "description",
                "hidden",
                "id",
                "labelValues",
                "texts",
                "title"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardParametrizationParameterCustom:getMonitoringDashboardParametrizationParameterCustom": {
            "properties": {
                "defaultValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default values from values\n"
                },
                "multiselectable": {
                    "type": "boolean",
                    "description": "Specifies the multiselectable values of parameter\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Parameter values\n"
                }
            },
            "type": "object",
            "required": [
                "defaultValues",
                "multiselectable",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardParametrizationParameterLabelValue:getMonitoringDashboardParametrizationParameterLabelValue": {
            "properties": {
                "defaultValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default value\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Folder ID\n"
                },
                "labelKey": {
                    "type": "string",
                    "description": "Label key to list label values\n"
                },
                "multiselectable": {
                    "type": "boolean",
                    "description": "Specifies the multiselectable values of parameter\n"
                },
                "selectors": {
                    "type": "string",
                    "description": "Selectors to select metric label values\n"
                }
            },
            "type": "object",
            "required": [
                "defaultValues",
                "folderId",
                "labelKey",
                "multiselectable",
                "selectors"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardParametrizationParameterText:getMonitoringDashboardParametrizationParameterText": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "Default value\n"
                }
            },
            "type": "object",
            "required": [
                "defaultValue"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidget:getMonitoringDashboardWidget": {
            "properties": {
                "charts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChart:getMonitoringDashboardWidgetChart"
                    },
                    "description": "Chart widget\n"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetPosition:getMonitoringDashboardWidgetPosition"
                    },
                    "description": "Widget layout position\n"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetText:getMonitoringDashboardWidgetText"
                    },
                    "description": "Text widget\n"
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetTitle:getMonitoringDashboardWidgetTitle"
                    },
                    "description": "Title widget\n"
                }
            },
            "type": "object",
            "required": [
                "charts",
                "positions",
                "texts",
                "titles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChart:getMonitoringDashboardWidgetChart": {
            "properties": {
                "chartId": {
                    "type": "string",
                    "description": "Chart ID\n"
                },
                "description": {
                    "type": "string",
                    "description": "Chart description in dashboard (not enabled in UI)\n"
                },
                "displayLegend": {
                    "type": "boolean",
                    "description": "Enable legend under chart\n"
                },
                "freeze": {
                    "type": "string",
                    "description": "Fixed time interval for chart\n"
                },
                "nameHidingSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartNameHidingSetting:getMonitoringDashboardWidgetChartNameHidingSetting"
                    },
                    "description": "Name hiding settings\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartQuery:getMonitoringDashboardWidgetChartQuery"
                    },
                    "description": "Queries\n"
                },
                "seriesOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartSeriesOverride:getMonitoringDashboardWidgetChartSeriesOverride"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Chart widget title\n"
                },
                "visualizationSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSetting:getMonitoringDashboardWidgetChartVisualizationSetting"
                    },
                    "description": "Visualization settings\n"
                }
            },
            "type": "object",
            "required": [
                "chartId",
                "description",
                "displayLegend",
                "freeze",
                "nameHidingSettings",
                "queries",
                "seriesOverrides",
                "title",
                "visualizationSettings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartNameHidingSetting:getMonitoringDashboardWidgetChartNameHidingSetting": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "positive": {
                    "type": "boolean",
                    "description": "True if we want to show concrete series names only, false if we want to hide concrete series names\n"
                }
            },
            "type": "object",
            "required": [
                "names",
                "positive"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartQuery:getMonitoringDashboardWidgetChartQuery": {
            "properties": {
                "downsamplings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartQueryDownsampling:getMonitoringDashboardWidgetChartQueryDownsampling"
                    },
                    "description": "Downsampling settings\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartQueryTarget:getMonitoringDashboardWidgetChartQueryTarget"
                    },
                    "description": "Downsampling settings\n"
                }
            },
            "type": "object",
            "required": [
                "downsamplings",
                "targets"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartQueryDownsampling:getMonitoringDashboardWidgetChartQueryDownsampling": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Disable downsampling\n"
                },
                "gapFilling": {
                    "type": "string",
                    "description": "Parameters for filling gaps in data\n"
                },
                "gridAggregation": {
                    "type": "string",
                    "description": "Function that is used for downsampling\n"
                },
                "gridInterval": {
                    "type": "integer",
                    "description": "Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point\n"
                },
                "maxPoints": {
                    "type": "integer",
                    "description": "Maximum number of points to be returned\n"
                }
            },
            "type": "object",
            "required": [
                "disabled",
                "gapFilling",
                "gridAggregation",
                "gridInterval",
                "maxPoints"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartQueryTarget:getMonitoringDashboardWidgetChartQueryTarget": {
            "properties": {
                "hidden": {
                    "type": "boolean",
                    "description": "Checks that target is visible or invisible\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query\n"
                },
                "textMode": {
                    "type": "boolean",
                    "description": "Text mode\n"
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "query",
                "textMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartSeriesOverride:getMonitoringDashboardWidgetChartSeriesOverride": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Series name\n"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartSeriesOverrideSetting:getMonitoringDashboardWidgetChartSeriesOverrideSetting"
                    },
                    "description": "Override settings\n"
                },
                "targetIndex": {
                    "type": "string",
                    "description": "Target index\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "settings",
                "targetIndex"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartSeriesOverrideSetting:getMonitoringDashboardWidgetChartSeriesOverrideSetting": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "Series color or empty\n"
                },
                "growDown": {
                    "type": "boolean",
                    "description": "Stack grow down\n"
                },
                "name": {
                    "type": "string",
                    "description": "Series name or empty\n"
                },
                "stackName": {
                    "type": "string",
                    "description": "Stack name or empty\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type\n"
                },
                "yaxisPosition": {
                    "type": "string",
                    "description": "Yaxis position\n"
                }
            },
            "type": "object",
            "required": [
                "color",
                "growDown",
                "name",
                "stackName",
                "type",
                "yaxisPosition"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSetting:getMonitoringDashboardWidgetChartVisualizationSetting": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Aggregation\n"
                },
                "colorSchemeSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting"
                    },
                    "description": "Color scheme settings\n"
                },
                "heatmapSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting:getMonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting"
                    },
                    "description": "Heatmap settings\n"
                },
                "interpolate": {
                    "type": "string",
                    "description": "Interpolate\n"
                },
                "normalize": {
                    "type": "boolean",
                    "description": "Normalize\n"
                },
                "showLabels": {
                    "type": "boolean",
                    "description": "Show chart labels\n"
                },
                "title": {
                    "type": "string",
                    "description": "Inside chart title\n"
                },
                "type": {
                    "type": "string",
                    "description": "Visualization type\n"
                },
                "yaxisSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingYaxisSetting:getMonitoringDashboardWidgetChartVisualizationSettingYaxisSetting"
                    },
                    "description": "Y axis settings\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "colorSchemeSettings",
                "heatmapSettings",
                "interpolate",
                "normalize",
                "showLabels",
                "title",
                "type",
                "yaxisSettings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting": {
            "properties": {
                "automatics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic"
                    },
                    "description": "Automatic color scheme\n"
                },
                "gradients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient"
                    },
                    "description": "Gradient color scheme\n"
                },
                "standards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard"
                    },
                    "description": "Standard color scheme\n"
                }
            },
            "type": "object",
            "required": [
                "automatics",
                "gradients",
                "standards"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic": {
            "type": "object"
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient": {
            "properties": {
                "greenValue": {
                    "type": "string",
                    "description": "Gradient green value\n"
                },
                "redValue": {
                    "type": "string",
                    "description": "Gradient red value\n"
                },
                "violetValue": {
                    "type": "string",
                    "description": "Gradient violet value\n"
                },
                "yellowValue": {
                    "type": "string",
                    "description": "Gradient yellow value\n"
                }
            },
            "type": "object",
            "required": [
                "greenValue",
                "redValue",
                "violetValue",
                "yellowValue"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard:getMonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard": {
            "type": "object"
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting:getMonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting": {
            "properties": {
                "greenValue": {
                    "type": "string",
                    "description": "Heatmap green value\n"
                },
                "redValue": {
                    "type": "string",
                    "description": "Heatmap red value\n"
                },
                "violetValue": {
                    "type": "string",
                    "description": "Heatmap violet_value\n"
                },
                "yellowValue": {
                    "type": "string",
                    "description": "Heatmap yellow value\n"
                }
            },
            "type": "object",
            "required": [
                "greenValue",
                "redValue",
                "violetValue",
                "yellowValue"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingYaxisSetting:getMonitoringDashboardWidgetChartVisualizationSettingYaxisSetting": {
            "properties": {
                "lefts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft:getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft"
                    },
                    "description": "Left Y axis settings\n"
                },
                "rights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight:getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight"
                    },
                    "description": "Right Y axis settings\n"
                }
            },
            "type": "object",
            "required": [
                "lefts",
                "rights"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft:getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft": {
            "properties": {
                "max": {
                    "type": "string",
                    "description": "Max value in extended number format or empty\n"
                },
                "min": {
                    "type": "string",
                    "description": "Min value in extended number format or empty\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "Tick value precision (null as default, 0-7 in other cases)\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title or empty\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type\n"
                },
                "unitFormat": {
                    "type": "string",
                    "description": "Unit format\n"
                }
            },
            "type": "object",
            "required": [
                "max",
                "min",
                "precision",
                "title",
                "type",
                "unitFormat"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight:getMonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight": {
            "properties": {
                "max": {
                    "type": "string",
                    "description": "Max value in extended number format or empty\n"
                },
                "min": {
                    "type": "string",
                    "description": "Min value in extended number format or empty\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "Tick value precision (null as default, 0-7 in other cases)\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title or empty\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type\n"
                },
                "unitFormat": {
                    "type": "string",
                    "description": "Unit format\n"
                }
            },
            "type": "object",
            "required": [
                "max",
                "min",
                "precision",
                "title",
                "type",
                "unitFormat"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetPosition:getMonitoringDashboardWidgetPosition": {
            "properties": {
                "h": {
                    "type": "integer",
                    "description": "Height\n"
                },
                "w": {
                    "type": "integer",
                    "description": "Width\n"
                },
                "x": {
                    "type": "integer",
                    "description": "X-axis top-left corner coordinate\n"
                },
                "y": {
                    "type": "integer",
                    "description": "Y-axis top-left corner coordinate\n"
                }
            },
            "type": "object",
            "required": [
                "h",
                "w",
                "x",
                "y"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetText:getMonitoringDashboardWidgetText": {
            "properties": {
                "text": {
                    "type": "string",
                    "description": "Text\n"
                }
            },
            "type": "object",
            "required": [
                "text"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getMonitoringDashboardWidgetTitle:getMonitoringDashboardWidgetTitle": {
            "properties": {
                "size": {
                    "type": "string",
                    "description": "Title size\n"
                },
                "text": {
                    "type": "string",
                    "description": "Title text\n"
                }
            },
            "type": "object",
            "required": [
                "size",
                "text"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getOrganizationmanagerGroupMember:getOrganizationmanagerGroupMember": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the member.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the member.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getOrganizationmanagerOsLoginSettingsSshCertificateSettings:getOrganizationmanagerOsLoginSettingsSshCertificateSettings": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "yandex:index/getOrganizationmanagerOsLoginSettingsUserSshKeySettings:getOrganizationmanagerOsLoginSettingsUserSshKeySettings": {
            "properties": {
                "allowManageOwnKeys": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "yandex:index/getOrganizationmanagerSamlFederationSecuritySetting:getOrganizationmanagerSamlFederationSecuritySetting": {
            "properties": {
                "encryptedAssertions": {
                    "type": "boolean"
                },
                "forceAuthn": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "encryptedAssertions",
                "forceAuthn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessContainerConnectivity:getServerlessContainerConnectivity": {
            "properties": {
                "networkId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ]
        },
        "yandex:index/getServerlessContainerImage:getServerlessContainerImage": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "digest": {
                    "type": "string"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                },
                "workDir": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "args",
                "commands",
                "digest",
                "environment",
                "url",
                "workDir"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessContainerLogOption:getServerlessContainerLogOption": {
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "string"
                },
                "logGroupId": {
                    "type": "string"
                },
                "minLevel": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "disabled",
                "folderId",
                "logGroupId",
                "minLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessContainerMetadataOptions:getServerlessContainerMetadataOptions": {
            "properties": {
                "awsV1HttpEndpoint": {
                    "type": "integer"
                },
                "gceHttpEndpoint": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "awsV1HttpEndpoint",
                "gceHttpEndpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessContainerMount:getServerlessContainerMount": {
            "properties": {
                "ephemeralDisk": {
                    "$ref": "#/types/yandex:index/getServerlessContainerMountEphemeralDisk:getServerlessContainerMountEphemeralDisk"
                },
                "mode": {
                    "type": "string"
                },
                "mountPointPath": {
                    "type": "string"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/getServerlessContainerMountObjectStorage:getServerlessContainerMountObjectStorage"
                }
            },
            "type": "object",
            "required": [
                "mode",
                "mountPointPath"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "mountPointPath"
                    ]
                }
            }
        },
        "yandex:index/getServerlessContainerMountEphemeralDisk:getServerlessContainerMountEphemeralDisk": {
            "properties": {
                "blockSizeKb": {
                    "type": "integer"
                },
                "sizeGb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "blockSizeKb",
                "sizeGb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "sizeGb"
                    ]
                }
            }
        },
        "yandex:index/getServerlessContainerMountObjectStorage:getServerlessContainerMountObjectStorage": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "yandex:index/getServerlessContainerRuntime:getServerlessContainerRuntime": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "yandex:index/getServerlessContainerSecret:getServerlessContainerSecret": {
            "properties": {
                "environmentVariable": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "environmentVariable",
                "id",
                "key",
                "versionId"
            ]
        },
        "yandex:index/getServerlessContainerStorageMount:getServerlessContainerStorageMount": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "mountPointPath": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "mountPointPath"
            ]
        },
        "yandex:index/getServerlessEventrouterConnectorYd:getServerlessEventrouterConnectorYd": {
            "properties": {
                "consumer": {
                    "type": "string",
                    "description": "Consumer name\n"
                },
                "database": {
                    "type": "string",
                    "description": "Stream database. Example: /ru-central1/aoegtvhtp8ob********/cc8004q4lbo6********\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has read permission on the stream\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "Stream name, absolute or relative\n"
                }
            },
            "type": "object",
            "required": [
                "consumer",
                "database",
                "serviceAccountId",
                "streamName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterConnectorYmq:getServerlessEventrouterConnectorYmq": {
            "properties": {
                "batchSize": {
                    "type": "integer",
                    "description": "Batch size for polling\n"
                },
                "pollingTimeout": {
                    "type": "string",
                    "description": "Queue polling timeout\n"
                },
                "queueArn": {
                    "type": "string",
                    "description": "Required field. Queue ARN. Example: yrn:yc:ymq:ru-central1:aoe***:test\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has read access to the queue\n"
                },
                "visibilityTimeout": {
                    "type": "string",
                    "description": "Queue visibility timeout override\n"
                }
            },
            "type": "object",
            "required": [
                "batchSize",
                "pollingTimeout",
                "queueArn",
                "serviceAccountId",
                "visibilityTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleContainer:getServerlessEventrouterRuleContainer": {
            "properties": {
                "batchSettings": {
                    "type": "string",
                    "description": "Batch settings\n"
                },
                "containerId": {
                    "type": "string",
                    "description": "Container ID\n"
                },
                "containerRevisionId": {
                    "type": "string",
                    "description": "Container revision ID\n"
                },
                "path": {
                    "type": "string",
                    "description": "Endpoint HTTP path to invoke\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which should be used to call a container\n"
                }
            },
            "type": "object",
            "required": [
                "batchSettings",
                "containerId",
                "containerRevisionId",
                "path",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleFunction:getServerlessEventrouterRuleFunction": {
            "properties": {
                "batchSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getServerlessEventrouterRuleFunctionBatchSetting:getServerlessEventrouterRuleFunctionBatchSetting"
                    },
                    "description": "Batch settings\n"
                },
                "functionId": {
                    "type": "string",
                    "description": "Function ID\n"
                },
                "functionTag": {
                    "type": "string",
                    "description": "Function tag\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has call permission on the function\n"
                }
            },
            "type": "object",
            "required": [
                "batchSettings",
                "functionId",
                "functionTag",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleFunctionBatchSetting:getServerlessEventrouterRuleFunctionBatchSetting": {
            "properties": {
                "cutoff": {
                    "type": "string",
                    "description": "Maximum batch size: rule will send a batch if its lifetime exceeds this value\n"
                },
                "maxBytes": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if total size of events exceeds this value\n"
                },
                "maxCount": {
                    "type": "integer",
                    "description": "Maximum batch size: rule will send a batch if number of events exceeds this value\n"
                }
            },
            "type": "object",
            "required": [
                "cutoff",
                "maxBytes",
                "maxCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleGatewayWebsocketBroadcast:getServerlessEventrouterRuleGatewayWebsocketBroadcast": {
            "properties": {
                "batchSettings": {
                    "type": "string",
                    "description": "Batch settings\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "Gateway ID\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has permission for writing to websockets\n"
                }
            },
            "type": "object",
            "required": [
                "batchSettings",
                "gatewayId",
                "path",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleLogging:getServerlessEventrouterRuleLogging": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "Folder ID\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log group ID\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has permission for writing logs\n"
                }
            },
            "type": "object",
            "required": [
                "folderId",
                "logGroupId",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleWorkflow:getServerlessEventrouterRuleWorkflow": {
            "properties": {
                "batchSettings": {
                    "type": "string",
                    "description": "Batch settings\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which should be used to start workflow\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "Workflow ID\n"
                }
            },
            "type": "object",
            "required": [
                "batchSettings",
                "serviceAccountId",
                "workflowId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleYd:getServerlessEventrouterRuleYd": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Stream database\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account, which has write permission on the stream\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "Full stream name, like /ru-central1/aoegtvhtp8ob********/cc8004q4lbo6********/test\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "serviceAccountId",
                "streamName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getServerlessEventrouterRuleYmq:getServerlessEventrouterRuleYmq": {
            "properties": {
                "queueArn": {
                    "type": "string",
                    "description": "Queue ARN. Example: yrn:yc:ymq:ru-central1:aoe***:test\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account which has write access to the queue\n"
                }
            },
            "type": "object",
            "required": [
                "queueArn",
                "serviceAccountId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaOverrideVariant:getSmartcaptchaCaptchaOverrideVariant": {
            "properties": {
                "challengeType": {
                    "type": "string"
                },
                "complexity": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "preCheckType": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "challengeType",
                "complexity",
                "description",
                "preCheckType",
                "uuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRule:getSmartcaptchaCaptchaSecurityRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleCondition:getSmartcaptchaCaptchaSecurityRuleCondition"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overrideVariantUuid": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "description",
                "name",
                "overrideVariantUuid",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleCondition:getSmartcaptchaCaptchaSecurityRuleCondition": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHeader:getSmartcaptchaCaptchaSecurityRuleConditionHeader"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHost:getSmartcaptchaCaptchaSecurityRuleConditionHost"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIp:getSmartcaptchaCaptchaSecurityRuleConditionSourceIp"
                    }
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUri:getSmartcaptchaCaptchaSecurityRuleConditionUri"
                    }
                }
            },
            "type": "object",
            "required": [
                "headers",
                "hosts",
                "sourceIps",
                "uris"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHeader:getSmartcaptchaCaptchaSecurityRuleConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHeaderValue:getSmartcaptchaCaptchaSecurityRuleConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHeaderValue:getSmartcaptchaCaptchaSecurityRuleConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHost:getSmartcaptchaCaptchaSecurityRuleConditionHost": {
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHostHost:getSmartcaptchaCaptchaSecurityRuleConditionHostHost"
                    }
                }
            },
            "type": "object",
            "required": [
                "hosts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionHostHost:getSmartcaptchaCaptchaSecurityRuleConditionHostHost": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIp:getSmartcaptchaCaptchaSecurityRuleConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch:getSmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUri:getSmartcaptchaCaptchaSecurityRuleConditionUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUriPath:getSmartcaptchaCaptchaSecurityRuleConditionUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUriQuery:getSmartcaptchaCaptchaSecurityRuleConditionUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUriPath:getSmartcaptchaCaptchaSecurityRuleConditionUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUriQuery:getSmartcaptchaCaptchaSecurityRuleConditionUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUriQueryValue:getSmartcaptchaCaptchaSecurityRuleConditionUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSmartcaptchaCaptchaSecurityRuleConditionUriQueryValue:getSmartcaptchaCaptchaSecurityRuleConditionUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRule:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRule": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "dryRun": {
                    "type": "boolean"
                },
                "dynamicQuotas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota"
                    }
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "staticQuotas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "dryRun",
                "dynamicQuotas",
                "name",
                "priority",
                "staticQuotas"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuota": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "characteristics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic"
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "period": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "action",
                "characteristics",
                "conditions",
                "limit",
                "period"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristic": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean"
                },
                "keyCharacteristics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic"
                    }
                },
                "simpleCharacteristics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic"
                    }
                }
            },
            "type": "object",
            "required": [
                "caseInsensitive",
                "keyCharacteristics",
                "simpleCharacteristics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicKeyCharacteristic": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCharacteristicSimpleCharacteristic": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaCondition": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader"
                    }
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod"
                    }
                },
                "requestUris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "headers",
                "httpMethods",
                "requestUris",
                "sourceIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleDynamicQuotaConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuota": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "period": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "action",
                "conditions",
                "limit",
                "period"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaCondition": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader"
                    }
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod"
                    }
                },
                "requestUris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "headers",
                "httpMethods",
                "requestUris",
                "sourceIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRuleStaticQuotaConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRule:getSwsSecurityProfileSecurityRule": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "dryRun": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "ruleConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleCondition:getSwsSecurityProfileSecurityRuleRuleCondition"
                    }
                },
                "smartProtections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtection:getSwsSecurityProfileSecurityRuleSmartProtection"
                    }
                },
                "wafs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWaf:getSwsSecurityProfileSecurityRuleWaf"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "dryRun",
                "name",
                "priority",
                "ruleConditions",
                "smartProtections",
                "wafs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleCondition:getSwsSecurityProfileSecurityRuleRuleCondition": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionCondition:getSwsSecurityProfileSecurityRuleRuleConditionCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "conditions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionCondition:getSwsSecurityProfileSecurityRuleRuleConditionCondition": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthority:getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthority"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHeader:getSwsSecurityProfileSecurityRuleRuleConditionConditionHeader"
                    }
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod:getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod"
                    }
                },
                "requestUris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "headers",
                "httpMethods",
                "requestUris",
                "sourceIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthority:getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority:getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority:getSwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHeader:getSwsSecurityProfileSecurityRuleRuleConditionConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue:getSwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue:getSwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod:getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod:getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod:getSwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue:getSwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch:getSwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtection:getSwsSecurityProfileSecurityRuleSmartProtection": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionCondition:getSwsSecurityProfileSecurityRuleSmartProtectionCondition"
                    }
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionCondition:getSwsSecurityProfileSecurityRuleSmartProtectionCondition": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority:getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeader:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeader"
                    }
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod"
                    }
                },
                "requestUris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "headers",
                "httpMethods",
                "requestUris",
                "sourceIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority:getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority:getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority:getSwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeader:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod:getSwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue:getSwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch:getSwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWaf:getSwsSecurityProfileSecurityRuleWaf": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafCondition:getSwsSecurityProfileSecurityRuleWafCondition"
                    }
                },
                "mode": {
                    "type": "string"
                },
                "wafProfileId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "mode",
                "wafProfileId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafCondition:getSwsSecurityProfileSecurityRuleWafCondition": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionAuthority:getSwsSecurityProfileSecurityRuleWafConditionAuthority"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHeader:getSwsSecurityProfileSecurityRuleWafConditionHeader"
                    }
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHttpMethod:getSwsSecurityProfileSecurityRuleWafConditionHttpMethod"
                    }
                },
                "requestUris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUri:getSwsSecurityProfileSecurityRuleWafConditionRequestUri"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIp:getSwsSecurityProfileSecurityRuleWafConditionSourceIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "headers",
                "httpMethods",
                "requestUris",
                "sourceIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionAuthority:getSwsSecurityProfileSecurityRuleWafConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority:getSwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority:getSwsSecurityProfileSecurityRuleWafConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHeader:getSwsSecurityProfileSecurityRuleWafConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHeaderValue:getSwsSecurityProfileSecurityRuleWafConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHeaderValue:getSwsSecurityProfileSecurityRuleWafConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHttpMethod:getSwsSecurityProfileSecurityRuleWafConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod:getSwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod:getSwsSecurityProfileSecurityRuleWafConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUri:getSwsSecurityProfileSecurityRuleWafConditionRequestUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUriPath:getSwsSecurityProfileSecurityRuleWafConditionRequestUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUriQuery:getSwsSecurityProfileSecurityRuleWafConditionRequestUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUriPath:getSwsSecurityProfileSecurityRuleWafConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUriQuery:getSwsSecurityProfileSecurityRuleWafConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue:getSwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue:getSwsSecurityProfileSecurityRuleWafConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIp:getSwsSecurityProfileSecurityRuleWafConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch:getSwsSecurityProfileSecurityRuleWafConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileAnalyzeRequestBody:getSwsWafProfileAnalyzeRequestBody": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "sizeLimit": {
                    "type": "integer"
                },
                "sizeLimitAction": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isEnabled",
                "sizeLimit",
                "sizeLimitAction"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileCoreRuleSet:getSwsWafProfileCoreRuleSet": {
            "properties": {
                "inboundAnomalyScore": {
                    "type": "integer"
                },
                "paranoiaLevel": {
                    "type": "integer"
                },
                "ruleSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileCoreRuleSetRuleSet:getSwsWafProfileCoreRuleSetRuleSet"
                    }
                }
            },
            "type": "object",
            "required": [
                "inboundAnomalyScore",
                "paranoiaLevel",
                "ruleSets"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileCoreRuleSetRuleSet:getSwsWafProfileCoreRuleSetRuleSet": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRule:getSwsWafProfileExclusionRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleCondition:getSwsWafProfileExclusionRuleCondition"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excludeRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleExcludeRule:getSwsWafProfileExclusionRuleExcludeRule"
                    }
                },
                "logExcluded": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "description",
                "excludeRules",
                "logExcluded",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleCondition:getSwsWafProfileExclusionRuleCondition": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionAuthority:getSwsWafProfileExclusionRuleConditionAuthority"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionHeader:getSwsWafProfileExclusionRuleConditionHeader"
                    }
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionHttpMethod:getSwsWafProfileExclusionRuleConditionHttpMethod"
                    }
                },
                "requestUris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionRequestUri:getSwsWafProfileExclusionRuleConditionRequestUri"
                    }
                },
                "sourceIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionSourceIp:getSwsWafProfileExclusionRuleConditionSourceIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "headers",
                "httpMethods",
                "requestUris",
                "sourceIps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionAuthority:getSwsWafProfileExclusionRuleConditionAuthority": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionAuthorityAuthority:getSwsWafProfileExclusionRuleConditionAuthorityAuthority"
                    }
                }
            },
            "type": "object",
            "required": [
                "authorities"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionAuthorityAuthority:getSwsWafProfileExclusionRuleConditionAuthorityAuthority": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionHeader:getSwsWafProfileExclusionRuleConditionHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionHeaderValue:getSwsWafProfileExclusionRuleConditionHeaderValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionHeaderValue:getSwsWafProfileExclusionRuleConditionHeaderValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionHttpMethod:getSwsWafProfileExclusionRuleConditionHttpMethod": {
            "properties": {
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionHttpMethodHttpMethod:getSwsWafProfileExclusionRuleConditionHttpMethodHttpMethod"
                    }
                }
            },
            "type": "object",
            "required": [
                "httpMethods"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionHttpMethodHttpMethod:getSwsWafProfileExclusionRuleConditionHttpMethodHttpMethod": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionRequestUri:getSwsWafProfileExclusionRuleConditionRequestUri": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionRequestUriPath:getSwsWafProfileExclusionRuleConditionRequestUriPath"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionRequestUriQuery:getSwsWafProfileExclusionRuleConditionRequestUriQuery"
                    }
                }
            },
            "type": "object",
            "required": [
                "paths",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionRequestUriPath:getSwsWafProfileExclusionRuleConditionRequestUriPath": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionRequestUriQuery:getSwsWafProfileExclusionRuleConditionRequestUriQuery": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionRequestUriQueryValue:getSwsWafProfileExclusionRuleConditionRequestUriQueryValue"
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionRequestUriQueryValue:getSwsWafProfileExclusionRuleConditionRequestUriQueryValue": {
            "properties": {
                "exactMatch": {
                    "type": "string"
                },
                "exactNotMatch": {
                    "type": "string"
                },
                "pireRegexMatch": {
                    "type": "string"
                },
                "pireRegexNotMatch": {
                    "type": "string"
                },
                "prefixMatch": {
                    "type": "string"
                },
                "prefixNotMatch": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "exactMatch",
                "exactNotMatch",
                "pireRegexMatch",
                "pireRegexNotMatch",
                "prefixMatch",
                "prefixNotMatch"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionSourceIp:getSwsWafProfileExclusionRuleConditionSourceIp": {
            "properties": {
                "geoIpMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch:getSwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch"
                    }
                },
                "geoIpNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch:getSwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch"
                    }
                },
                "ipRangesMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch:getSwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch"
                    }
                },
                "ipRangesNotMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch:getSwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch"
                    }
                }
            },
            "type": "object",
            "required": [
                "geoIpMatches",
                "geoIpNotMatches",
                "ipRangesMatches",
                "ipRangesNotMatches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch:getSwsWafProfileExclusionRuleConditionSourceIpGeoIpMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch:getSwsWafProfileExclusionRuleConditionSourceIpGeoIpNotMatch": {
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "locations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch:getSwsWafProfileExclusionRuleConditionSourceIpIpRangesMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch:getSwsWafProfileExclusionRuleConditionSourceIpIpRangesNotMatch": {
            "properties": {
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipRanges"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileExclusionRuleExcludeRule:getSwsWafProfileExclusionRuleExcludeRule": {
            "properties": {
                "excludeAll": {
                    "type": "boolean"
                },
                "ruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "excludeAll",
                "ruleIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafProfileRule:getSwsWafProfileRule": {
            "properties": {
                "isBlocking": {
                    "type": "boolean"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "ruleId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isBlocking",
                "isEnabled",
                "ruleId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getSwsWafRuleSetDescriptorRule:getSwsWafRuleSetDescriptorRule": {
            "properties": {
                "anomalyScore": {
                    "type": "integer",
                    "description": "Numeric anomaly value, i.e., a potential attack indicator. The higher this value, the more likely it is that the request that satisfies the rule is an attack. See [documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/waf#anomaly).\n"
                },
                "id": {
                    "type": "string",
                    "description": "The rule ID.\n"
                },
                "paranoiaLevel": {
                    "type": "integer",
                    "description": "Paranoia level classifies rules according to their aggression. The higher the paranoia level, the better your protection, but also the higher the probability of WAF false positives. See [documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/waf#paranoia).\n"
                }
            },
            "type": "object",
            "required": [
                "anomalyScore",
                "id",
                "paranoiaLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcAddressDnsRecord:getVpcAddressDnsRecord": {
            "properties": {
                "dnsZoneId": {
                    "type": "string"
                },
                "fqdn": {
                    "type": "string"
                },
                "ptr": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dnsZoneId",
                "fqdn",
                "ptr",
                "ttl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcAddressExternalIpv4Address:getVpcAddressExternalIpv4Address": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "ddosProtectionProvider": {
                    "type": "string"
                },
                "outgoingSmtpCapability": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "ddosProtectionProvider",
                "outgoingSmtpCapability",
                "zoneId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcGatewaySharedEgressGateway:getVpcGatewaySharedEgressGateway": {
            "type": "object"
        },
        "yandex:index/getVpcPrivateEndpointDnsOption:getVpcPrivateEndpointDnsOption": {
            "properties": {
                "privateDnsRecordsEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "privateDnsRecordsEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcPrivateEndpointEndpointAddress:getVpcPrivateEndpointEndpointAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "addressId": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressId",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcPrivateEndpointObjectStorage:getVpcPrivateEndpointObjectStorage": {
            "type": "object"
        },
        "yandex:index/getVpcRouteTableStaticRoute:getVpcRouteTableStaticRoute": {
            "properties": {
                "destinationPrefix": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "string"
                },
                "nextHopAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPrefix",
                "gatewayId",
                "nextHopAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcSecurityGroupEgress:getVpcSecurityGroupEgress": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "fromPort": {
                    "type": "integer",
                    "description": "Minimum port number.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource identifier.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to assign to this rule.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number (if applied to a single port).\n"
                },
                "predefinedTarget": {
                    "type": "string",
                    "description": "Special-purpose targets. `self_security_group` refers to this particular security group. `loadbalancer_healthchecks` represents [loadbalancer health check nodes](https://yandex.cloud/docs/network-load-balancer/concepts/health-check).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Target security group ID for this rule.\n"
                },
                "toPort": {
                    "type": "integer",
                    "description": "Maximum port number.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv4 addresses for this rule.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv6 addresses for this rule. `v6_cidr_blocks` argument is currently not supported. It will be available in the future.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "fromPort",
                "id",
                "labels",
                "port",
                "predefinedTarget",
                "protocol",
                "securityGroupId",
                "toPort",
                "v4CidrBlocks",
                "v6CidrBlocks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcSecurityGroupIngress:getVpcSecurityGroupIngress": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "fromPort": {
                    "type": "integer",
                    "description": "Minimum port number.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource identifier.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels to assign to this rule.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number (if applied to a single port).\n"
                },
                "predefinedTarget": {
                    "type": "string",
                    "description": "Special-purpose targets. `self_security_group` refers to this particular security group. `loadbalancer_healthchecks` represents [loadbalancer health check nodes](https://yandex.cloud/docs/network-load-balancer/concepts/health-check).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Target security group ID for this rule.\n"
                },
                "toPort": {
                    "type": "integer",
                    "description": "Maximum port number.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv4 addresses for this rule.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The blocks of IPv6 addresses for this rule. `v6_cidr_blocks` argument is currently not supported. It will be available in the future.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "fromPort",
                "id",
                "labels",
                "port",
                "predefinedTarget",
                "protocol",
                "securityGroupId",
                "toPort",
                "v4CidrBlocks",
                "v6CidrBlocks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getVpcSubnetDhcpOption:getVpcSubnetDhcpOption": {
            "properties": {
                "domainName": {
                    "type": "string"
                },
                "domainNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ntpServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "domainName",
                "domainNameServers",
                "ntpServers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseDedicatedLocation:getYdbDatabaseDedicatedLocation": {
            "properties": {
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getYdbDatabaseDedicatedLocationRegion:getYdbDatabaseDedicatedLocationRegion"
                    }
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getYdbDatabaseDedicatedLocationZone:getYdbDatabaseDedicatedLocationZone"
                    }
                }
            },
            "type": "object",
            "required": [
                "regions",
                "zones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseDedicatedLocationRegion:getYdbDatabaseDedicatedLocationRegion": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseDedicatedLocationZone:getYdbDatabaseDedicatedLocationZone": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseDedicatedScalePolicy:getYdbDatabaseDedicatedScalePolicy": {
            "properties": {
                "fixedScales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/getYdbDatabaseDedicatedScalePolicyFixedScale:getYdbDatabaseDedicatedScalePolicyFixedScale"
                    }
                }
            },
            "type": "object",
            "required": [
                "fixedScales"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseDedicatedScalePolicyFixedScale:getYdbDatabaseDedicatedScalePolicyFixedScale": {
            "properties": {
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseDedicatedStorageConfig:getYdbDatabaseDedicatedStorageConfig": {
            "properties": {
                "groupCount": {
                    "type": "integer"
                },
                "storageTypeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "groupCount",
                "storageTypeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "yandex:index/getYdbDatabaseServerlessServerlessDatabase:getYdbDatabaseServerlessServerlessDatabase": {
            "properties": {
                "enableThrottlingRcuLimit": {
                    "type": "boolean"
                },
                "provisionedRcuLimit": {
                    "type": "integer"
                },
                "storageSizeLimit": {
                    "type": "integer"
                },
                "throttlingRcuLimit": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enableThrottlingRcuLimit",
                "provisionedRcuLimit",
                "storageSizeLimit",
                "throttlingRcuLimit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the yandex package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "cloudId": {
                "type": "string",
                "description": "The ID of the [Cloud](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#cloud) to apply any\nresources to. This can also be specified using environment variable `YC_CLOUD_ID`.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The endpoint for API calls, default value is **api.cloud.yandex.net:443**. This can also be defined by environment\nvariable `YC_ENDPOINT`.\n"
            },
            "folderId": {
                "type": "string",
                "description": "The ID of the [Folder](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#folder) to operate under,\nif not specified by a given resource. This can also be specified using environment variable `YC_FOLDER_ID`.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Explicitly allow the provider to perform \"insecure\" SSL requests. If omitted, default value is `false`.\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "This is the maximum number of times an API call is retried, in the case where requests are being throttled or\nexperiencing transient failures. The delay between the subsequent API calls increases exponentially.\n"
            },
            "organizationId": {
                "type": "string",
                "description": "The ID of the [Cloud Organization](https://yandex.cloud/docs/organization/quickstart) to operate under.\n"
            },
            "plaintext": {
                "type": "boolean",
                "description": "Disable use of TLS. Default value is `false`.\n"
            },
            "profile": {
                "type": "string",
                "description": "Profile name to use in the shared credentials file. Default value is `default`.\n"
            },
            "regionId": {
                "type": "string",
                "description": "[The region](https://yandex.cloud/docs/overview/concepts/region) where operations will take place. For example\n`ru-central1`.\n"
            },
            "serviceAccountKeyFile": {
                "type": "string",
                "description": "Contains either a path to or the contents of the [Service Account\nfile](https://yandex.cloud/docs/iam/concepts/authorization/key) in JSON format. This can also be specified using\nenvironment variable `YC_SERVICE_ACCOUNT_KEY_FILE`. You can read how to create service account key file\n[here](https://yandex.cloud/docs/iam/operations/iam-token/create-for-sa#keys-create). \u003e Only one of `token` or\n`service_account_key_file` must be specified. \u003e One can authenticate via instance service account from inside a compute\ninstance. In order to use this method, omit both `token`/`service_account_key_file` and attach service account to the\ninstance. [Working with Yandex Cloud from inside an\ninstance](https://yandex.cloud/docs/compute/operations/vm-connect/auth-inside-vm).\n"
            },
            "sharedCredentialsFile": {
                "type": "string",
                "description": "Shared credentials file path. Supported keys: `storage_access_key` and `storage_secret_key`. \u003e The `storage_access_key`\nand `storage_secret_key` attributes from the shared credentials file are used only when the provider and a storage\ndata/resource do not have an access/secret keys explicitly specified.\n"
            },
            "storageAccessKey": {
                "type": "string",
                "description": "Yandex Cloud Object Storage access key, which is used when a storage data/resource doesn't have an access key explicitly\nspecified. This can also be specified using environment variable `YC_STORAGE_ACCESS_KEY`.\n"
            },
            "storageEndpoint": {
                "type": "string",
                "description": "Yandex Cloud [Object Storage Endpoint](https://yandex.cloud/docs/storage/s3/#request-url), which is used to connect to\n`S3 API`. Default value is **storage.yandexcloud.net**.\n"
            },
            "storageSecretKey": {
                "type": "string",
                "description": "Yandex Cloud Object Storage secret key, which is used when a storage data/resource doesn't have a secret key explicitly\nspecified. This can also be specified using environment variable `YC_STORAGE_SECRET_KEY`.\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Security token or IAM token used for authentication in Yandex Cloud. Check\n[documentation](https://yandex.cloud/docs/iam/operations/iam-token/create) about how to create IAM token. This can also\nbe specified using environment variable `YC_TOKEN`.\n",
                "secret": true
            },
            "ymqAccessKey": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service access key, which is used when a YMQ queue resource doesn't have an access key\nexplicitly specified. This can also be specified using environment variable `YC_MESSAGE_QUEUE_ACCESS_KEY`.\n"
            },
            "ymqEndpoint": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service endpoint. Default value is **message-queue.api.cloud.yandex.net**.\n"
            },
            "ymqSecretKey": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service secret key, which is used when a YMQ queue resource doesn't have a secret key\nexplicitly specified. This can also be specified using environment variable `YC_MESSAGE_QUEUE_SECRET_KEY`.\n",
                "secret": true
            },
            "zone": {
                "type": "string",
                "description": "The default [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) to operate under, if not\nspecified by a given resource. This can also be specified using environment variable `YC_ZONE`.\n"
            }
        },
        "inputProperties": {
            "cloudId": {
                "type": "string",
                "description": "The ID of the [Cloud](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#cloud) to apply any\nresources to. This can also be specified using environment variable `YC_CLOUD_ID`.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The endpoint for API calls, default value is **api.cloud.yandex.net:443**. This can also be defined by environment\nvariable `YC_ENDPOINT`.\n"
            },
            "folderId": {
                "type": "string",
                "description": "The ID of the [Folder](https://yandex.cloud/docs/resource-manager/concepts/resources-hierarchy#folder) to operate under,\nif not specified by a given resource. This can also be specified using environment variable `YC_FOLDER_ID`.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Explicitly allow the provider to perform \"insecure\" SSL requests. If omitted, default value is `false`.\n"
            },
            "maxRetries": {
                "type": "integer",
                "description": "This is the maximum number of times an API call is retried, in the case where requests are being throttled or\nexperiencing transient failures. The delay between the subsequent API calls increases exponentially.\n"
            },
            "organizationId": {
                "type": "string",
                "description": "The ID of the [Cloud Organization](https://yandex.cloud/docs/organization/quickstart) to operate under.\n"
            },
            "plaintext": {
                "type": "boolean",
                "description": "Disable use of TLS. Default value is `false`.\n"
            },
            "profile": {
                "type": "string",
                "description": "Profile name to use in the shared credentials file. Default value is `default`.\n"
            },
            "regionId": {
                "type": "string",
                "description": "[The region](https://yandex.cloud/docs/overview/concepts/region) where operations will take place. For example\n`ru-central1`.\n"
            },
            "serviceAccountKeyFile": {
                "type": "string",
                "description": "Contains either a path to or the contents of the [Service Account\nfile](https://yandex.cloud/docs/iam/concepts/authorization/key) in JSON format. This can also be specified using\nenvironment variable `YC_SERVICE_ACCOUNT_KEY_FILE`. You can read how to create service account key file\n[here](https://yandex.cloud/docs/iam/operations/iam-token/create-for-sa#keys-create). \u003e Only one of `token` or\n`service_account_key_file` must be specified. \u003e One can authenticate via instance service account from inside a compute\ninstance. In order to use this method, omit both `token`/`service_account_key_file` and attach service account to the\ninstance. [Working with Yandex Cloud from inside an\ninstance](https://yandex.cloud/docs/compute/operations/vm-connect/auth-inside-vm).\n"
            },
            "sharedCredentialsFile": {
                "type": "string",
                "description": "Shared credentials file path. Supported keys: `storage_access_key` and `storage_secret_key`. \u003e The `storage_access_key`\nand `storage_secret_key` attributes from the shared credentials file are used only when the provider and a storage\ndata/resource do not have an access/secret keys explicitly specified.\n"
            },
            "storageAccessKey": {
                "type": "string",
                "description": "Yandex Cloud Object Storage access key, which is used when a storage data/resource doesn't have an access key explicitly\nspecified. This can also be specified using environment variable `YC_STORAGE_ACCESS_KEY`.\n"
            },
            "storageEndpoint": {
                "type": "string",
                "description": "Yandex Cloud [Object Storage Endpoint](https://yandex.cloud/docs/storage/s3/#request-url), which is used to connect to\n`S3 API`. Default value is **storage.yandexcloud.net**.\n"
            },
            "storageSecretKey": {
                "type": "string",
                "description": "Yandex Cloud Object Storage secret key, which is used when a storage data/resource doesn't have a secret key explicitly\nspecified. This can also be specified using environment variable `YC_STORAGE_SECRET_KEY`.\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Security token or IAM token used for authentication in Yandex Cloud. Check\n[documentation](https://yandex.cloud/docs/iam/operations/iam-token/create) about how to create IAM token. This can also\nbe specified using environment variable `YC_TOKEN`.\n",
                "secret": true
            },
            "ymqAccessKey": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service access key, which is used when a YMQ queue resource doesn't have an access key\nexplicitly specified. This can also be specified using environment variable `YC_MESSAGE_QUEUE_ACCESS_KEY`.\n"
            },
            "ymqEndpoint": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service endpoint. Default value is **message-queue.api.cloud.yandex.net**.\n"
            },
            "ymqSecretKey": {
                "type": "string",
                "description": "Yandex Cloud Message Queue service secret key, which is used when a YMQ queue resource doesn't have a secret key\nexplicitly specified. This can also be specified using environment variable `YC_MESSAGE_QUEUE_SECRET_KEY`.\n",
                "secret": true
            },
            "zone": {
                "type": "string",
                "description": "The default [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) to operate under, if not\nspecified by a given resource. This can also be specified using environment variable `YC_ZONE`.\n"
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:yandex/terraformConfig"
        }
    },
    "resources": {
        "yandex:index/albBackendGroup:AlbBackendGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "grpcBackends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackend:AlbBackendGroupGrpcBackend"
                    },
                    "description": "gRPC backend specification that will be used by the ALB Backend Group.\n"
                },
                "httpBackends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackend:AlbBackendGroupHttpBackend"
                    },
                    "description": "HTTP backend specification that will be used by the ALB Backend Group. \u003e Only one of `target_group_ids` or\n`storage_bucket` should be specified.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "sessionAffinity": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupSessionAffinity:AlbBackendGroupSessionAffinity",
                    "description": "Session affinity mode determines how incoming requests are grouped into one session. \u003e Only one type(`connection` or\n`cookie` or `header`) of session affinity should be specified.\n"
                },
                "streamBackends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackend:AlbBackendGroupStreamBackend"
                    },
                    "description": "Stream backend specification that will be used by the ALB Backend Group.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "grpcBackends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackend:AlbBackendGroupGrpcBackend"
                    },
                    "description": "gRPC backend specification that will be used by the ALB Backend Group.\n"
                },
                "httpBackends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackend:AlbBackendGroupHttpBackend"
                    },
                    "description": "HTTP backend specification that will be used by the ALB Backend Group. \u003e Only one of `target_group_ids` or\n`storage_bucket` should be specified.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "sessionAffinity": {
                    "$ref": "#/types/yandex:index/AlbBackendGroupSessionAffinity:AlbBackendGroupSessionAffinity",
                    "description": "Session affinity mode determines how incoming requests are grouped into one session. \u003e Only one type(`connection` or\n`cookie` or `header`) of session affinity should be specified.\n"
                },
                "streamBackends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackend:AlbBackendGroupStreamBackend"
                    },
                    "description": "Stream backend specification that will be used by the ALB Backend Group.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlbBackendGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "grpcBackends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbBackendGroupGrpcBackend:AlbBackendGroupGrpcBackend"
                        },
                        "description": "gRPC backend specification that will be used by the ALB Backend Group.\n"
                    },
                    "httpBackends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbBackendGroupHttpBackend:AlbBackendGroupHttpBackend"
                        },
                        "description": "HTTP backend specification that will be used by the ALB Backend Group. \u003e Only one of `target_group_ids` or\n`storage_bucket` should be specified.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "sessionAffinity": {
                        "$ref": "#/types/yandex:index/AlbBackendGroupSessionAffinity:AlbBackendGroupSessionAffinity",
                        "description": "Session affinity mode determines how incoming requests are grouped into one session. \u003e Only one type(`connection` or\n`cookie` or `header`) of session affinity should be specified.\n"
                    },
                    "streamBackends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbBackendGroupStreamBackend:AlbBackendGroupStreamBackend"
                        },
                        "description": "Stream backend specification that will be used by the ALB Backend Group.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/albHttpRouter:AlbHttpRouter": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "routeOptions": {
                    "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptions:AlbHttpRouterRouteOptions",
                    "description": "Route options for the virtual host.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "routeOptions": {
                    "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptions:AlbHttpRouterRouteOptions",
                    "description": "Route options for the virtual host.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlbHttpRouter resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "routeOptions": {
                        "$ref": "#/types/yandex:index/AlbHttpRouterRouteOptions:AlbHttpRouterRouteOptions",
                        "description": "Route options for the virtual host.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/albLoadBalancer:AlbLoadBalancer": {
            "properties": {
                "allocationPolicy": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerAllocationPolicy:AlbLoadBalancerAllocationPolicy",
                    "description": "Allocation zones for the Load Balancer instance.\n"
                },
                "allowZonalShift": {
                    "type": "boolean",
                    "description": "Specifies whether application load balancer is available to zonal shift\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerListener:AlbLoadBalancerListener"
                    },
                    "description": "List of listeners for the Load Balancer.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerLogOptions:AlbLoadBalancerLogOptions",
                    "description": "Cloud Logging settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "The region ID where Load Balancer is located at.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Load Balancer.\n"
                }
            },
            "required": [
                "allocationPolicy",
                "createdAt",
                "folderId",
                "logGroupId",
                "name",
                "networkId",
                "status"
            ],
            "inputProperties": {
                "allocationPolicy": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerAllocationPolicy:AlbLoadBalancerAllocationPolicy",
                    "description": "Allocation zones for the Load Balancer instance.\n"
                },
                "allowZonalShift": {
                    "type": "boolean",
                    "description": "Specifies whether application load balancer is available to zonal shift\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerListener:AlbLoadBalancerListener"
                    },
                    "description": "List of listeners for the Load Balancer.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/AlbLoadBalancerLogOptions:AlbLoadBalancerLogOptions",
                    "description": "Cloud Logging settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "regionId": {
                    "type": "string",
                    "description": "The region ID where Load Balancer is located at.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                }
            },
            "requiredInputs": [
                "allocationPolicy",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlbLoadBalancer resources.\n",
                "properties": {
                    "allocationPolicy": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerAllocationPolicy:AlbLoadBalancerAllocationPolicy",
                        "description": "Allocation zones for the Load Balancer instance.\n"
                    },
                    "allowZonalShift": {
                        "type": "boolean",
                        "description": "Specifies whether application load balancer is available to zonal shift\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbLoadBalancerListener:AlbLoadBalancerListener"
                        },
                        "description": "List of listeners for the Load Balancer.\n"
                    },
                    "logGroupId": {
                        "type": "string",
                        "description": "Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.\n"
                    },
                    "logOptions": {
                        "$ref": "#/types/yandex:index/AlbLoadBalancerLogOptions:AlbLoadBalancerLogOptions",
                        "description": "Cloud Logging settings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "regionId": {
                        "type": "string",
                        "description": "The region ID where Load Balancer is located at.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Load Balancer.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/albTargetGroup:AlbTargetGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbTargetGroupTarget:AlbTargetGroupTarget"
                    },
                    "description": "A Target resource.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbTargetGroupTarget:AlbTargetGroupTarget"
                    },
                    "description": "A Target resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlbTargetGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbTargetGroupTarget:AlbTargetGroupTarget"
                        },
                        "description": "A Target resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/albVirtualHost:AlbVirtualHost": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the\nform of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "The ID of the HTTP router to which the virtual host belongs.\n"
                },
                "modifyRequestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostModifyRequestHeader:AlbVirtualHostModifyRequestHeader"
                    },
                    "description": "Apply the following modifications to the Request/Response header. \u003e Only one type of actions `append` or `replace` or\n`remove` should be specified.\n"
                },
                "modifyResponseHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostModifyResponseHeader:AlbVirtualHostModifyResponseHeader"
                    },
                    "description": "Apply the following modifications to the Request/Response header. \u003e Only one type of actions `append` or `replace` or\n`remove` should be specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rateLimit": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRateLimit:AlbVirtualHostRateLimit",
                    "description": "Rate limit configuration applied for a whole virtual host\n"
                },
                "routeOptions": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptions:AlbVirtualHostRouteOptions",
                    "description": "Route options for the virtual host.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRoute:AlbVirtualHostRoute"
                    },
                    "description": "A Route resource. Routes are matched *in-order*. Be careful when adding them to the end. For instance, having http '/'\nmatch first makes all other routes unused. \u003e Exactly one type of routes `http_route` or `grpc_route` should be\nspecified.\n"
                }
            },
            "required": [
                "httpRouterId",
                "name"
            ],
            "inputProperties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the\nform of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.\n"
                },
                "httpRouterId": {
                    "type": "string",
                    "description": "The ID of the HTTP router to which the virtual host belongs.\n"
                },
                "modifyRequestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostModifyRequestHeader:AlbVirtualHostModifyRequestHeader"
                    },
                    "description": "Apply the following modifications to the Request/Response header. \u003e Only one type of actions `append` or `replace` or\n`remove` should be specified.\n"
                },
                "modifyResponseHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostModifyResponseHeader:AlbVirtualHostModifyResponseHeader"
                    },
                    "description": "Apply the following modifications to the Request/Response header. \u003e Only one type of actions `append` or `replace` or\n`remove` should be specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rateLimit": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRateLimit:AlbVirtualHostRateLimit",
                    "description": "Rate limit configuration applied for a whole virtual host\n"
                },
                "routeOptions": {
                    "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptions:AlbVirtualHostRouteOptions",
                    "description": "Route options for the virtual host.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRoute:AlbVirtualHostRoute"
                    },
                    "description": "A Route resource. Routes are matched *in-order*. Be careful when adding them to the end. For instance, having http '/'\nmatch first makes all other routes unused. \u003e Exactly one type of routes `http_route` or `grpc_route` should be\nspecified.\n"
                }
            },
            "requiredInputs": [
                "httpRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlbVirtualHost resources.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the\nform of '*.foo.com' or '*-bar.foo.com'. If not specified, all domains will be matched.\n"
                    },
                    "httpRouterId": {
                        "type": "string",
                        "description": "The ID of the HTTP router to which the virtual host belongs.\n"
                    },
                    "modifyRequestHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbVirtualHostModifyRequestHeader:AlbVirtualHostModifyRequestHeader"
                        },
                        "description": "Apply the following modifications to the Request/Response header. \u003e Only one type of actions `append` or `replace` or\n`remove` should be specified.\n"
                    },
                    "modifyResponseHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbVirtualHostModifyResponseHeader:AlbVirtualHostModifyResponseHeader"
                        },
                        "description": "Apply the following modifications to the Request/Response header. \u003e Only one type of actions `append` or `replace` or\n`remove` should be specified.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "rateLimit": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRateLimit:AlbVirtualHostRateLimit",
                        "description": "Rate limit configuration applied for a whole virtual host\n"
                    },
                    "routeOptions": {
                        "$ref": "#/types/yandex:index/AlbVirtualHostRouteOptions:AlbVirtualHostRouteOptions",
                        "description": "Route options for the virtual host.\n"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/AlbVirtualHostRoute:AlbVirtualHostRoute"
                        },
                        "description": "A Route resource. Routes are matched *in-order*. Be careful when adding them to the end. For instance, having http '/'\nmatch first makes all other routes unused. \u003e Exactly one type of routes `http_route` or `grpc_route` should be\nspecified.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/apiGateway:ApiGateway": {
            "properties": {
                "canary": {
                    "$ref": "#/types/yandex:index/ApiGatewayCanary:ApiGatewayCanary",
                    "description": "Canary release settings of gateway.\n"
                },
                "connectivity": {
                    "$ref": "#/types/yandex:index/ApiGatewayConnectivity:ApiGatewayConnectivity",
                    "description": "Gateway connectivity. If specified the gateway will be attached to specified network.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "customDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ApiGatewayCustomDomain:ApiGatewayCustomDomain"
                    },
                    "description": "Set of custom domains to be attached to Yandex Cloud API Gateway.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Default domain for the Yandex Cloud API Gateway. Generated at creation time.\n"
                },
                "executionTimeout": {
                    "type": "string",
                    "description": "Execution timeout in seconds for the Yandex Cloud API Gateway.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "ID of the log group for the Yandex Cloud API Gateway.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/ApiGatewayLogOptions:ApiGatewayLogOptions",
                    "description": "Options for logging from Yandex Cloud API Gateway.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "spec": {
                    "type": "string",
                    "description": "The OpenAPI specification for Yandex Cloud API Gateway.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Yandex Cloud API Gateway.\n"
                },
                "userDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003e **DEPRECATED** Use `custom_domains` instead. Set of user domains attached to Yandex Cloud API Gateway.\n",
                    "deprecationMessage": "The 'user_domains' field has been deprecated. Please use 'custom_domains' instead."
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of values for variables in gateway specification.\n"
                }
            },
            "required": [
                "createdAt",
                "domain",
                "executionTimeout",
                "folderId",
                "logGroupId",
                "name",
                "spec",
                "status",
                "userDomains"
            ],
            "inputProperties": {
                "canary": {
                    "$ref": "#/types/yandex:index/ApiGatewayCanary:ApiGatewayCanary",
                    "description": "Canary release settings of gateway.\n"
                },
                "connectivity": {
                    "$ref": "#/types/yandex:index/ApiGatewayConnectivity:ApiGatewayConnectivity",
                    "description": "Gateway connectivity. If specified the gateway will be attached to specified network.\n"
                },
                "customDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ApiGatewayCustomDomain:ApiGatewayCustomDomain"
                    },
                    "description": "Set of custom domains to be attached to Yandex Cloud API Gateway.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "executionTimeout": {
                    "type": "string",
                    "description": "Execution timeout in seconds for the Yandex Cloud API Gateway.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/ApiGatewayLogOptions:ApiGatewayLogOptions",
                    "description": "Options for logging from Yandex Cloud API Gateway.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "spec": {
                    "type": "string",
                    "description": "The OpenAPI specification for Yandex Cloud API Gateway.\n"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of values for variables in gateway specification.\n"
                }
            },
            "requiredInputs": [
                "spec"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiGateway resources.\n",
                "properties": {
                    "canary": {
                        "$ref": "#/types/yandex:index/ApiGatewayCanary:ApiGatewayCanary",
                        "description": "Canary release settings of gateway.\n"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/ApiGatewayConnectivity:ApiGatewayConnectivity",
                        "description": "Gateway connectivity. If specified the gateway will be attached to specified network.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "customDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ApiGatewayCustomDomain:ApiGatewayCustomDomain"
                        },
                        "description": "Set of custom domains to be attached to Yandex Cloud API Gateway.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Default domain for the Yandex Cloud API Gateway. Generated at creation time.\n"
                    },
                    "executionTimeout": {
                        "type": "string",
                        "description": "Execution timeout in seconds for the Yandex Cloud API Gateway.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logGroupId": {
                        "type": "string",
                        "description": "ID of the log group for the Yandex Cloud API Gateway.\n"
                    },
                    "logOptions": {
                        "$ref": "#/types/yandex:index/ApiGatewayLogOptions:ApiGatewayLogOptions",
                        "description": "Options for logging from Yandex Cloud API Gateway.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "spec": {
                        "type": "string",
                        "description": "The OpenAPI specification for Yandex Cloud API Gateway.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Yandex Cloud API Gateway.\n"
                    },
                    "userDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "\u003e **DEPRECATED** Use `custom_domains` instead. Set of user domains attached to Yandex Cloud API Gateway.\n",
                        "deprecationMessage": "The 'user_domains' field has been deprecated. Please use 'custom_domains' instead."
                    },
                    "variables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of values for variables in gateway specification.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/auditTrailsTrail:AuditTrailsTrail": {
            "properties": {
                "dataStreamDestination": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailDataStreamDestination:AuditTrailsTrailDataStreamDestination",
                    "description": "Structure describing destination data stream of the trail. Mutually exclusive with `logging_destination` and\n`storage_destination`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "filter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilter:AuditTrailsTrailFilter",
                    "description": "Structure describing event filtering process for the trail.\n",
                    "deprecationMessage": "Configure filtering_policy instead. This attribute will be removed"
                },
                "filteringPolicy": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicy:AuditTrailsTrailFilteringPolicy",
                    "description": "Structure describing event filtering process for the trail. Mutually exclusive with `filter`. At least one of the\n`management_events_filter` or `data_events_filter` fields will be filled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "loggingDestination": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailLoggingDestination:AuditTrailsTrailLoggingDestination",
                    "description": "Structure describing destination log group of the trail. Mutually exclusive with `storage_destination` and\n`data_stream_destination`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of this trail.\n"
                },
                "storageDestination": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailStorageDestination:AuditTrailsTrailStorageDestination",
                    "description": "Structure describing destination bucket of the trail. Mutually exclusive with `logging_destination` and\n`data_stream_destination`.\n"
                },
                "trailId": {
                    "type": "string",
                    "description": "ID of the trail resource.\n"
                }
            },
            "required": [
                "folderId",
                "name",
                "serviceAccountId",
                "status",
                "trailId"
            ],
            "inputProperties": {
                "dataStreamDestination": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailDataStreamDestination:AuditTrailsTrailDataStreamDestination",
                    "description": "Structure describing destination data stream of the trail. Mutually exclusive with `logging_destination` and\n`storage_destination`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "filter": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilter:AuditTrailsTrailFilter",
                    "description": "Structure describing event filtering process for the trail.\n",
                    "deprecationMessage": "Configure filtering_policy instead. This attribute will be removed"
                },
                "filteringPolicy": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicy:AuditTrailsTrailFilteringPolicy",
                    "description": "Structure describing event filtering process for the trail. Mutually exclusive with `filter`. At least one of the\n`management_events_filter` or `data_events_filter` fields will be filled.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "loggingDestination": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailLoggingDestination:AuditTrailsTrailLoggingDestination",
                    "description": "Structure describing destination log group of the trail. Mutually exclusive with `storage_destination` and\n`data_stream_destination`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "storageDestination": {
                    "$ref": "#/types/yandex:index/AuditTrailsTrailStorageDestination:AuditTrailsTrailStorageDestination",
                    "description": "Structure describing destination bucket of the trail. Mutually exclusive with `logging_destination` and\n`data_stream_destination`.\n"
                }
            },
            "requiredInputs": [
                "folderId",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuditTrailsTrail resources.\n",
                "properties": {
                    "dataStreamDestination": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailDataStreamDestination:AuditTrailsTrailDataStreamDestination",
                        "description": "Structure describing destination data stream of the trail. Mutually exclusive with `logging_destination` and\n`storage_destination`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "filter": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilter:AuditTrailsTrailFilter",
                        "description": "Structure describing event filtering process for the trail.\n",
                        "deprecationMessage": "Configure filtering_policy instead. This attribute will be removed"
                    },
                    "filteringPolicy": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailFilteringPolicy:AuditTrailsTrailFilteringPolicy",
                        "description": "Structure describing event filtering process for the trail. Mutually exclusive with `filter`. At least one of the\n`management_events_filter` or `data_events_filter` fields will be filled.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "loggingDestination": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailLoggingDestination:AuditTrailsTrailLoggingDestination",
                        "description": "Structure describing destination log group of the trail. Mutually exclusive with `storage_destination` and\n`data_stream_destination`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of this trail.\n"
                    },
                    "storageDestination": {
                        "$ref": "#/types/yandex:index/AuditTrailsTrailStorageDestination:AuditTrailsTrailStorageDestination",
                        "description": "Structure describing destination bucket of the trail. Mutually exclusive with `logging_destination` and\n`data_stream_destination`.\n"
                    },
                    "trailId": {
                        "type": "string",
                        "description": "ID of the trail resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/backupPolicy:BackupPolicy": {
            "properties": {
                "archiveName": {
                    "type": "string",
                    "description": "The name of generated archives. Default `[Machine Name]-[Plan ID]-[Unique ID]a`.\n"
                },
                "cbt": {
                    "type": "string",
                    "description": "Configuration of Changed Block Tracking. Available values are: `USE_IF_ENABLED`, `ENABLED_AND_USE`, `DO_NOT_USE`.\nDefault `DO_NOT_USE`.\n"
                },
                "compression": {
                    "type": "string",
                    "description": "Archive compression level. Affects CPU. Available values: `NORMAL`, `HIGH`, `MAX`, `OFF`. Default: `NORMAL`.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If this field is true, it means that the policy is enabled.\n"
                },
                "fastBackupEnabled": {
                    "type": "boolean",
                    "description": "If true, determines whether a file has changed by the file size and timestamp. Otherwise, the entire file contents are\ncompared to those stored in the backup.\n"
                },
                "fileFilters": {
                    "$ref": "#/types/yandex:index/BackupPolicyFileFilters:BackupPolicyFileFilters",
                    "description": "File filters to specify masks of files to backup or to exclude of backuping.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "format": {
                    "type": "string",
                    "description": "Format of the backup. It's strongly recommend to leave this option empty or `AUTO`. Available values: `AUTO`,\n`VERSION_11`, `VERSION_12`.\n"
                },
                "multiVolumeSnapshottingEnabled": {
                    "type": "boolean",
                    "description": "If true, snapshots of multiple volumes will be taken simultaneously. Default `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "performanceWindowEnabled": {
                    "type": "boolean",
                    "description": "Time windows for performance limitations of backup. Default `false`.\n"
                },
                "preserveFileSecuritySettings": {
                    "type": "boolean",
                    "description": "Preserves file security settings. It's better to set this option to true. Default `true`.\n"
                },
                "quiesceSnapshottingEnabled": {
                    "type": "boolean",
                    "description": "If true, a quiesced snapshot of the virtual machine will be taken. Default `false`.\n"
                },
                "reattempts": {
                    "$ref": "#/types/yandex:index/BackupPolicyReattempts:BackupPolicyReattempts",
                    "description": "Amount of reattempts that should be performed while trying to make backup at the host.\n"
                },
                "retention": {
                    "$ref": "#/types/yandex:index/BackupPolicyRetention:BackupPolicyRetention",
                    "description": "Retention policy for backups. Allows to setup backups lifecycle.\n"
                },
                "scheduling": {
                    "$ref": "#/types/yandex:index/BackupPolicyScheduling:BackupPolicyScheduling",
                    "description": "Schedule settings for creating backups on the host.\n"
                },
                "silentModeEnabled": {
                    "type": "boolean",
                    "description": "If true, a user interaction will be avoided when possible. Default `true`.\n"
                },
                "splittingBytes": {
                    "type": "string",
                    "description": "Determines the size to split backups. It's better to leave this option unchanged. Default `9223372036854775807`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update timestamp of the resource.\n"
                },
                "vmSnapshotReattempts": {
                    "$ref": "#/types/yandex:index/BackupPolicyVmSnapshotReattempts:BackupPolicyVmSnapshotReattempts",
                    "description": "Amount of reattempts that should be performed while trying to make snapshot.\n"
                },
                "vssProvider": {
                    "type": "string",
                    "description": "Settings for the volume shadow copy service. Available values are: `NATIVE`, `TARGET_SYSTEM_DEFINED`. Default `NATIVE`.\n"
                }
            },
            "required": [
                "createdAt",
                "enabled",
                "folderId",
                "name",
                "reattempts",
                "retention",
                "scheduling",
                "updatedAt",
                "vmSnapshotReattempts"
            ],
            "inputProperties": {
                "archiveName": {
                    "type": "string",
                    "description": "The name of generated archives. Default `[Machine Name]-[Plan ID]-[Unique ID]a`.\n"
                },
                "cbt": {
                    "type": "string",
                    "description": "Configuration of Changed Block Tracking. Available values are: `USE_IF_ENABLED`, `ENABLED_AND_USE`, `DO_NOT_USE`.\nDefault `DO_NOT_USE`.\n"
                },
                "compression": {
                    "type": "string",
                    "description": "Archive compression level. Affects CPU. Available values: `NORMAL`, `HIGH`, `MAX`, `OFF`. Default: `NORMAL`.\n"
                },
                "fastBackupEnabled": {
                    "type": "boolean",
                    "description": "If true, determines whether a file has changed by the file size and timestamp. Otherwise, the entire file contents are\ncompared to those stored in the backup.\n"
                },
                "fileFilters": {
                    "$ref": "#/types/yandex:index/BackupPolicyFileFilters:BackupPolicyFileFilters",
                    "description": "File filters to specify masks of files to backup or to exclude of backuping.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "format": {
                    "type": "string",
                    "description": "Format of the backup. It's strongly recommend to leave this option empty or `AUTO`. Available values: `AUTO`,\n`VERSION_11`, `VERSION_12`.\n"
                },
                "multiVolumeSnapshottingEnabled": {
                    "type": "boolean",
                    "description": "If true, snapshots of multiple volumes will be taken simultaneously. Default `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "performanceWindowEnabled": {
                    "type": "boolean",
                    "description": "Time windows for performance limitations of backup. Default `false`.\n"
                },
                "preserveFileSecuritySettings": {
                    "type": "boolean",
                    "description": "Preserves file security settings. It's better to set this option to true. Default `true`.\n"
                },
                "quiesceSnapshottingEnabled": {
                    "type": "boolean",
                    "description": "If true, a quiesced snapshot of the virtual machine will be taken. Default `false`.\n"
                },
                "reattempts": {
                    "$ref": "#/types/yandex:index/BackupPolicyReattempts:BackupPolicyReattempts",
                    "description": "Amount of reattempts that should be performed while trying to make backup at the host.\n"
                },
                "retention": {
                    "$ref": "#/types/yandex:index/BackupPolicyRetention:BackupPolicyRetention",
                    "description": "Retention policy for backups. Allows to setup backups lifecycle.\n"
                },
                "scheduling": {
                    "$ref": "#/types/yandex:index/BackupPolicyScheduling:BackupPolicyScheduling",
                    "description": "Schedule settings for creating backups on the host.\n"
                },
                "silentModeEnabled": {
                    "type": "boolean",
                    "description": "If true, a user interaction will be avoided when possible. Default `true`.\n"
                },
                "splittingBytes": {
                    "type": "string",
                    "description": "Determines the size to split backups. It's better to leave this option unchanged. Default `9223372036854775807`.\n"
                },
                "vmSnapshotReattempts": {
                    "$ref": "#/types/yandex:index/BackupPolicyVmSnapshotReattempts:BackupPolicyVmSnapshotReattempts",
                    "description": "Amount of reattempts that should be performed while trying to make snapshot.\n"
                },
                "vssProvider": {
                    "type": "string",
                    "description": "Settings for the volume shadow copy service. Available values are: `NATIVE`, `TARGET_SYSTEM_DEFINED`. Default `NATIVE`.\n"
                }
            },
            "requiredInputs": [
                "reattempts",
                "retention",
                "scheduling",
                "vmSnapshotReattempts"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BackupPolicy resources.\n",
                "properties": {
                    "archiveName": {
                        "type": "string",
                        "description": "The name of generated archives. Default `[Machine Name]-[Plan ID]-[Unique ID]a`.\n"
                    },
                    "cbt": {
                        "type": "string",
                        "description": "Configuration of Changed Block Tracking. Available values are: `USE_IF_ENABLED`, `ENABLED_AND_USE`, `DO_NOT_USE`.\nDefault `DO_NOT_USE`.\n"
                    },
                    "compression": {
                        "type": "string",
                        "description": "Archive compression level. Affects CPU. Available values: `NORMAL`, `HIGH`, `MAX`, `OFF`. Default: `NORMAL`.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "If this field is true, it means that the policy is enabled.\n"
                    },
                    "fastBackupEnabled": {
                        "type": "boolean",
                        "description": "If true, determines whether a file has changed by the file size and timestamp. Otherwise, the entire file contents are\ncompared to those stored in the backup.\n"
                    },
                    "fileFilters": {
                        "$ref": "#/types/yandex:index/BackupPolicyFileFilters:BackupPolicyFileFilters",
                        "description": "File filters to specify masks of files to backup or to exclude of backuping.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "format": {
                        "type": "string",
                        "description": "Format of the backup. It's strongly recommend to leave this option empty or `AUTO`. Available values: `AUTO`,\n`VERSION_11`, `VERSION_12`.\n"
                    },
                    "multiVolumeSnapshottingEnabled": {
                        "type": "boolean",
                        "description": "If true, snapshots of multiple volumes will be taken simultaneously. Default `true`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "performanceWindowEnabled": {
                        "type": "boolean",
                        "description": "Time windows for performance limitations of backup. Default `false`.\n"
                    },
                    "preserveFileSecuritySettings": {
                        "type": "boolean",
                        "description": "Preserves file security settings. It's better to set this option to true. Default `true`.\n"
                    },
                    "quiesceSnapshottingEnabled": {
                        "type": "boolean",
                        "description": "If true, a quiesced snapshot of the virtual machine will be taken. Default `false`.\n"
                    },
                    "reattempts": {
                        "$ref": "#/types/yandex:index/BackupPolicyReattempts:BackupPolicyReattempts",
                        "description": "Amount of reattempts that should be performed while trying to make backup at the host.\n"
                    },
                    "retention": {
                        "$ref": "#/types/yandex:index/BackupPolicyRetention:BackupPolicyRetention",
                        "description": "Retention policy for backups. Allows to setup backups lifecycle.\n"
                    },
                    "scheduling": {
                        "$ref": "#/types/yandex:index/BackupPolicyScheduling:BackupPolicyScheduling",
                        "description": "Schedule settings for creating backups on the host.\n"
                    },
                    "silentModeEnabled": {
                        "type": "boolean",
                        "description": "If true, a user interaction will be avoided when possible. Default `true`.\n"
                    },
                    "splittingBytes": {
                        "type": "string",
                        "description": "Determines the size to split backups. It's better to leave this option unchanged. Default `9223372036854775807`.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update timestamp of the resource.\n"
                    },
                    "vmSnapshotReattempts": {
                        "$ref": "#/types/yandex:index/BackupPolicyVmSnapshotReattempts:BackupPolicyVmSnapshotReattempts",
                        "description": "Amount of reattempts that should be performed while trying to make snapshot.\n"
                    },
                    "vssProvider": {
                        "type": "string",
                        "description": "Settings for the volume shadow copy service. Available values are: `NATIVE`, `TARGET_SYSTEM_DEFINED`. Default `NATIVE`.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/backupPolicyBindings:BackupPolicyBindings": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag is specifies whether the policy application is enabled. May be `false` if Processing flag is `true`.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Compute Cloud instance ID.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Backup Policy ID.\n"
                },
                "processing": {
                    "type": "boolean",
                    "description": "Flag that specifies whether the policy is in the process of binding to an instance.\n"
                }
            },
            "required": [
                "createdAt",
                "enabled",
                "instanceId",
                "policyId",
                "processing"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Compute Cloud instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "policyId": {
                    "type": "string",
                    "description": "Backup Policy ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BackupPolicyBindings resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Flag is specifies whether the policy application is enabled. May be `false` if Processing flag is `true`.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Compute Cloud instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Backup Policy ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "processing": {
                        "type": "boolean",
                        "description": "Flag that specifies whether the policy is in the process of binding to an instance.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/cdnOriginGroup:CdnOriginGroup": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/CdnOriginGroupOrigin:CdnOriginGroupOrigin"
                    },
                    "description": "A set of available origins, an origins group must contain at least one enabled origin with fields below.\n"
                },
                "useNext": {
                    "type": "boolean",
                    "description": "If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from\nthe list.\n"
                }
            },
            "required": [
                "folderId",
                "name",
                "origins"
            ],
            "inputProperties": {
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/CdnOriginGroupOrigin:CdnOriginGroupOrigin"
                    },
                    "description": "A set of available origins, an origins group must contain at least one enabled origin with fields below.\n"
                },
                "useNext": {
                    "type": "boolean",
                    "description": "If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from\nthe list.\n"
                }
            },
            "requiredInputs": [
                "origins"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CdnOriginGroup resources.\n",
                "properties": {
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/CdnOriginGroupOrigin:CdnOriginGroupOrigin"
                        },
                        "description": "A set of available origins, an origins group must contain at least one enabled origin with fields below.\n"
                    },
                    "useNext": {
                        "type": "boolean",
                        "description": "If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from\nthe list.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/cdnResource:CdnResource": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.\n"
                },
                "cname": {
                    "type": "string",
                    "description": "CDN endpoint CNAME, must be unique among resources.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "options": {
                    "$ref": "#/types/yandex:index/CdnResourceOptions:CdnResourceOptions",
                    "description": "CDN Resource settings and options to tune CDN edge behavior.\n"
                },
                "originGroupId": {
                    "type": "integer"
                },
                "originGroupName": {
                    "type": "string"
                },
                "originProtocol": {
                    "type": "string"
                },
                "providerCname": {
                    "type": "string",
                    "description": "Provider CNAME of CDN resource, computed value for read and update operations.\n"
                },
                "secondaryHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of secondary hostname strings.\n"
                },
                "sslCertificate": {
                    "$ref": "#/types/yandex:index/CdnResourceSslCertificate:CdnResourceSslCertificate",
                    "description": "SSL certificate of CDN resource.\n"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "cname",
                "createdAt",
                "folderId",
                "options",
                "providerCname",
                "sslCertificate",
                "updatedAt"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.\n"
                },
                "cname": {
                    "type": "string",
                    "description": "CDN endpoint CNAME, must be unique among resources.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "options": {
                    "$ref": "#/types/yandex:index/CdnResourceOptions:CdnResourceOptions",
                    "description": "CDN Resource settings and options to tune CDN edge behavior.\n"
                },
                "originGroupId": {
                    "type": "integer"
                },
                "originGroupName": {
                    "type": "string"
                },
                "originProtocol": {
                    "type": "string"
                },
                "secondaryHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of secondary hostname strings.\n"
                },
                "sslCertificate": {
                    "$ref": "#/types/yandex:index/CdnResourceSslCertificate:CdnResourceSslCertificate",
                    "description": "SSL certificate of CDN resource.\n"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CdnResource resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Flag to create Resource either in active or disabled state. `True` - the content from CDN is available to clients.\n"
                    },
                    "cname": {
                        "type": "string",
                        "description": "CDN endpoint CNAME, must be unique among resources.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "options": {
                        "$ref": "#/types/yandex:index/CdnResourceOptions:CdnResourceOptions",
                        "description": "CDN Resource settings and options to tune CDN edge behavior.\n"
                    },
                    "originGroupId": {
                        "type": "integer"
                    },
                    "originGroupName": {
                        "type": "string"
                    },
                    "originProtocol": {
                        "type": "string"
                    },
                    "providerCname": {
                        "type": "string",
                        "description": "Provider CNAME of CDN resource, computed value for read and update operations.\n"
                    },
                    "secondaryHostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of secondary hostname strings.\n"
                    },
                    "sslCertificate": {
                        "$ref": "#/types/yandex:index/CdnResourceSslCertificate:CdnResourceSslCertificate",
                        "description": "SSL certificate of CDN resource.\n"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/cmCertificate:CmCertificate": {
            "properties": {
                "challenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/CmCertificateChallenge:CmCertificateChallenge"
                    },
                    "description": "Array of challenges.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domains for this certificate. Should be specified for managed certificates.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "issuedAt": {
                    "type": "string",
                    "description": "Certificate issue timestamp.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Certificate Issuer.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "managed": {
                    "$ref": "#/types/yandex:index/CmCertificateManaged:CmCertificateManaged",
                    "description": "Managed specification. \u003e Resource creation awaits getting challenges from issue provider.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "notAfter": {
                    "type": "string",
                    "description": "Certificate end valid period.\n"
                },
                "notBefore": {
                    "type": "string",
                    "description": "Certificate start valid period.\n"
                },
                "selfManaged": {
                    "$ref": "#/types/yandex:index/CmCertificateSelfManaged:CmCertificateSelfManaged",
                    "description": "Self-managed specification. \u003e Only one type `private_key` or `private_key_lockbox_secret` should be specified.\n"
                },
                "serial": {
                    "type": "string",
                    "description": "Certificate Serial Number.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Certificate status: `VALIDATING`, `INVALID`, `ISSUED`, `REVOKED`, `RENEWING` or `RENEWAL_FAILED`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Certificate Subject.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Certificate type: `MANAGED` or `IMPORTED`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Certificate update timestamp.\n"
                }
            },
            "required": [
                "challenges",
                "createdAt",
                "folderId",
                "issuedAt",
                "issuer",
                "name",
                "notAfter",
                "notBefore",
                "serial",
                "status",
                "subject",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domains for this certificate. Should be specified for managed certificates.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "managed": {
                    "$ref": "#/types/yandex:index/CmCertificateManaged:CmCertificateManaged",
                    "description": "Managed specification. \u003e Resource creation awaits getting challenges from issue provider.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "selfManaged": {
                    "$ref": "#/types/yandex:index/CmCertificateSelfManaged:CmCertificateSelfManaged",
                    "description": "Self-managed specification. \u003e Only one type `private_key` or `private_key_lockbox_secret` should be specified.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CmCertificate resources.\n",
                "properties": {
                    "challenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/CmCertificateChallenge:CmCertificateChallenge"
                        },
                        "description": "Array of challenges.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Domains for this certificate. Should be specified for managed certificates.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "issuedAt": {
                        "type": "string",
                        "description": "Certificate issue timestamp.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Certificate Issuer.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "managed": {
                        "$ref": "#/types/yandex:index/CmCertificateManaged:CmCertificateManaged",
                        "description": "Managed specification. \u003e Resource creation awaits getting challenges from issue provider.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "notAfter": {
                        "type": "string",
                        "description": "Certificate end valid period.\n"
                    },
                    "notBefore": {
                        "type": "string",
                        "description": "Certificate start valid period.\n"
                    },
                    "selfManaged": {
                        "$ref": "#/types/yandex:index/CmCertificateSelfManaged:CmCertificateSelfManaged",
                        "description": "Self-managed specification. \u003e Only one type `private_key` or `private_key_lockbox_secret` should be specified.\n"
                    },
                    "serial": {
                        "type": "string",
                        "description": "Certificate Serial Number.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Certificate status: `VALIDATING`, `INVALID`, `ISSUED`, `REVOKED`, `RENEWING` or `RENEWAL_FAILED`.\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Certificate Subject.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Certificate type: `MANAGED` or `IMPORTED`.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Certificate update timestamp.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/cmCertificateIamBinding:CmCertificateIamBinding": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The [Certificate](https://yandex.cloud/docs/certificate-manager/) ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "certificateId",
                "members",
                "role"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string",
                    "description": "The [Certificate](https://yandex.cloud/docs/certificate-manager/) ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "certificateId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CmCertificateIamBinding resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "The [Certificate](https://yandex.cloud/docs/certificate-manager/) ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/cmCertificateIamMember:CmCertificateIamMember": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The [Certificate](https://yandex.cloud/docs/certificate-manager/) ID to apply a binding to.\n"
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "certificateId",
                "member",
                "role"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string",
                    "description": "The [Certificate](https://yandex.cloud/docs/certificate-manager/) ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "certificateId",
                "member",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CmCertificateIamMember resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "The [Certificate](https://yandex.cloud/docs/certificate-manager/) ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeDisk:ComputeDisk": {
            "properties": {
                "allowRecreate": {
                    "type": "boolean"
                },
                "blockSize": {
                    "type": "integer",
                    "description": "Block size of the disk, specified in bytes.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskPlacementPolicy": {
                    "$ref": "#/types/yandex:index/ComputeDiskDiskPlacementPolicy:ComputeDiskDiskPlacementPolicy",
                    "description": "Disk placement policy configuration.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hardwareGeneration": {
                    "$ref": "#/types/yandex:index/ComputeDiskHardwareGeneration:ComputeDiskHardwareGeneration",
                    "description": "Hardware generation and its features, which will be applied to the instance when this disk is used as a boot disk.\nProvide this property if you wish to override this value, which otherwise is inherited from the source.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The source image to use for disk creation.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "ID of KMS symmetric key used to encrypt disk.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the\n`image_id` or `snapshot_id` parameter, or specify it alone to create an empty persistent disk. If you specify this field\nalong with `image_id` or `snapshot_id`, the size value must not be less than the size of the source image or the size of\nthe snapshot.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The source snapshot to use for disk creation.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the disk.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of disk to create. Provide this when creating a disk.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "createdAt",
                "diskPlacementPolicy",
                "folderId",
                "hardwareGeneration",
                "name",
                "productIds",
                "status",
                "zone"
            ],
            "inputProperties": {
                "allowRecreate": {
                    "type": "boolean"
                },
                "blockSize": {
                    "type": "integer",
                    "description": "Block size of the disk, specified in bytes.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskPlacementPolicy": {
                    "$ref": "#/types/yandex:index/ComputeDiskDiskPlacementPolicy:ComputeDiskDiskPlacementPolicy",
                    "description": "Disk placement policy configuration.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hardwareGeneration": {
                    "$ref": "#/types/yandex:index/ComputeDiskHardwareGeneration:ComputeDiskHardwareGeneration",
                    "description": "Hardware generation and its features, which will be applied to the instance when this disk is used as a boot disk.\nProvide this property if you wish to override this value, which otherwise is inherited from the source.\n",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "string",
                    "description": "The source image to use for disk creation.\n",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "ID of KMS symmetric key used to encrypt disk.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the\n`image_id` or `snapshot_id` parameter, or specify it alone to create an empty persistent disk. If you specify this field\nalong with `image_id` or `snapshot_id`, the size value must not be less than the size of the source image or the size of\nthe snapshot.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The source snapshot to use for disk creation.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Type of disk to create. Provide this when creating a disk.\n",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeDisk resources.\n",
                "properties": {
                    "allowRecreate": {
                        "type": "boolean"
                    },
                    "blockSize": {
                        "type": "integer",
                        "description": "Block size of the disk, specified in bytes.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "diskPlacementPolicy": {
                        "$ref": "#/types/yandex:index/ComputeDiskDiskPlacementPolicy:ComputeDiskDiskPlacementPolicy",
                        "description": "Disk placement policy configuration.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "hardwareGeneration": {
                        "$ref": "#/types/yandex:index/ComputeDiskHardwareGeneration:ComputeDiskHardwareGeneration",
                        "description": "Hardware generation and its features, which will be applied to the instance when this disk is used as a boot disk.\nProvide this property if you wish to override this value, which otherwise is inherited from the source.\n",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "description": "The source image to use for disk creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "description": "ID of KMS symmetric key used to encrypt disk.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the\n`image_id` or `snapshot_id` parameter, or specify it alone to create an empty persistent disk. If you specify this field\nalong with `image_id` or `snapshot_id`, the size value must not be less than the size of the source image or the size of\nthe snapshot.\n"
                    },
                    "snapshotId": {
                        "type": "string",
                        "description": "The source snapshot to use for disk creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the disk.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of disk to create. Provide this when creating a disk.\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Disk Placement Group.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeDiskPlacementGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Disk Placement Group.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeFilesystem:ComputeFilesystem": {
            "properties": {
                "blockSize": {
                    "type": "integer",
                    "description": "Block size of the filesystem, specified in bytes.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the filesystem, specified in GB.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the filesystem.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of filesystem to create. Type `network-hdd` is set by default.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status",
                "zone"
            ],
            "inputProperties": {
                "blockSize": {
                    "type": "integer",
                    "description": "Block size of the filesystem, specified in bytes.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the filesystem, specified in GB.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of filesystem to create. Type `network-hdd` is set by default.\n",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeFilesystem resources.\n",
                "properties": {
                    "blockSize": {
                        "type": "integer",
                        "description": "Block size of the filesystem, specified in bytes.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the filesystem, specified in GB.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the filesystem.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of filesystem to create. Type `network-hdd` is set by default.\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeGpuCluster:ComputeGpuCluster": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "interconnectType": {
                    "type": "string",
                    "description": "Type of interconnect between nodes to use in GPU cluster. Type `INFINIBAND` is set by default, and it is the only one\navailable at the moment.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the GPU cluster.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "interconnectType": {
                    "type": "string",
                    "description": "Type of interconnect between nodes to use in GPU cluster. Type `INFINIBAND` is set by default, and it is the only one\navailable at the moment.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeGpuCluster resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "interconnectType": {
                        "type": "string",
                        "description": "Type of interconnect between nodes to use in GPU cluster. Type `INFINIBAND` is set by default, and it is the only one\navailable at the moment.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the GPU cluster.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeImage:ComputeImage": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "family": {
                    "type": "string",
                    "description": "The name of the image family to which this image belongs.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hardwareGeneration": {
                    "$ref": "#/types/yandex:index/ComputeImageHardwareGeneration:ComputeImageHardwareGeneration",
                    "description": "Hardware generation and its features, which will be applied to the instance when this image is used for creating a boot\ndisk. Provide this property if you wish to override this value, which otherwise is inherited from the source.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "Minimum size in GB of the disk that will be created from this image.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "osType": {
                    "type": "string",
                    "description": "Operating system type that is contained in the image. Possible values: `LINUX`, `WINDOWS`.\n"
                },
                "pooled": {
                    "type": "boolean",
                    "description": "Optimize the image to create a disk.\n"
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "License IDs that indicate which licenses are attached to this image.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image, specified in GB.\n"
                },
                "sourceDisk": {
                    "type": "string",
                    "description": "The ID of a disk to use as the source of the image. Changing this ID forces a new resource to be created.\n"
                },
                "sourceFamily": {
                    "type": "string",
                    "description": "The name of the family to use as the source of the new image. The ID of the latest image is taken from the\n`standard-images` folder. Changing the family forces a new resource to be created.\n"
                },
                "sourceImage": {
                    "type": "string",
                    "description": "The ID of an existing image to use as the source of the image. Changing this ID forces a new resource to be created.\n"
                },
                "sourceSnapshot": {
                    "type": "string",
                    "description": "The ID of a snapshot to use as the source of the image. Changing this ID forces a new resource to be created.\n"
                },
                "sourceUrl": {
                    "type": "string",
                    "description": "The URL to use as the source of the image. Changing this URL forces a new resource to be created.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the image.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "hardwareGeneration",
                "minDiskSize",
                "name",
                "osType",
                "pooled",
                "productIds",
                "size",
                "sourceDisk",
                "sourceFamily",
                "sourceImage",
                "sourceSnapshot",
                "sourceUrl",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "family": {
                    "type": "string",
                    "description": "The name of the image family to which this image belongs.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "hardwareGeneration": {
                    "$ref": "#/types/yandex:index/ComputeImageHardwareGeneration:ComputeImageHardwareGeneration",
                    "description": "Hardware generation and its features, which will be applied to the instance when this image is used for creating a boot\ndisk. Provide this property if you wish to override this value, which otherwise is inherited from the source.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "Minimum size in GB of the disk that will be created from this image.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "osType": {
                    "type": "string",
                    "description": "Operating system type that is contained in the image. Possible values: `LINUX`, `WINDOWS`.\n",
                    "willReplaceOnChanges": true
                },
                "pooled": {
                    "type": "boolean",
                    "description": "Optimize the image to create a disk.\n",
                    "willReplaceOnChanges": true
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "License IDs that indicate which licenses are attached to this image.\n",
                    "willReplaceOnChanges": true
                },
                "sourceDisk": {
                    "type": "string",
                    "description": "The ID of a disk to use as the source of the image. Changing this ID forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "sourceFamily": {
                    "type": "string",
                    "description": "The name of the family to use as the source of the new image. The ID of the latest image is taken from the\n`standard-images` folder. Changing the family forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "sourceImage": {
                    "type": "string",
                    "description": "The ID of an existing image to use as the source of the image. Changing this ID forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "sourceSnapshot": {
                    "type": "string",
                    "description": "The ID of a snapshot to use as the source of the image. Changing this ID forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "sourceUrl": {
                    "type": "string",
                    "description": "The URL to use as the source of the image. Changing this URL forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeImage resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "The name of the image family to which this image belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "hardwareGeneration": {
                        "$ref": "#/types/yandex:index/ComputeImageHardwareGeneration:ComputeImageHardwareGeneration",
                        "description": "Hardware generation and its features, which will be applied to the instance when this image is used for creating a boot\ndisk. Provide this property if you wish to override this value, which otherwise is inherited from the source.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "minDiskSize": {
                        "type": "integer",
                        "description": "Minimum size in GB of the disk that will be created from this image.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "osType": {
                        "type": "string",
                        "description": "Operating system type that is contained in the image. Possible values: `LINUX`, `WINDOWS`.\n",
                        "willReplaceOnChanges": true
                    },
                    "pooled": {
                        "type": "boolean",
                        "description": "Optimize the image to create a disk.\n",
                        "willReplaceOnChanges": true
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "License IDs that indicate which licenses are attached to this image.\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the image, specified in GB.\n"
                    },
                    "sourceDisk": {
                        "type": "string",
                        "description": "The ID of a disk to use as the source of the image. Changing this ID forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceFamily": {
                        "type": "string",
                        "description": "The name of the family to use as the source of the new image. The ID of the latest image is taken from the\n`standard-images` folder. Changing the family forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceImage": {
                        "type": "string",
                        "description": "The ID of an existing image to use as the source of the image. Changing this ID forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceSnapshot": {
                        "type": "string",
                        "description": "The ID of a snapshot to use as the source of the image. Changing this ID forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceUrl": {
                        "type": "string",
                        "description": "The URL to use as the source of the image. Changing this URL forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the image.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeInstance:ComputeInstance": {
            "properties": {
                "allowRecreate": {
                    "type": "boolean"
                },
                "allowStoppingForUpdate": {
                    "type": "boolean"
                },
                "bootDisk": {
                    "$ref": "#/types/yandex:index/ComputeInstanceBootDisk:ComputeInstanceBootDisk",
                    "description": "The boot disk for the instance. Either `initialize_params` or `disk_id` must be specified.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "filesystems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceFilesystem:ComputeInstanceFilesystem"
                    },
                    "description": "List of filesystems that are attached to the instance.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "fqdn": {
                    "type": "string",
                    "description": "The fully qualified DNS name of this instance.\n"
                },
                "gpuClusterId": {
                    "type": "string",
                    "description": "ID of the GPU cluster to attach this instance to.\n"
                },
                "hardwareGenerations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceHardwareGeneration:ComputeInstanceHardwareGeneration"
                    }
                },
                "hostname": {
                    "type": "string",
                    "description": "Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique\nwithin the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be\n`\u003cid\u003e.auto.internal`. Otherwise FQDN will be `\u003chostname\u003e.\u003cregion_id\u003e.internal`.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "localDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceLocalDisk:ComputeInstanceLocalDisk"
                    },
                    "description": "List of local disks that are attached to the instance. \u003e Local disks are not available for all users by default.\n"
                },
                "maintenanceGracePeriod": {
                    "type": "string",
                    "description": "Time between notification via metadata service and maintenance. E.g., `60s`.\n"
                },
                "maintenancePolicy": {
                    "type": "string",
                    "description": "Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata key/value pairs to make available from within the instance.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/ComputeInstanceMetadataOptions:ComputeInstanceMetadataOptions",
                    "description": "Options allow user to configure access to instance's metadata.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkAccelerationType": {
                    "type": "string",
                    "description": "Type of network acceleration. Can be `standard` or `software_accelerated`. The default is `standard`.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface"
                    },
                    "description": "Networks to attach to the instance. This can be specified multiple times.\n"
                },
                "placementPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstancePlacementPolicy:ComputeInstancePlacementPolicy",
                    "description": "The placement policy configuration.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The type of virtual machine to create.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/ComputeInstanceResources:ComputeInstanceResources",
                    "description": "Compute resources that are allocated for the instance.\n"
                },
                "schedulingPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceSchedulingPolicy:ComputeInstanceSchedulingPolicy",
                    "description": "Scheduling policy configuration.\n"
                },
                "secondaryDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceSecondaryDisk:ComputeInstanceSecondaryDisk"
                    },
                    "description": "A set of disks to attach to the instance. The structure is documented below. \u003e The `allow_stopping_for_update` property\nmust be set to `true` in order to update this structure.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this instance.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "bootDisk",
                "createdAt",
                "folderId",
                "fqdn",
                "gpuClusterId",
                "hardwareGenerations",
                "hostname",
                "maintenanceGracePeriod",
                "maintenancePolicy",
                "metadataOptions",
                "name",
                "networkInterfaces",
                "placementPolicy",
                "resources",
                "schedulingPolicy",
                "serviceAccountId",
                "status",
                "zone"
            ],
            "inputProperties": {
                "allowRecreate": {
                    "type": "boolean"
                },
                "allowStoppingForUpdate": {
                    "type": "boolean"
                },
                "bootDisk": {
                    "$ref": "#/types/yandex:index/ComputeInstanceBootDisk:ComputeInstanceBootDisk",
                    "description": "The boot disk for the instance. Either `initialize_params` or `disk_id` must be specified.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "filesystems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceFilesystem:ComputeInstanceFilesystem"
                    },
                    "description": "List of filesystems that are attached to the instance.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "gpuClusterId": {
                    "type": "string",
                    "description": "ID of the GPU cluster to attach this instance to.\n",
                    "willReplaceOnChanges": true
                },
                "hostname": {
                    "type": "string",
                    "description": "Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique\nwithin the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be\n`\u003cid\u003e.auto.internal`. Otherwise FQDN will be `\u003chostname\u003e.\u003cregion_id\u003e.internal`.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "localDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceLocalDisk:ComputeInstanceLocalDisk"
                    },
                    "description": "List of local disks that are attached to the instance. \u003e Local disks are not available for all users by default.\n"
                },
                "maintenanceGracePeriod": {
                    "type": "string",
                    "description": "Time between notification via metadata service and maintenance. E.g., `60s`.\n"
                },
                "maintenancePolicy": {
                    "type": "string",
                    "description": "Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata key/value pairs to make available from within the instance.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/ComputeInstanceMetadataOptions:ComputeInstanceMetadataOptions",
                    "description": "Options allow user to configure access to instance's metadata.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkAccelerationType": {
                    "type": "string",
                    "description": "Type of network acceleration. Can be `standard` or `software_accelerated`. The default is `standard`.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface"
                    },
                    "description": "Networks to attach to the instance. This can be specified multiple times.\n"
                },
                "placementPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstancePlacementPolicy:ComputeInstancePlacementPolicy",
                    "description": "The placement policy configuration.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The type of virtual machine to create.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/ComputeInstanceResources:ComputeInstanceResources",
                    "description": "Compute resources that are allocated for the instance.\n"
                },
                "schedulingPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceSchedulingPolicy:ComputeInstanceSchedulingPolicy",
                    "description": "Scheduling policy configuration.\n"
                },
                "secondaryDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceSecondaryDisk:ComputeInstanceSecondaryDisk"
                    },
                    "description": "A set of disks to attach to the instance. The structure is documented below. \u003e The `allow_stopping_for_update` property\nmust be set to `true` in order to update this structure.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "bootDisk",
                "networkInterfaces",
                "resources"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeInstance resources.\n",
                "properties": {
                    "allowRecreate": {
                        "type": "boolean"
                    },
                    "allowStoppingForUpdate": {
                        "type": "boolean"
                    },
                    "bootDisk": {
                        "$ref": "#/types/yandex:index/ComputeInstanceBootDisk:ComputeInstanceBootDisk",
                        "description": "The boot disk for the instance. Either `initialize_params` or `disk_id` must be specified.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceFilesystem:ComputeInstanceFilesystem"
                        },
                        "description": "List of filesystems that are attached to the instance.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "The fully qualified DNS name of this instance.\n"
                    },
                    "gpuClusterId": {
                        "type": "string",
                        "description": "ID of the GPU cluster to attach this instance to.\n",
                        "willReplaceOnChanges": true
                    },
                    "hardwareGenerations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceHardwareGeneration:ComputeInstanceHardwareGeneration"
                        }
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique\nwithin the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be\n`\u003cid\u003e.auto.internal`. Otherwise FQDN will be `\u003chostname\u003e.\u003cregion_id\u003e.internal`.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "localDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceLocalDisk:ComputeInstanceLocalDisk"
                        },
                        "description": "List of local disks that are attached to the instance. \u003e Local disks are not available for all users by default.\n"
                    },
                    "maintenanceGracePeriod": {
                        "type": "string",
                        "description": "Time between notification via metadata service and maintenance. E.g., `60s`.\n"
                    },
                    "maintenancePolicy": {
                        "type": "string",
                        "description": "Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata key/value pairs to make available from within the instance.\n"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/ComputeInstanceMetadataOptions:ComputeInstanceMetadataOptions",
                        "description": "Options allow user to configure access to instance's metadata.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkAccelerationType": {
                        "type": "string",
                        "description": "Type of network acceleration. Can be `standard` or `software_accelerated`. The default is `standard`.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceNetworkInterface:ComputeInstanceNetworkInterface"
                        },
                        "description": "Networks to attach to the instance. This can be specified multiple times.\n"
                    },
                    "placementPolicy": {
                        "$ref": "#/types/yandex:index/ComputeInstancePlacementPolicy:ComputeInstancePlacementPolicy",
                        "description": "The placement policy configuration.\n"
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The type of virtual machine to create.\n"
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/ComputeInstanceResources:ComputeInstanceResources",
                        "description": "Compute resources that are allocated for the instance.\n"
                    },
                    "schedulingPolicy": {
                        "$ref": "#/types/yandex:index/ComputeInstanceSchedulingPolicy:ComputeInstanceSchedulingPolicy",
                        "description": "Scheduling policy configuration.\n"
                    },
                    "secondaryDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceSecondaryDisk:ComputeInstanceSecondaryDisk"
                        },
                        "description": "A set of disks to attach to the instance. The structure is documented below. \u003e The `allow_stopping_for_update` property\nmust be set to `true` in order to update this structure.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this instance.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeInstanceGroup:ComputeInstanceGroup": {
            "properties": {
                "allocationPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupAllocationPolicy:ComputeInstanceGroupAllocationPolicy",
                    "description": "The allocation policy of the instance group by zone and region.\n"
                },
                "applicationLoadBalancer": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupApplicationLoadBalancer:ComputeInstanceGroupApplicationLoadBalancer",
                    "description": "Application Load balancing (L7) specifications.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "deployPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupDeployPolicy:ComputeInstanceGroupDeployPolicy",
                    "description": "The deployment policy of the instance group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "healthChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupHealthCheck:ComputeInstanceGroupHealthCheck"
                    },
                    "description": "Health check specifications.\n"
                },
                "instanceTemplate": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplate:ComputeInstanceGroupInstanceTemplate",
                    "description": "The template for creating new instances.\n"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstance:ComputeInstanceGroupInstance"
                    },
                    "description": "Instances block.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "loadBalancer": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupLoadBalancer:ComputeInstanceGroupLoadBalancer",
                    "description": "Load balancing specifications.\n"
                },
                "maxCheckingHealthDuration": {
                    "type": "integer",
                    "description": "Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the\ndeployment policy. Specified in seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "scalePolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicy:ComputeInstanceGroupScalePolicy",
                    "description": "The scaling policy of the instance group. \u003e Either `fixed_scale` or `auto_scale` must be specified.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the instance.\n"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value variables pairs to assign to the instance group.\n"
                }
            },
            "required": [
                "allocationPolicy",
                "createdAt",
                "deployPolicy",
                "folderId",
                "instanceTemplate",
                "instances",
                "name",
                "scalePolicy",
                "serviceAccountId",
                "status"
            ],
            "inputProperties": {
                "allocationPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupAllocationPolicy:ComputeInstanceGroupAllocationPolicy",
                    "description": "The allocation policy of the instance group by zone and region.\n"
                },
                "applicationLoadBalancer": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupApplicationLoadBalancer:ComputeInstanceGroupApplicationLoadBalancer",
                    "description": "Application Load balancing (L7) specifications.\n",
                    "willReplaceOnChanges": true
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "deployPolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupDeployPolicy:ComputeInstanceGroupDeployPolicy",
                    "description": "The deployment policy of the instance group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "healthChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupHealthCheck:ComputeInstanceGroupHealthCheck"
                    },
                    "description": "Health check specifications.\n"
                },
                "instanceTemplate": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplate:ComputeInstanceGroupInstanceTemplate",
                    "description": "The template for creating new instances.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "loadBalancer": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupLoadBalancer:ComputeInstanceGroupLoadBalancer",
                    "description": "Load balancing specifications.\n",
                    "willReplaceOnChanges": true
                },
                "maxCheckingHealthDuration": {
                    "type": "integer",
                    "description": "Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the\ndeployment policy. Specified in seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "scalePolicy": {
                    "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicy:ComputeInstanceGroupScalePolicy",
                    "description": "The scaling policy of the instance group. \u003e Either `fixed_scale` or `auto_scale` must be specified.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value variables pairs to assign to the instance group.\n"
                }
            },
            "requiredInputs": [
                "allocationPolicy",
                "deployPolicy",
                "instanceTemplate",
                "scalePolicy",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeInstanceGroup resources.\n",
                "properties": {
                    "allocationPolicy": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupAllocationPolicy:ComputeInstanceGroupAllocationPolicy",
                        "description": "The allocation policy of the instance group by zone and region.\n"
                    },
                    "applicationLoadBalancer": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupApplicationLoadBalancer:ComputeInstanceGroupApplicationLoadBalancer",
                        "description": "Application Load balancing (L7) specifications.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "deployPolicy": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupDeployPolicy:ComputeInstanceGroupDeployPolicy",
                        "description": "The deployment policy of the instance group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "healthChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceGroupHealthCheck:ComputeInstanceGroupHealthCheck"
                        },
                        "description": "Health check specifications.\n"
                    },
                    "instanceTemplate": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupInstanceTemplate:ComputeInstanceGroupInstanceTemplate",
                        "description": "The template for creating new instances.\n"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ComputeInstanceGroupInstance:ComputeInstanceGroupInstance"
                        },
                        "description": "Instances block.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "loadBalancer": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupLoadBalancer:ComputeInstanceGroupLoadBalancer",
                        "description": "Load balancing specifications.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxCheckingHealthDuration": {
                        "type": "integer",
                        "description": "Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the\ndeployment policy. Specified in seconds.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "scalePolicy": {
                        "$ref": "#/types/yandex:index/ComputeInstanceGroupScalePolicy:ComputeInstanceGroupScalePolicy",
                        "description": "The scaling policy of the instance group. \u003e Either `fixed_scale` or `auto_scale` must be specified.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the instance.\n"
                    },
                    "variables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value variables pairs to assign to the instance group.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computePlacementGroup:ComputePlacementGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "placementStrategyPartitions": {
                    "type": "integer",
                    "description": "A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with\nplacement_strategy_spread).\n"
                },
                "placementStrategySpread": {
                    "type": "boolean",
                    "description": "A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with\nplacement_strategy_partitions).\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "placementStrategyPartitions": {
                    "type": "integer",
                    "description": "A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with\nplacement_strategy_spread).\n"
                },
                "placementStrategySpread": {
                    "type": "boolean",
                    "description": "A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with\nplacement_strategy_partitions).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputePlacementGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "placementStrategyPartitions": {
                        "type": "integer",
                        "description": "A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with\nplacement_strategy_spread).\n"
                    },
                    "placementStrategySpread": {
                        "type": "boolean",
                        "description": "A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with\nplacement_strategy_partitions).\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeSnapshot:ComputeSnapshot": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "Size of the disk when the snapshot was created, specified in GB.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hardwareGeneration": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotHardwareGeneration:ComputeSnapshotHardwareGeneration",
                    "description": "Hardware generation and its features, which will be applied to the instance when this snapshot is used as a boot disk\nsource. Provide this property if you wish to override this value, which otherwise is inherited from the source.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "sourceDiskId": {
                    "type": "string",
                    "description": "ID of the disk to create a snapshot from.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "Size of the snapshot, specified in GB.\n"
                }
            },
            "required": [
                "createdAt",
                "diskSize",
                "folderId",
                "hardwareGeneration",
                "name",
                "sourceDiskId",
                "storageSize"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "hardwareGeneration": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotHardwareGeneration:ComputeSnapshotHardwareGeneration",
                    "description": "Hardware generation and its features, which will be applied to the instance when this snapshot is used as a boot disk\nsource. Provide this property if you wish to override this value, which otherwise is inherited from the source.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "sourceDiskId": {
                    "type": "string",
                    "description": "ID of the disk to create a snapshot from.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "sourceDiskId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeSnapshot resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "Size of the disk when the snapshot was created, specified in GB.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "hardwareGeneration": {
                        "$ref": "#/types/yandex:index/ComputeSnapshotHardwareGeneration:ComputeSnapshotHardwareGeneration",
                        "description": "Hardware generation and its features, which will be applied to the instance when this snapshot is used as a boot disk\nsource. Provide this property if you wish to override this value, which otherwise is inherited from the source.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "sourceDiskId": {
                        "type": "string",
                        "description": "ID of the disk to create a snapshot from.\n",
                        "willReplaceOnChanges": true
                    },
                    "storageSize": {
                        "type": "integer",
                        "description": "Size of the snapshot, specified in GB.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/computeSnapshotSchedule:ComputeSnapshotSchedule": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the disk for snapshot schedule.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "retentionPeriod": {
                    "type": "string",
                    "description": "Time duration applied to snapshots created by this snapshot schedule. This is a signed sequence of decimal numbers, each\nwith optional fraction and a unit suffix. Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Examples:\n`300ms`, `1.5h` or `2h45m`.\n"
                },
                "schedulePolicy": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotScheduleSchedulePolicy:ComputeSnapshotScheduleSchedulePolicy",
                    "description": "Schedule policy of the snapshot schedule.\n"
                },
                "snapshotCount": {
                    "type": "integer",
                    "description": "Maximum number of snapshots for every disk of the snapshot schedule.\n"
                },
                "snapshotSpec": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotScheduleSnapshotSpec:ComputeSnapshotScheduleSnapshotSpec",
                    "description": "Additional attributes for snapshots created by this snapshot schedule.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the snapshot schedule.\n"
                }
            },
            "required": [
                "createdAt",
                "diskIds",
                "folderId",
                "name",
                "schedulePolicy",
                "snapshotSpec",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the disk for snapshot schedule.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "retentionPeriod": {
                    "type": "string",
                    "description": "Time duration applied to snapshots created by this snapshot schedule. This is a signed sequence of decimal numbers, each\nwith optional fraction and a unit suffix. Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Examples:\n`300ms`, `1.5h` or `2h45m`.\n"
                },
                "schedulePolicy": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotScheduleSchedulePolicy:ComputeSnapshotScheduleSchedulePolicy",
                    "description": "Schedule policy of the snapshot schedule.\n"
                },
                "snapshotCount": {
                    "type": "integer",
                    "description": "Maximum number of snapshots for every disk of the snapshot schedule.\n"
                },
                "snapshotSpec": {
                    "$ref": "#/types/yandex:index/ComputeSnapshotScheduleSnapshotSpec:ComputeSnapshotScheduleSnapshotSpec",
                    "description": "Additional attributes for snapshots created by this snapshot schedule.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeSnapshotSchedule resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "diskIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the disk for snapshot schedule.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "retentionPeriod": {
                        "type": "string",
                        "description": "Time duration applied to snapshots created by this snapshot schedule. This is a signed sequence of decimal numbers, each\nwith optional fraction and a unit suffix. Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Examples:\n`300ms`, `1.5h` or `2h45m`.\n"
                    },
                    "schedulePolicy": {
                        "$ref": "#/types/yandex:index/ComputeSnapshotScheduleSchedulePolicy:ComputeSnapshotScheduleSchedulePolicy",
                        "description": "Schedule policy of the snapshot schedule.\n"
                    },
                    "snapshotCount": {
                        "type": "integer",
                        "description": "Maximum number of snapshots for every disk of the snapshot schedule.\n"
                    },
                    "snapshotSpec": {
                        "$ref": "#/types/yandex:index/ComputeSnapshotScheduleSnapshotSpec:ComputeSnapshotScheduleSnapshotSpec",
                        "description": "Additional attributes for snapshots created by this snapshot schedule.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the snapshot schedule.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/containerRegistry:ContainerRegistry": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the registry.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status"
            ],
            "inputProperties": {
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistry resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the registry.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/containerRegistryIamBinding:ContainerRegistryIamBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The [Yandex Container Registry](https://yandex.cloud/docs/container-registry/) ID to apply a binding to.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "members",
                "registryId",
                "role"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The [Yandex Container Registry](https://yandex.cloud/docs/container-registry/) ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "members",
                "registryId",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryIamBinding resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The [Yandex Container Registry](https://yandex.cloud/docs/container-registry/) ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/containerRegistryIpPermission:ContainerRegistryIpPermission": {
            "properties": {
                "pulls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of configured CIDRs, from which `pull` is allowed.\n"
                },
                "pushes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of configured CIDRs, from which `push` is allowed.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The ID of the registry that ip restrictions applied to.\n"
                }
            },
            "required": [
                "registryId"
            ],
            "inputProperties": {
                "pulls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of configured CIDRs, from which `pull` is allowed.\n"
                },
                "pushes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of configured CIDRs, from which `push` is allowed.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The ID of the registry that ip restrictions applied to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "registryId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryIpPermission resources.\n",
                "properties": {
                    "pulls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of configured CIDRs, from which `pull` is allowed.\n"
                    },
                    "pushes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of configured CIDRs, from which `push` is allowed.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The ID of the registry that ip restrictions applied to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/containerRepository:ContainerRepository": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A name of the repository. The name of the repository should start with id of a container registry and match the name of\nthe images that will be pushed in the repository.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "A name of the repository. The name of the repository should start with id of a container registry and match the name of\nthe images that will be pushed in the repository.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRepository resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name of the repository. The name of the repository should start with id of a container registry and match the name of\nthe images that will be pushed in the repository.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/containerRepositoryIamBinding:ContainerRepositoryIamBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "repositoryId": {
                    "type": "string",
                    "description": "The [Yandex Container Repository](https://yandex.cloud/docs/container-registry/concepts/repository) ID to apply a\nbinding to.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "members",
                "repositoryId",
                "role"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "repositoryId": {
                    "type": "string",
                    "description": "The [Yandex Container Repository](https://yandex.cloud/docs/container-registry/concepts/repository) ID to apply a\nbinding to.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "members",
                "repositoryId",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRepositoryIamBinding resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "repositoryId": {
                        "type": "string",
                        "description": "The [Yandex Container Repository](https://yandex.cloud/docs/container-registry/concepts/repository) ID to apply a\nbinding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/containerRepositoryLifecyclePolicy:ContainerRepositoryLifecyclePolicy": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "repositoryId": {
                    "type": "string",
                    "description": "The ID of the repository that the resource belongs to.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ContainerRepositoryLifecyclePolicyRule:ContainerRepositoryLifecyclePolicyRule"
                    },
                    "description": "Repository rules.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of lifecycle policy. Must be `active` or `disabled`.\n"
                }
            },
            "required": [
                "createdAt",
                "description",
                "name",
                "repositoryId",
                "rules",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "repositoryId": {
                    "type": "string",
                    "description": "The ID of the repository that the resource belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ContainerRepositoryLifecyclePolicyRule:ContainerRepositoryLifecyclePolicyRule"
                    },
                    "description": "Repository rules.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of lifecycle policy. Must be `active` or `disabled`.\n"
                }
            },
            "requiredInputs": [
                "repositoryId",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRepositoryLifecyclePolicy resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "repositoryId": {
                        "type": "string",
                        "description": "The ID of the repository that the resource belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ContainerRepositoryLifecyclePolicyRule:ContainerRepositoryLifecyclePolicyRule"
                        },
                        "description": "Repository rules.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of lifecycle policy. Must be `active` or `disabled`.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/dataprocCluster:DataprocCluster": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of\njob driver's process to specified bucket. In order for this to work service account (specified by the\n`service_account_id` argument) should be given permission to create objects within this bucket.\n"
                },
                "clusterConfig": {
                    "$ref": "#/types/yandex:index/DataprocClusterClusterConfig:DataprocClusterClusterConfig",
                    "description": "Configuration and resources for hosts that should be created with the cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of host group IDs to place VMs of the cluster on.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "ID of the cloud logging group for cluster logs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service\naccount should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.\n"
                },
                "uiProxy": {
                    "type": "boolean",
                    "description": "Whether to enable UI Proxy feature.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "clusterConfig",
                "createdAt",
                "deletionProtection",
                "folderId",
                "name",
                "serviceAccountId",
                "zoneId"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of\njob driver's process to specified bucket. In order for this to work service account (specified by the\n`service_account_id` argument) should be given permission to create objects within this bucket.\n"
                },
                "clusterConfig": {
                    "$ref": "#/types/yandex:index/DataprocClusterClusterConfig:DataprocClusterClusterConfig",
                    "description": "Configuration and resources for hosts that should be created with the cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of host group IDs to place VMs of the cluster on.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "ID of the cloud logging group for cluster logs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service\naccount should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.\n"
                },
                "uiProxy": {
                    "type": "boolean",
                    "description": "Whether to enable UI Proxy feature.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterConfig",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DataprocCluster resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of\njob driver's process to specified bucket. In order for this to work service account (specified by the\n`service_account_id` argument) should be given permission to create objects within this bucket.\n"
                    },
                    "clusterConfig": {
                        "$ref": "#/types/yandex:index/DataprocClusterClusterConfig:DataprocClusterClusterConfig",
                        "description": "Configuration and resources for hosts that should be created with the cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of host group IDs to place VMs of the cluster on.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logGroupId": {
                        "type": "string",
                        "description": "ID of the cloud logging group for cluster logs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service\naccount should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.\n"
                    },
                    "uiProxy": {
                        "type": "boolean",
                        "description": "Whether to enable UI Proxy feature.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/datatransferEndpoint:DatatransferEndpoint": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "settings": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettings:DatatransferEndpointSettings",
                    "description": "DataTransfer Endpoint Settings block.\n"
                }
            },
            "required": [
                "description",
                "folderId",
                "labels",
                "name",
                "settings"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "settings": {
                    "$ref": "#/types/yandex:index/DatatransferEndpointSettings:DatatransferEndpointSettings",
                    "description": "DataTransfer Endpoint Settings block.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatatransferEndpoint resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "settings": {
                        "$ref": "#/types/yandex:index/DatatransferEndpointSettings:DatatransferEndpointSettings",
                        "description": "DataTransfer Endpoint Settings block.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/datatransferTransfer:DatatransferTransfer": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "onCreateActivateMode": {
                    "type": "string",
                    "description": "Activation action on create a new incremental transfer. It is not part of the transfer parameter and is used only on\ncreate. One of `sync_activate`, `async_activate`, `dont_activate`. The default is `sync_activate`.\n"
                },
                "runtime": {
                    "$ref": "#/types/yandex:index/DatatransferTransferRuntime:DatatransferTransferRuntime",
                    "description": "Runtime parameters for the transfer.\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "ID of the source endpoint for the transfer.\n"
                },
                "targetId": {
                    "type": "string",
                    "description": "ID of the target endpoint for the transfer.\n"
                },
                "transformation": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformation:DatatransferTransferTransformation",
                    "description": "Transformation for the transfer.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the transfer. One of `SNAPSHOT_ONLY`, `INCREMENT_ONLY`, `SNAPSHOT_AND_INCREMENT`\n"
                },
                "warning": {
                    "type": "string",
                    "description": "Error description if transfer has any errors.\n"
                }
            },
            "required": [
                "description",
                "folderId",
                "labels",
                "name",
                "runtime",
                "sourceId",
                "targetId",
                "type",
                "warning"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "onCreateActivateMode": {
                    "type": "string",
                    "description": "Activation action on create a new incremental transfer. It is not part of the transfer parameter and is used only on\ncreate. One of `sync_activate`, `async_activate`, `dont_activate`. The default is `sync_activate`.\n"
                },
                "runtime": {
                    "$ref": "#/types/yandex:index/DatatransferTransferRuntime:DatatransferTransferRuntime",
                    "description": "Runtime parameters for the transfer.\n"
                },
                "sourceId": {
                    "type": "string",
                    "description": "ID of the source endpoint for the transfer.\n",
                    "willReplaceOnChanges": true
                },
                "targetId": {
                    "type": "string",
                    "description": "ID of the target endpoint for the transfer.\n",
                    "willReplaceOnChanges": true
                },
                "transformation": {
                    "$ref": "#/types/yandex:index/DatatransferTransferTransformation:DatatransferTransferTransformation",
                    "description": "Transformation for the transfer.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the transfer. One of `SNAPSHOT_ONLY`, `INCREMENT_ONLY`, `SNAPSHOT_AND_INCREMENT`\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatatransferTransfer resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "onCreateActivateMode": {
                        "type": "string",
                        "description": "Activation action on create a new incremental transfer. It is not part of the transfer parameter and is used only on\ncreate. One of `sync_activate`, `async_activate`, `dont_activate`. The default is `sync_activate`.\n"
                    },
                    "runtime": {
                        "$ref": "#/types/yandex:index/DatatransferTransferRuntime:DatatransferTransferRuntime",
                        "description": "Runtime parameters for the transfer.\n"
                    },
                    "sourceId": {
                        "type": "string",
                        "description": "ID of the source endpoint for the transfer.\n",
                        "willReplaceOnChanges": true
                    },
                    "targetId": {
                        "type": "string",
                        "description": "ID of the target endpoint for the transfer.\n",
                        "willReplaceOnChanges": true
                    },
                    "transformation": {
                        "$ref": "#/types/yandex:index/DatatransferTransferTransformation:DatatransferTransferTransformation",
                        "description": "Transformation for the transfer.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the transfer. One of `SNAPSHOT_ONLY`, `INCREMENT_ONLY`, `SNAPSHOT_AND_INCREMENT`\n",
                        "willReplaceOnChanges": true
                    },
                    "warning": {
                        "type": "string",
                        "description": "Error description if transfer has any errors.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/dnsRecordset:DnsRecordset": {
            "properties": {
                "datas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The string data for the records in this record set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DNS name this record set will apply to.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time-to-live of this record set (seconds).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The DNS record set type.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The id of the zone in which this record set will reside.\n"
                }
            },
            "required": [
                "datas",
                "name",
                "ttl",
                "type",
                "zoneId"
            ],
            "inputProperties": {
                "datas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The string data for the records in this record set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The DNS name this record set will apply to.\n",
                    "willReplaceOnChanges": true
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time-to-live of this record set (seconds).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The DNS record set type.\n",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "description": "The id of the zone in which this record set will reside.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "datas",
                "ttl",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecordset resources.\n",
                "properties": {
                    "datas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The string data for the records in this record set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The DNS name this record set will apply to.\n",
                        "willReplaceOnChanges": true
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The time-to-live of this record set (seconds).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The DNS record set type.\n",
                        "willReplaceOnChanges": true
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The id of the zone in which this record set will reside.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/dnsZone:DnsZone": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "privateNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.\n"
                },
                "public": {
                    "type": "boolean",
                    "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private\nCloud resources.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The DNS name of this zone, e.g. `example.com.`. Must ends with dot.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "privateNetworks",
                "public",
                "zone"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "privateNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.\n"
                },
                "public": {
                    "type": "boolean",
                    "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private\nCloud resources.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The DNS name of this zone, e.g. `example.com.`. Must ends with dot.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "privateNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.\n"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private\nCloud resources.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The DNS name of this zone, e.g. `example.com.`. Must ends with dot.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/dnsZoneIamBinding:DnsZoneIamBinding": {
            "properties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "The [DNS](https://yandex.cloud/docs/dns/) Zone ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "dnsZoneId",
                "members",
                "role"
            ],
            "inputProperties": {
                "dnsZoneId": {
                    "type": "string",
                    "description": "The [DNS](https://yandex.cloud/docs/dns/) Zone ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "dnsZoneId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZoneIamBinding resources.\n",
                "properties": {
                    "dnsZoneId": {
                        "type": "string",
                        "description": "The [DNS](https://yandex.cloud/docs/dns/) Zone ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/function:Function": {
            "properties": {
                "asyncInvocation": {
                    "$ref": "#/types/yandex:index/FunctionAsyncInvocation:FunctionAsyncInvocation",
                    "description": "Config for asynchronous invocations of Yandex Cloud Function.\n"
                },
                "concurrency": {
                    "type": "integer",
                    "description": "The maximum number of requests processed by a function instance at the same time.\n"
                },
                "connectivity": {
                    "$ref": "#/types/yandex:index/FunctionConnectivity:FunctionConnectivity",
                    "description": "Function version connectivity. If specified the version will be attached to specified network.\n"
                },
                "content": {
                    "$ref": "#/types/yandex:index/FunctionContent:FunctionContent",
                    "description": "Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section. Either\n`package` or `content` section must be specified.\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "entrypoint": {
                    "type": "string",
                    "description": "Entrypoint for Yandex Cloud Function.\n"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).\n"
                },
                "executionTimeout": {
                    "type": "string",
                    "description": "Execution timeout in seconds for Yandex Cloud Function.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "imageSize": {
                    "type": "integer",
                    "description": "Image size for Yandex Cloud Function.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/FunctionLogOptions:FunctionLogOptions",
                    "description": "Options for logging from Yandex Cloud Function.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/FunctionMetadataOptions:FunctionMetadataOptions",
                    "description": "Options set the access mode to function's metadata endpoints.\n"
                },
                "mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionMount:FunctionMount"
                    },
                    "description": "Mounts for Yandex Cloud Function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "package": {
                    "$ref": "#/types/yandex:index/FunctionPackage:FunctionPackage",
                    "description": "Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section. Either\n`package` or `content` section must be specified.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "Runtime for Yandex Cloud Function.\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionSecret:FunctionSecret"
                    },
                    "description": "Secrets for Yandex Cloud Function.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "storageMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionStorageMount:FunctionStorageMount"
                    },
                    "description": "(**DEPRECATED**, use `mounts \u003e object_storage` instead). Storage mounts for Yandex Cloud Function.\n",
                    "deprecationMessage": "The 'storage_mounts' field has been deprecated. Please use 'mounts' instead."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for Yandex Cloud Function. Tag `$latest` isn't returned.\n"
                },
                "tmpfsSize": {
                    "type": "integer",
                    "description": "Tmpfs size for Yandex Cloud Function.\n"
                },
                "userHash": {
                    "type": "string",
                    "description": "User-defined string for current function version. User must change this string any times when function changed. Function\nwill be updated when hash is changed.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Yandex Cloud Function.\n"
                }
            },
            "required": [
                "concurrency",
                "createdAt",
                "entrypoint",
                "executionTimeout",
                "folderId",
                "imageSize",
                "memory",
                "metadataOptions",
                "mounts",
                "name",
                "runtime",
                "secrets",
                "storageMounts",
                "tags",
                "tmpfsSize",
                "userHash",
                "version"
            ],
            "inputProperties": {
                "asyncInvocation": {
                    "$ref": "#/types/yandex:index/FunctionAsyncInvocation:FunctionAsyncInvocation",
                    "description": "Config for asynchronous invocations of Yandex Cloud Function.\n"
                },
                "concurrency": {
                    "type": "integer",
                    "description": "The maximum number of requests processed by a function instance at the same time.\n"
                },
                "connectivity": {
                    "$ref": "#/types/yandex:index/FunctionConnectivity:FunctionConnectivity",
                    "description": "Function version connectivity. If specified the version will be attached to specified network.\n"
                },
                "content": {
                    "$ref": "#/types/yandex:index/FunctionContent:FunctionContent",
                    "description": "Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section. Either\n`package` or `content` section must be specified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "entrypoint": {
                    "type": "string",
                    "description": "Entrypoint for Yandex Cloud Function.\n"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).\n"
                },
                "executionTimeout": {
                    "type": "string",
                    "description": "Execution timeout in seconds for Yandex Cloud Function.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/FunctionLogOptions:FunctionLogOptions",
                    "description": "Options for logging from Yandex Cloud Function.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/FunctionMetadataOptions:FunctionMetadataOptions",
                    "description": "Options set the access mode to function's metadata endpoints.\n"
                },
                "mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionMount:FunctionMount"
                    },
                    "description": "Mounts for Yandex Cloud Function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "package": {
                    "$ref": "#/types/yandex:index/FunctionPackage:FunctionPackage",
                    "description": "Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section. Either\n`package` or `content` section must be specified.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "Runtime for Yandex Cloud Function.\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionSecret:FunctionSecret"
                    },
                    "description": "Secrets for Yandex Cloud Function.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "storageMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionStorageMount:FunctionStorageMount"
                    },
                    "description": "(**DEPRECATED**, use `mounts \u003e object_storage` instead). Storage mounts for Yandex Cloud Function.\n",
                    "deprecationMessage": "The 'storage_mounts' field has been deprecated. Please use 'mounts' instead."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for Yandex Cloud Function. Tag `$latest` isn't returned.\n"
                },
                "tmpfsSize": {
                    "type": "integer",
                    "description": "Tmpfs size for Yandex Cloud Function.\n"
                },
                "userHash": {
                    "type": "string",
                    "description": "User-defined string for current function version. User must change this string any times when function changed. Function\nwill be updated when hash is changed.\n"
                }
            },
            "requiredInputs": [
                "entrypoint",
                "memory",
                "runtime",
                "userHash"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Function resources.\n",
                "properties": {
                    "asyncInvocation": {
                        "$ref": "#/types/yandex:index/FunctionAsyncInvocation:FunctionAsyncInvocation",
                        "description": "Config for asynchronous invocations of Yandex Cloud Function.\n"
                    },
                    "concurrency": {
                        "type": "integer",
                        "description": "The maximum number of requests processed by a function instance at the same time.\n"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/FunctionConnectivity:FunctionConnectivity",
                        "description": "Function version connectivity. If specified the version will be attached to specified network.\n"
                    },
                    "content": {
                        "$ref": "#/types/yandex:index/FunctionContent:FunctionContent",
                        "description": "Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section. Either\n`package` or `content` section must be specified.\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "entrypoint": {
                        "type": "string",
                        "description": "Entrypoint for Yandex Cloud Function.\n"
                    },
                    "environment": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).\n"
                    },
                    "executionTimeout": {
                        "type": "string",
                        "description": "Execution timeout in seconds for Yandex Cloud Function.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "imageSize": {
                        "type": "integer",
                        "description": "Image size for Yandex Cloud Function.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logOptions": {
                        "$ref": "#/types/yandex:index/FunctionLogOptions:FunctionLogOptions",
                        "description": "Options for logging from Yandex Cloud Function.\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function.\n"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/FunctionMetadataOptions:FunctionMetadataOptions",
                        "description": "Options set the access mode to function's metadata endpoints.\n"
                    },
                    "mounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/FunctionMount:FunctionMount"
                        },
                        "description": "Mounts for Yandex Cloud Function.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "package": {
                        "$ref": "#/types/yandex:index/FunctionPackage:FunctionPackage",
                        "description": "Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section. Either\n`package` or `content` section must be specified.\n"
                    },
                    "runtime": {
                        "type": "string",
                        "description": "Runtime for Yandex Cloud Function.\n"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/FunctionSecret:FunctionSecret"
                        },
                        "description": "Secrets for Yandex Cloud Function.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "storageMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/FunctionStorageMount:FunctionStorageMount"
                        },
                        "description": "(**DEPRECATED**, use `mounts \u003e object_storage` instead). Storage mounts for Yandex Cloud Function.\n",
                        "deprecationMessage": "The 'storage_mounts' field has been deprecated. Please use 'mounts' instead."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for Yandex Cloud Function. Tag `$latest` isn't returned.\n"
                    },
                    "tmpfsSize": {
                        "type": "integer",
                        "description": "Tmpfs size for Yandex Cloud Function.\n"
                    },
                    "userHash": {
                        "type": "string",
                        "description": "User-defined string for current function version. User must change this string any times when function changed. Function\nwill be updated when hash is changed.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of Yandex Cloud Function.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/functionIamBinding:FunctionIamBinding": {
            "properties": {
                "functionId": {
                    "type": "string",
                    "description": "The [Yandex Cloud Function](https://yandex.cloud/docs/functions/) ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "functionId",
                "members",
                "role"
            ],
            "inputProperties": {
                "functionId": {
                    "type": "string",
                    "description": "The [Yandex Cloud Function](https://yandex.cloud/docs/functions/) ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "functionId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FunctionIamBinding resources.\n",
                "properties": {
                    "functionId": {
                        "type": "string",
                        "description": "The [Yandex Cloud Function](https://yandex.cloud/docs/functions/) ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/functionScalingPolicy:FunctionScalingPolicy": {
            "properties": {
                "functionId": {
                    "type": "string",
                    "description": "Yandex Cloud Function id used to define function.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionScalingPolicyPolicy:FunctionScalingPolicyPolicy"
                    },
                    "description": "List definition for Yandex Cloud Function scaling policies.\n"
                }
            },
            "required": [
                "functionId"
            ],
            "inputProperties": {
                "functionId": {
                    "type": "string",
                    "description": "Yandex Cloud Function id used to define function.\n",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/FunctionScalingPolicyPolicy:FunctionScalingPolicyPolicy"
                    },
                    "description": "List definition for Yandex Cloud Function scaling policies.\n"
                }
            },
            "requiredInputs": [
                "functionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FunctionScalingPolicy resources.\n",
                "properties": {
                    "functionId": {
                        "type": "string",
                        "description": "Yandex Cloud Function id used to define function.\n",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/FunctionScalingPolicyPolicy:FunctionScalingPolicyPolicy"
                        },
                        "description": "List definition for Yandex Cloud Function scaling policies.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/functionTrigger:FunctionTrigger": {
            "properties": {
                "container": {
                    "$ref": "#/types/yandex:index/FunctionTriggerContainer:FunctionTriggerContainer",
                    "description": "[Yandex Cloud Serverless Container](https://yandex.cloud/docs/serverless-containers/concepts/container) settings\ndefinition for Yandex Cloud Functions Trigger.\n"
                },
                "containerRegistry": {
                    "$ref": "#/types/yandex:index/FunctionTriggerContainerRegistry:FunctionTriggerContainerRegistry",
                    "description": "[Container Registry](https://yandex.cloud/docs/functions/concepts/trigger/cr-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "dataStreams": {
                    "$ref": "#/types/yandex:index/FunctionTriggerDataStreams:FunctionTriggerDataStreams",
                    "description": "[Data Streams](https://yandex.cloud/docs/functions/concepts/trigger/data-streams-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dlq": {
                    "$ref": "#/types/yandex:index/FunctionTriggerDlq:FunctionTriggerDlq",
                    "description": "Dead Letter Queue (DLQ) settings definition for Yandex Cloud Functions Trigger.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "function": {
                    "$ref": "#/types/yandex:index/FunctionTriggerFunction:FunctionTriggerFunction",
                    "description": "[Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) settings definition for Yandex Cloud\nFunctions Trigger.\n"
                },
                "iot": {
                    "$ref": "#/types/yandex:index/FunctionTriggerIot:FunctionTriggerIot",
                    "description": "[IoT](https://yandex.cloud/docs/functions/concepts/trigger/iot-core-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present. Only one section `iot` or `message_queue`.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logGroup": {
                    "$ref": "#/types/yandex:index/FunctionTriggerLogGroup:FunctionTriggerLogGroup"
                },
                "logging": {
                    "$ref": "#/types/yandex:index/FunctionTriggerLogging:FunctionTriggerLogging",
                    "description": "[Logging](https://yandex.cloud/docs/functions/concepts/trigger/cloud-logging-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n"
                },
                "mail": {
                    "$ref": "#/types/yandex:index/FunctionTriggerMail:FunctionTriggerMail",
                    "description": "[Mail](https://yandex.cloud/docs/functions/concepts/trigger/mail-trigger) settings definition for Yandex Cloud Functions\nTrigger, if present.\n"
                },
                "messageQueue": {
                    "$ref": "#/types/yandex:index/FunctionTriggerMessageQueue:FunctionTriggerMessageQueue",
                    "description": "[Message Queue](https://yandex.cloud/docs/functions/concepts/trigger/ymq-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/FunctionTriggerObjectStorage:FunctionTriggerObjectStorage",
                    "description": "[Object Storage](https://yandex.cloud/docs/functions/concepts/trigger/os-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present.\n"
                },
                "timer": {
                    "$ref": "#/types/yandex:index/FunctionTriggerTimer:FunctionTriggerTimer",
                    "description": "[Timer](https://yandex.cloud/docs/functions/concepts/trigger/timer) settings definition for Yandex Cloud Functions\nTrigger, if present.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "container": {
                    "$ref": "#/types/yandex:index/FunctionTriggerContainer:FunctionTriggerContainer",
                    "description": "[Yandex Cloud Serverless Container](https://yandex.cloud/docs/serverless-containers/concepts/container) settings\ndefinition for Yandex Cloud Functions Trigger.\n",
                    "willReplaceOnChanges": true
                },
                "containerRegistry": {
                    "$ref": "#/types/yandex:index/FunctionTriggerContainerRegistry:FunctionTriggerContainerRegistry",
                    "description": "[Container Registry](https://yandex.cloud/docs/functions/concepts/trigger/cr-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n",
                    "willReplaceOnChanges": true
                },
                "dataStreams": {
                    "$ref": "#/types/yandex:index/FunctionTriggerDataStreams:FunctionTriggerDataStreams",
                    "description": "[Data Streams](https://yandex.cloud/docs/functions/concepts/trigger/data-streams-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dlq": {
                    "$ref": "#/types/yandex:index/FunctionTriggerDlq:FunctionTriggerDlq",
                    "description": "Dead Letter Queue (DLQ) settings definition for Yandex Cloud Functions Trigger.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "function": {
                    "$ref": "#/types/yandex:index/FunctionTriggerFunction:FunctionTriggerFunction",
                    "description": "[Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) settings definition for Yandex Cloud\nFunctions Trigger.\n",
                    "willReplaceOnChanges": true
                },
                "iot": {
                    "$ref": "#/types/yandex:index/FunctionTriggerIot:FunctionTriggerIot",
                    "description": "[IoT](https://yandex.cloud/docs/functions/concepts/trigger/iot-core-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present. Only one section `iot` or `message_queue`.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logGroup": {
                    "$ref": "#/types/yandex:index/FunctionTriggerLogGroup:FunctionTriggerLogGroup",
                    "willReplaceOnChanges": true
                },
                "logging": {
                    "$ref": "#/types/yandex:index/FunctionTriggerLogging:FunctionTriggerLogging",
                    "description": "[Logging](https://yandex.cloud/docs/functions/concepts/trigger/cloud-logging-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n",
                    "willReplaceOnChanges": true
                },
                "mail": {
                    "$ref": "#/types/yandex:index/FunctionTriggerMail:FunctionTriggerMail",
                    "description": "[Mail](https://yandex.cloud/docs/functions/concepts/trigger/mail-trigger) settings definition for Yandex Cloud Functions\nTrigger, if present.\n",
                    "willReplaceOnChanges": true
                },
                "messageQueue": {
                    "$ref": "#/types/yandex:index/FunctionTriggerMessageQueue:FunctionTriggerMessageQueue",
                    "description": "[Message Queue](https://yandex.cloud/docs/functions/concepts/trigger/ymq-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/FunctionTriggerObjectStorage:FunctionTriggerObjectStorage",
                    "description": "[Object Storage](https://yandex.cloud/docs/functions/concepts/trigger/os-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present.\n",
                    "willReplaceOnChanges": true
                },
                "timer": {
                    "$ref": "#/types/yandex:index/FunctionTriggerTimer:FunctionTriggerTimer",
                    "description": "[Timer](https://yandex.cloud/docs/functions/concepts/trigger/timer) settings definition for Yandex Cloud Functions\nTrigger, if present.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FunctionTrigger resources.\n",
                "properties": {
                    "container": {
                        "$ref": "#/types/yandex:index/FunctionTriggerContainer:FunctionTriggerContainer",
                        "description": "[Yandex Cloud Serverless Container](https://yandex.cloud/docs/serverless-containers/concepts/container) settings\ndefinition for Yandex Cloud Functions Trigger.\n",
                        "willReplaceOnChanges": true
                    },
                    "containerRegistry": {
                        "$ref": "#/types/yandex:index/FunctionTriggerContainerRegistry:FunctionTriggerContainerRegistry",
                        "description": "[Container Registry](https://yandex.cloud/docs/functions/concepts/trigger/cr-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "dataStreams": {
                        "$ref": "#/types/yandex:index/FunctionTriggerDataStreams:FunctionTriggerDataStreams",
                        "description": "[Data Streams](https://yandex.cloud/docs/functions/concepts/trigger/data-streams-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "dlq": {
                        "$ref": "#/types/yandex:index/FunctionTriggerDlq:FunctionTriggerDlq",
                        "description": "Dead Letter Queue (DLQ) settings definition for Yandex Cloud Functions Trigger.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "function": {
                        "$ref": "#/types/yandex:index/FunctionTriggerFunction:FunctionTriggerFunction",
                        "description": "[Yandex Cloud Function](https://yandex.cloud/docs/functions/concepts/function) settings definition for Yandex Cloud\nFunctions Trigger.\n",
                        "willReplaceOnChanges": true
                    },
                    "iot": {
                        "$ref": "#/types/yandex:index/FunctionTriggerIot:FunctionTriggerIot",
                        "description": "[IoT](https://yandex.cloud/docs/functions/concepts/trigger/iot-core-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present. Only one section `iot` or `message_queue`.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logGroup": {
                        "$ref": "#/types/yandex:index/FunctionTriggerLogGroup:FunctionTriggerLogGroup",
                        "willReplaceOnChanges": true
                    },
                    "logging": {
                        "$ref": "#/types/yandex:index/FunctionTriggerLogging:FunctionTriggerLogging",
                        "description": "[Logging](https://yandex.cloud/docs/functions/concepts/trigger/cloud-logging-trigger) settings definition for Yandex\nCloud Functions Trigger, if present.\n",
                        "willReplaceOnChanges": true
                    },
                    "mail": {
                        "$ref": "#/types/yandex:index/FunctionTriggerMail:FunctionTriggerMail",
                        "description": "[Mail](https://yandex.cloud/docs/functions/concepts/trigger/mail-trigger) settings definition for Yandex Cloud Functions\nTrigger, if present.\n",
                        "willReplaceOnChanges": true
                    },
                    "messageQueue": {
                        "$ref": "#/types/yandex:index/FunctionTriggerMessageQueue:FunctionTriggerMessageQueue",
                        "description": "[Message Queue](https://yandex.cloud/docs/functions/concepts/trigger/ymq-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "objectStorage": {
                        "$ref": "#/types/yandex:index/FunctionTriggerObjectStorage:FunctionTriggerObjectStorage",
                        "description": "[Object Storage](https://yandex.cloud/docs/functions/concepts/trigger/os-trigger) settings definition for Yandex Cloud\nFunctions Trigger, if present.\n",
                        "willReplaceOnChanges": true
                    },
                    "timer": {
                        "$ref": "#/types/yandex:index/FunctionTriggerTimer:FunctionTriggerTimer",
                        "description": "[Timer](https://yandex.cloud/docs/functions/concepts/trigger/timer) settings definition for Yandex Cloud Functions\nTrigger, if present.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccount:IamServiceAccount": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccount resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccountApiKey:IamServiceAccountApiKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "encryptedSecretKey": {
                    "type": "string",
                    "description": "The encrypted secret key, base64 encoded. This is only populated when `pgp_key` is supplied.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The key will be no longer valid after expiration timestamp.\n"
                },
                "keyFingerprint": {
                    "type": "string",
                    "description": "The fingerprint of the PGP key used to encrypt the secret key. This is only populated when `pgp_key` is supplied.\n"
                },
                "outputToLockbox": {
                    "$ref": "#/types/yandex:index/IamServiceAccountApiKeyOutputToLockbox:IamServiceAccountApiKeyOutputToLockbox",
                    "description": "option to create a Lockbox secret version from sensitive outputs\n"
                },
                "outputToLockboxVersionId": {
                    "type": "string",
                    "description": "ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when\n`output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when\n`output_to_lockbox` is removed.\n"
                },
                "pgpKey": {
                    "type": "string",
                    "description": "An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase\nusername in the form `keybase:keybaseusername`.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the key.\n",
                    "deprecationMessage": "Attribute `scope` deprecated and will be removed in the next major version of the provider. Use attribute `scopes` instead."
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes of the key.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key. This is only populated when neither `pgp_key` nor `output_to_lockbox` are provided.\n",
                    "secret": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account to an API key for.\n"
                }
            },
            "required": [
                "createdAt",
                "encryptedSecretKey",
                "keyFingerprint",
                "outputToLockboxVersionId",
                "scopes",
                "secretKey",
                "serviceAccountId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The key will be no longer valid after expiration timestamp.\n"
                },
                "outputToLockbox": {
                    "$ref": "#/types/yandex:index/IamServiceAccountApiKeyOutputToLockbox:IamServiceAccountApiKeyOutputToLockbox",
                    "description": "option to create a Lockbox secret version from sensitive outputs\n"
                },
                "pgpKey": {
                    "type": "string",
                    "description": "An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase\nusername in the form `keybase:keybaseusername`.\n",
                    "willReplaceOnChanges": true
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the key.\n",
                    "deprecationMessage": "Attribute `scope` deprecated and will be removed in the next major version of the provider. Use attribute `scopes` instead."
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of scopes of the key.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account to an API key for.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccountApiKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "encryptedSecretKey": {
                        "type": "string",
                        "description": "The encrypted secret key, base64 encoded. This is only populated when `pgp_key` is supplied.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The key will be no longer valid after expiration timestamp.\n"
                    },
                    "keyFingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the PGP key used to encrypt the secret key. This is only populated when `pgp_key` is supplied.\n"
                    },
                    "outputToLockbox": {
                        "$ref": "#/types/yandex:index/IamServiceAccountApiKeyOutputToLockbox:IamServiceAccountApiKeyOutputToLockbox",
                        "description": "option to create a Lockbox secret version from sensitive outputs\n"
                    },
                    "outputToLockboxVersionId": {
                        "type": "string",
                        "description": "ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when\n`output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when\n`output_to_lockbox` is removed.\n"
                    },
                    "pgpKey": {
                        "type": "string",
                        "description": "An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase\nusername in the form `keybase:keybaseusername`.\n",
                        "willReplaceOnChanges": true
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of the key.\n",
                        "deprecationMessage": "Attribute `scope` deprecated and will be removed in the next major version of the provider. Use attribute `scopes` instead."
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of scopes of the key.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The secret key. This is only populated when neither `pgp_key` nor `output_to_lockbox` are provided.\n",
                        "secret": true
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "ID of the service account to an API key for.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccountIamBinding:IamServiceAccountIamBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The service account ID to apply a binding to.\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "members",
                "role",
                "serviceAccountId"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The service account ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "members",
                "role",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccountIamBinding resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "The service account ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccountIamMember:IamServiceAccountIamMember": {
            "properties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The service account ID to apply a binding to.\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "member",
                "role",
                "serviceAccountId"
            ],
            "inputProperties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The service account ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "member",
                "role",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccountIamMember resources.\n",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "The service account ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccountIamPolicy:IamServiceAccountIamPolicy": {
            "properties": {
                "policyData": {
                    "type": "string",
                    "description": "Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The service account ID to apply a binding to.\n"
                }
            },
            "required": [
                "policyData",
                "serviceAccountId"
            ],
            "inputProperties": {
                "policyData": {
                    "type": "string",
                    "description": "Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The service account ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policyData",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccountIamPolicy resources.\n",
                "properties": {
                    "policyData": {
                        "type": "string",
                        "description": "Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "The service account ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccountKey:IamServiceAccountKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "encryptedPrivateKey": {
                    "type": "string",
                    "description": "The encrypted private key, base64 encoded. This is only populated when `pgp_key` is supplied.\n"
                },
                "format": {
                    "type": "string",
                    "description": "The output format of the keys. `PEM_FILE` is the default format.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The algorithm used to generate the key. `RSA_2048` is the default algorithm. Valid values are listed in the [API\nreference](https://yandex.cloud/docs/iam/api-ref/Key).\n"
                },
                "keyFingerprint": {
                    "type": "string",
                    "description": "The fingerprint of the PGP key used to encrypt the private key. This is only populated when `pgp_key` is supplied.\n"
                },
                "outputToLockbox": {
                    "$ref": "#/types/yandex:index/IamServiceAccountKeyOutputToLockbox:IamServiceAccountKeyOutputToLockbox",
                    "description": "option to create a Lockbox secret version from sensitive outputs\n"
                },
                "outputToLockboxVersionId": {
                    "type": "string",
                    "description": "ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when\n`output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when\n`output_to_lockbox` is removed.\n"
                },
                "pgpKey": {
                    "type": "string",
                    "description": "An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a\nkeybase username in the form `keybase:keybaseusername`.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key. This is only populated when neither `pgp_key` nor `output_to_lockbox` are provided.\n",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public key.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account to create a pair for.\n"
                }
            },
            "required": [
                "createdAt",
                "encryptedPrivateKey",
                "keyFingerprint",
                "outputToLockboxVersionId",
                "privateKey",
                "publicKey",
                "serviceAccountId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "format": {
                    "type": "string",
                    "description": "The output format of the keys. `PEM_FILE` is the default format.\n",
                    "willReplaceOnChanges": true
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The algorithm used to generate the key. `RSA_2048` is the default algorithm. Valid values are listed in the [API\nreference](https://yandex.cloud/docs/iam/api-ref/Key).\n",
                    "willReplaceOnChanges": true
                },
                "outputToLockbox": {
                    "$ref": "#/types/yandex:index/IamServiceAccountKeyOutputToLockbox:IamServiceAccountKeyOutputToLockbox",
                    "description": "option to create a Lockbox secret version from sensitive outputs\n"
                },
                "pgpKey": {
                    "type": "string",
                    "description": "An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a\nkeybase username in the form `keybase:keybaseusername`.\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account to create a pair for.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccountKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "encryptedPrivateKey": {
                        "type": "string",
                        "description": "The encrypted private key, base64 encoded. This is only populated when `pgp_key` is supplied.\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The output format of the keys. `PEM_FILE` is the default format.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyAlgorithm": {
                        "type": "string",
                        "description": "The algorithm used to generate the key. `RSA_2048` is the default algorithm. Valid values are listed in the [API\nreference](https://yandex.cloud/docs/iam/api-ref/Key).\n",
                        "willReplaceOnChanges": true
                    },
                    "keyFingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the PGP key used to encrypt the private key. This is only populated when `pgp_key` is supplied.\n"
                    },
                    "outputToLockbox": {
                        "$ref": "#/types/yandex:index/IamServiceAccountKeyOutputToLockbox:IamServiceAccountKeyOutputToLockbox",
                        "description": "option to create a Lockbox secret version from sensitive outputs\n"
                    },
                    "outputToLockboxVersionId": {
                        "type": "string",
                        "description": "ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when\n`output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when\n`output_to_lockbox` is removed.\n"
                    },
                    "pgpKey": {
                        "type": "string",
                        "description": "An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a\nkeybase username in the form `keybase:keybaseusername`.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key. This is only populated when neither `pgp_key` nor `output_to_lockbox` are provided.\n",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The public key.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "ID of the service account to create a pair for.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamServiceAccountStaticAccessKey:IamServiceAccountStaticAccessKey": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "ID of the static access key. This is only populated when `output_to_lockbox` is not provided.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "encryptedSecretKey": {
                    "type": "string",
                    "description": "The encrypted secret, base64 encoded. This is only populated when `pgp_key` is supplied.\n"
                },
                "keyFingerprint": {
                    "type": "string",
                    "description": "The fingerprint of the PGP key used to encrypt the secret key. This is only populated when `pgp_key` is supplied.\n"
                },
                "outputToLockbox": {
                    "$ref": "#/types/yandex:index/IamServiceAccountStaticAccessKeyOutputToLockbox:IamServiceAccountStaticAccessKeyOutputToLockbox",
                    "description": "option to create a Lockbox secret version from sensitive outputs\n"
                },
                "outputToLockboxVersionId": {
                    "type": "string",
                    "description": "ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when\n`output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when\n`output_to_lockbox` is removed.\n"
                },
                "pgpKey": {
                    "type": "string",
                    "description": "An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase\nusername in the form `keybase:keybaseusername`.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Private part of generated static access key. This is only populated when neither `pgp_key` nor `output_to_lockbox` are\nprovided.\n",
                    "secret": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account which is used to get a static key.\n"
                }
            },
            "required": [
                "accessKey",
                "createdAt",
                "encryptedSecretKey",
                "keyFingerprint",
                "outputToLockboxVersionId",
                "secretKey",
                "serviceAccountId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n",
                    "willReplaceOnChanges": true
                },
                "outputToLockbox": {
                    "$ref": "#/types/yandex:index/IamServiceAccountStaticAccessKeyOutputToLockbox:IamServiceAccountStaticAccessKeyOutputToLockbox",
                    "description": "option to create a Lockbox secret version from sensitive outputs\n"
                },
                "pgpKey": {
                    "type": "string",
                    "description": "An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase\nusername in the form `keybase:keybaseusername`.\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account which is used to get a static key.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamServiceAccountStaticAccessKey resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "ID of the static access key. This is only populated when `output_to_lockbox` is not provided.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n",
                        "willReplaceOnChanges": true
                    },
                    "encryptedSecretKey": {
                        "type": "string",
                        "description": "The encrypted secret, base64 encoded. This is only populated when `pgp_key` is supplied.\n"
                    },
                    "keyFingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the PGP key used to encrypt the secret key. This is only populated when `pgp_key` is supplied.\n"
                    },
                    "outputToLockbox": {
                        "$ref": "#/types/yandex:index/IamServiceAccountStaticAccessKeyOutputToLockbox:IamServiceAccountStaticAccessKeyOutputToLockbox",
                        "description": "option to create a Lockbox secret version from sensitive outputs\n"
                    },
                    "outputToLockboxVersionId": {
                        "type": "string",
                        "description": "ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when\n`output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when\n`output_to_lockbox` is removed.\n"
                    },
                    "pgpKey": {
                        "type": "string",
                        "description": "An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase\nusername in the form `keybase:keybaseusername`.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "Private part of generated static access key. This is only populated when neither `pgp_key` nor `output_to_lockbox` are\nprovided.\n",
                        "secret": true
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "ID of the service account which is used to get a static key.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamWorkloadIdentityFederatedCredential:IamWorkloadIdentityFederatedCredential": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Id of the external subject.\n"
                },
                "externalSubjectId": {
                    "type": "string",
                    "description": "Id of the workload identity federation which is used for authentication.\n"
                },
                "federationId": {
                    "type": "string",
                    "description": "Id of the federated credential.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Id of the service account that the federated credential belongs to.\n"
                }
            },
            "required": [
                "createdAt",
                "externalSubjectId",
                "federationId",
                "serviceAccountId"
            ],
            "inputProperties": {
                "externalSubjectId": {
                    "type": "string",
                    "description": "Id of the workload identity federation which is used for authentication.\n",
                    "willReplaceOnChanges": true
                },
                "federationId": {
                    "type": "string",
                    "description": "Id of the federated credential.\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Id of the service account that the federated credential belongs to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "externalSubjectId",
                "federationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamWorkloadIdentityFederatedCredential resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Id of the external subject.\n"
                    },
                    "externalSubjectId": {
                        "type": "string",
                        "description": "Id of the workload identity federation which is used for authentication.\n",
                        "willReplaceOnChanges": true
                    },
                    "federationId": {
                        "type": "string",
                        "description": "Id of the federated credential.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "Id of the service account that the federated credential belongs to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamWorkloadIdentityOidcFederation:IamWorkloadIdentityOidcFederation": {
            "properties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of trusted values for aud claim.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation timestamp.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the OIDC workload identity federation.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disabled flag.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled flag.\n"
                },
                "federationId": {
                    "type": "string",
                    "description": "Id of the OIDC workload identity federation.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Id of the folder that the OIDC workload identity federation belongs to.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer identifier of the external IdP server to be used for authentication.\n"
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "URL reference to trusted keys in format of JSON Web Key Set.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource labels as key-value pairs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the OIDC workload identity federation. The name is unique within the folder.\n"
                }
            },
            "required": [
                "createdAt",
                "enabled",
                "federationId",
                "folderId",
                "issuer",
                "jwksUrl",
                "name"
            ],
            "inputProperties": {
                "audiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of trusted values for aud claim.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the OIDC workload identity federation.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disabled flag.\n"
                },
                "federationId": {
                    "type": "string",
                    "description": "Id of the OIDC workload identity federation.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Id of the folder that the OIDC workload identity federation belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer identifier of the external IdP server to be used for authentication.\n",
                    "willReplaceOnChanges": true
                },
                "jwksUrl": {
                    "type": "string",
                    "description": "URL reference to trusted keys in format of JSON Web Key Set.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource labels as key-value pairs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the OIDC workload identity federation. The name is unique within the folder.\n"
                }
            },
            "requiredInputs": [
                "issuer",
                "jwksUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamWorkloadIdentityOidcFederation resources.\n",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of trusted values for aud claim.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation timestamp.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the OIDC workload identity federation.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disabled flag.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled flag.\n"
                    },
                    "federationId": {
                        "type": "string",
                        "description": "Id of the OIDC workload identity federation.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "Id of the folder that the OIDC workload identity federation belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "issuer": {
                        "type": "string",
                        "description": "Issuer identifier of the external IdP server to be used for authentication.\n",
                        "willReplaceOnChanges": true
                    },
                    "jwksUrl": {
                        "type": "string",
                        "description": "URL reference to trusted keys in format of JSON Web Key Set.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Resource labels as key-value pairs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the OIDC workload identity federation. The name is unique within the folder.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iamWorkloadIdentityOidcFederationIamBinding:IamWorkloadIdentityOidcFederationIamBinding": {
            "properties": {
                "federationId": {
                    "type": "string",
                    "description": "ID of the OIDC workload identity federation to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "federationId",
                "members",
                "role"
            ],
            "inputProperties": {
                "federationId": {
                    "type": "string",
                    "description": "ID of the OIDC workload identity federation to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "federationId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamWorkloadIdentityOidcFederationIamBinding resources.\n",
                "properties": {
                    "federationId": {
                        "type": "string",
                        "description": "ID of the OIDC workload identity federation to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iotCoreBroker:IotCoreBroker": {
            "properties": {
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of certificate's fingerprints for the IoT Core Broker.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/IotCoreBrokerLogOptions:IotCoreBrokerLogOptions",
                    "description": "Options for logging for IoT Core Broker.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "logOptions",
                "name"
            ],
            "inputProperties": {
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of certificate's fingerprints for the IoT Core Broker.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/IotCoreBrokerLogOptions:IotCoreBrokerLogOptions",
                    "description": "Options for logging for IoT Core Broker.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotCoreBroker resources.\n",
                "properties": {
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of certificate's fingerprints for the IoT Core Broker.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logOptions": {
                        "$ref": "#/types/yandex:index/IotCoreBrokerLogOptions:IotCoreBrokerLogOptions",
                        "description": "Options for logging for IoT Core Broker.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iotCoreDevice:IotCoreDevice": {
            "properties": {
                "aliases": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value aliases pairs to assign to the IoT Core Device.\n"
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of certificate's fingerprints for the IoT Core Device.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of passwords's id for the IoT Core Device.\n",
                    "secret": true
                },
                "registryId": {
                    "type": "string",
                    "description": "IoT Core Registry ID for the IoT Core Device.\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "registryId"
            ],
            "inputProperties": {
                "aliases": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value aliases pairs to assign to the IoT Core Device.\n"
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of certificate's fingerprints for the IoT Core Device.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of passwords's id for the IoT Core Device.\n",
                    "secret": true
                },
                "registryId": {
                    "type": "string",
                    "description": "IoT Core Registry ID for the IoT Core Device.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "registryId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotCoreDevice resources.\n",
                "properties": {
                    "aliases": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value aliases pairs to assign to the IoT Core Device.\n"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of certificate's fingerprints for the IoT Core Device.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of passwords's id for the IoT Core Device.\n",
                        "secret": true
                    },
                    "registryId": {
                        "type": "string",
                        "description": "IoT Core Registry ID for the IoT Core Device.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/iotCoreRegistry:IotCoreRegistry": {
            "properties": {
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of certificate's fingerprints for the IoT Core Registry.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/IotCoreRegistryLogOptions:IotCoreRegistryLogOptions",
                    "description": "Options for logging for IoT Core Registry.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of passwords's id for the IoT Core Registry.\n",
                    "secret": true
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "logOptions",
                "name"
            ],
            "inputProperties": {
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of certificate's fingerprints for the IoT Core Registry.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/IotCoreRegistryLogOptions:IotCoreRegistryLogOptions",
                    "description": "Options for logging for IoT Core Registry.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of passwords's id for the IoT Core Registry.\n",
                    "secret": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotCoreRegistry resources.\n",
                "properties": {
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of certificate's fingerprints for the IoT Core Registry.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logOptions": {
                        "$ref": "#/types/yandex:index/IotCoreRegistryLogOptions:IotCoreRegistryLogOptions",
                        "description": "Options for logging for IoT Core Registry.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of passwords's id for the IoT Core Registry.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsAsymmetricEncryptionKey:KmsAsymmetricEncryptionKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the key.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsAsymmetricEncryptionKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "encryptionAlgorithm": {
                        "type": "string",
                        "description": "Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the key.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsAsymmetricEncryptionKeyIamBinding:KmsAsymmetricEncryptionKeyIamBinding": {
            "properties": {
                "asymmetricEncryptionKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "asymmetricEncryptionKeyId",
                "members",
                "role"
            ],
            "inputProperties": {
                "asymmetricEncryptionKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "asymmetricEncryptionKeyId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsAsymmetricEncryptionKeyIamBinding resources.\n",
                "properties": {
                    "asymmetricEncryptionKeyId": {
                        "type": "string",
                        "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsAsymmetricEncryptionKeyIamMember:KmsAsymmetricEncryptionKeyIamMember": {
            "properties": {
                "asymmetricEncryptionKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.\n"
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "asymmetricEncryptionKeyId",
                "member",
                "role"
            ],
            "inputProperties": {
                "asymmetricEncryptionKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "asymmetricEncryptionKeyId",
                "member",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsAsymmetricEncryptionKeyIamMember resources.\n",
                "properties": {
                    "asymmetricEncryptionKeyId": {
                        "type": "string",
                        "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Encryption Key ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsAsymmetricSignatureKey:KmsAsymmetricSignatureKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the key.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsAsymmetricSignatureKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the key.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsAsymmetricSignatureKeyIamBinding:KmsAsymmetricSignatureKeyIamBinding": {
            "properties": {
                "asymmetricSignatureKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "asymmetricSignatureKeyId",
                "members",
                "role"
            ],
            "inputProperties": {
                "asymmetricSignatureKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "asymmetricSignatureKeyId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsAsymmetricSignatureKeyIamBinding resources.\n",
                "properties": {
                    "asymmetricSignatureKeyId": {
                        "type": "string",
                        "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsAsymmetricSignatureKeyIamMember:KmsAsymmetricSignatureKeyIamMember": {
            "properties": {
                "asymmetricSignatureKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.\n"
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "asymmetricSignatureKeyId",
                "member",
                "role"
            ],
            "inputProperties": {
                "asymmetricSignatureKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "asymmetricSignatureKeyId",
                "member",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsAsymmetricSignatureKeyIamMember resources.\n",
                "properties": {
                    "asymmetricSignatureKeyId": {
                        "type": "string",
                        "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsSecretCiphertext:KmsSecretCiphertext": {
            "properties": {
                "aadContext": {
                    "type": "string",
                    "description": "Additional authenticated data (AAD context), optional. If specified, this data will be required for decryption with the\n`SymmetricDecryptRequest`.\n"
                },
                "ciphertext": {
                    "type": "string",
                    "description": "Resulting CipherText, encoded with `standard` base64 alphabet as defined in RFC 4648 section 4.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "ID of the symmetric KMS key to use for encryption.\n"
                },
                "plaintext": {
                    "type": "string",
                    "description": "Plaintext to be encrypted.\n",
                    "secret": true
                }
            },
            "required": [
                "ciphertext",
                "keyId",
                "plaintext"
            ],
            "inputProperties": {
                "aadContext": {
                    "type": "string",
                    "description": "Additional authenticated data (AAD context), optional. If specified, this data will be required for decryption with the\n`SymmetricDecryptRequest`.\n",
                    "willReplaceOnChanges": true
                },
                "keyId": {
                    "type": "string",
                    "description": "ID of the symmetric KMS key to use for encryption.\n",
                    "willReplaceOnChanges": true
                },
                "plaintext": {
                    "type": "string",
                    "description": "Plaintext to be encrypted.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keyId",
                "plaintext"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsSecretCiphertext resources.\n",
                "properties": {
                    "aadContext": {
                        "type": "string",
                        "description": "Additional authenticated data (AAD context), optional. If specified, this data will be required for decryption with the\n`SymmetricDecryptRequest`.\n",
                        "willReplaceOnChanges": true
                    },
                    "ciphertext": {
                        "type": "string",
                        "description": "Resulting CipherText, encoded with `standard` base64 alphabet as defined in RFC 4648 section 4.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "ID of the symmetric KMS key to use for encryption.\n",
                        "willReplaceOnChanges": true
                    },
                    "plaintext": {
                        "type": "string",
                        "description": "Plaintext to be encrypted.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsSymmetricKey:KmsSymmetricKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "defaultAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm to be used with a new key version, generated with the next rotation. The default value is\n`AES_128`.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rotatedAt": {
                    "type": "string",
                    "description": "Last rotation timestamp of the key.\n"
                },
                "rotationPeriod": {
                    "type": "string",
                    "description": "Interval between automatic rotations. To disable automatic rotation, omit this parameter.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the key.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "rotatedAt",
                "status"
            ],
            "inputProperties": {
                "defaultAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm to be used with a new key version, generated with the next rotation. The default value is\n`AES_128`.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rotationPeriod": {
                    "type": "string",
                    "description": "Interval between automatic rotations. To disable automatic rotation, omit this parameter.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsSymmetricKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "defaultAlgorithm": {
                        "type": "string",
                        "description": "Encryption algorithm to be used with a new key version, generated with the next rotation. The default value is\n`AES_128`.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "rotatedAt": {
                        "type": "string",
                        "description": "Last rotation timestamp of the key.\n"
                    },
                    "rotationPeriod": {
                        "type": "string",
                        "description": "Interval between automatic rotations. To disable automatic rotation, omit this parameter.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the key.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsSymmetricKeyIamBinding:KmsSymmetricKeyIamBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                },
                "symmetricKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Symmetric Key ID to apply a binding to.\n"
                }
            },
            "required": [
                "members",
                "role",
                "symmetricKeyId"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                },
                "symmetricKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Symmetric Key ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "members",
                "role",
                "symmetricKeyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsSymmetricKeyIamBinding resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    },
                    "symmetricKeyId": {
                        "type": "string",
                        "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Symmetric Key ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kmsSymmetricKeyIamMember:KmsSymmetricKeyIamMember": {
            "properties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                },
                "symmetricKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Symmetric Key ID to apply a binding to.\n"
                }
            },
            "required": [
                "member",
                "role",
                "symmetricKeyId"
            ],
            "inputProperties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "symmetricKeyId": {
                    "type": "string",
                    "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Symmetric Key ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "member",
                "role",
                "symmetricKeyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KmsSymmetricKeyIamMember resources.\n",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "symmetricKeyId": {
                        "type": "string",
                        "description": "The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Symmetric Key ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kubernetesCluster:KubernetesCluster": {
            "properties": {
                "clusterIpv4Range": {
                    "type": "string",
                    "description": "CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes\ncluster located in. Static routes will be set up for this CIDR blocks in node subnets.\n"
                },
                "clusterIpv6Range": {
                    "type": "string",
                    "description": "Identical to `cluster_ipv4_range` but for IPv6 protocol.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Health of the Kubernetes cluster.\n"
                },
                "kmsProvider": {
                    "$ref": "#/types/yandex:index/KubernetesClusterKmsProvider:KubernetesClusterKmsProvider",
                    "description": "Cluster KMS provider parameters.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "Log group where cluster stores cluster system logs, like audit, events, or control plane logs.\n"
                },
                "master": {
                    "$ref": "#/types/yandex:index/KubernetesClusterMaster:KubernetesClusterMaster",
                    "description": "Kubernetes master configuration options.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The ID of the cluster network.\n"
                },
                "networkImplementation": {
                    "$ref": "#/types/yandex:index/KubernetesClusterNetworkImplementation:KubernetesClusterNetworkImplementation",
                    "description": "Network Implementation options.\n"
                },
                "networkPolicyProvider": {
                    "type": "string",
                    "description": "Network policy provider for the cluster. Possible values: `CALICO`.\n"
                },
                "nodeIpv4CidrMaskSize": {
                    "type": "integer",
                    "description": "Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each\nnode.\n"
                },
                "nodeServiceAccountId": {
                    "type": "string",
                    "description": "Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node\nlogs and metrics.\n"
                },
                "releaseChannel": {
                    "type": "string",
                    "description": "Cluster release channel.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service\naccount should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where\nselected network resides.\n"
                },
                "serviceIpv4Range": {
                    "type": "string",
                    "description": "CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap\nwith any subnet in the network the Kubernetes cluster located in.\n"
                },
                "serviceIpv6Range": {
                    "type": "string",
                    "description": "Identical to service_ipv4_range but for IPv6 protocol.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Kubernetes cluster.\n"
                }
            },
            "required": [
                "clusterIpv4Range",
                "clusterIpv6Range",
                "createdAt",
                "description",
                "folderId",
                "health",
                "labels",
                "logGroupId",
                "master",
                "name",
                "networkId",
                "nodeServiceAccountId",
                "releaseChannel",
                "serviceAccountId",
                "serviceIpv4Range",
                "serviceIpv6Range",
                "status"
            ],
            "inputProperties": {
                "clusterIpv4Range": {
                    "type": "string",
                    "description": "CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes\ncluster located in. Static routes will be set up for this CIDR blocks in node subnets.\n",
                    "willReplaceOnChanges": true
                },
                "clusterIpv6Range": {
                    "type": "string",
                    "description": "Identical to `cluster_ipv4_range` but for IPv6 protocol.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "kmsProvider": {
                    "$ref": "#/types/yandex:index/KubernetesClusterKmsProvider:KubernetesClusterKmsProvider",
                    "description": "Cluster KMS provider parameters.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "master": {
                    "$ref": "#/types/yandex:index/KubernetesClusterMaster:KubernetesClusterMaster",
                    "description": "Kubernetes master configuration options.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The ID of the cluster network.\n",
                    "willReplaceOnChanges": true
                },
                "networkImplementation": {
                    "$ref": "#/types/yandex:index/KubernetesClusterNetworkImplementation:KubernetesClusterNetworkImplementation",
                    "description": "Network Implementation options.\n",
                    "willReplaceOnChanges": true
                },
                "networkPolicyProvider": {
                    "type": "string",
                    "description": "Network policy provider for the cluster. Possible values: `CALICO`.\n",
                    "willReplaceOnChanges": true
                },
                "nodeIpv4CidrMaskSize": {
                    "type": "integer",
                    "description": "Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each\nnode.\n",
                    "willReplaceOnChanges": true
                },
                "nodeServiceAccountId": {
                    "type": "string",
                    "description": "Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node\nlogs and metrics.\n"
                },
                "releaseChannel": {
                    "type": "string",
                    "description": "Cluster release channel.\n",
                    "willReplaceOnChanges": true
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service\naccount should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where\nselected network resides.\n"
                },
                "serviceIpv4Range": {
                    "type": "string",
                    "description": "CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap\nwith any subnet in the network the Kubernetes cluster located in.\n",
                    "willReplaceOnChanges": true
                },
                "serviceIpv6Range": {
                    "type": "string",
                    "description": "Identical to service_ipv4_range but for IPv6 protocol.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "master",
                "networkId",
                "nodeServiceAccountId",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesCluster resources.\n",
                "properties": {
                    "clusterIpv4Range": {
                        "type": "string",
                        "description": "CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes\ncluster located in. Static routes will be set up for this CIDR blocks in node subnets.\n",
                        "willReplaceOnChanges": true
                    },
                    "clusterIpv6Range": {
                        "type": "string",
                        "description": "Identical to `cluster_ipv4_range` but for IPv6 protocol.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "health": {
                        "type": "string",
                        "description": "Health of the Kubernetes cluster.\n"
                    },
                    "kmsProvider": {
                        "$ref": "#/types/yandex:index/KubernetesClusterKmsProvider:KubernetesClusterKmsProvider",
                        "description": "Cluster KMS provider parameters.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logGroupId": {
                        "type": "string",
                        "description": "Log group where cluster stores cluster system logs, like audit, events, or control plane logs.\n"
                    },
                    "master": {
                        "$ref": "#/types/yandex:index/KubernetesClusterMaster:KubernetesClusterMaster",
                        "description": "Kubernetes master configuration options.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The ID of the cluster network.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkImplementation": {
                        "$ref": "#/types/yandex:index/KubernetesClusterNetworkImplementation:KubernetesClusterNetworkImplementation",
                        "description": "Network Implementation options.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkPolicyProvider": {
                        "type": "string",
                        "description": "Network policy provider for the cluster. Possible values: `CALICO`.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeIpv4CidrMaskSize": {
                        "type": "integer",
                        "description": "Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each\nnode.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeServiceAccountId": {
                        "type": "string",
                        "description": "Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node\nlogs and metrics.\n"
                    },
                    "releaseChannel": {
                        "type": "string",
                        "description": "Cluster release channel.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service\naccount should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where\nselected network resides.\n"
                    },
                    "serviceIpv4Range": {
                        "type": "string",
                        "description": "CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap\nwith any subnet in the network the Kubernetes cluster located in.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceIpv6Range": {
                        "type": "string",
                        "description": "Identical to service_ipv4_range but for IPv6 protocol.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Kubernetes cluster.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/kubernetesNodeGroup:KubernetesNodeGroup": {
            "properties": {
                "allocationPolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupAllocationPolicy:KubernetesNodeGroupAllocationPolicy",
                    "description": "This argument specify subnets (zones), that will be used by node group compute instances.\n"
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of allowed unsafe `sysctl` parameters for this node group. For more details see\n[documentation](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster).\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kubernetes cluster that this node group belongs to.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deployPolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupDeployPolicy:KubernetesNodeGroupDeployPolicy",
                    "description": "Deploy policy of the node group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "instanceGroupId": {
                    "type": "string",
                    "description": "ID of instance group that is used to manage this Kubernetes node group.\n"
                },
                "instanceTemplate": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplate:KubernetesNodeGroupInstanceTemplate",
                    "description": "Template used to create compute instances in this Kubernetes node group.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenancePolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupMaintenancePolicy:KubernetesNodeGroupMaintenancePolicy",
                    "description": "Maintenance policy for this Kubernetes node group. If policy is omitted, automatic revision upgrades are enabled and\ncould happen at any time. Revision upgrades are performed only within the same minor version, e.g. `1.29`. Minor version\nupgrades (e.g. `1.29`-\u003e`1.30`) should be performed manually.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.\n"
                },
                "nodeTaints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.\n"
                },
                "scalePolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupScalePolicy:KubernetesNodeGroupScalePolicy",
                    "description": "Scale policy of the node group.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Kubernetes node group.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Kubernetes that will be used for Kubernetes node group.\n"
                },
                "versionInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupVersionInfo:KubernetesNodeGroupVersionInfo"
                    },
                    "description": "Information about Kubernetes node group version.\n"
                }
            },
            "required": [
                "allocationPolicy",
                "clusterId",
                "createdAt",
                "deployPolicy",
                "description",
                "instanceGroupId",
                "instanceTemplate",
                "labels",
                "maintenancePolicy",
                "name",
                "scalePolicy",
                "status",
                "version",
                "versionInfos"
            ],
            "inputProperties": {
                "allocationPolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupAllocationPolicy:KubernetesNodeGroupAllocationPolicy",
                    "description": "This argument specify subnets (zones), that will be used by node group compute instances.\n",
                    "willReplaceOnChanges": true
                },
                "allowedUnsafeSysctls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of allowed unsafe `sysctl` parameters for this node group. For more details see\n[documentation](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster).\n",
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kubernetes cluster that this node group belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "deployPolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupDeployPolicy:KubernetesNodeGroupDeployPolicy",
                    "description": "Deploy policy of the node group.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "instanceTemplate": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplate:KubernetesNodeGroupInstanceTemplate",
                    "description": "Template used to create compute instances in this Kubernetes node group.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenancePolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupMaintenancePolicy:KubernetesNodeGroupMaintenancePolicy",
                    "description": "Maintenance policy for this Kubernetes node group. If policy is omitted, automatic revision upgrades are enabled and\ncould happen at any time. Revision upgrades are performed only within the same minor version, e.g. `1.29`. Minor version\nupgrades (e.g. `1.29`-\u003e`1.30`) should be performed manually.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.\n"
                },
                "nodeTaints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.\n",
                    "willReplaceOnChanges": true
                },
                "scalePolicy": {
                    "$ref": "#/types/yandex:index/KubernetesNodeGroupScalePolicy:KubernetesNodeGroupScalePolicy",
                    "description": "Scale policy of the node group.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of Kubernetes that will be used for Kubernetes node group.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "instanceTemplate",
                "scalePolicy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesNodeGroup resources.\n",
                "properties": {
                    "allocationPolicy": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupAllocationPolicy:KubernetesNodeGroupAllocationPolicy",
                        "description": "This argument specify subnets (zones), that will be used by node group compute instances.\n",
                        "willReplaceOnChanges": true
                    },
                    "allowedUnsafeSysctls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of allowed unsafe `sysctl` parameters for this node group. For more details see\n[documentation](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster).\n",
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Kubernetes cluster that this node group belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deployPolicy": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupDeployPolicy:KubernetesNodeGroupDeployPolicy",
                        "description": "Deploy policy of the node group.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "instanceGroupId": {
                        "type": "string",
                        "description": "ID of instance group that is used to manage this Kubernetes node group.\n"
                    },
                    "instanceTemplate": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupInstanceTemplate:KubernetesNodeGroupInstanceTemplate",
                        "description": "Template used to create compute instances in this Kubernetes node group.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenancePolicy": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupMaintenancePolicy:KubernetesNodeGroupMaintenancePolicy",
                        "description": "Maintenance policy for this Kubernetes node group. If policy is omitted, automatic revision upgrades are enabled and\ncould happen at any time. Revision upgrades are performed only within the same minor version, e.g. `1.29`. Minor version\nupgrades (e.g. `1.29`-\u003e`1.30`) should be performed manually.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "nodeLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.\n"
                    },
                    "nodeTaints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.\n",
                        "willReplaceOnChanges": true
                    },
                    "scalePolicy": {
                        "$ref": "#/types/yandex:index/KubernetesNodeGroupScalePolicy:KubernetesNodeGroupScalePolicy",
                        "description": "Scale policy of the node group.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Kubernetes node group.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of Kubernetes that will be used for Kubernetes node group.\n"
                    },
                    "versionInfos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/KubernetesNodeGroupVersionInfo:KubernetesNodeGroupVersionInfo"
                        },
                        "description": "Information about Kubernetes node group version.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lbNetworkLoadBalancer:LbNetworkLoadBalancer": {
            "properties": {
                "allowZonalShift": {
                    "type": "boolean",
                    "description": "Flag that marks the network load balancer as available to zonal shift.\n"
                },
                "attachedTargetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbNetworkLoadBalancerAttachedTargetGroup:LbNetworkLoadBalancerAttachedTargetGroup"
                    },
                    "description": "An AttachedTargetGroup resource.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbNetworkLoadBalancerListener:LbNetworkLoadBalancerListener"
                    },
                    "description": "Listener specification that will be used by a network load balancer. \u003e One of `external_address_spec` or\n`internal_address_spec` should be specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "ID of the availability zone where the network load balancer resides. If omitted, default region is being used.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the network load balancer. Must be one of 'external' or 'internal'. The default is 'external'.\n"
                }
            },
            "required": [
                "allowZonalShift",
                "createdAt",
                "deletionProtection",
                "folderId",
                "name",
                "regionId"
            ],
            "inputProperties": {
                "allowZonalShift": {
                    "type": "boolean",
                    "description": "Flag that marks the network load balancer as available to zonal shift.\n"
                },
                "attachedTargetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbNetworkLoadBalancerAttachedTargetGroup:LbNetworkLoadBalancerAttachedTargetGroup"
                    },
                    "description": "An AttachedTargetGroup resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbNetworkLoadBalancerListener:LbNetworkLoadBalancerListener"
                    },
                    "description": "Listener specification that will be used by a network load balancer. \u003e One of `external_address_spec` or\n`internal_address_spec` should be specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "ID of the availability zone where the network load balancer resides. If omitted, default region is being used.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the network load balancer. Must be one of 'external' or 'internal'. The default is 'external'.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbNetworkLoadBalancer resources.\n",
                "properties": {
                    "allowZonalShift": {
                        "type": "boolean",
                        "description": "Flag that marks the network load balancer as available to zonal shift.\n"
                    },
                    "attachedTargetGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/LbNetworkLoadBalancerAttachedTargetGroup:LbNetworkLoadBalancerAttachedTargetGroup"
                        },
                        "description": "An AttachedTargetGroup resource.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/LbNetworkLoadBalancerListener:LbNetworkLoadBalancerListener"
                        },
                        "description": "Listener specification that will be used by a network load balancer. \u003e One of `external_address_spec` or\n`internal_address_spec` should be specified.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "regionId": {
                        "type": "string",
                        "description": "ID of the availability zone where the network load balancer resides. If omitted, default region is being used.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the network load balancer. Must be one of 'external' or 'internal'. The default is 'external'.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lbTargetGroup:LbTargetGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "ID of the availability zone where the target group resides. If omitted, default region is being used.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbTargetGroupTarget:LbTargetGroupTarget"
                    },
                    "description": "A Target resource.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "regionId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "ID of the availability zone where the target group resides. If omitted, default region is being used.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LbTargetGroupTarget:LbTargetGroupTarget"
                    },
                    "description": "A Target resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LbTargetGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "regionId": {
                        "type": "string",
                        "description": "ID of the availability zone where the target group resides. If omitted, default region is being used.\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/LbTargetGroupTarget:LbTargetGroupTarget"
                        },
                        "description": "A Target resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/loadtestingAgent:LoadtestingAgent": {
            "properties": {
                "computeInstance": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstance:LoadtestingAgentComputeInstance",
                    "description": "The template for creating new compute instance running load testing agent.\n"
                },
                "computeInstanceId": {
                    "type": "string",
                    "description": "Compute Instance ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logSettings": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentLogSettings:LoadtestingAgentLogSettings",
                    "description": "The logging settings of the load testing agent.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "required": [
                "computeInstance",
                "computeInstanceId",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "computeInstance": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstance:LoadtestingAgentComputeInstance",
                    "description": "The template for creating new compute instance running load testing agent.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logSettings": {
                    "$ref": "#/types/yandex:index/LoadtestingAgentLogSettings:LoadtestingAgentLogSettings",
                    "description": "The logging settings of the load testing agent.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "requiredInputs": [
                "computeInstance"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadtestingAgent resources.\n",
                "properties": {
                    "computeInstance": {
                        "$ref": "#/types/yandex:index/LoadtestingAgentComputeInstance:LoadtestingAgentComputeInstance",
                        "description": "The template for creating new compute instance running load testing agent.\n"
                    },
                    "computeInstanceId": {
                        "type": "string",
                        "description": "Compute Instance ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logSettings": {
                        "$ref": "#/types/yandex:index/LoadtestingAgentLogSettings:LoadtestingAgentLogSettings",
                        "description": "The logging settings of the load testing agent.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lockboxSecret:LockboxSecret": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key used to encrypt the Yandex Cloud Lockbox secret.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "passwordPayloadSpecification": {
                    "$ref": "#/types/yandex:index/LockboxSecretPasswordPayloadSpecification:LockboxSecretPasswordPayloadSpecification",
                    "description": "Payload specification for password generation.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret status.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "name",
                "status"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key used to encrypt the Yandex Cloud Lockbox secret.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "passwordPayloadSpecification": {
                    "$ref": "#/types/yandex:index/LockboxSecretPasswordPayloadSpecification:LockboxSecretPasswordPayloadSpecification",
                    "description": "Payload specification for password generation.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LockboxSecret resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "description": "The KMS key used to encrypt the Yandex Cloud Lockbox secret.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "passwordPayloadSpecification": {
                        "$ref": "#/types/yandex:index/LockboxSecretPasswordPayloadSpecification:LockboxSecretPasswordPayloadSpecification",
                        "description": "Payload specification for password generation.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The Yandex Cloud Lockbox secret status.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lockboxSecretIamBinding:LockboxSecretIamBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "The [Yandex Lockbox Secret](https://yandex.cloud/docs/lockbox/) Secret ID to apply a binding to.\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "members",
                "role",
                "secretId"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "secretId": {
                    "type": "string",
                    "description": "The [Yandex Lockbox Secret](https://yandex.cloud/docs/lockbox/) Secret ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "members",
                "role",
                "secretId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LockboxSecretIamBinding resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "secretId": {
                        "type": "string",
                        "description": "The [Yandex Lockbox Secret](https://yandex.cloud/docs/lockbox/) Secret ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lockboxSecretIamMember:LockboxSecretIamMember": {
            "properties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "The [Yandex Lockbox Secret](https://yandex.cloud/docs/lockbox/) Secret ID to apply a binding to.\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "member",
                "role",
                "secretId"
            ],
            "inputProperties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "secretId": {
                    "type": "string",
                    "description": "The [Yandex Lockbox Secret](https://yandex.cloud/docs/lockbox/) Secret ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "member",
                "role",
                "secretId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LockboxSecretIamMember resources.\n",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "secretId": {
                        "type": "string",
                        "description": "The [Yandex Lockbox Secret](https://yandex.cloud/docs/lockbox/) Secret ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lockboxSecretVersion:LockboxSecretVersion": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LockboxSecretVersionEntry:LockboxSecretVersionEntry"
                    },
                    "description": "List of entries in the Yandex Cloud Lockbox secret version. Must be omitted for secrets with a payload specification. \u003e\nOne either `text_value` or `command` is required.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret ID where to add the version.\n"
                }
            },
            "required": [
                "secretId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n",
                    "willReplaceOnChanges": true
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/LockboxSecretVersionEntry:LockboxSecretVersionEntry"
                    },
                    "description": "List of entries in the Yandex Cloud Lockbox secret version. Must be omitted for secrets with a payload specification. \u003e\nOne either `text_value` or `command` is required.\n",
                    "willReplaceOnChanges": true
                },
                "secretId": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret ID where to add the version.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "secretId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LockboxSecretVersion resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n",
                        "willReplaceOnChanges": true
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/LockboxSecretVersionEntry:LockboxSecretVersionEntry"
                        },
                        "description": "List of entries in the Yandex Cloud Lockbox secret version. Must be omitted for secrets with a payload specification. \u003e\nOne either `text_value` or `command` is required.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretId": {
                        "type": "string",
                        "description": "The Yandex Cloud Lockbox secret ID where to add the version.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/lockboxSecretVersionHashed:LockboxSecretVersionHashed": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret version description.\n"
                },
                "key1": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key10": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key2": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key3": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key4": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key5": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key6": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key7": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key8": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "key9": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret ID where to add the version.\n"
                },
                "textValue1": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue10": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue2": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue3": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue4": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue5": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue6": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue7": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue8": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                },
                "textValue9": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true
                }
            },
            "required": [
                "secretId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret version description.\n",
                    "willReplaceOnChanges": true
                },
                "key1": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key10": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key2": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key3": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key4": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key5": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key6": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key7": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key8": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "key9": {
                    "type": "string",
                    "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                    "willReplaceOnChanges": true
                },
                "secretId": {
                    "type": "string",
                    "description": "The Yandex Cloud Lockbox secret ID where to add the version.\n",
                    "willReplaceOnChanges": true
                },
                "textValue1": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue10": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue2": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue3": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue4": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue5": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue6": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue7": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue8": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "textValue9": {
                    "type": "string",
                    "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "secretId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LockboxSecretVersionHashed resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The Yandex Cloud Lockbox secret version description.\n",
                        "willReplaceOnChanges": true
                    },
                    "key1": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key10": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key2": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key3": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key4": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key5": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key6": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key7": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key8": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "key9": {
                        "type": "string",
                        "description": "Each of the entry keys in the Yandex Cloud Lockbox secret version.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretId": {
                        "type": "string",
                        "description": "The Yandex Cloud Lockbox secret ID where to add the version.\n",
                        "willReplaceOnChanges": true
                    },
                    "textValue1": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue10": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue2": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue3": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue4": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue5": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue6": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue7": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue8": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "textValue9": {
                        "type": "string",
                        "description": "Each of the entry values in the Yandex Cloud Lockbox secret version.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/loggingGroup:LoggingGroup": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "dataStream": {
                    "type": "string",
                    "description": "Data Stream.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "retentionPeriod": {
                    "type": "string",
                    "description": "Log entries retention period for the Yandex Cloud Logging group.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The Yandex Cloud Logging group status.\n"
                }
            },
            "required": [
                "cloudId",
                "createdAt",
                "folderId",
                "name",
                "retentionPeriod",
                "status"
            ],
            "inputProperties": {
                "dataStream": {
                    "type": "string",
                    "description": "Data Stream.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "retentionPeriod": {
                    "type": "string",
                    "description": "Log entries retention period for the Yandex Cloud Logging group.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingGroup resources.\n",
                "properties": {
                    "cloudId": {
                        "type": "string",
                        "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "dataStream": {
                        "type": "string",
                        "description": "Data Stream.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "retentionPeriod": {
                        "type": "string",
                        "description": "Log entries retention period for the Yandex Cloud Logging group.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The Yandex Cloud Logging group status.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbClickhouseCluster:MdbClickhouseCluster": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterAccess:MdbClickhouseClusterAccess",
                    "description": "Access policy to the ClickHouse cluster.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "A password used to authorize as user `admin` when `sql_user_management` enabled.\n",
                    "secret": true
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "The period in days during which backups are stored.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterBackupWindowStart:MdbClickhouseClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "clickhouse": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouse:MdbClickhouseClusterClickhouse",
                    "description": "Configuration of the ClickHouse subcluster.\n"
                },
                "cloudStorage": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterCloudStorage:MdbClickhouseClusterCloudStorage",
                    "description": "Cloud Storage settings.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The cluster identifier.\n"
                },
                "copySchemaOnNewHosts": {
                    "type": "boolean",
                    "description": "Whether to copy schema on new ClickHouse hosts.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterDatabase:MdbClickhouseClusterDatabase"
                    },
                    "description": "A database of the ClickHouse cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "embeddedKeeper": {
                    "type": "boolean",
                    "description": "Whether to use ClickHouse Keeper as a coordination system and place it on the same hosts with ClickHouse. If not, it's\nused ZooKeeper with placement on separate hosts.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the ClickHouse cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "formatSchemas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterFormatSchema:MdbClickhouseClusterFormatSchema"
                    },
                    "description": "A set of `protobuf` or `capnproto` format schemas.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster. Can be `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see\n`health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-clickhouse/api-ref/Cluster/).\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterHost:MdbClickhouseClusterHost"
                    },
                    "description": "A host of the ClickHouse cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterMaintenanceWindow:MdbClickhouseClusterMaintenanceWindow"
                },
                "mlModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterMlModel:MdbClickhouseClusterMlModel"
                    },
                    "description": "A group of machine learning models.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "shardGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterShardGroup:MdbClickhouseClusterShardGroup"
                    },
                    "description": "A group of clickhouse shards.\n"
                },
                "shards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterShard:MdbClickhouseClusterShard"
                    },
                    "description": "A shard of the ClickHouse cluster.\n"
                },
                "sqlDatabaseManagement": {
                    "type": "boolean",
                    "description": "Grants `admin` user database management permission.\n"
                },
                "sqlUserManagement": {
                    "type": "boolean",
                    "description": "Enables `admin` user with user management permission.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster. Can be `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-clickhouse/api-ref/Cluster/).\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterUser:MdbClickhouseClusterUser"
                    },
                    "description": "A user of the ClickHouse cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the ClickHouse server software.\n"
                },
                "zookeeper": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterZookeeper:MdbClickhouseClusterZookeeper",
                    "description": "Configuration of the ZooKeeper subcluster.\n"
                }
            },
            "required": [
                "access",
                "backupWindowStart",
                "clickhouse",
                "cloudStorage",
                "clusterId",
                "createdAt",
                "deletionProtection",
                "embeddedKeeper",
                "environment",
                "folderId",
                "health",
                "hosts",
                "labels",
                "maintenanceWindow",
                "name",
                "networkId",
                "securityGroupIds",
                "shards",
                "sqlDatabaseManagement",
                "sqlUserManagement",
                "status",
                "version",
                "zookeeper"
            ],
            "inputProperties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterAccess:MdbClickhouseClusterAccess",
                    "description": "Access policy to the ClickHouse cluster.\n"
                },
                "adminPassword": {
                    "type": "string",
                    "description": "A password used to authorize as user `admin` when `sql_user_management` enabled.\n",
                    "secret": true
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "The period in days during which backups are stored.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterBackupWindowStart:MdbClickhouseClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "clickhouse": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouse:MdbClickhouseClusterClickhouse",
                    "description": "Configuration of the ClickHouse subcluster.\n"
                },
                "cloudStorage": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterCloudStorage:MdbClickhouseClusterCloudStorage",
                    "description": "Cloud Storage settings.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The cluster identifier.\n"
                },
                "copySchemaOnNewHosts": {
                    "type": "boolean",
                    "description": "Whether to copy schema on new ClickHouse hosts.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterDatabase:MdbClickhouseClusterDatabase"
                    },
                    "description": "A database of the ClickHouse cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "embeddedKeeper": {
                    "type": "boolean",
                    "description": "Whether to use ClickHouse Keeper as a coordination system and place it on the same hosts with ClickHouse. If not, it's\nused ZooKeeper with placement on separate hosts.\n",
                    "willReplaceOnChanges": true
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the ClickHouse cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "formatSchemas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterFormatSchema:MdbClickhouseClusterFormatSchema"
                    },
                    "description": "A set of `protobuf` or `capnproto` format schemas.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterHost:MdbClickhouseClusterHost"
                    },
                    "description": "A host of the ClickHouse cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterMaintenanceWindow:MdbClickhouseClusterMaintenanceWindow"
                },
                "mlModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterMlModel:MdbClickhouseClusterMlModel"
                    },
                    "description": "A group of machine learning models.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "shardGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterShardGroup:MdbClickhouseClusterShardGroup"
                    },
                    "description": "A group of clickhouse shards.\n"
                },
                "shards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterShard:MdbClickhouseClusterShard"
                    },
                    "description": "A shard of the ClickHouse cluster.\n"
                },
                "sqlDatabaseManagement": {
                    "type": "boolean",
                    "description": "Grants `admin` user database management permission.\n",
                    "willReplaceOnChanges": true
                },
                "sqlUserManagement": {
                    "type": "boolean",
                    "description": "Enables `admin` user with user management permission.\n",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterUser:MdbClickhouseClusterUser"
                    },
                    "description": "A user of the ClickHouse cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the ClickHouse server software.\n"
                },
                "zookeeper": {
                    "$ref": "#/types/yandex:index/MdbClickhouseClusterZookeeper:MdbClickhouseClusterZookeeper",
                    "description": "Configuration of the ZooKeeper subcluster.\n"
                }
            },
            "requiredInputs": [
                "environment",
                "hosts",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbClickhouseCluster resources.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterAccess:MdbClickhouseClusterAccess",
                        "description": "Access policy to the ClickHouse cluster.\n"
                    },
                    "adminPassword": {
                        "type": "string",
                        "description": "A password used to authorize as user `admin` when `sql_user_management` enabled.\n",
                        "secret": true
                    },
                    "backupRetainPeriodDays": {
                        "type": "integer",
                        "description": "The period in days during which backups are stored.\n"
                    },
                    "backupWindowStart": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterBackupWindowStart:MdbClickhouseClusterBackupWindowStart",
                        "description": "Time to start the daily backup, in the UTC timezone.\n"
                    },
                    "clickhouse": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterClickhouse:MdbClickhouseClusterClickhouse",
                        "description": "Configuration of the ClickHouse subcluster.\n"
                    },
                    "cloudStorage": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterCloudStorage:MdbClickhouseClusterCloudStorage",
                        "description": "Cloud Storage settings.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The cluster identifier.\n"
                    },
                    "copySchemaOnNewHosts": {
                        "type": "boolean",
                        "description": "Whether to copy schema on new ClickHouse hosts.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterDatabase:MdbClickhouseClusterDatabase"
                        },
                        "description": "A database of the ClickHouse cluster.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "embeddedKeeper": {
                        "type": "boolean",
                        "description": "Whether to use ClickHouse Keeper as a coordination system and place it on the same hosts with ClickHouse. If not, it's\nused ZooKeeper with placement on separate hosts.\n",
                        "willReplaceOnChanges": true
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the ClickHouse cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "formatSchemas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterFormatSchema:MdbClickhouseClusterFormatSchema"
                        },
                        "description": "A set of `protobuf` or `capnproto` format schemas.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster. Can be `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see\n`health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-clickhouse/api-ref/Cluster/).\n"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterHost:MdbClickhouseClusterHost"
                        },
                        "description": "A host of the ClickHouse cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterMaintenanceWindow:MdbClickhouseClusterMaintenanceWindow"
                    },
                    "mlModels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterMlModel:MdbClickhouseClusterMlModel"
                        },
                        "description": "A group of machine learning models.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "shardGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterShardGroup:MdbClickhouseClusterShardGroup"
                        },
                        "description": "A group of clickhouse shards.\n"
                    },
                    "shards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterShard:MdbClickhouseClusterShard"
                        },
                        "description": "A shard of the ClickHouse cluster.\n"
                    },
                    "sqlDatabaseManagement": {
                        "type": "boolean",
                        "description": "Grants `admin` user database management permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "sqlUserManagement": {
                        "type": "boolean",
                        "description": "Enables `admin` user with user management permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster. Can be `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-clickhouse/api-ref/Cluster/).\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbClickhouseClusterUser:MdbClickhouseClusterUser"
                        },
                        "description": "A user of the ClickHouse cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the ClickHouse server software.\n"
                    },
                    "zookeeper": {
                        "$ref": "#/types/yandex:index/MdbClickhouseClusterZookeeper:MdbClickhouseClusterZookeeper",
                        "description": "Configuration of the ZooKeeper subcluster.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbElasticsearchCluster:MdbElasticsearchCluster": {
            "properties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfig:MdbElasticsearchClusterConfig",
                    "description": "Configuration of the Elasticsearch cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Elasticsearch cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-elasticsearch/api-ref/Cluster/).\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbElasticsearchClusterHost:MdbElasticsearchClusterHost"
                    },
                    "description": "A host of the Elasticsearch cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterMaintenanceWindow:MdbElasticsearchClusterMaintenanceWindow",
                    "description": "Elasticsearch cluster maintenance window.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-elasticsearch/api-ref/Cluster/).\n"
                }
            },
            "required": [
                "config",
                "createdAt",
                "deletionProtection",
                "environment",
                "folderId",
                "health",
                "hosts",
                "maintenanceWindow",
                "name",
                "networkId",
                "status"
            ],
            "inputProperties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfig:MdbElasticsearchClusterConfig",
                    "description": "Configuration of the Elasticsearch cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Elasticsearch cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbElasticsearchClusterHost:MdbElasticsearchClusterHost"
                    },
                    "description": "A host of the Elasticsearch cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbElasticsearchClusterMaintenanceWindow:MdbElasticsearchClusterMaintenanceWindow",
                    "description": "Elasticsearch cluster maintenance window.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                }
            },
            "requiredInputs": [
                "config",
                "environment",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbElasticsearchCluster resources.\n",
                "properties": {
                    "config": {
                        "$ref": "#/types/yandex:index/MdbElasticsearchClusterConfig:MdbElasticsearchClusterConfig",
                        "description": "Configuration of the Elasticsearch cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the Elasticsearch cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-elasticsearch/api-ref/Cluster/).\n"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbElasticsearchClusterHost:MdbElasticsearchClusterHost"
                        },
                        "description": "A host of the Elasticsearch cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbElasticsearchClusterMaintenanceWindow:MdbElasticsearchClusterMaintenanceWindow",
                        "description": "Elasticsearch cluster maintenance window.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-elasticsearch/api-ref/Cluster/).\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbGreenplumCluster:MdbGreenplumCluster": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterAccess:MdbGreenplumClusterAccess",
                    "description": "Access policy to the Greenplum cluster.\n"
                },
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the master hosts should get a public IP address on creation. Changing this parameter for an existing host\nis not supported at the moment.\n"
                },
                "backgroundActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivity:MdbGreenplumClusterBackgroundActivity"
                    },
                    "description": "Background activities settings.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterBackupWindowStart:MdbGreenplumClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "cloudStorage": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterCloudStorage:MdbGreenplumClusterCloudStorage",
                    "description": "Cloud Storage settings of the Greenplum cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Greenplum cluster. (PRODUCTION, PRESTABLE)\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "greenplumConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Greenplum cluster config. Detail info in `Greenplum cluster settings` block.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logging": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterLogging:MdbGreenplumClusterLogging"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterMaintenanceWindow:MdbGreenplumClusterMaintenanceWindow",
                    "description": "Maintenance policy of the Greenplum cluster.\n"
                },
                "masterHostCount": {
                    "type": "integer",
                    "description": "Number of hosts in master subcluster (1 or 2).\n"
                },
                "masterHostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups to place master subclusters' VMs of the cluster on.\n"
                },
                "masterHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterMasterHost:MdbGreenplumClusterMasterHost"
                    },
                    "description": "Info about hosts in master subcluster.\n"
                },
                "masterSubcluster": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterMasterSubcluster:MdbGreenplumClusterMasterSubcluster",
                    "description": "Settings for master subcluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "poolerConfig": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterPoolerConfig:MdbGreenplumClusterPoolerConfig",
                    "description": "Configuration of the connection pooler.\n"
                },
                "pxfConfig": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterPxfConfig:MdbGreenplumClusterPxfConfig",
                    "description": "Configuration of the PXF daemon.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "segmentHostCount": {
                    "type": "integer",
                    "description": "Number of hosts in segment subcluster (from 1 to 32).\n"
                },
                "segmentHostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups to place segment subclusters' VMs of the cluster on.\n"
                },
                "segmentHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterSegmentHost:MdbGreenplumClusterSegmentHost"
                    },
                    "description": "Info about hosts in segment subcluster.\n"
                },
                "segmentInHost": {
                    "type": "integer",
                    "description": "Number of segments on segment host (not more then 1 + RAM/8).\n"
                },
                "segmentSubcluster": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterSegmentSubcluster:MdbGreenplumClusterSegmentSubcluster",
                    "description": "Settings for segment subcluster.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of service account to use with Yandex Cloud resources (e.g. S3, Cloud Logging).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the hosts belongs. The subnet must be a part of the network to which the cluster belongs.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Greenplum cluster admin user name.\n"
                },
                "userPassword": {
                    "type": "string",
                    "description": "Greenplum cluster admin password name.\n",
                    "secret": true
                },
                "version": {
                    "type": "string",
                    "description": "Version of the Greenplum cluster. (`6.25`)\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "access",
                "assignPublicIp",
                "backupWindowStart",
                "cloudStorage",
                "createdAt",
                "deletionProtection",
                "environment",
                "folderId",
                "greenplumConfig",
                "health",
                "logging",
                "maintenanceWindow",
                "masterHostCount",
                "masterHostGroupIds",
                "masterHosts",
                "masterSubcluster",
                "name",
                "networkId",
                "poolerConfig",
                "pxfConfig",
                "segmentHostCount",
                "segmentHostGroupIds",
                "segmentHosts",
                "segmentInHost",
                "segmentSubcluster",
                "status",
                "subnetId",
                "userName",
                "userPassword",
                "version",
                "zone"
            ],
            "inputProperties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterAccess:MdbGreenplumClusterAccess",
                    "description": "Access policy to the Greenplum cluster.\n"
                },
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Sets whether the master hosts should get a public IP address on creation. Changing this parameter for an existing host\nis not supported at the moment.\n"
                },
                "backgroundActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivity:MdbGreenplumClusterBackgroundActivity"
                    },
                    "description": "Background activities settings.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterBackupWindowStart:MdbGreenplumClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC timezone.\n"
                },
                "cloudStorage": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterCloudStorage:MdbGreenplumClusterCloudStorage",
                    "description": "Cloud Storage settings of the Greenplum cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Greenplum cluster. (PRODUCTION, PRESTABLE)\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "greenplumConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Greenplum cluster config. Detail info in `Greenplum cluster settings` block.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logging": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterLogging:MdbGreenplumClusterLogging"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterMaintenanceWindow:MdbGreenplumClusterMaintenanceWindow",
                    "description": "Maintenance policy of the Greenplum cluster.\n"
                },
                "masterHostCount": {
                    "type": "integer",
                    "description": "Number of hosts in master subcluster (1 or 2).\n"
                },
                "masterHostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups to place master subclusters' VMs of the cluster on.\n"
                },
                "masterSubcluster": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterMasterSubcluster:MdbGreenplumClusterMasterSubcluster",
                    "description": "Settings for master subcluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "poolerConfig": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterPoolerConfig:MdbGreenplumClusterPoolerConfig",
                    "description": "Configuration of the connection pooler.\n"
                },
                "pxfConfig": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterPxfConfig:MdbGreenplumClusterPxfConfig",
                    "description": "Configuration of the PXF daemon.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "segmentHostCount": {
                    "type": "integer",
                    "description": "Number of hosts in segment subcluster (from 1 to 32).\n"
                },
                "segmentHostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups to place segment subclusters' VMs of the cluster on.\n"
                },
                "segmentInHost": {
                    "type": "integer",
                    "description": "Number of segments on segment host (not more then 1 + RAM/8).\n"
                },
                "segmentSubcluster": {
                    "$ref": "#/types/yandex:index/MdbGreenplumClusterSegmentSubcluster:MdbGreenplumClusterSegmentSubcluster",
                    "description": "Settings for segment subcluster.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of service account to use with Yandex Cloud resources (e.g. S3, Cloud Logging).\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet, to which the hosts belongs. The subnet must be a part of the network to which the cluster belongs.\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "Greenplum cluster admin user name.\n"
                },
                "userPassword": {
                    "type": "string",
                    "description": "Greenplum cluster admin password name.\n",
                    "secret": true
                },
                "version": {
                    "type": "string",
                    "description": "Version of the Greenplum cluster. (`6.25`)\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "assignPublicIp",
                "environment",
                "masterHostCount",
                "masterSubcluster",
                "networkId",
                "segmentHostCount",
                "segmentInHost",
                "segmentSubcluster",
                "subnetId",
                "userName",
                "userPassword",
                "version",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbGreenplumCluster resources.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterAccess:MdbGreenplumClusterAccess",
                        "description": "Access policy to the Greenplum cluster.\n"
                    },
                    "assignPublicIp": {
                        "type": "boolean",
                        "description": "Sets whether the master hosts should get a public IP address on creation. Changing this parameter for an existing host\nis not supported at the moment.\n"
                    },
                    "backgroundActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbGreenplumClusterBackgroundActivity:MdbGreenplumClusterBackgroundActivity"
                        },
                        "description": "Background activities settings.\n"
                    },
                    "backupWindowStart": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterBackupWindowStart:MdbGreenplumClusterBackupWindowStart",
                        "description": "Time to start the daily backup, in the UTC timezone.\n"
                    },
                    "cloudStorage": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterCloudStorage:MdbGreenplumClusterCloudStorage",
                        "description": "Cloud Storage settings of the Greenplum cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the Greenplum cluster. (PRODUCTION, PRESTABLE)\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "greenplumConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Greenplum cluster config. Detail info in `Greenplum cluster settings` block.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logging": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterLogging:MdbGreenplumClusterLogging"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterMaintenanceWindow:MdbGreenplumClusterMaintenanceWindow",
                        "description": "Maintenance policy of the Greenplum cluster.\n"
                    },
                    "masterHostCount": {
                        "type": "integer",
                        "description": "Number of hosts in master subcluster (1 or 2).\n"
                    },
                    "masterHostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs of the host groups to place master subclusters' VMs of the cluster on.\n"
                    },
                    "masterHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbGreenplumClusterMasterHost:MdbGreenplumClusterMasterHost"
                        },
                        "description": "Info about hosts in master subcluster.\n"
                    },
                    "masterSubcluster": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterMasterSubcluster:MdbGreenplumClusterMasterSubcluster",
                        "description": "Settings for master subcluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "poolerConfig": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterPoolerConfig:MdbGreenplumClusterPoolerConfig",
                        "description": "Configuration of the connection pooler.\n"
                    },
                    "pxfConfig": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterPxfConfig:MdbGreenplumClusterPxfConfig",
                        "description": "Configuration of the PXF daemon.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "segmentHostCount": {
                        "type": "integer",
                        "description": "Number of hosts in segment subcluster (from 1 to 32).\n"
                    },
                    "segmentHostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs of the host groups to place segment subclusters' VMs of the cluster on.\n"
                    },
                    "segmentHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbGreenplumClusterSegmentHost:MdbGreenplumClusterSegmentHost"
                        },
                        "description": "Info about hosts in segment subcluster.\n"
                    },
                    "segmentInHost": {
                        "type": "integer",
                        "description": "Number of segments on segment host (not more then 1 + RAM/8).\n"
                    },
                    "segmentSubcluster": {
                        "$ref": "#/types/yandex:index/MdbGreenplumClusterSegmentSubcluster:MdbGreenplumClusterSegmentSubcluster",
                        "description": "Settings for segment subcluster.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "ID of service account to use with Yandex Cloud resources (e.g. S3, Cloud Logging).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The ID of the subnet, to which the hosts belongs. The subnet must be a part of the network to which the cluster belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "Greenplum cluster admin user name.\n"
                    },
                    "userPassword": {
                        "type": "string",
                        "description": "Greenplum cluster admin password name.\n",
                        "secret": true
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the Greenplum cluster. (`6.25`)\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbKafkaCluster:MdbKafkaCluster": {
            "properties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfig:MdbKafkaClusterConfig",
                    "description": "Configuration of the Kafka cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups to place VMs of the cluster on.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterHost:MdbKafkaClusterHost"
                    },
                    "description": "A host of the Kafka cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterMaintenanceWindow:MdbKafkaClusterMaintenanceWindow",
                    "description": "Maintenance policy of the Kafka cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of VPC subnets identifiers which resource is attached.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterTopic:MdbKafkaClusterTopic"
                    },
                    "description": "To manage topics, please switch to using a separate resource type `yandex.MdbKafkaTopic`.\n",
                    "deprecationMessage": "to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterUser:MdbKafkaClusterUser"
                    },
                    "description": "To manage users, please switch to using a separate resource type `yandex.MdbKafkaUser`.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_kafka_user"
                }
            },
            "required": [
                "config",
                "createdAt",
                "deletionProtection",
                "folderId",
                "health",
                "hosts",
                "hostGroupIds",
                "labels",
                "maintenanceWindow",
                "name",
                "networkId",
                "securityGroupIds",
                "status"
            ],
            "inputProperties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterConfig:MdbKafkaClusterConfig",
                    "description": "Configuration of the Kafka cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups to place VMs of the cluster on.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbKafkaClusterMaintenanceWindow:MdbKafkaClusterMaintenanceWindow",
                    "description": "Maintenance policy of the Kafka cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of VPC subnets identifiers which resource is attached.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterTopic:MdbKafkaClusterTopic"
                    },
                    "description": "To manage topics, please switch to using a separate resource type `yandex.MdbKafkaTopic`.\n",
                    "deprecationMessage": "to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterUser:MdbKafkaClusterUser"
                    },
                    "description": "To manage users, please switch to using a separate resource type `yandex.MdbKafkaUser`.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_kafka_user"
                }
            },
            "requiredInputs": [
                "config",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbKafkaCluster resources.\n",
                "properties": {
                    "config": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterConfig:MdbKafkaClusterConfig",
                        "description": "Configuration of the Kafka cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).\n"
                    },
                    "hostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs of the host groups to place VMs of the cluster on.\n",
                        "willReplaceOnChanges": true
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbKafkaClusterHost:MdbKafkaClusterHost"
                        },
                        "description": "A host of the Kafka cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbKafkaClusterMaintenanceWindow:MdbKafkaClusterMaintenanceWindow",
                        "description": "Maintenance policy of the Kafka cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of VPC subnets identifiers which resource is attached.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbKafkaClusterTopic:MdbKafkaClusterTopic"
                        },
                        "description": "To manage topics, please switch to using a separate resource type `yandex.MdbKafkaTopic`.\n",
                        "deprecationMessage": "to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbKafkaClusterUser:MdbKafkaClusterUser"
                        },
                        "description": "To manage users, please switch to using a separate resource type `yandex.MdbKafkaUser`.\n",
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_kafka_user"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbKafkaConnector:MdbKafkaConnector": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka cluster.\n"
                },
                "connectorConfigMirrormakers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormaker:MdbKafkaConnectorConnectorConfigMirrormaker"
                    },
                    "description": "Settings for MirrorMaker2 connector.\n"
                },
                "connectorConfigS3Sinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigS3Sink:MdbKafkaConnectorConnectorConfigS3Sink"
                    },
                    "description": "Settings for S3 Sink connector.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional properties for connector.\n"
                },
                "tasksMax": {
                    "type": "integer",
                    "description": "The number of the connector's parallel working tasks. Default is the number of brokers.\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "properties"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka cluster.\n",
                    "willReplaceOnChanges": true
                },
                "connectorConfigMirrormakers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormaker:MdbKafkaConnectorConnectorConfigMirrormaker"
                    },
                    "description": "Settings for MirrorMaker2 connector.\n"
                },
                "connectorConfigS3Sinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigS3Sink:MdbKafkaConnectorConnectorConfigS3Sink"
                    },
                    "description": "Settings for S3 Sink connector.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n",
                    "willReplaceOnChanges": true
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional properties for connector.\n"
                },
                "tasksMax": {
                    "type": "integer",
                    "description": "The number of the connector's parallel working tasks. Default is the number of brokers.\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbKafkaConnector resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Kafka cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "connectorConfigMirrormakers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigMirrormaker:MdbKafkaConnectorConnectorConfigMirrormaker"
                        },
                        "description": "Settings for MirrorMaker2 connector.\n"
                    },
                    "connectorConfigS3Sinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbKafkaConnectorConnectorConfigS3Sink:MdbKafkaConnectorConnectorConfigS3Sink"
                        },
                        "description": "Settings for S3 Sink connector.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n",
                        "willReplaceOnChanges": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Additional properties for connector.\n"
                    },
                    "tasksMax": {
                        "type": "integer",
                        "description": "The number of the connector's parallel working tasks. Default is the number of brokers.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbKafkaTopic:MdbKafkaTopic": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of the topic's partitions.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "Amount of data copies (replicas) for the topic in the cluster.\n"
                },
                "topicConfig": {
                    "$ref": "#/types/yandex:index/MdbKafkaTopicTopicConfig:MdbKafkaTopicTopicConfig",
                    "description": "User-defined settings for the topic. For more information, see [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/concepts/settings-list#topic-settings) and [the Kafka\ndocumentation](https://kafka.apache.org/documentation/#topicconfigs).\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "partitions",
                "replicationFactor"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka cluster.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n",
                    "willReplaceOnChanges": true
                },
                "partitions": {
                    "type": "integer",
                    "description": "The number of the topic's partitions.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "Amount of data copies (replicas) for the topic in the cluster.\n"
                },
                "topicConfig": {
                    "$ref": "#/types/yandex:index/MdbKafkaTopicTopicConfig:MdbKafkaTopicTopicConfig",
                    "description": "User-defined settings for the topic. For more information, see [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/concepts/settings-list#topic-settings) and [the Kafka\ndocumentation](https://kafka.apache.org/documentation/#topicconfigs).\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "partitions",
                "replicationFactor"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbKafkaTopic resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Kafka cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n",
                        "willReplaceOnChanges": true
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "The number of the topic's partitions.\n"
                    },
                    "replicationFactor": {
                        "type": "integer",
                        "description": "Amount of data copies (replicas) for the topic in the cluster.\n"
                    },
                    "topicConfig": {
                        "$ref": "#/types/yandex:index/MdbKafkaTopicTopicConfig:MdbKafkaTopicTopicConfig",
                        "description": "User-defined settings for the topic. For more information, see [the official\ndocumentation](https://yandex.cloud/docs/managed-kafka/concepts/settings-list#topic-settings) and [the Kafka\ndocumentation](https://kafka.apache.org/documentation/#topicconfigs).\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbKafkaUser:MdbKafkaUser": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaUserPermission:MdbKafkaUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "password"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka cluster.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbKafkaUserPermission:MdbKafkaUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbKafkaUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Kafka cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the user.\n",
                        "secret": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbKafkaUserPermission:MdbKafkaUserPermission"
                        },
                        "description": "Set of permissions granted to the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbMongodbCluster:MdbMongodbCluster": {
            "properties": {
                "clusterConfig": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfig:MdbMongodbClusterClusterConfig",
                    "description": "Configuration of the MongoDB subcluster.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterDatabase:MdbMongodbClusterDatabase"
                    },
                    "description": "A database of the MongoDB cluster.\n",
                    "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mongodb_database"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskSizeAutoscalingMongocfg": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongocfg:MdbMongodbClusterDiskSizeAutoscalingMongocfg"
                },
                "diskSizeAutoscalingMongod": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongod:MdbMongodbClusterDiskSizeAutoscalingMongod"
                },
                "diskSizeAutoscalingMongoinfra": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongoinfra:MdbMongodbClusterDiskSizeAutoscalingMongoinfra"
                },
                "diskSizeAutoscalingMongos": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongos:MdbMongodbClusterDiskSizeAutoscalingMongos"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the MongoDB cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-mongodb/api-ref/Cluster/).\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterHost:MdbMongodbClusterHost"
                    },
                    "description": "A host of the MongoDB cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterMaintenanceWindow:MdbMongodbClusterMaintenanceWindow",
                    "description": "Maintenance window settings of the MongoDB cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResources:MdbMongodbClusterResources",
                    "description": "(**DEPRECATED**, use `resources_*` instead) Resources allocated to hosts of the MongoDB cluster.\n",
                    "deprecationMessage": "to manage `resources`s, please switch to using a separate resource type `resources_mongo*`"
                },
                "resourcesMongocfg": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongocfg:MdbMongodbClusterResourcesMongocfg",
                    "description": "Resources allocated to `mongocfg` hosts of the MongoDB cluster.\n"
                },
                "resourcesMongod": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongod:MdbMongodbClusterResourcesMongod",
                    "description": "Resources allocated to `mongod` hosts of the MongoDB cluster.\n"
                },
                "resourcesMongoinfra": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongoinfra:MdbMongodbClusterResourcesMongoinfra",
                    "description": "Resources allocated to `mongoinfra` hosts of the MongoDB cluster.\n"
                },
                "resourcesMongos": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongos:MdbMongodbClusterResourcesMongos",
                    "description": "Resources allocated to `mongos` hosts of the MongoDB cluster.\n"
                },
                "restore": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterRestore:MdbMongodbClusterRestore",
                    "description": "The cluster will be created from the specified backup.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sharded": {
                    "type": "boolean",
                    "description": "MongoDB Cluster mode enabled/disabled.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-mongodb/api-ref/Cluster/).\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterUser:MdbMongodbClusterUser"
                    },
                    "description": "A user of the MongoDB cluster.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mongodb_user"
                }
            },
            "required": [
                "clusterConfig",
                "clusterId",
                "createdAt",
                "databases",
                "deletionProtection",
                "diskSizeAutoscalingMongocfg",
                "diskSizeAutoscalingMongod",
                "diskSizeAutoscalingMongoinfra",
                "diskSizeAutoscalingMongos",
                "environment",
                "folderId",
                "health",
                "hosts",
                "labels",
                "maintenanceWindow",
                "name",
                "networkId",
                "sharded",
                "status",
                "users"
            ],
            "inputProperties": {
                "clusterConfig": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfig:MdbMongodbClusterClusterConfig",
                    "description": "Configuration of the MongoDB subcluster.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the cluster.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterDatabase:MdbMongodbClusterDatabase"
                    },
                    "description": "A database of the MongoDB cluster.\n",
                    "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mongodb_database"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskSizeAutoscalingMongocfg": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongocfg:MdbMongodbClusterDiskSizeAutoscalingMongocfg"
                },
                "diskSizeAutoscalingMongod": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongod:MdbMongodbClusterDiskSizeAutoscalingMongod"
                },
                "diskSizeAutoscalingMongoinfra": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongoinfra:MdbMongodbClusterDiskSizeAutoscalingMongoinfra"
                },
                "diskSizeAutoscalingMongos": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongos:MdbMongodbClusterDiskSizeAutoscalingMongos"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the MongoDB cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterHost:MdbMongodbClusterHost"
                    },
                    "description": "A host of the MongoDB cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterMaintenanceWindow:MdbMongodbClusterMaintenanceWindow",
                    "description": "Maintenance window settings of the MongoDB cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResources:MdbMongodbClusterResources",
                    "description": "(**DEPRECATED**, use `resources_*` instead) Resources allocated to hosts of the MongoDB cluster.\n",
                    "deprecationMessage": "to manage `resources`s, please switch to using a separate resource type `resources_mongo*`"
                },
                "resourcesMongocfg": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongocfg:MdbMongodbClusterResourcesMongocfg",
                    "description": "Resources allocated to `mongocfg` hosts of the MongoDB cluster.\n"
                },
                "resourcesMongod": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongod:MdbMongodbClusterResourcesMongod",
                    "description": "Resources allocated to `mongod` hosts of the MongoDB cluster.\n"
                },
                "resourcesMongoinfra": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongoinfra:MdbMongodbClusterResourcesMongoinfra",
                    "description": "Resources allocated to `mongoinfra` hosts of the MongoDB cluster.\n"
                },
                "resourcesMongos": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongos:MdbMongodbClusterResourcesMongos",
                    "description": "Resources allocated to `mongos` hosts of the MongoDB cluster.\n"
                },
                "restore": {
                    "$ref": "#/types/yandex:index/MdbMongodbClusterRestore:MdbMongodbClusterRestore",
                    "description": "The cluster will be created from the specified backup.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterUser:MdbMongodbClusterUser"
                    },
                    "description": "A user of the MongoDB cluster.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mongodb_user"
                }
            },
            "requiredInputs": [
                "clusterConfig",
                "environment",
                "hosts",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbMongodbCluster resources.\n",
                "properties": {
                    "clusterConfig": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterClusterConfig:MdbMongodbClusterClusterConfig",
                        "description": "Configuration of the MongoDB subcluster.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMongodbClusterDatabase:MdbMongodbClusterDatabase"
                        },
                        "description": "A database of the MongoDB cluster.\n",
                        "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mongodb_database"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "diskSizeAutoscalingMongocfg": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongocfg:MdbMongodbClusterDiskSizeAutoscalingMongocfg"
                    },
                    "diskSizeAutoscalingMongod": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongod:MdbMongodbClusterDiskSizeAutoscalingMongod"
                    },
                    "diskSizeAutoscalingMongoinfra": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongoinfra:MdbMongodbClusterDiskSizeAutoscalingMongoinfra"
                    },
                    "diskSizeAutoscalingMongos": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterDiskSizeAutoscalingMongos:MdbMongodbClusterDiskSizeAutoscalingMongos"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the MongoDB cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-mongodb/api-ref/Cluster/).\n"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMongodbClusterHost:MdbMongodbClusterHost"
                        },
                        "description": "A host of the MongoDB cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterMaintenanceWindow:MdbMongodbClusterMaintenanceWindow",
                        "description": "Maintenance window settings of the MongoDB cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterResources:MdbMongodbClusterResources",
                        "description": "(**DEPRECATED**, use `resources_*` instead) Resources allocated to hosts of the MongoDB cluster.\n",
                        "deprecationMessage": "to manage `resources`s, please switch to using a separate resource type `resources_mongo*`"
                    },
                    "resourcesMongocfg": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongocfg:MdbMongodbClusterResourcesMongocfg",
                        "description": "Resources allocated to `mongocfg` hosts of the MongoDB cluster.\n"
                    },
                    "resourcesMongod": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongod:MdbMongodbClusterResourcesMongod",
                        "description": "Resources allocated to `mongod` hosts of the MongoDB cluster.\n"
                    },
                    "resourcesMongoinfra": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongoinfra:MdbMongodbClusterResourcesMongoinfra",
                        "description": "Resources allocated to `mongoinfra` hosts of the MongoDB cluster.\n"
                    },
                    "resourcesMongos": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterResourcesMongos:MdbMongodbClusterResourcesMongos",
                        "description": "Resources allocated to `mongos` hosts of the MongoDB cluster.\n"
                    },
                    "restore": {
                        "$ref": "#/types/yandex:index/MdbMongodbClusterRestore:MdbMongodbClusterRestore",
                        "description": "The cluster will be created from the specified backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "sharded": {
                        "type": "boolean",
                        "description": "MongoDB Cluster mode enabled/disabled.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-mongodb/api-ref/Cluster/).\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMongodbClusterUser:MdbMongodbClusterUser"
                        },
                        "description": "A user of the MongoDB cluster.\n",
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mongodb_user"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbMysqlCluster:MdbMysqlCluster": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterAccess:MdbMysqlClusterAccess",
                    "description": "Access policy to the MySQL cluster.\n"
                },
                "allowRegenerationHost": {
                    "type": "boolean",
                    "deprecationMessage": "You can safely remove this option. There is no need to recreate host if assign_public_ip is changed."
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "The period in days during which backups are stored.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterBackupWindowStart:MdbMysqlClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterDatabase:MdbMysqlClusterDatabase"
                    },
                    "description": "To manage databases, please switch to using a separate resource type `yandex_mdb_mysql_databases`.\n",
                    "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mysql_database"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the MySQL cluster.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterHost:MdbMysqlClusterHost"
                    },
                    "description": "A host of the MySQL cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterMaintenanceWindow:MdbMysqlClusterMaintenanceWindow",
                    "description": "Maintenance policy of the MySQL cluster.\n"
                },
                "mysqlConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "MySQL cluster config block.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "performanceDiagnostics": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterPerformanceDiagnostics:MdbMysqlClusterPerformanceDiagnostics",
                    "description": "Cluster performance diagnostics settings. [YC\nDocumentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterResources:MdbMysqlClusterResources",
                    "description": "Resources allocated to hosts of the MySQL cluster.\n"
                },
                "restore": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterRestore:MdbMysqlClusterRestore",
                    "description": "The cluster will be created from the specified backup.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterUser:MdbMysqlClusterUser"
                    },
                    "description": "To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mysql_user"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).\n"
                }
            },
            "required": [
                "access",
                "backupRetainPeriodDays",
                "backupWindowStart",
                "createdAt",
                "deletionProtection",
                "environment",
                "folderId",
                "health",
                "hosts",
                "hostGroupIds",
                "maintenanceWindow",
                "mysqlConfig",
                "name",
                "networkId",
                "performanceDiagnostics",
                "resources",
                "status",
                "version"
            ],
            "inputProperties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterAccess:MdbMysqlClusterAccess",
                    "description": "Access policy to the MySQL cluster.\n"
                },
                "allowRegenerationHost": {
                    "type": "boolean",
                    "deprecationMessage": "You can safely remove this option. There is no need to recreate host if assign_public_ip is changed."
                },
                "backupRetainPeriodDays": {
                    "type": "integer",
                    "description": "The period in days during which backups are stored.\n"
                },
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterBackupWindowStart:MdbMysqlClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterDatabase:MdbMysqlClusterDatabase"
                    },
                    "description": "To manage databases, please switch to using a separate resource type `yandex_mdb_mysql_databases`.\n",
                    "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mysql_database"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the MySQL cluster.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterHost:MdbMysqlClusterHost"
                    },
                    "description": "A host of the MySQL cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterMaintenanceWindow:MdbMysqlClusterMaintenanceWindow",
                    "description": "Maintenance policy of the MySQL cluster.\n"
                },
                "mysqlConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "MySQL cluster config block.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "performanceDiagnostics": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterPerformanceDiagnostics:MdbMysqlClusterPerformanceDiagnostics",
                    "description": "Cluster performance diagnostics settings. [YC\nDocumentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterResources:MdbMysqlClusterResources",
                    "description": "Resources allocated to hosts of the MySQL cluster.\n"
                },
                "restore": {
                    "$ref": "#/types/yandex:index/MdbMysqlClusterRestore:MdbMysqlClusterRestore",
                    "description": "The cluster will be created from the specified backup.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterUser:MdbMysqlClusterUser"
                    },
                    "description": "To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mysql_user"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).\n"
                }
            },
            "requiredInputs": [
                "environment",
                "hosts",
                "networkId",
                "resources",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbMysqlCluster resources.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterAccess:MdbMysqlClusterAccess",
                        "description": "Access policy to the MySQL cluster.\n"
                    },
                    "allowRegenerationHost": {
                        "type": "boolean",
                        "deprecationMessage": "You can safely remove this option. There is no need to recreate host if assign_public_ip is changed."
                    },
                    "backupRetainPeriodDays": {
                        "type": "integer",
                        "description": "The period in days during which backups are stored.\n"
                    },
                    "backupWindowStart": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterBackupWindowStart:MdbMysqlClusterBackupWindowStart",
                        "description": "Time to start the daily backup, in the UTC.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMysqlClusterDatabase:MdbMysqlClusterDatabase"
                        },
                        "description": "To manage databases, please switch to using a separate resource type `yandex_mdb_mysql_databases`.\n",
                        "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mysql_database"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the MySQL cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster.\n"
                    },
                    "hostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMysqlClusterHost:MdbMysqlClusterHost"
                        },
                        "description": "A host of the MySQL cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterMaintenanceWindow:MdbMysqlClusterMaintenanceWindow",
                        "description": "Maintenance policy of the MySQL cluster.\n"
                    },
                    "mysqlConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "MySQL cluster config block.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "performanceDiagnostics": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterPerformanceDiagnostics:MdbMysqlClusterPerformanceDiagnostics",
                        "description": "Cluster performance diagnostics settings. [YC\nDocumentation](https://yandex.cloud/docs/managed-mysql/api-ref/grpc/cluster_service#PerformanceDiagnostics).\n"
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterResources:MdbMysqlClusterResources",
                        "description": "Resources allocated to hosts of the MySQL cluster.\n"
                    },
                    "restore": {
                        "$ref": "#/types/yandex:index/MdbMysqlClusterRestore:MdbMysqlClusterRestore",
                        "description": "The cluster will be created from the specified backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMysqlClusterUser:MdbMysqlClusterUser"
                        },
                        "description": "To manage users, please switch to using a separate resource type `yandex.MdbMysqlUser`.\n",
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mysql_user"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbMysqlDatabase:MdbMysqlDatabase": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The MySQL cluster ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "required": [
                "clusterId",
                "name"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The MySQL cluster ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database.\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbMysqlDatabase resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The MySQL cluster ID.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the database.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbMysqlUser:MdbMysqlUser": {
            "properties": {
                "authenticationPlugin": {
                    "type": "string",
                    "description": "Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version\n5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the MySQL cluster.\n"
                },
                "connectionLimits": {
                    "$ref": "#/types/yandex:index/MdbMysqlUserConnectionLimits:MdbMysqlUserConnectionLimits",
                    "description": "User's connection limits. If the attribute is not specified there will be no changes. Default value is `-1`. When these\nparameters are set to `-1`, backend default values will be actually used.\n"
                },
                "connectionManager": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Connection Manager connection configuration. Filled in by the server automatically.\n"
                },
                "generatePassword": {
                    "type": "boolean",
                    "description": "Generate password using Connection Manager. Allowed values: `true` or `false`. It's used only during user creation and\nis ignored during updating. \u003e **Must specify either password or generate_password**.\n"
                },
                "globalPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List user's global permissions. Allowed permissions: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list\nuse empty list. If the attribute is not specified there will be no changes.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlUserPermission:MdbMysqlUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "required": [
                "authenticationPlugin",
                "clusterId",
                "connectionLimits",
                "connectionManager",
                "globalPermissions",
                "name",
                "permissions"
            ],
            "inputProperties": {
                "authenticationPlugin": {
                    "type": "string",
                    "description": "Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version\n5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the MySQL cluster.\n",
                    "willReplaceOnChanges": true
                },
                "connectionLimits": {
                    "$ref": "#/types/yandex:index/MdbMysqlUserConnectionLimits:MdbMysqlUserConnectionLimits",
                    "description": "User's connection limits. If the attribute is not specified there will be no changes. Default value is `-1`. When these\nparameters are set to `-1`, backend default values will be actually used.\n"
                },
                "generatePassword": {
                    "type": "boolean",
                    "description": "Generate password using Connection Manager. Allowed values: `true` or `false`. It's used only during user creation and\nis ignored during updating. \u003e **Must specify either password or generate_password**.\n"
                },
                "globalPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List user's global permissions. Allowed permissions: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list\nuse empty list. If the attribute is not specified there will be no changes.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbMysqlUserPermission:MdbMysqlUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbMysqlUser resources.\n",
                "properties": {
                    "authenticationPlugin": {
                        "type": "string",
                        "description": "Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version\n5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the MySQL cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "connectionLimits": {
                        "$ref": "#/types/yandex:index/MdbMysqlUserConnectionLimits:MdbMysqlUserConnectionLimits",
                        "description": "User's connection limits. If the attribute is not specified there will be no changes. Default value is `-1`. When these\nparameters are set to `-1`, backend default values will be actually used.\n"
                    },
                    "connectionManager": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Connection Manager connection configuration. Filled in by the server automatically.\n"
                    },
                    "generatePassword": {
                        "type": "boolean",
                        "description": "Generate password using Connection Manager. Allowed values: `true` or `false`. It's used only during user creation and\nis ignored during updating. \u003e **Must specify either password or generate_password**.\n"
                    },
                    "globalPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List user's global permissions. Allowed permissions: `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list\nuse empty list. If the attribute is not specified there will be no changes.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the user.\n",
                        "secret": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbMysqlUserPermission:MdbMysqlUserPermission"
                        },
                        "description": "Set of permissions granted to the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster": {
            "properties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfig:MdbPostgresqlClusterConfig",
                    "description": "Configuration of the PostgreSQL cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterDatabase:MdbPostgresqlClusterDatabase"
                    },
                    "description": "\u003e Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.\n",
                    "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the PostgreSQL cluster.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host Group IDs.\n"
                },
                "hostMasterName": {
                    "type": "string",
                    "deprecationMessage": "It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support."
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterHost:MdbPostgresqlClusterHost"
                    },
                    "description": "A host of the PostgreSQL cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterMaintenanceWindow:MdbPostgresqlClusterMaintenanceWindow",
                    "description": "Maintenance policy of the PostgreSQL cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "restore": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterRestore:MdbPostgresqlClusterRestore",
                    "description": "The cluster will be created from the specified backup.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterUser:MdbPostgresqlClusterUser"
                    },
                    "description": "\u003e Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user"
                }
            },
            "required": [
                "config",
                "createdAt",
                "deletionProtection",
                "environment",
                "folderId",
                "health",
                "hosts",
                "hostGroupIds",
                "hostMasterName",
                "labels",
                "maintenanceWindow",
                "name",
                "networkId",
                "securityGroupIds",
                "status"
            ],
            "inputProperties": {
                "config": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfig:MdbPostgresqlClusterConfig",
                    "description": "Configuration of the PostgreSQL cluster.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterDatabase:MdbPostgresqlClusterDatabase"
                    },
                    "description": "\u003e Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.\n",
                    "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the PostgreSQL cluster.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Host Group IDs.\n"
                },
                "hostMasterName": {
                    "type": "string",
                    "deprecationMessage": "It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support."
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterHost:MdbPostgresqlClusterHost"
                    },
                    "description": "A host of the PostgreSQL cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterMaintenanceWindow:MdbPostgresqlClusterMaintenanceWindow",
                    "description": "Maintenance policy of the PostgreSQL cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "restore": {
                    "$ref": "#/types/yandex:index/MdbPostgresqlClusterRestore:MdbPostgresqlClusterRestore",
                    "description": "The cluster will be created from the specified backup.\n",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterUser:MdbPostgresqlClusterUser"
                    },
                    "description": "\u003e Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.\n",
                    "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user"
                }
            },
            "requiredInputs": [
                "config",
                "environment",
                "hosts",
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbPostgresqlCluster resources.\n",
                "properties": {
                    "config": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterConfig:MdbPostgresqlClusterConfig",
                        "description": "Configuration of the PostgreSQL cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbPostgresqlClusterDatabase:MdbPostgresqlClusterDatabase"
                        },
                        "description": "\u003e Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.\n",
                        "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the PostgreSQL cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster.\n"
                    },
                    "hostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Host Group IDs.\n"
                    },
                    "hostMasterName": {
                        "type": "string",
                        "deprecationMessage": "It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support."
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbPostgresqlClusterHost:MdbPostgresqlClusterHost"
                        },
                        "description": "A host of the PostgreSQL cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterMaintenanceWindow:MdbPostgresqlClusterMaintenanceWindow",
                        "description": "Maintenance policy of the PostgreSQL cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                    },
                    "restore": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlClusterRestore:MdbPostgresqlClusterRestore",
                        "description": "The cluster will be created from the specified backup.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbPostgresqlClusterUser:MdbPostgresqlClusterUser"
                        },
                        "description": "\u003e Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.\n",
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the PostgreSQL cluster.\n"
                },
                "deletionProtection": {
                    "type": "string",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlDatabaseExtension:MdbPostgresqlDatabaseExtension"
                    },
                    "description": "Set of database extensions.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "POSIX locale for string sorting order. Forbidden to change in an existing database.\n"
                },
                "lcType": {
                    "type": "string",
                    "description": "POSIX locale for character classification. Forbidden to change in an existing database.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Name of the user assigned as the owner of the database. Forbidden to change in an existing database.\n"
                },
                "templateDb": {
                    "type": "string",
                    "description": "Name of the template database.\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "owner"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the PostgreSQL cluster.\n"
                },
                "deletionProtection": {
                    "type": "string",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlDatabaseExtension:MdbPostgresqlDatabaseExtension"
                    },
                    "description": "Set of database extensions.\n"
                },
                "lcCollate": {
                    "type": "string",
                    "description": "POSIX locale for string sorting order. Forbidden to change in an existing database.\n",
                    "willReplaceOnChanges": true
                },
                "lcType": {
                    "type": "string",
                    "description": "POSIX locale for character classification. Forbidden to change in an existing database.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Name of the user assigned as the owner of the database. Forbidden to change in an existing database.\n",
                    "willReplaceOnChanges": true
                },
                "templateDb": {
                    "type": "string",
                    "description": "Name of the template database.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "owner"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbPostgresqlDatabase resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the PostgreSQL cluster.\n"
                    },
                    "deletionProtection": {
                        "type": "string",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbPostgresqlDatabaseExtension:MdbPostgresqlDatabaseExtension"
                        },
                        "description": "Set of database extensions.\n"
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "POSIX locale for string sorting order. Forbidden to change in an existing database.\n",
                        "willReplaceOnChanges": true
                    },
                    "lcType": {
                        "type": "string",
                        "description": "POSIX locale for character classification. Forbidden to change in an existing database.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Name of the user assigned as the owner of the database. Forbidden to change in an existing database.\n",
                        "willReplaceOnChanges": true
                    },
                    "templateDb": {
                        "type": "string",
                        "description": "Name of the template database.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbPostgresqlUser:MdbPostgresqlUser": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the PostgreSQL cluster.\n"
                },
                "connLimit": {
                    "type": "integer",
                    "description": "The maximum number of connections per user. (Default 50).\n"
                },
                "connectionManager": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Connection Manager connection configuration. Filled in by the server automatically.\n"
                },
                "deletionProtection": {
                    "type": "string",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "generatePassword": {
                    "type": "boolean",
                    "description": "Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is\nignored during updating. \u003e **Must specify either password or generate_password**.\n"
                },
                "grants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the user's grants.\n"
                },
                "login": {
                    "type": "boolean",
                    "description": "User's ability to login.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlUserPermission:MdbPostgresqlUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of user settings. [Full\ndescription](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).\n* `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:\n- 0: `unspecified` - 1: `read uncommitted` - 2: `read committed` - 3: `repeatable read` - 4: `serializable` *\n`lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index,\nrow or other database object (default 0) * `log_min_duration_statement` - This setting controls logging of the duration\nof statements. (default -1 disables logging of the duration of statements.) * `synchronous_commit` - This setting\ndefines whether DBMS will commit transaction in a synchronous way. One of: - 0: `unspecified` - 1: `on` - 2: `off` - 3:\n`local` - 4: `remote write` - 5: `remote apply` * `temp_file_limit` - The maximum storage space size (in kilobytes) that\na single process can use to create temporary files. * `log_statement` - This setting specifies which SQL statements\nshould be logged (on the user level). One of: - 0: `unspecified` - 1: `none` - 2: `ddl` - 3: `mod` - 4: `all` *\n`pool_mode` - Mode that the connection pooler is working in with specified user. One of: - 1: `session` - 2:\n`transaction` - 3: `statement` * `prepared_statements_pooling` - This setting allows user to use prepared statements\nwith transaction pooling. Boolean. * `catchup_timeout` - The connection pooler setting. It determines the maximum\nallowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold.\nDefault value is 0, which disables this feature. Integer. * `wal_sender_timeout` - The maximum time (in milliseconds) to\nwait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for\nlonger than this amount of time. Integer. * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time\n(in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer. *\n`statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the\ntimeout. Integer\n"
                }
            },
            "required": [
                "clusterId",
                "connLimit",
                "connectionManager",
                "name"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the PostgreSQL cluster.\n",
                    "willReplaceOnChanges": true
                },
                "connLimit": {
                    "type": "integer",
                    "description": "The maximum number of connections per user. (Default 50).\n"
                },
                "deletionProtection": {
                    "type": "string",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "generatePassword": {
                    "type": "boolean",
                    "description": "Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is\nignored during updating. \u003e **Must specify either password or generate_password**.\n"
                },
                "grants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the user's grants.\n"
                },
                "login": {
                    "type": "boolean",
                    "description": "User's ability to login.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user.\n",
                    "secret": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbPostgresqlUserPermission:MdbPostgresqlUserPermission"
                    },
                    "description": "Set of permissions granted to the user.\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of user settings. [Full\ndescription](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).\n* `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:\n- 0: `unspecified` - 1: `read uncommitted` - 2: `read committed` - 3: `repeatable read` - 4: `serializable` *\n`lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index,\nrow or other database object (default 0) * `log_min_duration_statement` - This setting controls logging of the duration\nof statements. (default -1 disables logging of the duration of statements.) * `synchronous_commit` - This setting\ndefines whether DBMS will commit transaction in a synchronous way. One of: - 0: `unspecified` - 1: `on` - 2: `off` - 3:\n`local` - 4: `remote write` - 5: `remote apply` * `temp_file_limit` - The maximum storage space size (in kilobytes) that\na single process can use to create temporary files. * `log_statement` - This setting specifies which SQL statements\nshould be logged (on the user level). One of: - 0: `unspecified` - 1: `none` - 2: `ddl` - 3: `mod` - 4: `all` *\n`pool_mode` - Mode that the connection pooler is working in with specified user. One of: - 1: `session` - 2:\n`transaction` - 3: `statement` * `prepared_statements_pooling` - This setting allows user to use prepared statements\nwith transaction pooling. Boolean. * `catchup_timeout` - The connection pooler setting. It determines the maximum\nallowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold.\nDefault value is 0, which disables this feature. Integer. * `wal_sender_timeout` - The maximum time (in milliseconds) to\nwait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for\nlonger than this amount of time. Integer. * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time\n(in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer. *\n`statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the\ntimeout. Integer\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbPostgresqlUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the PostgreSQL cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "connLimit": {
                        "type": "integer",
                        "description": "The maximum number of connections per user. (Default 50).\n"
                    },
                    "connectionManager": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Connection Manager connection configuration. Filled in by the server automatically.\n"
                    },
                    "deletionProtection": {
                        "type": "string",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "generatePassword": {
                        "type": "boolean",
                        "description": "Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is\nignored during updating. \u003e **Must specify either password or generate_password**.\n"
                    },
                    "grants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the user's grants.\n"
                    },
                    "login": {
                        "type": "boolean",
                        "description": "User's ability to login.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the user.\n",
                        "secret": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbPostgresqlUserPermission:MdbPostgresqlUserPermission"
                        },
                        "description": "Set of permissions granted to the user.\n"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of user settings. [Full\ndescription](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).\n* `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:\n- 0: `unspecified` - 1: `read uncommitted` - 2: `read committed` - 3: `repeatable read` - 4: `serializable` *\n`lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index,\nrow or other database object (default 0) * `log_min_duration_statement` - This setting controls logging of the duration\nof statements. (default -1 disables logging of the duration of statements.) * `synchronous_commit` - This setting\ndefines whether DBMS will commit transaction in a synchronous way. One of: - 0: `unspecified` - 1: `on` - 2: `off` - 3:\n`local` - 4: `remote write` - 5: `remote apply` * `temp_file_limit` - The maximum storage space size (in kilobytes) that\na single process can use to create temporary files. * `log_statement` - This setting specifies which SQL statements\nshould be logged (on the user level). One of: - 0: `unspecified` - 1: `none` - 2: `ddl` - 3: `mod` - 4: `all` *\n`pool_mode` - Mode that the connection pooler is working in with specified user. One of: - 1: `session` - 2:\n`transaction` - 3: `statement` * `prepared_statements_pooling` - This setting allows user to use prepared statements\nwith transaction pooling. Boolean. * `catchup_timeout` - The connection pooler setting. It determines the maximum\nallowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold.\nDefault value is 0, which disables this feature. Integer. * `wal_sender_timeout` - The maximum time (in milliseconds) to\nwait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for\nlonger than this amount of time. Integer. * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time\n(in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer. *\n`statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the\ntimeout. Integer\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbRedisCluster:MdbRedisCluster": {
            "properties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterAccess:MdbRedisClusterAccess",
                    "description": "Access policy to the Redis cluster.\n"
                },
                "announceHostnames": {
                    "type": "boolean",
                    "description": "Announce fqdn instead of ip address.\n"
                },
                "authSentinel": {
                    "type": "boolean",
                    "description": "Allows to use ACL users to auth in sentinel\n"
                },
                "config": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterConfig:MdbRedisClusterConfig",
                    "description": "Configuration of the Redis cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskSizeAutoscaling": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterDiskSizeAutoscaling:MdbRedisClusterDiskSizeAutoscaling",
                    "description": "Disk size autoscaling settings.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Redis cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterHost:MdbRedisClusterHost"
                    },
                    "description": "A host of the Redis cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterMaintenanceWindow:MdbRedisClusterMaintenanceWindow",
                    "description": "Maintenance window settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "persistenceMode": {
                    "type": "string",
                    "description": "Persistence mode. Possible values: `ON`, `OFF`.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterResources:MdbRedisClusterResources",
                    "description": "Resources allocated to hosts of the Redis cluster.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sharded": {
                    "type": "boolean",
                    "description": "Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not\nallowed.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "TLS support mode enabled/disabled.\n"
                }
            },
            "required": [
                "access",
                "config",
                "createdAt",
                "deletionProtection",
                "diskSizeAutoscaling",
                "environment",
                "folderId",
                "health",
                "hosts",
                "maintenanceWindow",
                "name",
                "networkId",
                "persistenceMode",
                "resources",
                "status",
                "tlsEnabled"
            ],
            "inputProperties": {
                "access": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterAccess:MdbRedisClusterAccess",
                    "description": "Access policy to the Redis cluster.\n"
                },
                "announceHostnames": {
                    "type": "boolean",
                    "description": "Announce fqdn instead of ip address.\n"
                },
                "authSentinel": {
                    "type": "boolean",
                    "description": "Allows to use ACL users to auth in sentinel\n"
                },
                "config": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterConfig:MdbRedisClusterConfig",
                    "description": "Configuration of the Redis cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "diskSizeAutoscaling": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterDiskSizeAutoscaling:MdbRedisClusterDiskSizeAutoscaling",
                    "description": "Disk size autoscaling settings.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the Redis cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterHost:MdbRedisClusterHost"
                    },
                    "description": "A host of the Redis cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterMaintenanceWindow:MdbRedisClusterMaintenanceWindow",
                    "description": "Maintenance window settings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "persistenceMode": {
                    "type": "string",
                    "description": "Persistence mode. Possible values: `ON`, `OFF`.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbRedisClusterResources:MdbRedisClusterResources",
                    "description": "Resources allocated to hosts of the Redis cluster.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sharded": {
                    "type": "boolean",
                    "description": "Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not\nallowed.\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "TLS support mode enabled/disabled.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "config",
                "environment",
                "hosts",
                "networkId",
                "resources"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbRedisCluster resources.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterAccess:MdbRedisClusterAccess",
                        "description": "Access policy to the Redis cluster.\n"
                    },
                    "announceHostnames": {
                        "type": "boolean",
                        "description": "Announce fqdn instead of ip address.\n"
                    },
                    "authSentinel": {
                        "type": "boolean",
                        "description": "Allows to use ACL users to auth in sentinel\n"
                    },
                    "config": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterConfig:MdbRedisClusterConfig",
                        "description": "Configuration of the Redis cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "diskSizeAutoscaling": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterDiskSizeAutoscaling:MdbRedisClusterDiskSizeAutoscaling",
                        "description": "Disk size autoscaling settings.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the Redis cluster. Can be either `PRESTABLE` or `PRODUCTION`.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information\nsee `health` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).\n"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbRedisClusterHost:MdbRedisClusterHost"
                        },
                        "description": "A host of the Redis cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterMaintenanceWindow:MdbRedisClusterMaintenanceWindow",
                        "description": "Maintenance window settings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "persistenceMode": {
                        "type": "string",
                        "description": "Persistence mode. Possible values: `ON`, `OFF`.\n"
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/MdbRedisClusterResources:MdbRedisClusterResources",
                        "description": "Resources allocated to hosts of the Redis cluster.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "sharded": {
                        "type": "boolean",
                        "description": "Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not\nallowed.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or\n`STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official\ndocumentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).\n"
                    },
                    "tlsEnabled": {
                        "type": "boolean",
                        "description": "TLS support mode enabled/disabled.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/mdbSqlserverCluster:MdbSqlserverCluster": {
            "properties": {
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbSqlserverClusterBackupWindowStart:MdbSqlserverClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterDatabase:MdbSqlserverClusterDatabase"
                    },
                    "description": "A database of the SQLServer cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "health": {
                    "type": "string",
                    "description": "Aggregated health of the cluster.\n"
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups hosting VMs of the cluster.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterHost:MdbSqlserverClusterHost"
                    },
                    "description": "A host of the SQLServer cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbSqlserverClusterResources:MdbSqlserverClusterResources",
                    "description": "Resources allocated to hosts of the SQLServer cluster.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sqlcollation": {
                    "type": "string",
                    "description": "SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!\n"
                },
                "sqlserverConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SQLServer cluster config. Detail info in `SQLServer config` section.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterUser:MdbSqlserverClusterUser"
                    },
                    "description": "A user of the SQLServer cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the SQLServer cluster. (2016sp2std, 2016sp2ent).\n"
                }
            },
            "required": [
                "backupWindowStart",
                "createdAt",
                "databases",
                "deletionProtection",
                "environment",
                "folderId",
                "health",
                "hosts",
                "hostGroupIds",
                "name",
                "networkId",
                "resources",
                "sqlcollation",
                "sqlserverConfig",
                "status",
                "users",
                "version"
            ],
            "inputProperties": {
                "backupWindowStart": {
                    "$ref": "#/types/yandex:index/MdbSqlserverClusterBackupWindowStart:MdbSqlserverClusterBackupWindowStart",
                    "description": "Time to start the daily backup, in the UTC.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterDatabase:MdbSqlserverClusterDatabase"
                    },
                    "description": "A database of the SQLServer cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "hostGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs of the host groups hosting VMs of the cluster.\n",
                    "willReplaceOnChanges": true
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterHost:MdbSqlserverClusterHost"
                    },
                    "description": "A host of the SQLServer cluster.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "$ref": "#/types/yandex:index/MdbSqlserverClusterResources:MdbSqlserverClusterResources",
                    "description": "Resources allocated to hosts of the SQLServer cluster.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sqlcollation": {
                    "type": "string",
                    "description": "SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!\n"
                },
                "sqlserverConfig": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SQLServer cluster config. Detail info in `SQLServer config` section.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterUser:MdbSqlserverClusterUser"
                    },
                    "description": "A user of the SQLServer cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the SQLServer cluster. (2016sp2std, 2016sp2ent).\n"
                }
            },
            "requiredInputs": [
                "databases",
                "environment",
                "hosts",
                "networkId",
                "resources",
                "users",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdbSqlserverCluster resources.\n",
                "properties": {
                    "backupWindowStart": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterBackupWindowStart:MdbSqlserverClusterBackupWindowStart",
                        "description": "Time to start the daily backup, in the UTC.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbSqlserverClusterDatabase:MdbSqlserverClusterDatabase"
                        },
                        "description": "A database of the SQLServer cluster.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "health": {
                        "type": "string",
                        "description": "Aggregated health of the cluster.\n"
                    },
                    "hostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs of the host groups hosting VMs of the cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbSqlserverClusterHost:MdbSqlserverClusterHost"
                        },
                        "description": "A host of the SQLServer cluster.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/MdbSqlserverClusterResources:MdbSqlserverClusterResources",
                        "description": "Resources allocated to hosts of the SQLServer cluster.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "sqlcollation": {
                        "type": "string",
                        "description": "SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!\n"
                    },
                    "sqlserverConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "SQLServer cluster config. Detail info in `SQLServer config` section.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MdbSqlserverClusterUser:MdbSqlserverClusterUser"
                        },
                        "description": "A user of the SQLServer cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the SQLServer cluster. (2016sp2std, 2016sp2ent).\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/messageQueue:MessageQueue": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The [access key](https://yandex.cloud/docs/iam/operations/sa/create-access-key) to use when applying changes. If\nomitted, `ymq_access_key` specified in provider config is used. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/quickstart).\n"
                },
                "arn": {
                    "type": "string",
                    "description": "ARN of the Yandex Message Queue. It is used for setting up a [redrive\npolicy](https://yandex.cloud/docs/message-queue/concepts/dlq). See\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/SetQueueAttributes).\n"
                },
                "contentBasedDeduplication": {
                    "type": "boolean",
                    "description": "Enables [content-based\ndeduplication](https://yandex.cloud/docs/message-queue/concepts/deduplication#content-based-deduplication). Can be used\nonly if queue is [FIFO](https://yandex.cloud/docs/message-queue/concepts/queue#fifo-queues).\n"
                },
                "delaySeconds": {
                    "type": "integer",
                    "description": "Number of seconds to [delay the message from being available for\nprocessing](https://yandex.cloud/docs/message-queue/concepts/delay-queues#delay-queues). Valid values: from 0 to 900\nseconds (15 minutes). Default: 0.\n"
                },
                "fifoQueue": {
                    "type": "boolean",
                    "description": "Is this queue [FIFO](https://yandex.cloud/docs/message-queue/concepts/queue#fifo-queues). If this parameter is not used,\na standard queue is created. You cannot change the parameter value for a created queue.\n"
                },
                "maxMessageSize": {
                    "type": "integer",
                    "description": "Maximum message size in bytes. Valid values: from 1024 bytes (1 KB) to 262144 bytes (256 KB). Default: 262144 (256 KB).\nFor more information see [documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                },
                "messageRetentionSeconds": {
                    "type": "integer",
                    "description": "The length of time in seconds to retain a message. Valid values: from 60 seconds (1 minute) to 1209600 seconds (14\ndays). Default: 345600 (4 days). For more information see\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Queue name. The maximum length is 80 characters. You can use numbers, letters, underscores, and hyphens in the name. The\nname of a FIFO queue must end with the `.fifo` suffix. If not specified, random name will be generated. Conflicts with\n`name_prefix`. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                },
                "namePrefix": {
                    "type": "string",
                    "description": "Generates random name with the specified prefix. Conflicts with `name`.\n"
                },
                "receiveWaitTimeSeconds": {
                    "type": "integer",
                    "description": "Wait time for the [ReceiveMessage](https://yandex.cloud/docs/message-queue/api-ref/message/ReceiveMessage) method (for\nlong polling), in seconds. Valid values: from 0 to 20 seconds. Default: 0. For more information about long polling see\n[documentation](https://yandex.cloud/docs/message-queue/concepts/long-polling).\n"
                },
                "redrivePolicy": {
                    "type": "string",
                    "description": "Message redrive policy in [Dead Letter Queue](https://yandex.cloud/docs/message-queue/concepts/dlq). The source queue\nand DLQ must be the same type: for FIFO queues, the DLQ must also be a FIFO queue. For more information about redrive\npolicy see [documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue). Also you can use example\nin this page.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "ID of the region where the message queue is located at. The default is 'ru-central1'.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The [secret key](https://yandex.cloud/docs/iam/operations/sa/create-access-key) to use when applying changes. If\nomitted, `ymq_secret_key` specified in provider config is used. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/quickstart).\n",
                    "secret": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SQS tags\n"
                },
                "visibilityTimeoutSeconds": {
                    "type": "integer",
                    "description": "[Visibility timeout](https://yandex.cloud/docs/message-queue/concepts/visibility-timeout) for messages in a queue,\nspecified in seconds. Valid values: from 0 to 43200 seconds (12 hours). Default: 30.\n"
                }
            },
            "required": [
                "arn",
                "name"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The [access key](https://yandex.cloud/docs/iam/operations/sa/create-access-key) to use when applying changes. If\nomitted, `ymq_access_key` specified in provider config is used. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/quickstart).\n"
                },
                "contentBasedDeduplication": {
                    "type": "boolean",
                    "description": "Enables [content-based\ndeduplication](https://yandex.cloud/docs/message-queue/concepts/deduplication#content-based-deduplication). Can be used\nonly if queue is [FIFO](https://yandex.cloud/docs/message-queue/concepts/queue#fifo-queues).\n"
                },
                "delaySeconds": {
                    "type": "integer",
                    "description": "Number of seconds to [delay the message from being available for\nprocessing](https://yandex.cloud/docs/message-queue/concepts/delay-queues#delay-queues). Valid values: from 0 to 900\nseconds (15 minutes). Default: 0.\n"
                },
                "fifoQueue": {
                    "type": "boolean",
                    "description": "Is this queue [FIFO](https://yandex.cloud/docs/message-queue/concepts/queue#fifo-queues). If this parameter is not used,\na standard queue is created. You cannot change the parameter value for a created queue.\n",
                    "willReplaceOnChanges": true
                },
                "maxMessageSize": {
                    "type": "integer",
                    "description": "Maximum message size in bytes. Valid values: from 1024 bytes (1 KB) to 262144 bytes (256 KB). Default: 262144 (256 KB).\nFor more information see [documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                },
                "messageRetentionSeconds": {
                    "type": "integer",
                    "description": "The length of time in seconds to retain a message. Valid values: from 60 seconds (1 minute) to 1209600 seconds (14\ndays). Default: 345600 (4 days). For more information see\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Queue name. The maximum length is 80 characters. You can use numbers, letters, underscores, and hyphens in the name. The\nname of a FIFO queue must end with the `.fifo` suffix. If not specified, random name will be generated. Conflicts with\n`name_prefix`. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n",
                    "willReplaceOnChanges": true
                },
                "namePrefix": {
                    "type": "string",
                    "description": "Generates random name with the specified prefix. Conflicts with `name`.\n",
                    "willReplaceOnChanges": true
                },
                "receiveWaitTimeSeconds": {
                    "type": "integer",
                    "description": "Wait time for the [ReceiveMessage](https://yandex.cloud/docs/message-queue/api-ref/message/ReceiveMessage) method (for\nlong polling), in seconds. Valid values: from 0 to 20 seconds. Default: 0. For more information about long polling see\n[documentation](https://yandex.cloud/docs/message-queue/concepts/long-polling).\n"
                },
                "redrivePolicy": {
                    "type": "string",
                    "description": "Message redrive policy in [Dead Letter Queue](https://yandex.cloud/docs/message-queue/concepts/dlq). The source queue\nand DLQ must be the same type: for FIFO queues, the DLQ must also be a FIFO queue. For more information about redrive\npolicy see [documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue). Also you can use example\nin this page.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "ID of the region where the message queue is located at. The default is 'ru-central1'.\n",
                    "willReplaceOnChanges": true
                },
                "secretKey": {
                    "type": "string",
                    "description": "The [secret key](https://yandex.cloud/docs/iam/operations/sa/create-access-key) to use when applying changes. If\nomitted, `ymq_secret_key` specified in provider config is used. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/quickstart).\n",
                    "secret": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SQS tags\n"
                },
                "visibilityTimeoutSeconds": {
                    "type": "integer",
                    "description": "[Visibility timeout](https://yandex.cloud/docs/message-queue/concepts/visibility-timeout) for messages in a queue,\nspecified in seconds. Valid values: from 0 to 43200 seconds (12 hours). Default: 30.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MessageQueue resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The [access key](https://yandex.cloud/docs/iam/operations/sa/create-access-key) to use when applying changes. If\nomitted, `ymq_access_key` specified in provider config is used. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/quickstart).\n"
                    },
                    "arn": {
                        "type": "string",
                        "description": "ARN of the Yandex Message Queue. It is used for setting up a [redrive\npolicy](https://yandex.cloud/docs/message-queue/concepts/dlq). See\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/SetQueueAttributes).\n"
                    },
                    "contentBasedDeduplication": {
                        "type": "boolean",
                        "description": "Enables [content-based\ndeduplication](https://yandex.cloud/docs/message-queue/concepts/deduplication#content-based-deduplication). Can be used\nonly if queue is [FIFO](https://yandex.cloud/docs/message-queue/concepts/queue#fifo-queues).\n"
                    },
                    "delaySeconds": {
                        "type": "integer",
                        "description": "Number of seconds to [delay the message from being available for\nprocessing](https://yandex.cloud/docs/message-queue/concepts/delay-queues#delay-queues). Valid values: from 0 to 900\nseconds (15 minutes). Default: 0.\n"
                    },
                    "fifoQueue": {
                        "type": "boolean",
                        "description": "Is this queue [FIFO](https://yandex.cloud/docs/message-queue/concepts/queue#fifo-queues). If this parameter is not used,\na standard queue is created. You cannot change the parameter value for a created queue.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxMessageSize": {
                        "type": "integer",
                        "description": "Maximum message size in bytes. Valid values: from 1024 bytes (1 KB) to 262144 bytes (256 KB). Default: 262144 (256 KB).\nFor more information see [documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                    },
                    "messageRetentionSeconds": {
                        "type": "integer",
                        "description": "The length of time in seconds to retain a message. Valid values: from 60 seconds (1 minute) to 1209600 seconds (14\ndays). Default: 345600 (4 days). For more information see\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Queue name. The maximum length is 80 characters. You can use numbers, letters, underscores, and hyphens in the name. The\nname of a FIFO queue must end with the `.fifo` suffix. If not specified, random name will be generated. Conflicts with\n`name_prefix`. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue).\n",
                        "willReplaceOnChanges": true
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "Generates random name with the specified prefix. Conflicts with `name`.\n",
                        "willReplaceOnChanges": true
                    },
                    "receiveWaitTimeSeconds": {
                        "type": "integer",
                        "description": "Wait time for the [ReceiveMessage](https://yandex.cloud/docs/message-queue/api-ref/message/ReceiveMessage) method (for\nlong polling), in seconds. Valid values: from 0 to 20 seconds. Default: 0. For more information about long polling see\n[documentation](https://yandex.cloud/docs/message-queue/concepts/long-polling).\n"
                    },
                    "redrivePolicy": {
                        "type": "string",
                        "description": "Message redrive policy in [Dead Letter Queue](https://yandex.cloud/docs/message-queue/concepts/dlq). The source queue\nand DLQ must be the same type: for FIFO queues, the DLQ must also be a FIFO queue. For more information about redrive\npolicy see [documentation](https://yandex.cloud/docs/message-queue/api-ref/queue/CreateQueue). Also you can use example\nin this page.\n"
                    },
                    "regionId": {
                        "type": "string",
                        "description": "ID of the region where the message queue is located at. The default is 'ru-central1'.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The [secret key](https://yandex.cloud/docs/iam/operations/sa/create-access-key) to use when applying changes. If\nomitted, `ymq_secret_key` specified in provider config is used. For more information see\n[documentation](https://yandex.cloud/docs/message-queue/quickstart).\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "SQS tags\n"
                    },
                    "visibilityTimeoutSeconds": {
                        "type": "integer",
                        "description": "[Visibility timeout](https://yandex.cloud/docs/message-queue/concepts/visibility-timeout) for messages in a queue,\nspecified in seconds. Valid values: from 0 to 43200 seconds (12 hours). Default: 30.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/monitoringDashboard:MonitoringDashboard": {
            "properties": {
                "dashboardId": {
                    "type": "string",
                    "description": "Dashboard ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "parametrizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardParametrization:MonitoringDashboardParametrization"
                    },
                    "description": "Dashboard parametrization.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Dashboard title.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidget:MonitoringDashboardWidget"
                    },
                    "description": "Widgets.\n"
                }
            },
            "required": [
                "dashboardId",
                "folderId",
                "labels",
                "name",
                "parametrizations"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n",
                    "willReplaceOnChanges": true
                },
                "parametrizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardParametrization:MonitoringDashboardParametrization"
                    },
                    "description": "Dashboard parametrization.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Dashboard title.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/MonitoringDashboardWidget:MonitoringDashboardWidget"
                    },
                    "description": "Widgets.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoringDashboard resources.\n",
                "properties": {
                    "dashboardId": {
                        "type": "string",
                        "description": "Dashboard ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n",
                        "willReplaceOnChanges": true
                    },
                    "parametrizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MonitoringDashboardParametrization:MonitoringDashboardParametrization"
                        },
                        "description": "Dashboard parametrization.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Dashboard title.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/MonitoringDashboardWidget:MonitoringDashboardWidget"
                        },
                        "description": "Widgets.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerGroup:OrganizationmanagerGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization to attach this Group to.\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "organizationId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization to attach this Group to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization to attach this Group to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerGroupIamMember:OrganizationmanagerGroupIamMember": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the organization to attach a policy to.\n"
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "groupId",
                "member",
                "role"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the organization to attach a policy to.\n",
                    "willReplaceOnChanges": true
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "member",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerGroupIamMember resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the organization to attach a policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set \"true\" to enable organization manager group mapping.\n"
                },
                "federationId": {
                    "type": "string",
                    "description": "ID of the SAML Federation.\n"
                }
            },
            "required": [
                "federationId"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set \"true\" to enable organization manager group mapping.\n"
                },
                "federationId": {
                    "type": "string",
                    "description": "ID of the SAML Federation.\n"
                }
            },
            "requiredInputs": [
                "federationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerGroupMapping resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Set \"true\" to enable organization manager group mapping.\n"
                    },
                    "federationId": {
                        "type": "string",
                        "description": "ID of the SAML Federation.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerGroupMappingItem:OrganizationmanagerGroupMappingItem": {
            "properties": {
                "externalGroupId": {
                    "type": "string",
                    "description": "ID of the external group\n"
                },
                "federationId": {
                    "type": "string",
                    "description": "ID of the SAML Federation\n"
                },
                "internalGroupId": {
                    "type": "string",
                    "description": "ID of the internal group\n"
                }
            },
            "required": [
                "externalGroupId",
                "federationId",
                "internalGroupId"
            ],
            "inputProperties": {
                "externalGroupId": {
                    "type": "string",
                    "description": "ID of the external group\n",
                    "willReplaceOnChanges": true
                },
                "federationId": {
                    "type": "string",
                    "description": "ID of the SAML Federation\n",
                    "willReplaceOnChanges": true
                },
                "internalGroupId": {
                    "type": "string",
                    "description": "ID of the internal group\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "externalGroupId",
                "federationId",
                "internalGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerGroupMappingItem resources.\n",
                "properties": {
                    "externalGroupId": {
                        "type": "string",
                        "description": "ID of the external group\n",
                        "willReplaceOnChanges": true
                    },
                    "federationId": {
                        "type": "string",
                        "description": "ID of the SAML Federation\n",
                        "willReplaceOnChanges": true
                    },
                    "internalGroupId": {
                        "type": "string",
                        "description": "ID of the internal group\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerGroupMembership:OrganizationmanagerGroupMembership": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The Group to add/remove members to/from.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of members of the Group. Each member is represented by an id.\n"
                }
            },
            "required": [
                "groupId",
                "members"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The Group to add/remove members to/from.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of members of the Group. Each member is represented by an id.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerGroupMembership resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The Group to add/remove members to/from.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of members of the Group. Each member is represented by an id.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerOrganizationIamBinding:OrganizationmanagerOrganizationIamBinding": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to attach the policy to.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "members",
                "organizationId",
                "role"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to attach the policy to.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "members",
                "organizationId",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerOrganizationIamBinding resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization to attach the policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerOrganizationIamMember:OrganizationmanagerOrganizationIamMember": {
            "properties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to attach the policy to.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "member",
                "organizationId",
                "role"
            ],
            "inputProperties": {
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to attach the policy to.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "member",
                "organizationId",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerOrganizationIamMember resources.\n",
                "properties": {
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization to attach the policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerOsLoginSettings:OrganizationmanagerOsLoginSettings": {
            "properties": {
                "organizationId": {
                    "type": "string",
                    "description": "The organization to manage it's OsLogin Settings.\n"
                },
                "sshCertificateSettings": {
                    "$ref": "#/types/yandex:index/OrganizationmanagerOsLoginSettingsSshCertificateSettings:OrganizationmanagerOsLoginSettingsSshCertificateSettings",
                    "description": "SSH Certificate settings.\n"
                },
                "userSshKeySettings": {
                    "$ref": "#/types/yandex:index/OrganizationmanagerOsLoginSettingsUserSshKeySettings:OrganizationmanagerOsLoginSettingsUserSshKeySettings",
                    "description": "Users SSH key settings.\n"
                }
            },
            "required": [
                "organizationId"
            ],
            "inputProperties": {
                "organizationId": {
                    "type": "string",
                    "description": "The organization to manage it's OsLogin Settings.\n"
                },
                "sshCertificateSettings": {
                    "$ref": "#/types/yandex:index/OrganizationmanagerOsLoginSettingsSshCertificateSettings:OrganizationmanagerOsLoginSettingsSshCertificateSettings",
                    "description": "SSH Certificate settings.\n"
                },
                "userSshKeySettings": {
                    "$ref": "#/types/yandex:index/OrganizationmanagerOsLoginSettingsUserSshKeySettings:OrganizationmanagerOsLoginSettingsUserSshKeySettings",
                    "description": "Users SSH key settings.\n"
                }
            },
            "requiredInputs": [
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerOsLoginSettings resources.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "The organization to manage it's OsLogin Settings.\n"
                    },
                    "sshCertificateSettings": {
                        "$ref": "#/types/yandex:index/OrganizationmanagerOsLoginSettingsSshCertificateSettings:OrganizationmanagerOsLoginSettingsSshCertificateSettings",
                        "description": "SSH Certificate settings.\n"
                    },
                    "userSshKeySettings": {
                        "$ref": "#/types/yandex:index/OrganizationmanagerOsLoginSettingsUserSshKeySettings:OrganizationmanagerOsLoginSettingsUserSshKeySettings",
                        "description": "Users SSH key settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerSamlFederation:OrganizationmanagerSamlFederation": {
            "properties": {
                "autoCreateAccountOnLogin": {
                    "type": "boolean",
                    "description": "Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role\nautomatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud\ncan't log in, even if they have authenticated on your server.\n"
                },
                "caseInsensitiveNameIds": {
                    "type": "boolean",
                    "description": "Use case-insensitive name IDs.\n"
                },
                "cookieMaxAge": {
                    "type": "string",
                    "description": "The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user\nimmediately and redirects them to the home page. The default value is `8h`.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user\nauthenticates.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization to attach this SAML Federation to.\n"
                },
                "securitySettings": {
                    "$ref": "#/types/yandex:index/OrganizationmanagerSamlFederationSecuritySettings:OrganizationmanagerSamlFederationSecuritySettings",
                    "description": "Federation security settings.\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping\nof a SAML protocol message onto standard messaging formats and/or communications protocols.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single sign-on (SSO) endpoint URL. Specify the link to the IdP login page here.\n"
                }
            },
            "required": [
                "autoCreateAccountOnLogin",
                "caseInsensitiveNameIds",
                "cookieMaxAge",
                "createdAt",
                "issuer",
                "name",
                "organizationId",
                "securitySettings",
                "ssoBinding",
                "ssoUrl"
            ],
            "inputProperties": {
                "autoCreateAccountOnLogin": {
                    "type": "boolean",
                    "description": "Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role\nautomatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud\ncan't log in, even if they have authenticated on your server.\n"
                },
                "caseInsensitiveNameIds": {
                    "type": "boolean",
                    "description": "Use case-insensitive name IDs.\n"
                },
                "cookieMaxAge": {
                    "type": "string",
                    "description": "The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user\nimmediately and redirects them to the home page. The default value is `8h`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user\nauthenticates.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization to attach this SAML Federation to.\n",
                    "willReplaceOnChanges": true
                },
                "securitySettings": {
                    "$ref": "#/types/yandex:index/OrganizationmanagerSamlFederationSecuritySettings:OrganizationmanagerSamlFederationSecuritySettings",
                    "description": "Federation security settings.\n"
                },
                "ssoBinding": {
                    "type": "string",
                    "description": "Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping\nof a SAML protocol message onto standard messaging formats and/or communications protocols.\n"
                },
                "ssoUrl": {
                    "type": "string",
                    "description": "Single sign-on (SSO) endpoint URL. Specify the link to the IdP login page here.\n"
                }
            },
            "requiredInputs": [
                "issuer",
                "organizationId",
                "ssoBinding",
                "ssoUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerSamlFederation resources.\n",
                "properties": {
                    "autoCreateAccountOnLogin": {
                        "type": "boolean",
                        "description": "Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role\nautomatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud\ncan't log in, even if they have authenticated on your server.\n"
                    },
                    "caseInsensitiveNameIds": {
                        "type": "boolean",
                        "description": "Use case-insensitive name IDs.\n"
                    },
                    "cookieMaxAge": {
                        "type": "string",
                        "description": "The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user\nimmediately and redirects them to the home page. The default value is `8h`.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user\nauthenticates.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization to attach this SAML Federation to.\n",
                        "willReplaceOnChanges": true
                    },
                    "securitySettings": {
                        "$ref": "#/types/yandex:index/OrganizationmanagerSamlFederationSecuritySettings:OrganizationmanagerSamlFederationSecuritySettings",
                        "description": "Federation security settings.\n"
                    },
                    "ssoBinding": {
                        "type": "string",
                        "description": "Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping\nof a SAML protocol message onto standard messaging formats and/or communications protocols.\n"
                    },
                    "ssoUrl": {
                        "type": "string",
                        "description": "Single sign-on (SSO) endpoint URL. Specify the link to the IdP login page here.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerSamlFederationUserAccount:OrganizationmanagerSamlFederationUserAccount": {
            "properties": {
                "federationId": {
                    "type": "string",
                    "description": "ID of a SAML Federation.\n"
                },
                "nameId": {
                    "type": "string",
                    "description": "Name ID of the SAML federated user.\n"
                }
            },
            "required": [
                "federationId",
                "nameId"
            ],
            "inputProperties": {
                "federationId": {
                    "type": "string",
                    "description": "ID of a SAML Federation.\n",
                    "willReplaceOnChanges": true
                },
                "nameId": {
                    "type": "string",
                    "description": "Name ID of the SAML federated user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "federationId",
                "nameId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerSamlFederationUserAccount resources.\n",
                "properties": {
                    "federationId": {
                        "type": "string",
                        "description": "ID of a SAML Federation.\n",
                        "willReplaceOnChanges": true
                    },
                    "nameId": {
                        "type": "string",
                        "description": "Name ID of the SAML federated user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/organizationmanagerUserSshKey:OrganizationmanagerUserSshKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "data": {
                    "type": "string",
                    "description": "Data of the user ssh key.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "User ssh key will be no longer valid after expiration timestamp.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "SSH Key Fingerprint.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "Organization that the user ssh key belongs to.\n"
                },
                "subjectId": {
                    "type": "string",
                    "description": "Subject that the user ssh key belongs to.\n"
                }
            },
            "required": [
                "createdAt",
                "data",
                "fingerprint",
                "name",
                "organizationId",
                "subjectId"
            ],
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Data of the user ssh key.\n",
                    "willReplaceOnChanges": true
                },
                "expiresAt": {
                    "type": "string",
                    "description": "User ssh key will be no longer valid after expiration timestamp.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "Organization that the user ssh key belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "subjectId": {
                    "type": "string",
                    "description": "Subject that the user ssh key belongs to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "data",
                "organizationId",
                "subjectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationmanagerUserSshKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "data": {
                        "type": "string",
                        "description": "Data of the user ssh key.\n",
                        "willReplaceOnChanges": true
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "User ssh key will be no longer valid after expiration timestamp.\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "SSH Key Fingerprint.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Organization that the user ssh key belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "subjectId": {
                        "type": "string",
                        "description": "Subject that the user ssh key belongs to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerCloud:ResourcemanagerCloud": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "Yandex Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "organizationId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "Yandex Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerCloud resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Yandex Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerCloudIamBinding:ResourcemanagerCloudIamBinding": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "description": "The ID of the cloud to attach the policy to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "cloudId",
                "members",
                "role"
            ],
            "inputProperties": {
                "cloudId": {
                    "type": "string",
                    "description": "The ID of the cloud to attach the policy to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "cloudId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerCloudIamBinding resources.\n",
                "properties": {
                    "cloudId": {
                        "type": "string",
                        "description": "The ID of the cloud to attach the policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerCloudIamMember:ResourcemanagerCloudIamMember": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "description": "The ID of the cloud to attach the policy to.\n"
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "cloudId",
                "member",
                "role"
            ],
            "inputProperties": {
                "cloudId": {
                    "type": "string",
                    "description": "The ID of the cloud to attach the policy to.\n",
                    "willReplaceOnChanges": true
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudId",
                "member",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerCloudIamMember resources.\n",
                "properties": {
                    "cloudId": {
                        "type": "string",
                        "description": "The ID of the cloud to attach the policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerFolder:ResourcemanagerFolder": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "description": "Cloud that the resource belongs to. If value is omitted, the default provider Cloud ID is used.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "required": [
                "cloudId",
                "createdAt",
                "name"
            ],
            "inputProperties": {
                "cloudId": {
                    "type": "string",
                    "description": "Cloud that the resource belongs to. If value is omitted, the default provider Cloud ID is used.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerFolder resources.\n",
                "properties": {
                    "cloudId": {
                        "type": "string",
                        "description": "Cloud that the resource belongs to. If value is omitted, the default provider Cloud ID is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerFolderIamBinding:ResourcemanagerFolderIamBinding": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "The ID of the folder to attach a policy to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "folderId",
                "members",
                "role"
            ],
            "inputProperties": {
                "folderId": {
                    "type": "string",
                    "description": "The ID of the folder to attach a policy to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "folderId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerFolderIamBinding resources.\n",
                "properties": {
                    "folderId": {
                        "type": "string",
                        "description": "The ID of the folder to attach a policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerFolderIamMember:ResourcemanagerFolderIamMember": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "The ID of the folder to attach a policy to.\n"
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "folderId",
                "member",
                "role"
            ],
            "inputProperties": {
                "folderId": {
                    "type": "string",
                    "description": "The ID of the folder to attach a policy to.\n",
                    "willReplaceOnChanges": true
                },
                "member": {
                    "type": "string",
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "folderId",
                "member",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerFolderIamMember resources.\n",
                "properties": {
                    "folderId": {
                        "type": "string",
                        "description": "The ID of the folder to attach a policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "member": {
                        "type": "string",
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/resourcemanagerFolderIamPolicy:ResourcemanagerFolderIamPolicy": {
            "properties": {
                "folderId": {
                    "type": "string",
                    "description": "The ID of the folder to attach a policy to.\n"
                },
                "policyData": {
                    "type": "string",
                    "description": "Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.\n"
                }
            },
            "required": [
                "folderId",
                "policyData"
            ],
            "inputProperties": {
                "folderId": {
                    "type": "string",
                    "description": "The ID of the folder to attach a policy to.\n",
                    "willReplaceOnChanges": true
                },
                "policyData": {
                    "type": "string",
                    "description": "Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.\n"
                }
            },
            "requiredInputs": [
                "folderId",
                "policyData"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourcemanagerFolderIamPolicy resources.\n",
                "properties": {
                    "folderId": {
                        "type": "string",
                        "description": "The ID of the folder to attach a policy to.\n",
                        "willReplaceOnChanges": true
                    },
                    "policyData": {
                        "type": "string",
                        "description": "Required only by `yandex.IamServiceAccountIamPolicy`. The policy data generated by a `yandex.getIamPolicy` data source.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/serverlessContainer:ServerlessContainer": {
            "properties": {
                "concurrency": {
                    "type": "integer",
                    "description": "Concurrency of Yandex Cloud Serverless Container.\n"
                },
                "connectivity": {
                    "$ref": "#/types/yandex:index/ServerlessContainerConnectivity:ServerlessContainerConnectivity",
                    "description": "Network access. If specified the revision will be attached to specified network.\n"
                },
                "coreFraction": {
                    "type": "integer",
                    "description": "Core fraction (**0...100**) of the Yandex Cloud Serverless Container.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "Cores (**1+**) of the Yandex Cloud Serverless Container.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "executionTimeout": {
                    "type": "string",
                    "description": "Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "image": {
                    "$ref": "#/types/yandex:index/ServerlessContainerImage:ServerlessContainerImage",
                    "description": "Revision deployment image for Yandex Cloud Serverless Container.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/ServerlessContainerLogOptions:ServerlessContainerLogOptions",
                    "description": "Options for logging from Yandex Cloud Serverless Container.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory in megabytes (**aligned to 128 MB**).\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/ServerlessContainerMetadataOptions:ServerlessContainerMetadataOptions",
                    "description": "Options set the access mode to revision's metadata endpoints.\n"
                },
                "mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessContainerMount:ServerlessContainerMount"
                    },
                    "description": "Mounts for Yandex Cloud Serverless Container.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "provisionPolicy": {
                    "$ref": "#/types/yandex:index/ServerlessContainerProvisionPolicy:ServerlessContainerProvisionPolicy",
                    "description": "Provision policy. If specified the revision will have prepared instances.\n"
                },
                "revisionId": {
                    "type": "string",
                    "description": "Last revision ID of the Yandex Cloud Serverless Container.\n"
                },
                "runtime": {
                    "$ref": "#/types/yandex:index/ServerlessContainerRuntime:ServerlessContainerRuntime",
                    "description": "Runtime for Yandex Cloud Serverless Container.\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessContainerSecret:ServerlessContainerSecret"
                    },
                    "description": "Secrets for Yandex Cloud Serverless Container.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "storageMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessContainerStorageMount:ServerlessContainerStorageMount"
                    },
                    "description": "(**DEPRECATED**, use `mounts.object_storage` instead) Storage mounts for Yandex Cloud Serverless Container.\n",
                    "deprecationMessage": "The 'storage_mounts' field has been deprecated. Please use 'mounts' instead."
                },
                "url": {
                    "type": "string",
                    "description": "Invoke URL for the Yandex Cloud Serverless Container.\n"
                }
            },
            "required": [
                "concurrency",
                "coreFraction",
                "createdAt",
                "executionTimeout",
                "folderId",
                "image",
                "memory",
                "metadataOptions",
                "mounts",
                "name",
                "revisionId",
                "runtime",
                "secrets",
                "storageMounts",
                "url"
            ],
            "inputProperties": {
                "concurrency": {
                    "type": "integer",
                    "description": "Concurrency of Yandex Cloud Serverless Container.\n"
                },
                "connectivity": {
                    "$ref": "#/types/yandex:index/ServerlessContainerConnectivity:ServerlessContainerConnectivity",
                    "description": "Network access. If specified the revision will be attached to specified network.\n"
                },
                "coreFraction": {
                    "type": "integer",
                    "description": "Core fraction (**0...100**) of the Yandex Cloud Serverless Container.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "Cores (**1+**) of the Yandex Cloud Serverless Container.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "executionTimeout": {
                    "type": "string",
                    "description": "Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "image": {
                    "$ref": "#/types/yandex:index/ServerlessContainerImage:ServerlessContainerImage",
                    "description": "Revision deployment image for Yandex Cloud Serverless Container.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "logOptions": {
                    "$ref": "#/types/yandex:index/ServerlessContainerLogOptions:ServerlessContainerLogOptions",
                    "description": "Options for logging from Yandex Cloud Serverless Container.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory in megabytes (**aligned to 128 MB**).\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/yandex:index/ServerlessContainerMetadataOptions:ServerlessContainerMetadataOptions",
                    "description": "Options set the access mode to revision's metadata endpoints.\n"
                },
                "mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessContainerMount:ServerlessContainerMount"
                    },
                    "description": "Mounts for Yandex Cloud Serverless Container.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "provisionPolicy": {
                    "$ref": "#/types/yandex:index/ServerlessContainerProvisionPolicy:ServerlessContainerProvisionPolicy",
                    "description": "Provision policy. If specified the revision will have prepared instances.\n"
                },
                "runtime": {
                    "$ref": "#/types/yandex:index/ServerlessContainerRuntime:ServerlessContainerRuntime",
                    "description": "Runtime for Yandex Cloud Serverless Container.\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessContainerSecret:ServerlessContainerSecret"
                    },
                    "description": "Secrets for Yandex Cloud Serverless Container.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                },
                "storageMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessContainerStorageMount:ServerlessContainerStorageMount"
                    },
                    "description": "(**DEPRECATED**, use `mounts.object_storage` instead) Storage mounts for Yandex Cloud Serverless Container.\n",
                    "deprecationMessage": "The 'storage_mounts' field has been deprecated. Please use 'mounts' instead."
                }
            },
            "requiredInputs": [
                "image",
                "memory"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerlessContainer resources.\n",
                "properties": {
                    "concurrency": {
                        "type": "integer",
                        "description": "Concurrency of Yandex Cloud Serverless Container.\n"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/ServerlessContainerConnectivity:ServerlessContainerConnectivity",
                        "description": "Network access. If specified the revision will be attached to specified network.\n"
                    },
                    "coreFraction": {
                        "type": "integer",
                        "description": "Core fraction (**0...100**) of the Yandex Cloud Serverless Container.\n"
                    },
                    "cores": {
                        "type": "integer",
                        "description": "Cores (**1+**) of the Yandex Cloud Serverless Container.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "executionTimeout": {
                        "type": "string",
                        "description": "Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "image": {
                        "$ref": "#/types/yandex:index/ServerlessContainerImage:ServerlessContainerImage",
                        "description": "Revision deployment image for Yandex Cloud Serverless Container.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "logOptions": {
                        "$ref": "#/types/yandex:index/ServerlessContainerLogOptions:ServerlessContainerLogOptions",
                        "description": "Options for logging from Yandex Cloud Serverless Container.\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "Memory in megabytes (**aligned to 128 MB**).\n"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/ServerlessContainerMetadataOptions:ServerlessContainerMetadataOptions",
                        "description": "Options set the access mode to revision's metadata endpoints.\n"
                    },
                    "mounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessContainerMount:ServerlessContainerMount"
                        },
                        "description": "Mounts for Yandex Cloud Serverless Container.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "provisionPolicy": {
                        "$ref": "#/types/yandex:index/ServerlessContainerProvisionPolicy:ServerlessContainerProvisionPolicy",
                        "description": "Provision policy. If specified the revision will have prepared instances.\n"
                    },
                    "revisionId": {
                        "type": "string",
                        "description": "Last revision ID of the Yandex Cloud Serverless Container.\n"
                    },
                    "runtime": {
                        "$ref": "#/types/yandex:index/ServerlessContainerRuntime:ServerlessContainerRuntime",
                        "description": "Runtime for Yandex Cloud Serverless Container.\n"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessContainerSecret:ServerlessContainerSecret"
                        },
                        "description": "Secrets for Yandex Cloud Serverless Container.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "[Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.\n"
                    },
                    "storageMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessContainerStorageMount:ServerlessContainerStorageMount"
                        },
                        "description": "(**DEPRECATED**, use `mounts.object_storage` instead) Storage mounts for Yandex Cloud Serverless Container.\n",
                        "deprecationMessage": "The 'storage_mounts' field has been deprecated. Please use 'mounts' instead."
                    },
                    "url": {
                        "type": "string",
                        "description": "Invoke URL for the Yandex Cloud Serverless Container.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/serverlessContainerIamBinding:ServerlessContainerIamBinding": {
            "properties": {
                "containerId": {
                    "type": "string",
                    "description": "The [Yandex Serverless Container](https://yandex.cloud/docs/serverless-containers/) ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "containerId",
                "members",
                "role"
            ],
            "inputProperties": {
                "containerId": {
                    "type": "string",
                    "description": "The [Yandex Serverless Container](https://yandex.cloud/docs/serverless-containers/) ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "containerId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerlessContainerIamBinding resources.\n",
                "properties": {
                    "containerId": {
                        "type": "string",
                        "description": "The [Yandex Serverless Container](https://yandex.cloud/docs/serverless-containers/) ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/serverlessEventrouterBus:ServerlessEventrouterBus": {
            "properties": {
                "cloudId": {
                    "type": "string",
                    "description": "ID of the cloud that the bus resides in\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation timestamp\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "Deletion protection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the bus\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "ID of the folder that the bus belongs to\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Bus labels\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the bus\n"
                }
            },
            "required": [
                "cloudId",
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "Deletion protection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the bus\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "ID of the folder that the bus belongs to\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Bus labels\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the bus\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerlessEventrouterBus resources.\n",
                "properties": {
                    "cloudId": {
                        "type": "string",
                        "description": "ID of the cloud that the bus resides in\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation timestamp\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "Deletion protection\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the bus\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "ID of the folder that the bus belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Bus labels\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the bus\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/serverlessEventrouterConnector:ServerlessEventrouterConnector": {
            "properties": {
                "busId": {
                    "type": "string",
                    "description": "ID of the bus that the connector belongs to\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "ID of the cloud that the connector resides in\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation timestamp\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "Deletion protection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the connector\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "ID of the folder that the connector resides in\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Connector labels\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connector\n"
                },
                "yds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterConnectorYd:ServerlessEventrouterConnectorYd"
                    },
                    "description": "Data Stream source of the connector\n"
                },
                "ymqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterConnectorYmq:ServerlessEventrouterConnectorYmq"
                    },
                    "description": "Message Queue source of the connector\n"
                }
            },
            "required": [
                "busId",
                "cloudId",
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "busId": {
                    "type": "string",
                    "description": "ID of the bus that the connector belongs to\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "Deletion protection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the connector\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Connector labels\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connector\n"
                },
                "yds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterConnectorYd:ServerlessEventrouterConnectorYd"
                    },
                    "description": "Data Stream source of the connector\n",
                    "willReplaceOnChanges": true
                },
                "ymqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterConnectorYmq:ServerlessEventrouterConnectorYmq"
                    },
                    "description": "Message Queue source of the connector\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "busId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerlessEventrouterConnector resources.\n",
                "properties": {
                    "busId": {
                        "type": "string",
                        "description": "ID of the bus that the connector belongs to\n"
                    },
                    "cloudId": {
                        "type": "string",
                        "description": "ID of the cloud that the connector resides in\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation timestamp\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "Deletion protection\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the connector\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "ID of the folder that the connector resides in\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Connector labels\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the connector\n"
                    },
                    "yds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterConnectorYd:ServerlessEventrouterConnectorYd"
                        },
                        "description": "Data Stream source of the connector\n",
                        "willReplaceOnChanges": true
                    },
                    "ymqs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterConnectorYmq:ServerlessEventrouterConnectorYmq"
                        },
                        "description": "Message Queue source of the connector\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/serverlessEventrouterRule:ServerlessEventrouterRule": {
            "properties": {
                "busId": {
                    "type": "string",
                    "description": "ID of the bus that the rule belongs to\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "ID of the cloud that the rule resides in\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleContainer:ServerlessEventrouterRuleContainer"
                    },
                    "description": "ContainerTarget\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation timestamp\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "Deletion protection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the rule\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "ID of the folder that the rule resides in\n"
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleFunction:ServerlessEventrouterRuleFunction"
                    },
                    "description": "FunctionTarget\n"
                },
                "gatewayWebsocketBroadcasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleGatewayWebsocketBroadcast:ServerlessEventrouterRuleGatewayWebsocketBroadcast"
                    },
                    "description": "GatewayWebsocketBroadcastTarget\n"
                },
                "jqFilter": {
                    "type": "string",
                    "description": "JQ filter for matching events\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Rule labels\n"
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleLogging:ServerlessEventrouterRuleLogging"
                    },
                    "description": "LoggingTarget. Includes either log_group_id or folder_id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule\n"
                },
                "workflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleWorkflow:ServerlessEventrouterRuleWorkflow"
                    },
                    "description": "WorkflowTarget\n"
                },
                "yds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleYd:ServerlessEventrouterRuleYd"
                    },
                    "description": "YdsTarget\n"
                },
                "ymqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleYmq:ServerlessEventrouterRuleYmq"
                    },
                    "description": "YmqTarget\n"
                }
            },
            "required": [
                "busId",
                "cloudId",
                "createdAt",
                "deletionProtection",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "busId": {
                    "type": "string",
                    "description": "ID of the bus that the rule belongs to\n"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleContainer:ServerlessEventrouterRuleContainer"
                    },
                    "description": "ContainerTarget\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the rule\n"
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleFunction:ServerlessEventrouterRuleFunction"
                    },
                    "description": "FunctionTarget\n"
                },
                "gatewayWebsocketBroadcasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleGatewayWebsocketBroadcast:ServerlessEventrouterRuleGatewayWebsocketBroadcast"
                    },
                    "description": "GatewayWebsocketBroadcastTarget\n"
                },
                "jqFilter": {
                    "type": "string",
                    "description": "JQ filter for matching events\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Rule labels\n"
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleLogging:ServerlessEventrouterRuleLogging"
                    },
                    "description": "LoggingTarget. Includes either log_group_id or folder_id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule\n"
                },
                "workflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleWorkflow:ServerlessEventrouterRuleWorkflow"
                    },
                    "description": "WorkflowTarget\n"
                },
                "yds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleYd:ServerlessEventrouterRuleYd"
                    },
                    "description": "YdsTarget\n"
                },
                "ymqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/ServerlessEventrouterRuleYmq:ServerlessEventrouterRuleYmq"
                    },
                    "description": "YmqTarget\n"
                }
            },
            "requiredInputs": [
                "busId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerlessEventrouterRule resources.\n",
                "properties": {
                    "busId": {
                        "type": "string",
                        "description": "ID of the bus that the rule belongs to\n"
                    },
                    "cloudId": {
                        "type": "string",
                        "description": "ID of the cloud that the rule resides in\n"
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleContainer:ServerlessEventrouterRuleContainer"
                        },
                        "description": "ContainerTarget\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation timestamp\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "Deletion protection\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the rule\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "ID of the folder that the rule resides in\n"
                    },
                    "functions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleFunction:ServerlessEventrouterRuleFunction"
                        },
                        "description": "FunctionTarget\n"
                    },
                    "gatewayWebsocketBroadcasts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleGatewayWebsocketBroadcast:ServerlessEventrouterRuleGatewayWebsocketBroadcast"
                        },
                        "description": "GatewayWebsocketBroadcastTarget\n"
                    },
                    "jqFilter": {
                        "type": "string",
                        "description": "JQ filter for matching events\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Rule labels\n"
                    },
                    "loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleLogging:ServerlessEventrouterRuleLogging"
                        },
                        "description": "LoggingTarget. Includes either log_group_id or folder_id\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the rule\n"
                    },
                    "workflows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleWorkflow:ServerlessEventrouterRuleWorkflow"
                        },
                        "description": "WorkflowTarget\n"
                    },
                    "yds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleYd:ServerlessEventrouterRuleYd"
                        },
                        "description": "YdsTarget\n"
                    },
                    "ymqs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/ServerlessEventrouterRuleYmq:ServerlessEventrouterRuleYmq"
                        },
                        "description": "YmqTarget\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/smartcaptchaCaptcha:SmartcaptchaCaptcha": {
            "properties": {
                "allowedSites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).\n"
                },
                "challengeType": {
                    "type": "string",
                    "description": "Additional task type of the captcha. Possible values: * `IMAGE_TEXT` - Text recognition: The user has to type a\ndistorted text from the picture into a special field. * `SILHOUETTES` - Silhouettes: The user has to mark several icons\nfrom the picture in a particular order. * `KALEIDOSCOPE` - Kaleidoscope: The user has to build a picture from individual\nparts by shuffling them using a slider.\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "complexity": {
                    "type": "string",
                    "description": "Complexity of the captcha. Possible values: * `EASY` - High chance to pass pre-check and easy advanced challenge. *\n`MEDIUM` - Medium chance to pass pre-check and normal advanced challenge. * `HARD` - Little chance to pass pre-check and\nhard advanced challenge. * `FORCE_HARD` - Impossible to pass pre-check and hard advanced challenge.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "overrideVariants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaOverrideVariant:SmartcaptchaCaptchaOverrideVariant"
                    },
                    "description": "List of variants to use in security_rules.\n"
                },
                "preCheckType": {
                    "type": "string",
                    "description": "Basic check type of the captcha.Possible values: * `CHECKBOX` - User must click the 'I am not a robot' button. *\n`SLIDER` - User must move the slider from left to right.\n"
                },
                "securityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRule:SmartcaptchaCaptchaSecurityRule"
                    },
                    "description": "List of security rules.\n"
                },
                "styleJson": {
                    "type": "string",
                    "description": "JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.\n"
                },
                "suspend": {
                    "type": "boolean"
                },
                "turnOffHostnameCheck": {
                    "type": "boolean",
                    "description": "Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).\n"
                }
            },
            "required": [
                "clientKey",
                "cloudId",
                "createdAt",
                "folderId",
                "name",
                "suspend"
            ],
            "inputProperties": {
                "allowedSites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).\n"
                },
                "challengeType": {
                    "type": "string",
                    "description": "Additional task type of the captcha. Possible values: * `IMAGE_TEXT` - Text recognition: The user has to type a\ndistorted text from the picture into a special field. * `SILHOUETTES` - Silhouettes: The user has to mark several icons\nfrom the picture in a particular order. * `KALEIDOSCOPE` - Kaleidoscope: The user has to build a picture from individual\nparts by shuffling them using a slider.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "complexity": {
                    "type": "string",
                    "description": "Complexity of the captcha. Possible values: * `EASY` - High chance to pass pre-check and easy advanced challenge. *\n`MEDIUM` - Medium chance to pass pre-check and normal advanced challenge. * `HARD` - Little chance to pass pre-check and\nhard advanced challenge. * `FORCE_HARD` - Impossible to pass pre-check and hard advanced challenge.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "overrideVariants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaOverrideVariant:SmartcaptchaCaptchaOverrideVariant"
                    },
                    "description": "List of variants to use in security_rules.\n"
                },
                "preCheckType": {
                    "type": "string",
                    "description": "Basic check type of the captcha.Possible values: * `CHECKBOX` - User must click the 'I am not a robot' button. *\n`SLIDER` - User must move the slider from left to right.\n"
                },
                "securityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRule:SmartcaptchaCaptchaSecurityRule"
                    },
                    "description": "List of security rules.\n"
                },
                "styleJson": {
                    "type": "string",
                    "description": "JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.\n"
                },
                "turnOffHostnameCheck": {
                    "type": "boolean",
                    "description": "Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmartcaptchaCaptcha resources.\n",
                "properties": {
                    "allowedSites": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed host names, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).\n"
                    },
                    "challengeType": {
                        "type": "string",
                        "description": "Additional task type of the captcha. Possible values: * `IMAGE_TEXT` - Text recognition: The user has to type a\ndistorted text from the picture into a special field. * `SILHOUETTES` - Silhouettes: The user has to mark several icons\nfrom the picture in a particular order. * `KALEIDOSCOPE` - Kaleidoscope: The user has to build a picture from individual\nparts by shuffling them using a slider.\n"
                    },
                    "clientKey": {
                        "type": "string",
                        "description": "Client key of the captcha, see [CAPTCHA keys](https://yandex.cloud/docs/smartcaptcha/concepts/keys).\n"
                    },
                    "cloudId": {
                        "type": "string",
                        "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                    },
                    "complexity": {
                        "type": "string",
                        "description": "Complexity of the captcha. Possible values: * `EASY` - High chance to pass pre-check and easy advanced challenge. *\n`MEDIUM` - Medium chance to pass pre-check and normal advanced challenge. * `HARD` - Little chance to pass pre-check and\nhard advanced challenge. * `FORCE_HARD` - Impossible to pass pre-check and hard advanced challenge.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "overrideVariants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/SmartcaptchaCaptchaOverrideVariant:SmartcaptchaCaptchaOverrideVariant"
                        },
                        "description": "List of variants to use in security_rules.\n"
                    },
                    "preCheckType": {
                        "type": "string",
                        "description": "Basic check type of the captcha.Possible values: * `CHECKBOX` - User must click the 'I am not a robot' button. *\n`SLIDER` - User must move the slider from left to right.\n"
                    },
                    "securityRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/SmartcaptchaCaptchaSecurityRule:SmartcaptchaCaptchaSecurityRule"
                        },
                        "description": "List of security rules.\n"
                    },
                    "styleJson": {
                        "type": "string",
                        "description": "JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.\n"
                    },
                    "suspend": {
                        "type": "boolean"
                    },
                    "turnOffHostnameCheck": {
                        "type": "boolean",
                        "description": "Turn off host name check, see [Domain validation](https://yandex.cloud/docs/smartcaptcha/concepts/domain-validation).\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/storageBucket:StorageBucket": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n"
                },
                "acl": {
                    "type": "string",
                    "description": "The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.\nConflicts with `grant`. \u003e To change ACL after creation, service account with `storage.admin` role should be used, though\nthis role is not necessary to create a bucket with any ACL.\n"
                },
                "anonymousAccessFlags": {
                    "$ref": "#/types/yandex:index/StorageBucketAnonymousAccessFlags:StorageBucketAnonymousAccessFlags",
                    "description": "Provides various access to objects. See [Bucket\nAvailability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.\n"
                },
                "bucket": {
                    "type": "string"
                },
                "bucketDomainName": {
                    "type": "string",
                    "description": "The bucket domain name.\n"
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketCorsRule:StorageBucketCorsRule"
                    },
                    "description": "A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).\n"
                },
                "defaultStorageClass": {
                    "type": "string",
                    "description": "Storage class which is used for storing objects by default. Available values are: \"STANDARD\", \"COLD\", \"ICE\". Default is\n`\"STANDARD\"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to\nexplicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are\nusing IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to\ncreate the resource in a different folder than the account folder. \u003e It will try to create bucket using `IAM-token`, not\nusing `access keys`.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without\nerror. These objects are *not* recoverable. Default is `false`.\n"
                },
                "grants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketGrant:StorageBucketGrant"
                    },
                    "description": "An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. \u003e To\nmanage `grant` argument, service account with `storage.admin` role should be used.\n"
                },
                "https": {
                    "$ref": "#/types/yandex:index/StorageBucketHttps:StorageBucketHttps",
                    "description": "Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for\nmore information.\n"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketLifecycleRule:StorageBucketLifecycleRule"
                    },
                    "description": "A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).\n"
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketLogging:StorageBucketLogging"
                    },
                    "description": "A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)\nfor more information.\n"
                },
                "objectLockConfiguration": {
                    "$ref": "#/types/yandex:index/StorageBucketObjectLockConfiguration:StorageBucketObjectLockConfiguration",
                    "description": "A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).\n"
                },
                "policy": {
                    "type": "string",
                    "description": "The `policy` object should contain the only field with the text of the policy. See [policy\ndocumentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n",
                    "secret": true
                },
                "serverSideEncryptionConfiguration": {
                    "$ref": "#/types/yandex:index/StorageBucketServerSideEncryptionConfiguration:StorageBucketServerSideEncryptionConfiguration",
                    "description": "A configuration of server-side encryption for the bucket.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)\nfor more information.\n"
                },
                "versioning": {
                    "$ref": "#/types/yandex:index/StorageBucketVersioning:StorageBucketVersioning",
                    "description": "A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). \u003e To manage `versioning` argument,\nservice account with `storage.admin` role should be used.\n"
                },
                "website": {
                    "$ref": "#/types/yandex:index/StorageBucketWebsite:StorageBucketWebsite",
                    "description": "A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)\n"
                },
                "websiteDomain": {
                    "type": "string",
                    "description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n"
                },
                "websiteEndpoint": {
                    "type": "string",
                    "description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n"
                }
            },
            "required": [
                "anonymousAccessFlags",
                "bucket",
                "bucketDomainName",
                "defaultStorageClass",
                "folderId",
                "versioning",
                "websiteDomain",
                "websiteEndpoint"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n"
                },
                "acl": {
                    "type": "string",
                    "description": "The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.\nConflicts with `grant`. \u003e To change ACL after creation, service account with `storage.admin` role should be used, though\nthis role is not necessary to create a bucket with any ACL.\n"
                },
                "anonymousAccessFlags": {
                    "$ref": "#/types/yandex:index/StorageBucketAnonymousAccessFlags:StorageBucketAnonymousAccessFlags",
                    "description": "Provides various access to objects. See [Bucket\nAvailability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.\n"
                },
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.\n",
                    "willReplaceOnChanges": true
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketCorsRule:StorageBucketCorsRule"
                    },
                    "description": "A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).\n"
                },
                "defaultStorageClass": {
                    "type": "string",
                    "description": "Storage class which is used for storing objects by default. Available values are: \"STANDARD\", \"COLD\", \"ICE\". Default is\n`\"STANDARD\"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to\nexplicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are\nusing IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to\ncreate the resource in a different folder than the account folder. \u003e It will try to create bucket using `IAM-token`, not\nusing `access keys`.\n",
                    "willReplaceOnChanges": true
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without\nerror. These objects are *not* recoverable. Default is `false`.\n"
                },
                "grants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketGrant:StorageBucketGrant"
                    },
                    "description": "An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. \u003e To\nmanage `grant` argument, service account with `storage.admin` role should be used.\n"
                },
                "https": {
                    "$ref": "#/types/yandex:index/StorageBucketHttps:StorageBucketHttps",
                    "description": "Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for\nmore information.\n"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketLifecycleRule:StorageBucketLifecycleRule"
                    },
                    "description": "A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).\n"
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/StorageBucketLogging:StorageBucketLogging"
                    },
                    "description": "A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)\nfor more information.\n"
                },
                "objectLockConfiguration": {
                    "$ref": "#/types/yandex:index/StorageBucketObjectLockConfiguration:StorageBucketObjectLockConfiguration",
                    "description": "A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).\n"
                },
                "policy": {
                    "type": "string",
                    "description": "The `policy` object should contain the only field with the text of the policy. See [policy\ndocumentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n",
                    "secret": true
                },
                "serverSideEncryptionConfiguration": {
                    "$ref": "#/types/yandex:index/StorageBucketServerSideEncryptionConfiguration:StorageBucketServerSideEncryptionConfiguration",
                    "description": "A configuration of server-side encryption for the bucket.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)\nfor more information.\n"
                },
                "versioning": {
                    "$ref": "#/types/yandex:index/StorageBucketVersioning:StorageBucketVersioning",
                    "description": "A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). \u003e To manage `versioning` argument,\nservice account with `storage.admin` role should be used.\n"
                },
                "website": {
                    "$ref": "#/types/yandex:index/StorageBucketWebsite:StorageBucketWebsite",
                    "description": "A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)\n"
                },
                "websiteDomain": {
                    "type": "string",
                    "description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n"
                },
                "websiteEndpoint": {
                    "type": "string",
                    "description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StorageBucket resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n"
                    },
                    "acl": {
                        "type": "string",
                        "description": "The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.\nConflicts with `grant`. \u003e To change ACL after creation, service account with `storage.admin` role should be used, though\nthis role is not necessary to create a bucket with any ACL.\n"
                    },
                    "anonymousAccessFlags": {
                        "$ref": "#/types/yandex:index/StorageBucketAnonymousAccessFlags:StorageBucketAnonymousAccessFlags",
                        "description": "Provides various access to objects. See [Bucket\nAvailability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.\n"
                    },
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bucketDomainName": {
                        "type": "string",
                        "description": "The bucket domain name.\n"
                    },
                    "bucketPrefix": {
                        "type": "string",
                        "description": "Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.\n",
                        "willReplaceOnChanges": true
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/StorageBucketCorsRule:StorageBucketCorsRule"
                        },
                        "description": "A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).\n"
                    },
                    "defaultStorageClass": {
                        "type": "string",
                        "description": "Storage class which is used for storing objects by default. Available values are: \"STANDARD\", \"COLD\", \"ICE\". Default is\n`\"STANDARD\"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to\nexplicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are\nusing IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to\ncreate the resource in a different folder than the account folder. \u003e It will try to create bucket using `IAM-token`, not\nusing `access keys`.\n",
                        "willReplaceOnChanges": true
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without\nerror. These objects are *not* recoverable. Default is `false`.\n"
                    },
                    "grants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/StorageBucketGrant:StorageBucketGrant"
                        },
                        "description": "An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. \u003e To\nmanage `grant` argument, service account with `storage.admin` role should be used.\n"
                    },
                    "https": {
                        "$ref": "#/types/yandex:index/StorageBucketHttps:StorageBucketHttps",
                        "description": "Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for\nmore information.\n"
                    },
                    "lifecycleRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/StorageBucketLifecycleRule:StorageBucketLifecycleRule"
                        },
                        "description": "A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).\n"
                    },
                    "loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/StorageBucketLogging:StorageBucketLogging"
                        },
                        "description": "A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)\nfor more information.\n"
                    },
                    "objectLockConfiguration": {
                        "$ref": "#/types/yandex:index/StorageBucketObjectLockConfiguration:StorageBucketObjectLockConfiguration",
                        "description": "A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "The `policy` object should contain the only field with the text of the policy. See [policy\ndocumentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n",
                        "secret": true
                    },
                    "serverSideEncryptionConfiguration": {
                        "$ref": "#/types/yandex:index/StorageBucketServerSideEncryptionConfiguration:StorageBucketServerSideEncryptionConfiguration",
                        "description": "A configuration of server-side encryption for the bucket.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)\nfor more information.\n"
                    },
                    "versioning": {
                        "$ref": "#/types/yandex:index/StorageBucketVersioning:StorageBucketVersioning",
                        "description": "A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). \u003e To manage `versioning` argument,\nservice account with `storage.admin` role should be used.\n"
                    },
                    "website": {
                        "$ref": "#/types/yandex:index/StorageBucketWebsite:StorageBucketWebsite",
                        "description": "A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)\n"
                    },
                    "websiteDomain": {
                        "type": "string",
                        "description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n"
                    },
                    "websiteEndpoint": {
                        "type": "string",
                        "description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/storageObject:StorageObject": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n"
                },
                "acl": {
                    "type": "string",
                    "description": "The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`. \u003e\nTo change ACL after creation, the service account to which used access and secret keys correspond should have\n`storage.admin` role, though this role is not necessary to be able to create an object with any ACL.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the containing bucket.\n"
                },
                "content": {
                    "type": "string",
                    "description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text. Conflicts with `source`\nand `content_base64`.\n"
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading\nnon-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with\nsmall text strings. For larger objects, use `source` to stream the content from a disk file. Conflicts with `source` and\n`content`.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "A standard MIME type describing the format of the object data, e.g. `application/octet-stream`. All Valid MIME Types are\nvalid for this input.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the object once it is in the bucket.\n"
                },
                "objectLockLegalHoldStatus": {
                    "type": "string",
                    "description": "Specifies a [legal hold status](https://yandex.cloud/docs/storage/concepts/object-lock#types) of an object. Requires\n`object_lock_configuration` to be enabled on a bucket.\n"
                },
                "objectLockMode": {
                    "type": "string",
                    "description": "Specifies a type of object lock. One of `[\"GOVERNANCE\", \"COMPLIANCE\"]`. It must be set simultaneously with\n`object_lock_retain_until_date`. Requires `object_lock_configuration` to be enabled on a bucket.\n"
                },
                "objectLockRetainUntilDate": {
                    "type": "string",
                    "description": "Specifies date and time in RTC3339 format until which an object is to be locked. It must be set simultaneously with\n`object_lock_mode`. Requires `object_lock_configuration` to be enabled on a bucket.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n",
                    "secret": true
                },
                "source": {
                    "type": "string",
                    "description": "The path to a file that will be read and uploaded as raw bytes for the object content. Conflicts with `content` and\n`content_base64`.\n"
                },
                "sourceHash": {
                    "type": "string",
                    "description": "Used to trigger object update when the source content changes. So the only meaningful value is\n`filemd5(\"path/to/source\"). The value is only stored in state and not saved by Yandex Storage.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)\nfor more information.\n"
                }
            },
            "required": [
                "bucket",
                "contentType",
                "key"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n"
                },
                "acl": {
                    "type": "string",
                    "description": "The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`. \u003e\nTo change ACL after creation, the service account to which used access and secret keys correspond should have\n`storage.admin` role, though this role is not necessary to be able to create an object with any ACL.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the containing bucket.\n",
                    "willReplaceOnChanges": true
                },
                "content": {
                    "type": "string",
                    "description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text. Conflicts with `source`\nand `content_base64`.\n"
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading\nnon-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with\nsmall text strings. For larger objects, use `source` to stream the content from a disk file. Conflicts with `source` and\n`content`.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "A standard MIME type describing the format of the object data, e.g. `application/octet-stream`. All Valid MIME Types are\nvalid for this input.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the object once it is in the bucket.\n",
                    "willReplaceOnChanges": true
                },
                "objectLockLegalHoldStatus": {
                    "type": "string",
                    "description": "Specifies a [legal hold status](https://yandex.cloud/docs/storage/concepts/object-lock#types) of an object. Requires\n`object_lock_configuration` to be enabled on a bucket.\n"
                },
                "objectLockMode": {
                    "type": "string",
                    "description": "Specifies a type of object lock. One of `[\"GOVERNANCE\", \"COMPLIANCE\"]`. It must be set simultaneously with\n`object_lock_retain_until_date`. Requires `object_lock_configuration` to be enabled on a bucket.\n"
                },
                "objectLockRetainUntilDate": {
                    "type": "string",
                    "description": "Specifies date and time in RTC3339 format until which an object is to be locked. It must be set simultaneously with\n`object_lock_mode`. Requires `object_lock_configuration` to be enabled on a bucket.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n",
                    "secret": true
                },
                "source": {
                    "type": "string",
                    "description": "The path to a file that will be read and uploaded as raw bytes for the object content. Conflicts with `content` and\n`content_base64`.\n"
                },
                "sourceHash": {
                    "type": "string",
                    "description": "Used to trigger object update when the source content changes. So the only meaningful value is\n`filemd5(\"path/to/source\"). The value is only stored in state and not saved by Yandex Storage.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)\nfor more information.\n"
                }
            },
            "requiredInputs": [
                "bucket",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StorageObject resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n"
                    },
                    "acl": {
                        "type": "string",
                        "description": "The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`. \u003e\nTo change ACL after creation, the service account to which used access and secret keys correspond should have\n`storage.admin` role, though this role is not necessary to be able to create an object with any ACL.\n"
                    },
                    "bucket": {
                        "type": "string",
                        "description": "The name of the containing bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "content": {
                        "type": "string",
                        "description": "Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text. Conflicts with `source`\nand `content_base64`.\n"
                    },
                    "contentBase64": {
                        "type": "string",
                        "description": "Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading\nnon-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with\nsmall text strings. For larger objects, use `source` to stream the content from a disk file. Conflicts with `source` and\n`content`.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data, e.g. `application/octet-stream`. All Valid MIME Types are\nvalid for this input.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the object once it is in the bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "objectLockLegalHoldStatus": {
                        "type": "string",
                        "description": "Specifies a [legal hold status](https://yandex.cloud/docs/storage/concepts/object-lock#types) of an object. Requires\n`object_lock_configuration` to be enabled on a bucket.\n"
                    },
                    "objectLockMode": {
                        "type": "string",
                        "description": "Specifies a type of object lock. One of `[\"GOVERNANCE\", \"COMPLIANCE\"]`. It must be set simultaneously with\n`object_lock_retain_until_date`. Requires `object_lock_configuration` to be enabled on a bucket.\n"
                    },
                    "objectLockRetainUntilDate": {
                        "type": "string",
                        "description": "Specifies date and time in RTC3339 format until which an object is to be locked. It must be set simultaneously with\n`object_lock_mode`. Requires `object_lock_configuration` to be enabled on a bucket.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in\nprovider config (explicitly or within `shared_credentials_file`) is used.\n",
                        "secret": true
                    },
                    "source": {
                        "type": "string",
                        "description": "The path to a file that will be read and uploaded as raw bytes for the object content. Conflicts with `content` and\n`content_base64`.\n"
                    },
                    "sourceHash": {
                        "type": "string",
                        "description": "Used to trigger object update when the source content changes. So the only meaningful value is\n`filemd5(\"path/to/source\"). The value is only stored in state and not saved by Yandex Storage.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)\nfor more information.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/swsAdvancedRateLimiterProfile:SwsAdvancedRateLimiterProfile": {
            "properties": {
                "advancedRateLimiterRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule"
                    },
                    "description": "List of rules. \u003e Exactly one rule specifier: `static_quota` or `dynamic_quota` should be specified.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "required": [
                "cloudId",
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "advancedRateLimiterRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule"
                    },
                    "description": "List of rules. \u003e Exactly one rule specifier: `static_quota` or `dynamic_quota` should be specified.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwsAdvancedRateLimiterProfile resources.\n",
                "properties": {
                    "advancedRateLimiterRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule:SwsAdvancedRateLimiterProfileAdvancedRateLimiterRule"
                        },
                        "description": "List of rules. \u003e Exactly one rule specifier: `static_quota` or `dynamic_quota` should be specified.\n"
                    },
                    "cloudId": {
                        "type": "string",
                        "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/swsSecurityProfile:SwsSecurityProfile": {
            "properties": {
                "advancedRateLimiterProfileId": {
                    "type": "string",
                    "description": "Advanced rate limiter profile ID to use with this security profile. Set empty to use default.\n"
                },
                "captchaId": {
                    "type": "string",
                    "description": "Captcha ID to use with this security profile. Set empty to use default.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "defaultAction": {
                    "type": "string",
                    "description": "Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "securityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRule:SwsSecurityProfileSecurityRule"
                    },
                    "description": "List of security rules. \u003e Exactly one rule specifier: `smart_protection` or `rule_condition` or `waf` should be\nspecified.\n"
                }
            },
            "required": [
                "cloudId",
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "advancedRateLimiterProfileId": {
                    "type": "string",
                    "description": "Advanced rate limiter profile ID to use with this security profile. Set empty to use default.\n"
                },
                "captchaId": {
                    "type": "string",
                    "description": "Captcha ID to use with this security profile. Set empty to use default.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "defaultAction": {
                    "type": "string",
                    "description": "Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "securityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRule:SwsSecurityProfileSecurityRule"
                    },
                    "description": "List of security rules. \u003e Exactly one rule specifier: `smart_protection` or `rule_condition` or `waf` should be\nspecified.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwsSecurityProfile resources.\n",
                "properties": {
                    "advancedRateLimiterProfileId": {
                        "type": "string",
                        "description": "Advanced rate limiter profile ID to use with this security profile. Set empty to use default.\n"
                    },
                    "captchaId": {
                        "type": "string",
                        "description": "Captcha ID to use with this security profile. Set empty to use default.\n"
                    },
                    "cloudId": {
                        "type": "string",
                        "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "defaultAction": {
                        "type": "string",
                        "description": "Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "securityRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/SwsSecurityProfileSecurityRule:SwsSecurityProfileSecurityRule"
                        },
                        "description": "List of security rules. \u003e Exactly one rule specifier: `smart_protection` or `rule_condition` or `waf` should be\nspecified.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/swsWafProfile:SwsWafProfile": {
            "properties": {
                "analyzeRequestBody": {
                    "$ref": "#/types/yandex:index/SwsWafProfileAnalyzeRequestBody:SwsWafProfileAnalyzeRequestBody",
                    "description": "Parameters for request body analyzer.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "coreRuleSet": {
                    "$ref": "#/types/yandex:index/SwsWafProfileCoreRuleSet:SwsWafProfileCoreRuleSet",
                    "description": "Core rule set settings. See [Basic rule set](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#rules-set) for\ndetails.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "exclusionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileExclusionRule:SwsWafProfileExclusionRule"
                    },
                    "description": "List of exclusion rules. See [Rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#exclusion-rules).\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileRule:SwsWafProfileRule"
                    },
                    "description": "Settings for each rule in rule set.\n"
                }
            },
            "required": [
                "cloudId",
                "createdAt",
                "folderId",
                "name"
            ],
            "inputProperties": {
                "analyzeRequestBody": {
                    "$ref": "#/types/yandex:index/SwsWafProfileAnalyzeRequestBody:SwsWafProfileAnalyzeRequestBody",
                    "description": "Parameters for request body analyzer.\n"
                },
                "cloudId": {
                    "type": "string",
                    "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                },
                "coreRuleSet": {
                    "$ref": "#/types/yandex:index/SwsWafProfileCoreRuleSet:SwsWafProfileCoreRuleSet",
                    "description": "Core rule set settings. See [Basic rule set](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#rules-set) for\ndetails.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "exclusionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileExclusionRule:SwsWafProfileExclusionRule"
                    },
                    "description": "List of exclusion rules. See [Rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#exclusion-rules).\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/SwsWafProfileRule:SwsWafProfileRule"
                    },
                    "description": "Settings for each rule in rule set.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwsWafProfile resources.\n",
                "properties": {
                    "analyzeRequestBody": {
                        "$ref": "#/types/yandex:index/SwsWafProfileAnalyzeRequestBody:SwsWafProfileAnalyzeRequestBody",
                        "description": "Parameters for request body analyzer.\n"
                    },
                    "cloudId": {
                        "type": "string",
                        "description": "The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.\n"
                    },
                    "coreRuleSet": {
                        "$ref": "#/types/yandex:index/SwsWafProfileCoreRuleSet:SwsWafProfileCoreRuleSet",
                        "description": "Core rule set settings. See [Basic rule set](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#rules-set) for\ndetails.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "exclusionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/SwsWafProfileExclusionRule:SwsWafProfileExclusionRule"
                        },
                        "description": "List of exclusion rules. See [Rules](https://yandex.cloud/en/docs/smartwebsecurity/concepts/waf#exclusion-rules).\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/SwsWafProfileRule:SwsWafProfileRule"
                        },
                        "description": "Settings for each rule in rule set.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcAddress:VpcAddress": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcAddressDnsRecord:VpcAddressDnsRecord"
                    },
                    "description": "DNS record specification of address.\n"
                },
                "externalIpv4Address": {
                    "$ref": "#/types/yandex:index/VpcAddressExternalIpv4Address:VpcAddressExternalIpv4Address",
                    "description": "Specification of IPv4 address. \u003e Either one `address` or `zone_id` arguments can be specified. \u003e Either one\n`ddos_protection_provider` or `outgoing_smtp_capability` arguments can be specified. \u003e Change any argument in\n`external_ipv4_address` will cause an address recreate.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "reserved": {
                    "type": "boolean",
                    "description": "`false` means that address is ephemeral.\n"
                },
                "used": {
                    "type": "boolean",
                    "description": "`true` if address is used.\n"
                }
            },
            "required": [
                "createdAt",
                "deletionProtection",
                "folderId",
                "labels",
                "name",
                "reserved",
                "used"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dnsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcAddressDnsRecord:VpcAddressDnsRecord"
                    },
                    "description": "DNS record specification of address.\n"
                },
                "externalIpv4Address": {
                    "$ref": "#/types/yandex:index/VpcAddressExternalIpv4Address:VpcAddressExternalIpv4Address",
                    "description": "Specification of IPv4 address. \u003e Either one `address` or `zone_id` arguments can be specified. \u003e Either one\n`ddos_protection_provider` or `outgoing_smtp_capability` arguments can be specified. \u003e Change any argument in\n`external_ipv4_address` will cause an address recreate.\n",
                    "willReplaceOnChanges": true
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcAddress resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "dnsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/VpcAddressDnsRecord:VpcAddressDnsRecord"
                        },
                        "description": "DNS record specification of address.\n"
                    },
                    "externalIpv4Address": {
                        "$ref": "#/types/yandex:index/VpcAddressExternalIpv4Address:VpcAddressExternalIpv4Address",
                        "description": "Specification of IPv4 address. \u003e Either one `address` or `zone_id` arguments can be specified. \u003e Either one\n`ddos_protection_provider` or `outgoing_smtp_capability` arguments can be specified. \u003e Change any argument in\n`external_ipv4_address` will cause an address recreate.\n",
                        "willReplaceOnChanges": true
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "reserved": {
                        "type": "boolean",
                        "description": "`false` means that address is ephemeral.\n"
                    },
                    "used": {
                        "type": "boolean",
                        "description": "`true` if address is used.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcDefaultSecurityGroup:VpcDefaultSecurityGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "egresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcDefaultSecurityGroupEgress:VpcDefaultSecurityGroupEgress"
                    },
                    "description": "A list of egress rules.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "ingresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcDefaultSecurityGroupIngress:VpcDefaultSecurityGroupIngress"
                    },
                    "description": "A list of ingress rules.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name. Cannot be updated.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this security group belongs to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of this security group.\n"
                }
            },
            "required": [
                "createdAt",
                "egresses",
                "folderId",
                "ingresses",
                "labels",
                "name",
                "networkId",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "egresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcDefaultSecurityGroupEgress:VpcDefaultSecurityGroupEgress"
                    },
                    "description": "A list of egress rules.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "ingresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcDefaultSecurityGroupIngress:VpcDefaultSecurityGroupIngress"
                    },
                    "description": "A list of ingress rules.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this security group belongs to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcDefaultSecurityGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "egresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/VpcDefaultSecurityGroupEgress:VpcDefaultSecurityGroupEgress"
                        },
                        "description": "A list of egress rules.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "ingresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/VpcDefaultSecurityGroupIngress:VpcDefaultSecurityGroupIngress"
                        },
                        "description": "A list of ingress rules.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name. Cannot be updated.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network this security group belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of this security group.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcGateway:VpcGateway": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "sharedEgressGateway": {
                    "$ref": "#/types/yandex:index/VpcGatewaySharedEgressGateway:VpcGatewaySharedEgressGateway",
                    "description": "Shared egress gateway configuration. Currently empty.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "labels",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "sharedEgressGateway": {
                    "$ref": "#/types/yandex:index/VpcGatewaySharedEgressGateway:VpcGatewaySharedEgressGateway",
                    "description": "Shared egress gateway configuration. Currently empty.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcGateway resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "sharedEgressGateway": {
                        "$ref": "#/types/yandex:index/VpcGatewaySharedEgressGateway:VpcGatewaySharedEgressGateway",
                        "description": "Shared egress gateway configuration. Currently empty.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcNetwork:VpcNetwork": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "defaultSecurityGroupId": {
                    "type": "string",
                    "description": "ID of default Security Group of this network.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of VPC subnets identifiers which resource is attached.\n"
                }
            },
            "required": [
                "createdAt",
                "defaultSecurityGroupId",
                "folderId",
                "labels",
                "name",
                "subnetIds"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcNetwork resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "defaultSecurityGroupId": {
                        "type": "string",
                        "description": "ID of default Security Group of this network.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of VPC subnets identifiers which resource is attached.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcPrivateEndpoint:VpcPrivateEndpoint": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dnsOptions": {
                    "$ref": "#/types/yandex:index/VpcPrivateEndpointDnsOptions:VpcPrivateEndpointDnsOptions",
                    "description": "Private endpoint DNS options block.\n"
                },
                "endpointAddress": {
                    "$ref": "#/types/yandex:index/VpcPrivateEndpointEndpointAddress:VpcPrivateEndpointEndpointAddress",
                    "description": "Private endpoint address specification block. \u003e Only one of `address_id` or `subnet_id` + `address` arguments can be\nspecified.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network which private endpoint belongs to.\n"
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/VpcPrivateEndpointObjectStorage:VpcPrivateEndpointObjectStorage",
                    "description": "Private endpoint for Object Storage.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the private endpoint.\n"
                }
            },
            "required": [
                "createdAt",
                "dnsOptions",
                "endpointAddress",
                "folderId",
                "labels",
                "name",
                "networkId",
                "objectStorage",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dnsOptions": {
                    "$ref": "#/types/yandex:index/VpcPrivateEndpointDnsOptions:VpcPrivateEndpointDnsOptions",
                    "description": "Private endpoint DNS options block.\n"
                },
                "endpointAddress": {
                    "$ref": "#/types/yandex:index/VpcPrivateEndpointEndpointAddress:VpcPrivateEndpointEndpointAddress",
                    "description": "Private endpoint address specification block. \u003e Only one of `address_id` or `subnet_id` + `address` arguments can be\nspecified.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network which private endpoint belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "objectStorage": {
                    "$ref": "#/types/yandex:index/VpcPrivateEndpointObjectStorage:VpcPrivateEndpointObjectStorage",
                    "description": "Private endpoint for Object Storage.\n"
                }
            },
            "requiredInputs": [
                "networkId",
                "objectStorage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPrivateEndpoint resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "dnsOptions": {
                        "$ref": "#/types/yandex:index/VpcPrivateEndpointDnsOptions:VpcPrivateEndpointDnsOptions",
                        "description": "Private endpoint DNS options block.\n"
                    },
                    "endpointAddress": {
                        "$ref": "#/types/yandex:index/VpcPrivateEndpointEndpointAddress:VpcPrivateEndpointEndpointAddress",
                        "description": "Private endpoint address specification block. \u003e Only one of `address_id` or `subnet_id` + `address` arguments can be\nspecified.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network which private endpoint belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "objectStorage": {
                        "$ref": "#/types/yandex:index/VpcPrivateEndpointObjectStorage:VpcPrivateEndpointObjectStorage",
                        "description": "Private endpoint for Object Storage.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the private endpoint.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcRouteTable:VpcRouteTable": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this route table belongs to.\n"
                },
                "staticRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcRouteTableStaticRoute:VpcRouteTableStaticRoute"
                    },
                    "description": "A list of static route records for the route table. \u003e Only one of `next_hop_address` or `gateway_id` should be\nspecified.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "labels",
                "name",
                "networkId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this route table belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "staticRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcRouteTableStaticRoute:VpcRouteTableStaticRoute"
                    },
                    "description": "A list of static route records for the route table. \u003e Only one of `next_hop_address` or `gateway_id` should be\nspecified.\n"
                }
            },
            "requiredInputs": [
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcRouteTable resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network this route table belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "staticRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/VpcRouteTableStaticRoute:VpcRouteTableStaticRoute"
                        },
                        "description": "A list of static route records for the route table. \u003e Only one of `next_hop_address` or `gateway_id` should be\nspecified.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcSecurityGroup:VpcSecurityGroup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "egresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcSecurityGroupEgress:VpcSecurityGroupEgress"
                    },
                    "description": "A list of egress rules.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "ingresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcSecurityGroupIngress:VpcSecurityGroupIngress"
                    },
                    "description": "A list of ingress rules.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this security group belongs to.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of this security group.\n"
                }
            },
            "required": [
                "createdAt",
                "egresses",
                "folderId",
                "ingresses",
                "labels",
                "name",
                "networkId",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "egresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcSecurityGroupEgress:VpcSecurityGroupEgress"
                    },
                    "description": "A list of egress rules.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "ingresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/VpcSecurityGroupIngress:VpcSecurityGroupIngress"
                    },
                    "description": "A list of ingress rules.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this security group belongs to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcSecurityGroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "egresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/VpcSecurityGroupEgress:VpcSecurityGroupEgress"
                        },
                        "description": "A list of egress rules.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "ingresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/VpcSecurityGroupIngress:VpcSecurityGroupIngress"
                        },
                        "description": "A list of ingress rules.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network this security group belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of this security group.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/vpcSubnet:VpcSubnet": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dhcpOptions": {
                    "$ref": "#/types/yandex:index/VpcSubnetDhcpOptions:VpcSubnetDhcpOptions",
                    "description": "Options for DHCP client.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this subnet belongs to. Only networks that are in the distributed mode can have subnets.\n"
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to assign to this subnet. Assigned route table should belong to the same network as this\nsubnet.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of blocks of internal IPv4 addresses that are owned by this subnet. Provide this property when you create the\nsubnet. For example, `10.0.0.0/22` or `192.168.0.0/16`. Blocks of addresses must be unique and non-overlapping within a\nnetwork. Minimum subnet size is `/28`, and maximum subnet size is `/16`. Only IPv4 is supported.\n"
                },
                "v6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An optional list of blocks of IPv6 addresses that are owned by this subnet.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n"
                }
            },
            "required": [
                "createdAt",
                "folderId",
                "labels",
                "name",
                "networkId",
                "v4CidrBlocks",
                "v6CidrBlocks",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "dhcpOptions": {
                    "$ref": "#/types/yandex:index/VpcSubnetDhcpOptions:VpcSubnetDhcpOptions",
                    "description": "Options for DHCP client.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network this subnet belongs to. Only networks that are in the distributed mode can have subnets.\n",
                    "willReplaceOnChanges": true
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to assign to this subnet. Assigned route table should belong to the same network as this\nsubnet.\n"
                },
                "v4CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of blocks of internal IPv4 addresses that are owned by this subnet. Provide this property when you create the\nsubnet. For example, `10.0.0.0/22` or `192.168.0.0/16`. Blocks of addresses must be unique and non-overlapping within a\nnetwork. Minimum subnet size is `/28`, and maximum subnet size is `/16`. Only IPv4 is supported.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId",
                "v4CidrBlocks"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcSubnet resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "dhcpOptions": {
                        "$ref": "#/types/yandex:index/VpcSubnetDhcpOptions:VpcSubnetDhcpOptions",
                        "description": "Options for DHCP client.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network this subnet belongs to. Only networks that are in the distributed mode can have subnets.\n",
                        "willReplaceOnChanges": true
                    },
                    "routeTableId": {
                        "type": "string",
                        "description": "The ID of the route table to assign to this subnet. Assigned route table should belong to the same network as this\nsubnet.\n"
                    },
                    "v4CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of blocks of internal IPv4 addresses that are owned by this subnet. Provide this property when you create the\nsubnet. For example, `10.0.0.0/22` or `192.168.0.0/16`. Blocks of addresses must be unique and non-overlapping within a\nnetwork. Minimum subnet size is `/28`, and maximum subnet size is `/16`. Only IPv4 is supported.\n"
                    },
                    "v6CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An optional list of blocks of IPv6 addresses that are owned by this subnet.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not\nprovided, the default provider zone will be used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbDatabaseDedicated:YdbDatabaseDedicated": {
            "properties": {
                "assignPublicIps": {
                    "type": "boolean",
                    "description": "Whether public IP addresses should be assigned to the Yandex Database cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databasePath": {
                    "type": "string",
                    "description": "Full database path of the Yandex Database cluster. Useful for SDK configuration.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "location": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedLocation:YdbDatabaseDedicatedLocation",
                    "description": "Location for the Yandex Database cluster.\n"
                },
                "locationId": {
                    "type": "string",
                    "description": "Location ID for the Yandex Database cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.\n"
                },
                "scalePolicy": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedScalePolicy:YdbDatabaseDedicatedScalePolicy",
                    "description": "Scaling policy for the Yandex Database cluster. \u003e Currently, only `fixed_scale` is supported.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sleepAfter": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Yandex Database cluster.\n"
                },
                "storageConfig": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedStorageConfig:YdbDatabaseDedicatedStorageConfig",
                    "description": "A list of storage configuration options for the Yandex Database cluster.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of VPC subnets identifiers which resource is attached.\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.\n"
                },
                "ydbApiEndpoint": {
                    "type": "string",
                    "description": "API endpoint of the Yandex Database cluster. Useful for SDK configuration.\n"
                },
                "ydbFullEndpoint": {
                    "type": "string",
                    "description": "Full endpoint of the Yandex Database cluster.\n"
                }
            },
            "required": [
                "createdAt",
                "databasePath",
                "folderId",
                "locationId",
                "name",
                "networkId",
                "resourcePresetId",
                "scalePolicy",
                "status",
                "storageConfig",
                "subnetIds",
                "tlsEnabled",
                "ydbApiEndpoint",
                "ydbFullEndpoint"
            ],
            "inputProperties": {
                "assignPublicIps": {
                    "type": "boolean",
                    "description": "Whether public IP addresses should be assigned to the Yandex Database cluster.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "location": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedLocation:YdbDatabaseDedicatedLocation",
                    "description": "Location for the Yandex Database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "locationId": {
                    "type": "string",
                    "description": "Location ID for the Yandex Database cluster.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                },
                "resourcePresetId": {
                    "type": "string",
                    "description": "The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.\n"
                },
                "scalePolicy": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedScalePolicy:YdbDatabaseDedicatedScalePolicy",
                    "description": "Scaling policy for the Yandex Database cluster. \u003e Currently, only `fixed_scale` is supported.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security groups applied to resource or their components.\n"
                },
                "sleepAfter": {
                    "type": "integer"
                },
                "storageConfig": {
                    "$ref": "#/types/yandex:index/YdbDatabaseDedicatedStorageConfig:YdbDatabaseDedicatedStorageConfig",
                    "description": "A list of storage configuration options for the Yandex Database cluster.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of VPC subnets identifiers which resource is attached.\n"
                }
            },
            "requiredInputs": [
                "networkId",
                "resourcePresetId",
                "scalePolicy",
                "storageConfig",
                "subnetIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbDatabaseDedicated resources.\n",
                "properties": {
                    "assignPublicIps": {
                        "type": "boolean",
                        "description": "Whether public IP addresses should be assigned to the Yandex Database cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databasePath": {
                        "type": "string",
                        "description": "Full database path of the Yandex Database cluster. Useful for SDK configuration.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "location": {
                        "$ref": "#/types/yandex:index/YdbDatabaseDedicatedLocation:YdbDatabaseDedicatedLocation",
                        "description": "Location for the Yandex Database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location ID for the Yandex Database cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The `VPC Network ID` of subnets which resource attached to.\n"
                    },
                    "resourcePresetId": {
                        "type": "string",
                        "description": "The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.\n"
                    },
                    "scalePolicy": {
                        "$ref": "#/types/yandex:index/YdbDatabaseDedicatedScalePolicy:YdbDatabaseDedicatedScalePolicy",
                        "description": "Scaling policy for the Yandex Database cluster. \u003e Currently, only `fixed_scale` is supported.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security groups applied to resource or their components.\n"
                    },
                    "sleepAfter": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Yandex Database cluster.\n"
                    },
                    "storageConfig": {
                        "$ref": "#/types/yandex:index/YdbDatabaseDedicatedStorageConfig:YdbDatabaseDedicatedStorageConfig",
                        "description": "A list of storage configuration options for the Yandex Database cluster.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of VPC subnets identifiers which resource is attached.\n"
                    },
                    "tlsEnabled": {
                        "type": "boolean",
                        "description": "Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.\n"
                    },
                    "ydbApiEndpoint": {
                        "type": "string",
                        "description": "API endpoint of the Yandex Database cluster. Useful for SDK configuration.\n"
                    },
                    "ydbFullEndpoint": {
                        "type": "string",
                        "description": "Full endpoint of the Yandex Database cluster.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbDatabaseIamBinding:YdbDatabaseIamBinding": {
            "properties": {
                "databaseId": {
                    "type": "string",
                    "description": "The [Managed Service YDB instance](https://yandex.cloud/docs/ydb/) Database ID to apply a binding to.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n"
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "required": [
                "databaseId",
                "members",
                "role"
            ],
            "inputProperties": {
                "databaseId": {
                    "type": "string",
                    "description": "The [Managed Service YDB instance](https://yandex.cloud/docs/ydb/) Database ID to apply a binding to.\n",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                    "willReplaceOnChanges": true
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "databaseId",
                "members",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbDatabaseIamBinding resources.\n",
                "properties": {
                    "databaseId": {
                        "type": "string",
                        "description": "The [Managed Service YDB instance](https://yandex.cloud/docs/ydb/) Database ID to apply a binding to.\n",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following\nvalues: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *\n**serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique\nfederated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *\n**group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *\n**system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:\nAll authenticated users. * **system:allUsers**: All users, including unauthenticated ones. \u003e for more information about\nsystem groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).\n",
                        "willReplaceOnChanges": true
                    },
                    "sleepAfter": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbDatabaseServerless:YdbDatabaseServerless": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation timestamp of the resource.\n"
                },
                "databasePath": {
                    "type": "string",
                    "description": "Full database path of the Yandex Database serverless cluster. Useful for SDK configuration.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "documentApiEndpoint": {
                    "type": "string",
                    "description": "Document API endpoint of the Yandex Database serverless cluster.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "locationId": {
                    "type": "string",
                    "description": "Location ID for the Yandex Database serverless cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "serverlessDatabases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbDatabaseServerlessServerlessDatabase:YdbDatabaseServerlessServerlessDatabase"
                    }
                },
                "sleepAfter": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Yandex Database serverless cluster.\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "Whether TLS is enabled for the Yandex Database serverless cluster. Useful for SDK configuration.\n"
                },
                "ydbApiEndpoint": {
                    "type": "string",
                    "description": "API endpoint of the Yandex Database serverless cluster. Useful for SDK configuration.\n"
                },
                "ydbFullEndpoint": {
                    "type": "string",
                    "description": "Full endpoint of the Yandex Database serverless cluster.\n"
                }
            },
            "required": [
                "createdAt",
                "databasePath",
                "documentApiEndpoint",
                "folderId",
                "locationId",
                "name",
                "serverlessDatabases",
                "status",
                "tlsEnabled",
                "ydbApiEndpoint",
                "ydbFullEndpoint"
            ],
            "inputProperties": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The `true` value means that resource is protected from accidental deletion.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The resource description.\n"
                },
                "folderId": {
                    "type": "string",
                    "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of key/value label pairs which assigned to resource.\n"
                },
                "locationId": {
                    "type": "string",
                    "description": "Location ID for the Yandex Database serverless cluster.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "serverlessDatabases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbDatabaseServerlessServerlessDatabase:YdbDatabaseServerlessServerlessDatabase"
                    }
                },
                "sleepAfter": {
                    "type": "integer"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbDatabaseServerless resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation timestamp of the resource.\n"
                    },
                    "databasePath": {
                        "type": "string",
                        "description": "Full database path of the Yandex Database serverless cluster. Useful for SDK configuration.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "The `true` value means that resource is protected from accidental deletion.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The resource description.\n"
                    },
                    "documentApiEndpoint": {
                        "type": "string",
                        "description": "Document API endpoint of the Yandex Database serverless cluster.\n"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A set of key/value label pairs which assigned to resource.\n"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location ID for the Yandex Database serverless cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The resource name.\n"
                    },
                    "serverlessDatabases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/YdbDatabaseServerlessServerlessDatabase:YdbDatabaseServerlessServerlessDatabase"
                        }
                    },
                    "sleepAfter": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Yandex Database serverless cluster.\n"
                    },
                    "tlsEnabled": {
                        "type": "boolean",
                        "description": "Whether TLS is enabled for the Yandex Database serverless cluster. Useful for SDK configuration.\n"
                    },
                    "ydbApiEndpoint": {
                        "type": "string",
                        "description": "API endpoint of the Yandex Database serverless cluster. Useful for SDK configuration.\n"
                    },
                    "ydbFullEndpoint": {
                        "type": "string",
                        "description": "Full endpoint of the Yandex Database serverless cluster.\n"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbTable:YdbTable": {
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTableColumn:YdbTableColumn"
                    }
                },
                "connectionString": {
                    "type": "string"
                },
                "families": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTableFamily:YdbTableFamily"
                    }
                },
                "keyBloomFilter": {
                    "type": "boolean"
                },
                "partitioningSettings": {
                    "$ref": "#/types/yandex:index/YdbTablePartitioningSettings:YdbTablePartitioningSettings"
                },
                "path": {
                    "type": "string"
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readReplicasSettings": {
                    "type": "string"
                },
                "ttl": {
                    "$ref": "#/types/yandex:index/YdbTableTtl:YdbTableTtl"
                }
            },
            "required": [
                "attributes",
                "columns",
                "connectionString",
                "keyBloomFilter",
                "partitioningSettings",
                "path",
                "primaryKeys",
                "readReplicasSettings"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTableColumn:YdbTableColumn"
                    }
                },
                "connectionString": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "families": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTableFamily:YdbTableFamily"
                    }
                },
                "keyBloomFilter": {
                    "type": "boolean"
                },
                "partitioningSettings": {
                    "$ref": "#/types/yandex:index/YdbTablePartitioningSettings:YdbTablePartitioningSettings"
                },
                "path": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "readReplicasSettings": {
                    "type": "string"
                },
                "ttl": {
                    "$ref": "#/types/yandex:index/YdbTableTtl:YdbTableTtl"
                }
            },
            "requiredInputs": [
                "columns",
                "connectionString",
                "path",
                "primaryKeys"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbTable resources.\n",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/YdbTableColumn:YdbTableColumn"
                        }
                    },
                    "connectionString": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "families": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/YdbTableFamily:YdbTableFamily"
                        }
                    },
                    "keyBloomFilter": {
                        "type": "boolean"
                    },
                    "partitioningSettings": {
                        "$ref": "#/types/yandex:index/YdbTablePartitioningSettings:YdbTablePartitioningSettings"
                    },
                    "path": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "readReplicasSettings": {
                        "type": "string"
                    },
                    "ttl": {
                        "$ref": "#/types/yandex:index/YdbTableTtl:YdbTableTtl"
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbTableChangefeed:YdbTableChangefeed": {
            "properties": {
                "connectionString": {
                    "type": "string"
                },
                "consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTableChangefeedConsumer:YdbTableChangefeedConsumer"
                    }
                },
                "format": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "type": "string"
                },
                "tableId": {
                    "type": "string"
                },
                "tablePath": {
                    "type": "string"
                },
                "virtualTimestamps": {
                    "type": "boolean"
                }
            },
            "required": [
                "connectionString",
                "consumers",
                "format",
                "mode",
                "name",
                "tableId",
                "tablePath"
            ],
            "inputProperties": {
                "connectionString": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTableChangefeedConsumer:YdbTableChangefeedConsumer"
                    }
                },
                "format": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retentionPeriod": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tableId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tablePath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "virtualTimestamps": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "format",
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbTableChangefeed resources.\n",
                "properties": {
                    "connectionString": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "consumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/YdbTableChangefeedConsumer:YdbTableChangefeedConsumer"
                        }
                    },
                    "format": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "mode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "retentionPeriod": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tableId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tablePath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "virtualTimestamps": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbTableIndex:YdbTableIndex": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionString": {
                    "type": "string"
                },
                "covers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "tableId": {
                    "type": "string"
                },
                "tablePath": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "columns",
                "connectionString",
                "name",
                "tableId",
                "tablePath",
                "type"
            ],
            "inputProperties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "connectionString": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "covers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tableId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tablePath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "columns",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbTableIndex resources.\n",
                "properties": {
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "connectionString": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "covers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tableId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tablePath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "yandex:index/ydbTopic:YdbTopic": {
            "properties": {
                "consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTopicConsumer:YdbTopicConsumer"
                    }
                },
                "databaseEndpoint": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "meteringMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partitionWriteSpeedKbps": {
                    "type": "integer"
                },
                "partitionsCount": {
                    "type": "integer"
                },
                "retentionPeriodHours": {
                    "type": "integer"
                },
                "retentionStorageMb": {
                    "type": "integer"
                },
                "supportedCodecs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "consumers",
                "databaseEndpoint",
                "meteringMode",
                "name",
                "partitionWriteSpeedKbps",
                "partitionsCount",
                "retentionPeriodHours",
                "retentionStorageMb",
                "supportedCodecs"
            ],
            "inputProperties": {
                "consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/yandex:index/YdbTopicConsumer:YdbTopicConsumer"
                    }
                },
                "databaseEndpoint": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "meteringMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "partitionWriteSpeedKbps": {
                    "type": "integer"
                },
                "partitionsCount": {
                    "type": "integer"
                },
                "retentionPeriodHours": {
                    "type": "integer"
                },
                "retentionStorageMb": {
                    "type": "integer"
                },
                "supportedCodecs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "databaseEndpoint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering YdbTopic resources.\n",
                "properties": {
                    "consumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/YdbTopicConsumer:YdbTopicConsumer"
                        }
                    },
                    "databaseEndpoint": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "meteringMode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "partitionWriteSpeedKbps": {
                        "type": "integer"
                    },
                    "partitionsCount": {
                        "type": "integer"
                    },
                    "retentionPeriodHours": {
                        "type": "integer"
                    },
                    "retentionStorageMb": {
                        "type": "integer"
                    },
                    "supportedCodecs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "pulumi:providers:yandex/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/resources/pulumi:providers:yandex"
                    }
                },
                "type": "pulumi:providers:yandex/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        },
        "yandex:index/getAlbBackendGroup:getAlbBackendGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getAlbBackendGroup.\n",
                "properties": {
                    "backendGroupId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "grpcBackends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackend:getAlbBackendGroupGrpcBackend"
                        }
                    },
                    "httpBackends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackend:getAlbBackendGroupHttpBackend"
                        }
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "sessionAffinity": {
                        "$ref": "#/types/yandex:index/getAlbBackendGroupSessionAffinity:getAlbBackendGroupSessionAffinity"
                    },
                    "streamBackends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackend:getAlbBackendGroupStreamBackend"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlbBackendGroup.\n",
                "properties": {
                    "backendGroupId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "grpcBackends": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbBackendGroupGrpcBackend:getAlbBackendGroupGrpcBackend"
                        },
                        "type": "array"
                    },
                    "httpBackends": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbBackendGroupHttpBackend:getAlbBackendGroupHttpBackend"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sessionAffinity": {
                        "$ref": "#/types/yandex:index/getAlbBackendGroupSessionAffinity:getAlbBackendGroupSessionAffinity"
                    },
                    "streamBackends": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbBackendGroupStreamBackend:getAlbBackendGroupStreamBackend"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "backendGroupId",
                    "createdAt",
                    "description",
                    "folderId",
                    "grpcBackends",
                    "httpBackends",
                    "labels",
                    "name",
                    "sessionAffinity",
                    "streamBackends",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getAlbHttpRouter:getAlbHttpRouter": {
            "inputs": {
                "description": "A collection of arguments for invoking getAlbHttpRouter.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "httpRouterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlbHttpRouter.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "httpRouterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "routeOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbHttpRouterRouteOption:getAlbHttpRouterRouteOption"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "httpRouterId",
                    "labels",
                    "name",
                    "routeOptions",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getAlbLoadBalancer:getAlbLoadBalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getAlbLoadBalancer.\n",
                "properties": {
                    "loadBalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlbLoadBalancer.\n",
                "properties": {
                    "allocationPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbLoadBalancerAllocationPolicy:getAlbLoadBalancerAllocationPolicy"
                        },
                        "type": "array"
                    },
                    "allowZonalShift": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "listeners": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbLoadBalancerListener:getAlbLoadBalancerListener"
                        },
                        "type": "array"
                    },
                    "loadBalancerId": {
                        "type": "string"
                    },
                    "logGroupId": {
                        "type": "string"
                    },
                    "logOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbLoadBalancerLogOption:getAlbLoadBalancerLogOption"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "regionId": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "allocationPolicies",
                    "allowZonalShift",
                    "createdAt",
                    "description",
                    "folderId",
                    "labels",
                    "listeners",
                    "loadBalancerId",
                    "logGroupId",
                    "logOptions",
                    "name",
                    "networkId",
                    "regionId",
                    "securityGroupIds",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getAlbTargetGroup:getAlbTargetGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getAlbTargetGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetGroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlbTargetGroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetGroupId": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbTargetGroupTarget:getAlbTargetGroupTarget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "targets",
                    "targetGroupId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getAlbVirtualHost:getAlbVirtualHost": {
            "inputs": {
                "description": "A collection of arguments for invoking getAlbVirtualHost.\n",
                "properties": {
                    "httpRouterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "virtualHostId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlbVirtualHost.\n",
                "properties": {
                    "authorities": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "httpRouterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "modifyRequestHeaders": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbVirtualHostModifyRequestHeader:getAlbVirtualHostModifyRequestHeader"
                        },
                        "type": "array"
                    },
                    "modifyResponseHeaders": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbVirtualHostModifyResponseHeader:getAlbVirtualHostModifyResponseHeader"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rateLimits": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbVirtualHostRateLimit:getAlbVirtualHostRateLimit"
                        },
                        "type": "array"
                    },
                    "routeOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbVirtualHostRouteOption:getAlbVirtualHostRouteOption"
                        },
                        "type": "array"
                    },
                    "routes": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAlbVirtualHostRoute:getAlbVirtualHostRoute"
                        },
                        "type": "array"
                    },
                    "virtualHostId": {
                        "type": "string"
                    }
                },
                "required": [
                    "authorities",
                    "httpRouterId",
                    "modifyRequestHeaders",
                    "modifyResponseHeaders",
                    "name",
                    "rateLimits",
                    "routes",
                    "routeOptions",
                    "virtualHostId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getApiGateway:getApiGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getApiGateway.\n",
                "properties": {
                    "apiGatewayId": {
                        "type": "string"
                    },
                    "canary": {
                        "$ref": "#/types/yandex:index/getApiGatewayCanary:getApiGatewayCanary"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/getApiGatewayConnectivity:getApiGatewayConnectivity"
                    },
                    "customDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getApiGatewayCustomDomain:getApiGatewayCustomDomain"
                        }
                    },
                    "executionTimeout": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApiGateway.\n",
                "properties": {
                    "apiGatewayId": {
                        "type": "string"
                    },
                    "canary": {
                        "$ref": "#/types/yandex:index/getApiGatewayCanary:getApiGatewayCanary"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/getApiGatewayConnectivity:getApiGatewayConnectivity"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "customDomains": {
                        "items": {
                            "$ref": "#/types/yandex:index/getApiGatewayCustomDomain:getApiGatewayCustomDomain"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "executionTimeout": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logGroupId": {
                        "type": "string"
                    },
                    "logOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getApiGatewayLogOption:getApiGatewayLogOption"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "userDomains": {
                        "deprecationMessage": "The 'user_domains' field has been deprecated. Please use 'custom_domains' instead.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "variables": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "domain",
                    "executionTimeout",
                    "labels",
                    "logGroupId",
                    "logOptions",
                    "status",
                    "userDomains",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getAuditTrailsTrail:getAuditTrailsTrail": {
            "inputs": {
                "description": "A collection of arguments for invoking getAuditTrailsTrail.\n",
                "properties": {
                    "trailId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "trailId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuditTrailsTrail.\n",
                "properties": {
                    "dataStreamDestinations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAuditTrailsTrailDataStreamDestination:getAuditTrailsTrailDataStreamDestination"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filteringPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAuditTrailsTrailFilteringPolicy:getAuditTrailsTrailFilteringPolicy"
                        },
                        "type": "array"
                    },
                    "filters": {
                        "deprecationMessage": "Use filtering_policy instead. This attribute will be removed",
                        "items": {
                            "$ref": "#/types/yandex:index/getAuditTrailsTrailFilter:getAuditTrailsTrailFilter"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "loggingDestinations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAuditTrailsTrailLoggingDestination:getAuditTrailsTrailLoggingDestination"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageDestinations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getAuditTrailsTrailStorageDestination:getAuditTrailsTrailStorageDestination"
                        },
                        "type": "array"
                    },
                    "trailId": {
                        "type": "string"
                    }
                },
                "required": [
                    "dataStreamDestinations",
                    "description",
                    "filters",
                    "filteringPolicies",
                    "folderId",
                    "labels",
                    "loggingDestinations",
                    "name",
                    "serviceAccountId",
                    "status",
                    "storageDestinations",
                    "trailId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getBackupPolicy:getBackupPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getBackupPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBackupPolicy.\n",
                "properties": {
                    "archiveName": {
                        "type": "string"
                    },
                    "cbt": {
                        "type": "string"
                    },
                    "compression": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fastBackupEnabled": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "format": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "multiVolumeSnapshottingEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "performanceWindowEnabled": {
                        "type": "boolean"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "preserveFileSecuritySettings": {
                        "type": "boolean"
                    },
                    "quiesceSnapshottingEnabled": {
                        "type": "boolean"
                    },
                    "reattempts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getBackupPolicyReattempt:getBackupPolicyReattempt"
                        },
                        "type": "array"
                    },
                    "retentions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getBackupPolicyRetention:getBackupPolicyRetention"
                        },
                        "type": "array"
                    },
                    "schedulings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getBackupPolicyScheduling:getBackupPolicyScheduling"
                        },
                        "type": "array"
                    },
                    "silentModeEnabled": {
                        "type": "boolean"
                    },
                    "splittingBytes": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vmSnapshotReattempts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getBackupPolicyVmSnapshotReattempt:getBackupPolicyVmSnapshotReattempt"
                        },
                        "type": "array"
                    },
                    "vssProvider": {
                        "type": "string"
                    }
                },
                "required": [
                    "archiveName",
                    "cbt",
                    "compression",
                    "createdAt",
                    "enabled",
                    "fastBackupEnabled",
                    "folderId",
                    "format",
                    "multiVolumeSnapshottingEnabled",
                    "name",
                    "performanceWindowEnabled",
                    "policyId",
                    "preserveFileSecuritySettings",
                    "quiesceSnapshottingEnabled",
                    "reattempts",
                    "retentions",
                    "schedulings",
                    "silentModeEnabled",
                    "splittingBytes",
                    "updatedAt",
                    "vmSnapshotReattempts",
                    "vssProvider",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getCdnOriginGroup:getCdnOriginGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getCdnOriginGroup.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "originGroupId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCdnOriginGroup.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "originGroupId": {
                        "type": "integer"
                    },
                    "origins": {
                        "items": {
                            "$ref": "#/types/yandex:index/getCdnOriginGroupOrigin:getCdnOriginGroupOrigin"
                        },
                        "type": "array"
                    },
                    "useNext": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "folderId",
                    "name",
                    "origins",
                    "originGroupId",
                    "useNext",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getCdnResource:getCdnResource": {
            "inputs": {
                "description": "A collection of arguments for invoking getCdnResource.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "options": {
                        "$ref": "#/types/yandex:index/getCdnResourceOptions:getCdnResourceOptions"
                    },
                    "originGroupId": {
                        "type": "integer"
                    },
                    "originGroupName": {
                        "type": "string"
                    },
                    "originProtocol": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "secondaryHostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sslCertificate": {
                        "$ref": "#/types/yandex:index/getCdnResourceSslCertificate:getCdnResourceSslCertificate"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCdnResource.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "options": {
                        "$ref": "#/types/yandex:index/getCdnResourceOptions:getCdnResourceOptions"
                    },
                    "originGroupId": {
                        "type": "integer"
                    },
                    "originGroupName": {
                        "type": "string"
                    },
                    "originProtocol": {
                        "type": "string"
                    },
                    "providerCname": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "secondaryHostnames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "sslCertificate": {
                        "$ref": "#/types/yandex:index/getCdnResourceSslCertificate:getCdnResourceSslCertificate"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "cname",
                    "createdAt",
                    "folderId",
                    "options",
                    "providerCname",
                    "resourceId",
                    "sslCertificate",
                    "updatedAt",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getClientConfig:getClientConfig": {
            "outputs": {
                "description": "A collection of values returned by getClientConfig.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "iamToken": {
                        "secret": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudId",
                    "folderId",
                    "iamToken",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getCmCertificate:getCmCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCmCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitValidation": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCmCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "challenges": {
                        "items": {
                            "$ref": "#/types/yandex:index/getCmCertificateChallenge:getCmCertificateChallenge"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "issuedAt": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notAfter": {
                        "type": "string"
                    },
                    "notBefore": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "waitValidation": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "certificateId",
                    "challenges",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "domains",
                    "folderId",
                    "issuedAt",
                    "issuer",
                    "labels",
                    "name",
                    "notAfter",
                    "notBefore",
                    "serial",
                    "status",
                    "subject",
                    "type",
                    "updatedAt",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getCmCertificateContent:getCmCertificateContent": {
            "inputs": {
                "description": "A collection of arguments for invoking getCmCertificateContent.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKeyFormat": {
                        "type": "string"
                    },
                    "waitValidation": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCmCertificateContent.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "certificates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "secret": true,
                        "type": "string"
                    },
                    "privateKeyFormat": {
                        "type": "string"
                    },
                    "waitValidation": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "certificates",
                    "privateKey",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeDisk:getComputeDisk": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeDisk.\n",
                "properties": {
                    "diskId": {
                        "type": "string"
                    },
                    "diskPlacementPolicy": {
                        "$ref": "#/types/yandex:index/getComputeDiskDiskPlacementPolicy:getComputeDiskDiskPlacementPolicy"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeDisk.\n",
                "properties": {
                    "blockSize": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskId": {
                        "type": "string"
                    },
                    "diskPlacementPolicy": {
                        "$ref": "#/types/yandex:index/getComputeDiskDiskPlacementPolicy:getComputeDiskDiskPlacementPolicy"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "hardwareGenerations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeDiskHardwareGeneration:getComputeDiskHardwareGeneration"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "snapshotId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "blockSize",
                    "createdAt",
                    "description",
                    "diskId",
                    "folderId",
                    "hardwareGenerations",
                    "imageId",
                    "instanceIds",
                    "kmsKeyId",
                    "labels",
                    "name",
                    "productIds",
                    "size",
                    "snapshotId",
                    "status",
                    "type",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeDiskPlacementGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeDiskPlacementGroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "folderId",
                    "groupId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeFilesystem:getComputeFilesystem": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeFilesystem.\n",
                "properties": {
                    "filesystemId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeFilesystem.\n",
                "properties": {
                    "blockSize": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filesystemId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "blockSize",
                    "createdAt",
                    "description",
                    "filesystemId",
                    "folderId",
                    "labels",
                    "name",
                    "size",
                    "status",
                    "type",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeGpuCluster:getComputeGpuCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeGpuCluster.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "gpuClusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeGpuCluster.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "gpuClusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "interconnectType": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "gpuClusterId",
                    "interconnectType",
                    "labels",
                    "name",
                    "status",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeImage:getComputeImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeImage.\n",
                "properties": {
                    "family": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeImage.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "hardwareGenerations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeImageHardwareGeneration:getComputeImageHardwareGeneration"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "minDiskSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "osType": {
                        "type": "string"
                    },
                    "pooled": {
                        "type": "boolean"
                    },
                    "productIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "family",
                    "folderId",
                    "hardwareGenerations",
                    "imageId",
                    "kmsKeyId",
                    "labels",
                    "minDiskSize",
                    "name",
                    "osType",
                    "pooled",
                    "productIds",
                    "size",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeInstance:getComputeInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeInstance.\n",
                "properties": {
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceFilesystem:getComputeInstanceFilesystem"
                        }
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "gpuClusterId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "localDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceLocalDisk:getComputeInstanceLocalDisk"
                        }
                    },
                    "maintenanceGracePeriod": {
                        "type": "string"
                    },
                    "maintenancePolicy": {
                        "type": "string"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/getComputeInstanceMetadataOptions:getComputeInstanceMetadataOptions"
                    },
                    "name": {
                        "type": "string"
                    },
                    "placementPolicy": {
                        "$ref": "#/types/yandex:index/getComputeInstancePlacementPolicy:getComputeInstancePlacementPolicy"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeInstance.\n",
                "properties": {
                    "bootDisks": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceBootDisk:getComputeInstanceBootDisk"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "filesystems": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceFilesystem:getComputeInstanceFilesystem"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "fqdn": {
                        "type": "string"
                    },
                    "gpuClusterId": {
                        "type": "string"
                    },
                    "hardwareGenerations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceHardwareGeneration:getComputeInstanceHardwareGeneration"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "localDisks": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceLocalDisk:getComputeInstanceLocalDisk"
                        },
                        "type": "array"
                    },
                    "maintenanceGracePeriod": {
                        "type": "string"
                    },
                    "maintenancePolicy": {
                        "type": "string"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/getComputeInstanceMetadataOptions:getComputeInstanceMetadataOptions"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkAccelerationType": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceNetworkInterface:getComputeInstanceNetworkInterface"
                        },
                        "type": "array"
                    },
                    "placementPolicy": {
                        "$ref": "#/types/yandex:index/getComputeInstancePlacementPolicy:getComputeInstancePlacementPolicy"
                    },
                    "platformId": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceResource:getComputeInstanceResource"
                        },
                        "type": "array"
                    },
                    "schedulingPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceSchedulingPolicy:getComputeInstanceSchedulingPolicy"
                        },
                        "type": "array"
                    },
                    "secondaryDisks": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceSecondaryDisk:getComputeInstanceSecondaryDisk"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "bootDisks",
                    "createdAt",
                    "description",
                    "folderId",
                    "fqdn",
                    "gpuClusterId",
                    "hardwareGenerations",
                    "instanceId",
                    "labels",
                    "maintenanceGracePeriod",
                    "maintenancePolicy",
                    "metadata",
                    "metadataOptions",
                    "name",
                    "networkAccelerationType",
                    "networkInterfaces",
                    "platformId",
                    "resources",
                    "schedulingPolicies",
                    "secondaryDisks",
                    "serviceAccountId",
                    "status",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeInstanceGroup:getComputeInstanceGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeInstanceGroup.\n",
                "properties": {
                    "instanceGroupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceGroupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getComputeInstanceGroup.\n",
                "properties": {
                    "allocationPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupAllocationPolicy:getComputeInstanceGroupAllocationPolicy"
                        },
                        "type": "array"
                    },
                    "applicationBalancerStates": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupApplicationBalancerState:getComputeInstanceGroupApplicationBalancerState"
                        },
                        "type": "array"
                    },
                    "applicationLoadBalancers": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupApplicationLoadBalancer:getComputeInstanceGroupApplicationLoadBalancer"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "deployPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupDeployPolicy:getComputeInstanceGroupDeployPolicy"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "healthChecks": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupHealthCheck:getComputeInstanceGroupHealthCheck"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceGroupId": {
                        "type": "string"
                    },
                    "instanceTemplates": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupInstanceTemplate:getComputeInstanceGroupInstanceTemplate"
                        },
                        "type": "array"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupInstance:getComputeInstanceGroupInstance"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "loadBalancerStates": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupLoadBalancerState:getComputeInstanceGroupLoadBalancerState"
                        },
                        "type": "array"
                    },
                    "loadBalancers": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupLoadBalancer:getComputeInstanceGroupLoadBalancer"
                        },
                        "type": "array"
                    },
                    "maxCheckingHealthDuration": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scalePolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeInstanceGroupScalePolicy:getComputeInstanceGroupScalePolicy"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "variables": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "allocationPolicies",
                    "applicationBalancerStates",
                    "applicationLoadBalancers",
                    "createdAt",
                    "deletionProtection",
                    "deployPolicies",
                    "description",
                    "folderId",
                    "healthChecks",
                    "instanceGroupId",
                    "instanceTemplates",
                    "instances",
                    "labels",
                    "loadBalancers",
                    "loadBalancerStates",
                    "maxCheckingHealthDuration",
                    "name",
                    "scalePolicies",
                    "serviceAccountId",
                    "status",
                    "variables",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputePlacementGroup:getComputePlacementGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputePlacementGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "placementStrategy": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputePlacementGroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "placementStrategy": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "createdAt",
                    "folderId",
                    "groupId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeSnapshot:getComputeSnapshot": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeSnapshot.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "snapshotId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeSnapshot.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskSize": {
                        "type": "integer"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "hardwareGenerations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeSnapshotHardwareGeneration:getComputeSnapshotHardwareGeneration"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "snapshotId": {
                        "type": "string"
                    },
                    "sourceDiskId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageSize": {
                        "type": "integer"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "diskSize",
                    "folderId",
                    "hardwareGenerations",
                    "kmsKeyId",
                    "labels",
                    "name",
                    "productIds",
                    "snapshotId",
                    "sourceDiskId",
                    "status",
                    "storageSize",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getComputeSnapshotSchedule:getComputeSnapshotSchedule": {
            "inputs": {
                "description": "A collection of arguments for invoking getComputeSnapshotSchedule.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "diskIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "type": "string"
                    },
                    "schedulePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeSnapshotScheduleSchedulePolicy:getComputeSnapshotScheduleSchedulePolicy"
                        }
                    },
                    "snapshotCount": {
                        "type": "integer"
                    },
                    "snapshotScheduleId": {
                        "type": "string"
                    },
                    "snapshotSpecs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeSnapshotScheduleSnapshotSpec:getComputeSnapshotScheduleSnapshotSpec"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getComputeSnapshotSchedule.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "type": "string"
                    },
                    "schedulePolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeSnapshotScheduleSchedulePolicy:getComputeSnapshotScheduleSchedulePolicy"
                        },
                        "type": "array"
                    },
                    "snapshotCount": {
                        "type": "integer"
                    },
                    "snapshotScheduleId": {
                        "type": "string"
                    },
                    "snapshotSpecs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getComputeSnapshotScheduleSnapshotSpec:getComputeSnapshotScheduleSnapshotSpec"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "diskIds",
                    "folderId",
                    "labels",
                    "name",
                    "retentionPeriod",
                    "schedulePolicies",
                    "snapshotCount",
                    "snapshotScheduleId",
                    "snapshotSpecs",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getContainerRegistry:getContainerRegistry": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistry.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "registryId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistry.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "folderId",
                    "name",
                    "registryId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getContainerRegistryIpPermission:getContainerRegistryIpPermission": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryIpPermission.\n",
                "properties": {
                    "registryId": {
                        "type": "string"
                    },
                    "registryName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryIpPermission.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "pulls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "pushes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "registryName": {
                        "type": "string"
                    }
                },
                "required": [
                    "pulls",
                    "pushes",
                    "registryId",
                    "registryName",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getContainerRepository:getContainerRepository": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRepository.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "repositoryId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRepository.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "repositoryId": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "repositoryId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getContainerRepositoryLifecyclePolicy:getContainerRepositoryLifecyclePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRepositoryLifecyclePolicy.\n",
                "properties": {
                    "lifecyclePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "repositoryId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRepositoryLifecyclePolicy.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lifecyclePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "repositoryId": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getContainerRepositoryLifecyclePolicyRule:getContainerRepositoryLifecyclePolicyRule"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "lifecyclePolicyId",
                    "name",
                    "repositoryId",
                    "rules",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getDataprocCluster:getDataprocCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getDataprocCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDataprocCluster.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "clusterConfigs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getDataprocClusterClusterConfig:getDataprocClusterClusterConfig"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "hostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logGroupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "uiProxy": {
                        "type": "boolean"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "required": [
                    "bucket",
                    "clusterConfigs",
                    "clusterId",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "environment",
                    "folderId",
                    "hostGroupIds",
                    "labels",
                    "logGroupId",
                    "name",
                    "securityGroupIds",
                    "serviceAccountId",
                    "uiProxy",
                    "zoneId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getDnsZone:getDnsZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsZone.\n",
                "properties": {
                    "dnsZoneId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDnsZone.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dnsZoneId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateNetworks": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "dnsZoneId",
                    "folderId",
                    "labels",
                    "name",
                    "privateNetworks",
                    "public",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getFunction:getFunction": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunction.\n",
                "properties": {
                    "concurrency": {
                        "type": "integer"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/getFunctionConnectivity:getFunctionConnectivity"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "functionId": {
                        "type": "string"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/getFunctionMetadataOptions:getFunctionMetadataOptions"
                    },
                    "mounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionMount:getFunctionMount"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionSecret:getFunctionSecret"
                        }
                    },
                    "storageMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionStorageMount:getFunctionStorageMount"
                        },
                        "deprecationMessage": "to manage storage_mountss, please switch to using a separate resource type mounts"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFunction.\n",
                "properties": {
                    "asyncInvocations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionAsyncInvocation:getFunctionAsyncInvocation"
                        },
                        "type": "array"
                    },
                    "concurrency": {
                        "type": "integer"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/getFunctionConnectivity:getFunctionConnectivity"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "entrypoint": {
                        "type": "string"
                    },
                    "environment": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "executionTimeout": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "functionId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageSize": {
                        "type": "integer"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionLogOption:getFunctionLogOption"
                        },
                        "type": "array"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/getFunctionMetadataOptions:getFunctionMetadataOptions"
                    },
                    "mounts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionMount:getFunctionMount"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "secrets": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionSecret:getFunctionSecret"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "storageMounts": {
                        "deprecationMessage": "to manage storage_mountss, please switch to using a separate resource type mounts",
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionStorageMount:getFunctionStorageMount"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tmpfsSize": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "asyncInvocations",
                    "concurrency",
                    "createdAt",
                    "description",
                    "entrypoint",
                    "environment",
                    "executionTimeout",
                    "imageSize",
                    "labels",
                    "logOptions",
                    "memory",
                    "metadataOptions",
                    "mounts",
                    "runtime",
                    "secrets",
                    "serviceAccountId",
                    "storageMounts",
                    "tags",
                    "tmpfsSize",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getFunctionScalingPolicy:getFunctionScalingPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunctionScalingPolicy.\n",
                "properties": {
                    "functionId": {
                        "type": "string"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionScalingPolicyPolicy:getFunctionScalingPolicyPolicy"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "functionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFunctionScalingPolicy.\n",
                "properties": {
                    "functionId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionScalingPolicyPolicy:getFunctionScalingPolicyPolicy"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "functionId",
                    "policies",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getFunctionTrigger:getFunctionTrigger": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunctionTrigger.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "triggerId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFunctionTrigger.\n",
                "properties": {
                    "containerRegistries": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerContainerRegistry:getFunctionTriggerContainerRegistry"
                        },
                        "type": "array"
                    },
                    "containers": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerContainer:getFunctionTriggerContainer"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dataStreams": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerDataStream:getFunctionTriggerDataStream"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dlqs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerDlq:getFunctionTriggerDlq"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "functions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerFunction:getFunctionTriggerFunction"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "iots": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerIot:getFunctionTriggerIot"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logGroups": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerLogGroup:getFunctionTriggerLogGroup"
                        },
                        "type": "array"
                    },
                    "loggings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerLogging:getFunctionTriggerLogging"
                        },
                        "type": "array"
                    },
                    "mails": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerMail:getFunctionTriggerMail"
                        },
                        "type": "array"
                    },
                    "messageQueues": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerMessageQueue:getFunctionTriggerMessageQueue"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectStorages": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerObjectStorage:getFunctionTriggerObjectStorage"
                        },
                        "type": "array"
                    },
                    "timers": {
                        "items": {
                            "$ref": "#/types/yandex:index/getFunctionTriggerTimer:getFunctionTriggerTimer"
                        },
                        "type": "array"
                    },
                    "triggerId": {
                        "type": "string"
                    }
                },
                "required": [
                    "containers",
                    "containerRegistries",
                    "createdAt",
                    "dataStreams",
                    "description",
                    "dlqs",
                    "functions",
                    "iots",
                    "labels",
                    "logGroups",
                    "loggings",
                    "mails",
                    "messageQueues",
                    "objectStorages",
                    "timers",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamPolicy:getIamPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamPolicy.\n",
                "properties": {
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getIamPolicyBinding:getIamPolicyBinding"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "bindings"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamPolicy.\n",
                "properties": {
                    "bindings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getIamPolicyBinding:getIamPolicyBinding"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "policyData": {
                        "type": "string"
                    }
                },
                "required": [
                    "bindings",
                    "policyData",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamRole:getIamRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamRole.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "roleId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamRole.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "roleId": {
                        "type": "string"
                    }
                },
                "required": [
                    "roleId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamServiceAccount:getIamServiceAccount": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamServiceAccount.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamServiceAccount.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "name",
                    "serviceAccountId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamServiceAgent:getIamServiceAgent": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamServiceAgent.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "microserviceId": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamServiceAgent.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "microserviceId": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudId",
                    "microserviceId",
                    "serviceId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamUser:getIamUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamUser.\n",
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamUser.\n",
                "properties": {
                    "defaultEmail": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "required": [
                    "defaultEmail",
                    "login",
                    "userId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamWorkloadIdentityFederatedCredential:getIamWorkloadIdentityFederatedCredential": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamWorkloadIdentityFederatedCredential.\n",
                "properties": {
                    "federatedCredentialId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "federatedCredentialId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamWorkloadIdentityFederatedCredential.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "externalSubjectId": {
                        "type": "string"
                    },
                    "federatedCredentialId": {
                        "type": "string"
                    },
                    "federationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "externalSubjectId",
                    "federatedCredentialId",
                    "federationId",
                    "serviceAccountId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIamWorkloadIdentityOidcFederation:getIamWorkloadIdentityOidcFederation": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamWorkloadIdentityOidcFederation.\n",
                "properties": {
                    "federationId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamWorkloadIdentityOidcFederation.\n",
                "properties": {
                    "audiences": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "federationId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "jwksUrl": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "audiences",
                    "createdAt",
                    "description",
                    "enabled",
                    "federationId",
                    "folderId",
                    "issuer",
                    "jwksUrl",
                    "labels",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIotCoreBroker:getIotCoreBroker": {
            "inputs": {
                "description": "A collection of arguments for invoking getIotCoreBroker.\n",
                "properties": {
                    "brokerId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIotCoreBroker.\n",
                "properties": {
                    "brokerId": {
                        "type": "string"
                    },
                    "certificates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getIotCoreBrokerLogOption:getIotCoreBrokerLogOption"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "certificates",
                    "createdAt",
                    "description",
                    "labels",
                    "logOptions",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIotCoreDevice:getIotCoreDevice": {
            "inputs": {
                "description": "A collection of arguments for invoking getIotCoreDevice.\n",
                "properties": {
                    "deviceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIotCoreDevice.\n",
                "properties": {
                    "aliases": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "certificates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwords": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "registryId": {
                        "type": "string"
                    }
                },
                "required": [
                    "aliases",
                    "certificates",
                    "createdAt",
                    "description",
                    "labels",
                    "passwords",
                    "registryId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getIotCoreRegistry:getIotCoreRegistry": {
            "inputs": {
                "description": "A collection of arguments for invoking getIotCoreRegistry.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "registryId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIotCoreRegistry.\n",
                "properties": {
                    "certificates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getIotCoreRegistryLogOption:getIotCoreRegistryLogOption"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwords": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "registryId": {
                        "type": "string"
                    }
                },
                "required": [
                    "certificates",
                    "createdAt",
                    "description",
                    "labels",
                    "logOptions",
                    "passwords",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getKmsAsymmetricEncryptionKey:getKmsAsymmetricEncryptionKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getKmsAsymmetricEncryptionKey.\n",
                "properties": {
                    "asymmetricEncryptionKeyId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptionAlgorithm": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asymmetricEncryptionKeyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKmsAsymmetricEncryptionKey.\n",
                "properties": {
                    "asymmetricEncryptionKeyId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptionAlgorithm": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "asymmetricEncryptionKeyId",
                    "createdAt",
                    "folderId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getKmsAsymmetricSignatureKey:getKmsAsymmetricSignatureKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getKmsAsymmetricSignatureKey.\n",
                "properties": {
                    "asymmetricSignatureKeyId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asymmetricSignatureKeyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKmsAsymmetricSignatureKey.\n",
                "properties": {
                    "asymmetricSignatureKeyId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "asymmetricSignatureKeyId",
                    "createdAt",
                    "folderId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getKmsSymmetricKey:getKmsSymmetricKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getKmsSymmetricKey.\n",
                "properties": {
                    "defaultAlgorithm": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "rotationPeriod": {
                        "type": "string"
                    },
                    "symmetricKeyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKmsSymmetricKey.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultAlgorithm": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rotatedAt": {
                        "type": "string"
                    },
                    "rotationPeriod": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "symmetricKeyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "folderId",
                    "rotatedAt",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getKubernetesCluster:getKubernetesCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterIpv4Range": {
                        "type": "string"
                    },
                    "clusterIpv6Range": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "kmsProviders": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesClusterKmsProvider:getKubernetesClusterKmsProvider"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logGroupId": {
                        "type": "string"
                    },
                    "masters": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesClusterMaster:getKubernetesClusterMaster"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "networkImplementations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesClusterNetworkImplementation:getKubernetesClusterNetworkImplementation"
                        },
                        "type": "array"
                    },
                    "networkPolicyProvider": {
                        "type": "string"
                    },
                    "nodeIpv4CidrMaskSize": {
                        "type": "integer"
                    },
                    "nodeServiceAccountId": {
                        "type": "string"
                    },
                    "releaseChannel": {
                        "type": "string"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "serviceIpv4Range": {
                        "type": "string"
                    },
                    "serviceIpv6Range": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "clusterIpv4Range",
                    "clusterIpv6Range",
                    "createdAt",
                    "description",
                    "folderId",
                    "health",
                    "kmsProviders",
                    "labels",
                    "logGroupId",
                    "masters",
                    "name",
                    "networkId",
                    "networkImplementations",
                    "networkPolicyProvider",
                    "nodeIpv4CidrMaskSize",
                    "nodeServiceAccountId",
                    "releaseChannel",
                    "serviceAccountId",
                    "serviceIpv4Range",
                    "serviceIpv6Range",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getKubernetesNodeGroup:getKubernetesNodeGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesNodeGroup.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeGroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesNodeGroup.\n",
                "properties": {
                    "allocationPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesNodeGroupAllocationPolicy:getKubernetesNodeGroupAllocationPolicy"
                        },
                        "type": "array"
                    },
                    "allowedUnsafeSysctls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deployPolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesNodeGroupDeployPolicy:getKubernetesNodeGroupDeployPolicy"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceGroupId": {
                        "type": "string"
                    },
                    "instanceTemplates": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesNodeGroupInstanceTemplate:getKubernetesNodeGroupInstanceTemplate"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenancePolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesNodeGroupMaintenancePolicy:getKubernetesNodeGroupMaintenancePolicy"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeGroupId": {
                        "type": "string"
                    },
                    "nodeLabels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "nodeTaints": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "scalePolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesNodeGroupScalePolicy:getKubernetesNodeGroupScalePolicy"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "versionInfos": {
                        "items": {
                            "$ref": "#/types/yandex:index/getKubernetesNodeGroupVersionInfo:getKubernetesNodeGroupVersionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "allocationPolicies",
                    "allowedUnsafeSysctls",
                    "clusterId",
                    "createdAt",
                    "deployPolicies",
                    "description",
                    "folderId",
                    "instanceGroupId",
                    "instanceTemplates",
                    "labels",
                    "maintenancePolicies",
                    "name",
                    "nodeGroupId",
                    "nodeLabels",
                    "nodeTaints",
                    "scalePolicies",
                    "status",
                    "versionInfos",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getLbNetworkLoadBalancer.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkLoadBalancerId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLbNetworkLoadBalancer.\n",
                "properties": {
                    "allowZonalShift": {
                        "type": "boolean"
                    },
                    "attachedTargetGroups": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerAttachedTargetGroup:getLbNetworkLoadBalancerAttachedTargetGroup"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "listeners": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLbNetworkLoadBalancerListener:getLbNetworkLoadBalancerListener"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkLoadBalancerId": {
                        "type": "string"
                    },
                    "regionId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "allowZonalShift",
                    "attachedTargetGroups",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "folderId",
                    "labels",
                    "listeners",
                    "name",
                    "networkLoadBalancerId",
                    "regionId",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getLbTargetGroup:getLbTargetGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getLbTargetGroup.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetGroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLbTargetGroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetGroupId": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLbTargetGroupTarget:getLbTargetGroupTarget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "targets",
                    "targetGroupId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getLoadtestingAgent:getLoadtestingAgent": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadtestingAgent.\n",
                "properties": {
                    "agentId": {
                        "type": "string"
                    },
                    "logSettings": {
                        "$ref": "#/types/yandex:index/getLoadtestingAgentLogSettings:getLoadtestingAgentLogSettings"
                    }
                },
                "type": "object",
                "required": [
                    "agentId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadtestingAgent.\n",
                "properties": {
                    "agentId": {
                        "type": "string"
                    },
                    "computeInstanceId": {
                        "type": "string"
                    },
                    "computeInstances": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLoadtestingAgentComputeInstance:getLoadtestingAgentComputeInstance"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logSettings": {
                        "$ref": "#/types/yandex:index/getLoadtestingAgentLogSettings:getLoadtestingAgentLogSettings"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "agentId",
                    "computeInstances",
                    "computeInstanceId",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getLockboxSecret:getLockboxSecret": {
            "inputs": {
                "description": "A collection of arguments for invoking getLockboxSecret.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLockboxSecret.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "currentVersions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLockboxSecretCurrentVersion:getLockboxSecretCurrentVersion"
                        },
                        "type": "array"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passwordPayloadSpecifications": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLockboxSecretPasswordPayloadSpecification:getLockboxSecretPasswordPayloadSpecification"
                        },
                        "type": "array"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "currentVersions",
                    "deletionProtection",
                    "description",
                    "folderId",
                    "kmsKeyId",
                    "labels",
                    "name",
                    "passwordPayloadSpecifications",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getLockboxSecretVersion:getLockboxSecretVersion": {
            "inputs": {
                "description": "A collection of arguments for invoking getLockboxSecretVersion.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "secretId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLockboxSecretVersion.\n",
                "properties": {
                    "entries": {
                        "items": {
                            "$ref": "#/types/yandex:index/getLockboxSecretVersionEntry:getLockboxSecretVersionEntry"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "required": [
                    "entries",
                    "secretId",
                    "versionId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getLoggingGroup:getLoggingGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingGroup.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingGroup.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dataStream": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudId",
                    "createdAt",
                    "dataStream",
                    "description",
                    "folderId",
                    "groupId",
                    "labels",
                    "name",
                    "retentionPeriod",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbClickhouseCluster:getMdbClickhouseCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbClickhouseCluster.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterAccess:getMdbClickhouseClusterAccess"
                    },
                    "adminPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "backupRetainPeriodDays": {
                        "type": "integer"
                    },
                    "backupWindowStart": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterBackupWindowStart:getMdbClickhouseClusterBackupWindowStart"
                    },
                    "clickhouse": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouse:getMdbClickhouseClusterClickhouse"
                    },
                    "cloudStorage": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterCloudStorage:getMdbClickhouseClusterCloudStorage"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "copySchemaOnNewHosts": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterDatabase:getMdbClickhouseClusterDatabase"
                        }
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "embeddedKeeper": {
                        "type": "boolean"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "formatSchemas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterFormatSchema:getMdbClickhouseClusterFormatSchema"
                        }
                    },
                    "health": {
                        "type": "string"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterHost:getMdbClickhouseClusterHost"
                        }
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterMaintenanceWindow:getMdbClickhouseClusterMaintenanceWindow"
                    },
                    "mlModels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterMlModel:getMdbClickhouseClusterMlModel"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "shardGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterShardGroup:getMdbClickhouseClusterShardGroup"
                        }
                    },
                    "shards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterShard:getMdbClickhouseClusterShard"
                        }
                    },
                    "sqlDatabaseManagement": {
                        "type": "boolean"
                    },
                    "sqlUserManagement": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterUser:getMdbClickhouseClusterUser"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "zookeeper": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterZookeeper:getMdbClickhouseClusterZookeeper"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbClickhouseCluster.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterAccess:getMdbClickhouseClusterAccess"
                    },
                    "adminPassword": {
                        "secret": true,
                        "type": "string"
                    },
                    "backupRetainPeriodDays": {
                        "type": "integer"
                    },
                    "backupWindowStart": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterBackupWindowStart:getMdbClickhouseClusterBackupWindowStart"
                    },
                    "clickhouse": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterClickhouse:getMdbClickhouseClusterClickhouse"
                    },
                    "cloudStorage": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterCloudStorage:getMdbClickhouseClusterCloudStorage"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "copySchemaOnNewHosts": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterDatabase:getMdbClickhouseClusterDatabase"
                        },
                        "type": "array"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "embeddedKeeper": {
                        "type": "boolean"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "formatSchemas": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterFormatSchema:getMdbClickhouseClusterFormatSchema"
                        },
                        "type": "array"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterHost:getMdbClickhouseClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterMaintenanceWindow:getMdbClickhouseClusterMaintenanceWindow"
                    },
                    "mlModels": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterMlModel:getMdbClickhouseClusterMlModel"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "shardGroups": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterShardGroup:getMdbClickhouseClusterShardGroup"
                        },
                        "type": "array"
                    },
                    "shards": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterShard:getMdbClickhouseClusterShard"
                        },
                        "type": "array"
                    },
                    "sqlDatabaseManagement": {
                        "type": "boolean"
                    },
                    "sqlUserManagement": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbClickhouseClusterUser:getMdbClickhouseClusterUser"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    },
                    "zookeeper": {
                        "$ref": "#/types/yandex:index/getMdbClickhouseClusterZookeeper:getMdbClickhouseClusterZookeeper"
                    }
                },
                "required": [
                    "access",
                    "backupWindowStart",
                    "clickhouse",
                    "cloudStorage",
                    "clusterId",
                    "createdAt",
                    "deletionProtection",
                    "embeddedKeeper",
                    "folderId",
                    "health",
                    "labels",
                    "maintenanceWindow",
                    "securityGroupIds",
                    "shards",
                    "sqlDatabaseManagement",
                    "sqlUserManagement",
                    "status",
                    "version",
                    "zookeeper",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbElasticsearchCluster:getMdbElasticsearchCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbElasticsearchCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbElasticsearchCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "configs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbElasticsearchClusterConfig:getMdbElasticsearchClusterConfig"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbElasticsearchClusterHost:getMdbElasticsearchClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbElasticsearchClusterMaintenanceWindow:getMdbElasticsearchClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "configs",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "environment",
                    "folderId",
                    "health",
                    "hosts",
                    "labels",
                    "maintenanceWindows",
                    "name",
                    "networkId",
                    "securityGroupIds",
                    "serviceAccountId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbGreenplumCluster:getMdbGreenplumCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbGreenplumCluster.\n",
                "properties": {
                    "backgroundActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackgroundActivity:getMdbGreenplumClusterBackgroundActivity"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "greenplumConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "masterHostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolerConfig": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterPoolerConfig:getMdbGreenplumClusterPoolerConfig"
                    },
                    "pxfConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterPxfConfig:getMdbGreenplumClusterPxfConfig"
                        }
                    },
                    "segmentHostGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbGreenplumCluster.\n",
                "properties": {
                    "accesses": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterAccess:getMdbGreenplumClusterAccess"
                        },
                        "type": "array"
                    },
                    "assignPublicIp": {
                        "type": "boolean"
                    },
                    "backgroundActivities": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackgroundActivity:getMdbGreenplumClusterBackgroundActivity"
                        },
                        "type": "array"
                    },
                    "backupWindowStarts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterBackupWindowStart:getMdbGreenplumClusterBackupWindowStart"
                        },
                        "type": "array"
                    },
                    "cloudStorages": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterCloudStorage:getMdbGreenplumClusterCloudStorage"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "greenplumConfig": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "health": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "loggings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterLogging:getMdbGreenplumClusterLogging"
                        },
                        "type": "array"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterMaintenanceWindow:getMdbGreenplumClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "masterHostCount": {
                        "type": "integer"
                    },
                    "masterHostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "masterHosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterMasterHost:getMdbGreenplumClusterMasterHost"
                        },
                        "type": "array"
                    },
                    "masterSubclusters": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterMasterSubcluster:getMdbGreenplumClusterMasterSubcluster"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "poolerConfig": {
                        "$ref": "#/types/yandex:index/getMdbGreenplumClusterPoolerConfig:getMdbGreenplumClusterPoolerConfig"
                    },
                    "pxfConfigs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterPxfConfig:getMdbGreenplumClusterPxfConfig"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "segmentHostCount": {
                        "type": "integer"
                    },
                    "segmentHostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "segmentHosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterSegmentHost:getMdbGreenplumClusterSegmentHost"
                        },
                        "type": "array"
                    },
                    "segmentInHost": {
                        "type": "integer"
                    },
                    "segmentSubclusters": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbGreenplumClusterSegmentSubcluster:getMdbGreenplumClusterSegmentSubcluster"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "accesses",
                    "assignPublicIp",
                    "backgroundActivities",
                    "backupWindowStarts",
                    "cloudStorages",
                    "clusterId",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "environment",
                    "folderId",
                    "greenplumConfig",
                    "health",
                    "labels",
                    "loggings",
                    "maintenanceWindows",
                    "masterHostCount",
                    "masterHostGroupIds",
                    "masterHosts",
                    "masterSubclusters",
                    "name",
                    "networkId",
                    "pxfConfigs",
                    "securityGroupIds",
                    "segmentHostCount",
                    "segmentHostGroupIds",
                    "segmentHosts",
                    "segmentInHost",
                    "segmentSubclusters",
                    "serviceAccountId",
                    "status",
                    "subnetId",
                    "userName",
                    "version",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbKafkaCluster:getMdbKafkaCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbKafkaCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "config": {
                        "$ref": "#/types/yandex:index/getMdbKafkaClusterConfig:getMdbKafkaClusterConfig"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaClusterTopic:getMdbKafkaClusterTopic"
                        },
                        "deprecationMessage": "to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaClusterUser:getMdbKafkaClusterUser"
                        },
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_kafka_user"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbKafkaCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "config": {
                        "$ref": "#/types/yandex:index/getMdbKafkaClusterConfig:getMdbKafkaClusterConfig"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaClusterHost:getMdbKafkaClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaClusterMaintenanceWindow:getMdbKafkaClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "topics": {
                        "deprecationMessage": "to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaClusterTopic:getMdbKafkaClusterTopic"
                        },
                        "type": "array"
                    },
                    "users": {
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_kafka_user",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaClusterUser:getMdbKafkaClusterUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "environment",
                    "folderId",
                    "health",
                    "hosts",
                    "hostGroupIds",
                    "labels",
                    "maintenanceWindows",
                    "name",
                    "networkId",
                    "securityGroupIds",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbKafkaConnector:getMdbKafkaConnector": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbKafkaConnector.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbKafkaConnector.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "connectorConfigMirrormakers": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigMirrormaker:getMdbKafkaConnectorConnectorConfigMirrormaker"
                        },
                        "type": "array"
                    },
                    "connectorConfigS3Sinks": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaConnectorConnectorConfigS3Sink:getMdbKafkaConnectorConnectorConfigS3Sink"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "properties": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "tasksMax": {
                        "type": "integer"
                    }
                },
                "required": [
                    "clusterId",
                    "connectorConfigMirrormakers",
                    "connectorConfigS3Sinks",
                    "name",
                    "properties",
                    "tasksMax",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbKafkaTopic:getMdbKafkaTopic": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partitions": {
                        "type": "integer"
                    },
                    "replicationFactor": {
                        "type": "integer"
                    },
                    "topicConfigs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaTopicTopicConfig:getMdbKafkaTopicTopicConfig"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "name",
                    "partitions",
                    "replicationFactor",
                    "topicConfigs",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbKafkaUser:getMdbKafkaUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbKafkaUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbKafkaUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "secret": true,
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbKafkaUserPermission:getMdbKafkaUserPermission"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "name",
                    "password",
                    "permissions",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbMongodbCluster:getMdbMongodbCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbMongodbCluster.\n",
                "properties": {
                    "clusterConfig": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfig:getMdbMongodbClusterClusterConfig"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMongodbClusterDatabase:getMdbMongodbClusterDatabase"
                        },
                        "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mongodb_database"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskSizeAutoscalingMongocfg": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongocfg:getMdbMongodbClusterDiskSizeAutoscalingMongocfg"
                    },
                    "diskSizeAutoscalingMongod": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongod:getMdbMongodbClusterDiskSizeAutoscalingMongod"
                    },
                    "diskSizeAutoscalingMongoinfra": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongoinfra:getMdbMongodbClusterDiskSizeAutoscalingMongoinfra"
                    },
                    "diskSizeAutoscalingMongos": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongos:getMdbMongodbClusterDiskSizeAutoscalingMongos"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMongodbClusterHost:getMdbMongodbClusterHost"
                        }
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterMaintenanceWindow:getMdbMongodbClusterMaintenanceWindow"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResources:getMdbMongodbClusterResources",
                        "deprecationMessage": "to manage `resources`s, please switch to using a separate resource type `resources_mongo*`"
                    },
                    "resourcesMongocfg": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongocfg:getMdbMongodbClusterResourcesMongocfg"
                    },
                    "resourcesMongod": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongod:getMdbMongodbClusterResourcesMongod"
                    },
                    "resourcesMongoinfra": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongoinfra:getMdbMongodbClusterResourcesMongoinfra"
                    },
                    "resourcesMongos": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongos:getMdbMongodbClusterResourcesMongos"
                    },
                    "restore": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterRestore:getMdbMongodbClusterRestore"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sharded": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMongodbClusterUser:getMdbMongodbClusterUser"
                        },
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mongodb_user"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbMongodbCluster.\n",
                "properties": {
                    "clusterConfig": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterClusterConfig:getMdbMongodbClusterClusterConfig"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "deprecationMessage": "to manage databases, please switch to using a separate resource type yandex_mdb_mongodb_database",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMongodbClusterDatabase:getMdbMongodbClusterDatabase"
                        },
                        "type": "array"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskSizeAutoscalingMongocfg": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongocfg:getMdbMongodbClusterDiskSizeAutoscalingMongocfg"
                    },
                    "diskSizeAutoscalingMongod": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongod:getMdbMongodbClusterDiskSizeAutoscalingMongod"
                    },
                    "diskSizeAutoscalingMongoinfra": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongoinfra:getMdbMongodbClusterDiskSizeAutoscalingMongoinfra"
                    },
                    "diskSizeAutoscalingMongos": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterDiskSizeAutoscalingMongos:getMdbMongodbClusterDiskSizeAutoscalingMongos"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMongodbClusterHost:getMdbMongodbClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterMaintenanceWindow:getMdbMongodbClusterMaintenanceWindow"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "resources": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResources:getMdbMongodbClusterResources",
                        "deprecationMessage": "to manage `resources`s, please switch to using a separate resource type `resources_mongo*`"
                    },
                    "resourcesMongocfg": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongocfg:getMdbMongodbClusterResourcesMongocfg"
                    },
                    "resourcesMongod": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongod:getMdbMongodbClusterResourcesMongod"
                    },
                    "resourcesMongoinfra": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongoinfra:getMdbMongodbClusterResourcesMongoinfra"
                    },
                    "resourcesMongos": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterResourcesMongos:getMdbMongodbClusterResourcesMongos"
                    },
                    "restore": {
                        "$ref": "#/types/yandex:index/getMdbMongodbClusterRestore:getMdbMongodbClusterRestore"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "sharded": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "deprecationMessage": "to manage users, please switch to using a separate resource type yandex_mdb_mongodb_user",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMongodbClusterUser:getMdbMongodbClusterUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "createdAt",
                    "databases",
                    "deletionProtection",
                    "diskSizeAutoscalingMongocfg",
                    "diskSizeAutoscalingMongod",
                    "diskSizeAutoscalingMongoinfra",
                    "diskSizeAutoscalingMongos",
                    "folderId",
                    "health",
                    "labels",
                    "maintenanceWindow",
                    "sharded",
                    "status",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbMysqlCluster:getMdbMysqlCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbMysqlCluster.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/getMdbMysqlClusterAccess:getMdbMysqlClusterAccess"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "mysqlConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbMysqlCluster.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/yandex:index/getMdbMysqlClusterAccess:getMdbMysqlClusterAccess"
                    },
                    "backupRetainPeriodDays": {
                        "type": "integer"
                    },
                    "backupWindowStarts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterBackupWindowStart:getMdbMysqlClusterBackupWindowStart"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterDatabase:getMdbMysqlClusterDatabase"
                        },
                        "type": "array"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterHost:getMdbMysqlClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterMaintenanceWindow:getMdbMysqlClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "mysqlConfig": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "performanceDiagnostics": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterPerformanceDiagnostic:getMdbMysqlClusterPerformanceDiagnostic"
                        },
                        "type": "array"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterResource:getMdbMysqlClusterResource"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlClusterUser:getMdbMysqlClusterUser"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "backupRetainPeriodDays",
                    "backupWindowStarts",
                    "clusterId",
                    "createdAt",
                    "databases",
                    "deletionProtection",
                    "environment",
                    "folderId",
                    "health",
                    "hosts",
                    "hostGroupIds",
                    "maintenanceWindows",
                    "mysqlConfig",
                    "name",
                    "networkId",
                    "performanceDiagnostics",
                    "resources",
                    "securityGroupIds",
                    "status",
                    "users",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbMysqlDatabase:getMdbMysqlDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbMysqlDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbMysqlDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbMysqlUser:getMdbMysqlUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbMysqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlUserPermission:getMdbMysqlUserPermission"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbMysqlUser.\n",
                "properties": {
                    "authenticationPlugin": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "connectionLimits": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlUserConnectionLimit:getMdbMysqlUserConnectionLimit"
                        },
                        "type": "array"
                    },
                    "connectionManager": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "globalPermissions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbMysqlUserPermission:getMdbMysqlUserPermission"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "authenticationPlugin",
                    "clusterId",
                    "connectionLimits",
                    "connectionManager",
                    "globalPermissions",
                    "name",
                    "permissions",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbPostgresqlCluster:getMdbPostgresqlCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbPostgresqlCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbPostgresqlCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "configs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlClusterConfig:getMdbPostgresqlClusterConfig"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlClusterDatabase:getMdbPostgresqlClusterDatabase"
                        },
                        "type": "array"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlClusterHost:getMdbPostgresqlClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlClusterMaintenanceWindow:getMdbPostgresqlClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlClusterUser:getMdbPostgresqlClusterUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "configs",
                    "createdAt",
                    "databases",
                    "deletionProtection",
                    "environment",
                    "folderId",
                    "health",
                    "hosts",
                    "hostGroupIds",
                    "labels",
                    "maintenanceWindows",
                    "name",
                    "networkId",
                    "securityGroupIds",
                    "status",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbPostgresqlDatabase:getMdbPostgresqlDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbPostgresqlDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "string"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlDatabaseExtension:getMdbPostgresqlDatabaseExtension"
                        }
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "lcType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "templateDb": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbPostgresqlDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "string"
                    },
                    "extensions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlDatabaseExtension:getMdbPostgresqlDatabaseExtension"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "lcType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "templateDb": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "lcCollate",
                    "lcType",
                    "name",
                    "owner",
                    "templateDb",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbPostgresqlUser:getMdbPostgresqlUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbPostgresqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "connLimit": {
                        "type": "integer"
                    },
                    "deletionProtection": {
                        "type": "string"
                    },
                    "login": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdbPostgresqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "connLimit": {
                        "type": "integer"
                    },
                    "connectionManager": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "deletionProtection": {
                        "type": "string"
                    },
                    "grants": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "login": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "secret": true,
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbPostgresqlUserPermission:getMdbPostgresqlUserPermission"
                        },
                        "type": "array"
                    },
                    "settings": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "clusterId",
                    "connectionManager",
                    "grants",
                    "name",
                    "password",
                    "permissions",
                    "settings",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbRedisCluster:getMdbRedisCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbRedisCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbRedisCluster.\n",
                "properties": {
                    "announceHostnames": {
                        "type": "boolean"
                    },
                    "authSentinel": {
                        "type": "boolean"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "configs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbRedisClusterConfig:getMdbRedisClusterConfig"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskSizeAutoscalings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbRedisClusterDiskSizeAutoscaling:getMdbRedisClusterDiskSizeAutoscaling"
                        },
                        "type": "array"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbRedisClusterHost:getMdbRedisClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbRedisClusterMaintenanceWindow:getMdbRedisClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "persistenceMode": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbRedisClusterResource:getMdbRedisClusterResource"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "sharded": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tlsEnabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "announceHostnames",
                    "authSentinel",
                    "clusterId",
                    "configs",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "diskSizeAutoscalings",
                    "environment",
                    "folderId",
                    "health",
                    "hosts",
                    "labels",
                    "maintenanceWindows",
                    "name",
                    "networkId",
                    "persistenceMode",
                    "resources",
                    "securityGroupIds",
                    "sharded",
                    "status",
                    "tlsEnabled",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMdbSqlserverCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sqlcollation": {
                        "type": "string"
                    },
                    "sqlserverConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMdbSqlserverCluster.\n",
                "properties": {
                    "backupWindowStarts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbSqlserverClusterBackupWindowStart:getMdbSqlserverClusterBackupWindowStart"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbSqlserverClusterDatabase:getMdbSqlserverClusterDatabase"
                        },
                        "type": "array"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "hostGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hosts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbSqlserverClusterHost:getMdbSqlserverClusterHost"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbSqlserverClusterResource:getMdbSqlserverClusterResource"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "sqlcollation": {
                        "type": "string"
                    },
                    "sqlserverConfig": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "status": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMdbSqlserverClusterUser:getMdbSqlserverClusterUser"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "backupWindowStarts",
                    "clusterId",
                    "createdAt",
                    "databases",
                    "deletionProtection",
                    "description",
                    "environment",
                    "folderId",
                    "health",
                    "hosts",
                    "hostGroupIds",
                    "labels",
                    "name",
                    "networkId",
                    "resources",
                    "securityGroupIds",
                    "sqlcollation",
                    "sqlserverConfig",
                    "status",
                    "users",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMessageQueue:getMessageQueue": {
            "inputs": {
                "description": "A collection of arguments for invoking getMessageQueue.\n",
                "properties": {
                    "accessKey": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "regionId": {
                        "type": "string"
                    },
                    "secretKey": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMessageQueue.\n",
                "properties": {
                    "accessKey": {
                        "type": "string"
                    },
                    "arn": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "regionId": {
                        "type": "string"
                    },
                    "secretKey": {
                        "secret": true,
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "arn",
                    "name",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getMonitoringDashboard:getMonitoringDashboard": {
            "inputs": {
                "description": "A collection of arguments for invoking getMonitoringDashboard.\n",
                "properties": {
                    "dashboardId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitoringDashboard.\n",
                "properties": {
                    "dashboardId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parametrizations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMonitoringDashboardParametrization:getMonitoringDashboardParametrization"
                        },
                        "type": "array"
                    },
                    "title": {
                        "type": "string"
                    },
                    "widgets": {
                        "items": {
                            "$ref": "#/types/yandex:index/getMonitoringDashboardWidget:getMonitoringDashboardWidget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "folderId",
                    "labels",
                    "parametrizations",
                    "title",
                    "widgets",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getOrganizationmanagerGroup:getOrganizationmanagerGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationmanagerGroup.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationmanagerGroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "members": {
                        "items": {
                            "$ref": "#/types/yandex:index/getOrganizationmanagerGroupMember:getOrganizationmanagerGroupMember"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "groupId",
                    "members",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getOrganizationmanagerOsLoginSettings:getOrganizationmanagerOsLoginSettings": {
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationmanagerOsLoginSettings.\n",
                "properties": {
                    "organizationId": {
                        "type": "string"
                    },
                    "sshCertificateSettings": {
                        "$ref": "#/types/yandex:index/getOrganizationmanagerOsLoginSettingsSshCertificateSettings:getOrganizationmanagerOsLoginSettingsSshCertificateSettings"
                    },
                    "userSshKeySettings": {
                        "$ref": "#/types/yandex:index/getOrganizationmanagerOsLoginSettingsUserSshKeySettings:getOrganizationmanagerOsLoginSettingsUserSshKeySettings"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationmanagerOsLoginSettings.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "sshCertificateSettings": {
                        "$ref": "#/types/yandex:index/getOrganizationmanagerOsLoginSettingsSshCertificateSettings:getOrganizationmanagerOsLoginSettingsSshCertificateSettings"
                    },
                    "userSshKeySettings": {
                        "$ref": "#/types/yandex:index/getOrganizationmanagerOsLoginSettingsUserSshKeySettings:getOrganizationmanagerOsLoginSettingsUserSshKeySettings"
                    }
                },
                "required": [
                    "organizationId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getOrganizationmanagerSamlFederation:getOrganizationmanagerSamlFederation": {
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationmanagerSamlFederation.\n",
                "properties": {
                    "federationId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationmanagerSamlFederation.\n",
                "properties": {
                    "autoCreateAccountOnLogin": {
                        "type": "boolean"
                    },
                    "caseInsensitiveNameIds": {
                        "type": "boolean"
                    },
                    "cookieMaxAge": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "federationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "securitySettings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getOrganizationmanagerSamlFederationSecuritySetting:getOrganizationmanagerSamlFederationSecuritySetting"
                        },
                        "type": "array"
                    },
                    "ssoBinding": {
                        "type": "string"
                    },
                    "ssoUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "autoCreateAccountOnLogin",
                    "caseInsensitiveNameIds",
                    "cookieMaxAge",
                    "createdAt",
                    "description",
                    "federationId",
                    "issuer",
                    "name",
                    "securitySettings",
                    "ssoBinding",
                    "ssoUrl",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getOrganizationmanagerSamlFederationUserAccount:getOrganizationmanagerSamlFederationUserAccount": {
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationmanagerSamlFederationUserAccount.\n",
                "properties": {
                    "federationId": {
                        "type": "string"
                    },
                    "nameId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "federationId",
                    "nameId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationmanagerSamlFederationUserAccount.\n",
                "properties": {
                    "federationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "nameId": {
                        "type": "string"
                    }
                },
                "required": [
                    "federationId",
                    "nameId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getOrganizationmanagerUserSshKey.\n",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "subjectId": {
                        "type": "string"
                    },
                    "userSshKeyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "userSshKeyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrganizationmanagerUserSshKey.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "subjectId": {
                        "type": "string"
                    },
                    "userSshKeyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "fingerprint",
                    "userSshKeyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getResourcemanagerCloud:getResourcemanagerCloud": {
            "inputs": {
                "description": "A collection of arguments for invoking getResourcemanagerCloud.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getResourcemanagerCloud.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudId",
                    "createdAt",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getResourcemanagerFolder:getResourcemanagerFolder": {
            "inputs": {
                "description": "A collection of arguments for invoking getResourcemanagerFolder.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getResourcemanagerFolder.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudId",
                    "createdAt",
                    "description",
                    "folderId",
                    "name",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getServerlessContainer:getServerlessContainer": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerlessContainer.\n",
                "properties": {
                    "connectivity": {
                        "$ref": "#/types/yandex:index/getServerlessContainerConnectivity:getServerlessContainerConnectivity"
                    },
                    "containerId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/getServerlessContainerMetadataOptions:getServerlessContainerMetadataOptions"
                    },
                    "mounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerMount:getServerlessContainerMount"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "runtime": {
                        "$ref": "#/types/yandex:index/getServerlessContainerRuntime:getServerlessContainerRuntime"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerSecret:getServerlessContainerSecret"
                        }
                    },
                    "storageMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerStorageMount:getServerlessContainerStorageMount"
                        },
                        "deprecationMessage": "to manage storage_mountss, please switch to using a separate resource type mounts"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServerlessContainer.\n",
                "properties": {
                    "concurrency": {
                        "type": "integer"
                    },
                    "connectivity": {
                        "$ref": "#/types/yandex:index/getServerlessContainerConnectivity:getServerlessContainerConnectivity"
                    },
                    "containerId": {
                        "type": "string"
                    },
                    "coreFraction": {
                        "type": "integer"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "executionTimeout": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "images": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerImage:getServerlessContainerImage"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "logOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerLogOption:getServerlessContainerLogOption"
                        },
                        "type": "array"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/yandex:index/getServerlessContainerMetadataOptions:getServerlessContainerMetadataOptions"
                    },
                    "mounts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerMount:getServerlessContainerMount"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "revisionId": {
                        "type": "string"
                    },
                    "runtime": {
                        "$ref": "#/types/yandex:index/getServerlessContainerRuntime:getServerlessContainerRuntime"
                    },
                    "secrets": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerSecret:getServerlessContainerSecret"
                        },
                        "type": "array"
                    },
                    "serviceAccountId": {
                        "type": "string"
                    },
                    "storageMounts": {
                        "deprecationMessage": "to manage storage_mountss, please switch to using a separate resource type mounts",
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessContainerStorageMount:getServerlessContainerStorageMount"
                        },
                        "type": "array"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "concurrency",
                    "coreFraction",
                    "cores",
                    "createdAt",
                    "description",
                    "executionTimeout",
                    "images",
                    "labels",
                    "logOptions",
                    "memory",
                    "metadataOptions",
                    "mounts",
                    "revisionId",
                    "runtime",
                    "secrets",
                    "serviceAccountId",
                    "storageMounts",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getServerlessEventrouterBus:getServerlessEventrouterBus": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerlessEventrouterBus.\n",
                "properties": {
                    "busId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServerlessEventrouterBus.\n",
                "properties": {
                    "busId": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudId",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "folderId",
                    "labels",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getServerlessEventrouterConnector:getServerlessEventrouterConnector": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerlessEventrouterConnector.\n",
                "properties": {
                    "connectorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServerlessEventrouterConnector.\n",
                "properties": {
                    "busId": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "yds": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterConnectorYd:getServerlessEventrouterConnectorYd"
                        },
                        "type": "array"
                    },
                    "ymqs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterConnectorYmq:getServerlessEventrouterConnectorYmq"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "busId",
                    "cloudId",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "folderId",
                    "labels",
                    "yds",
                    "ymqs",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getServerlessEventrouterRule:getServerlessEventrouterRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerlessEventrouterRule.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServerlessEventrouterRule.\n",
                "properties": {
                    "busId": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "containers": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleContainer:getServerlessEventrouterRuleContainer"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "functions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleFunction:getServerlessEventrouterRuleFunction"
                        },
                        "type": "array"
                    },
                    "gatewayWebsocketBroadcasts": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleGatewayWebsocketBroadcast:getServerlessEventrouterRuleGatewayWebsocketBroadcast"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "jqFilter": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "loggings": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleLogging:getServerlessEventrouterRuleLogging"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "workflows": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleWorkflow:getServerlessEventrouterRuleWorkflow"
                        },
                        "type": "array"
                    },
                    "yds": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleYd:getServerlessEventrouterRuleYd"
                        },
                        "type": "array"
                    },
                    "ymqs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getServerlessEventrouterRuleYmq:getServerlessEventrouterRuleYmq"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "busId",
                    "cloudId",
                    "containers",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "folderId",
                    "functions",
                    "gatewayWebsocketBroadcasts",
                    "jqFilter",
                    "labels",
                    "loggings",
                    "workflows",
                    "yds",
                    "ymqs",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getSmartcaptchaCaptcha:getSmartcaptchaCaptcha": {
            "inputs": {
                "description": "A collection of arguments for invoking getSmartcaptchaCaptcha.\n",
                "properties": {
                    "captchaId": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSmartcaptchaCaptcha.\n",
                "properties": {
                    "allowedSites": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "captchaId": {
                        "type": "string"
                    },
                    "challengeType": {
                        "type": "string"
                    },
                    "clientKey": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "complexity": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "overrideVariants": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaOverrideVariant:getSmartcaptchaCaptchaOverrideVariant"
                        },
                        "type": "array"
                    },
                    "preCheckType": {
                        "type": "string"
                    },
                    "securityRules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSmartcaptchaCaptchaSecurityRule:getSmartcaptchaCaptchaSecurityRule"
                        },
                        "type": "array"
                    },
                    "styleJson": {
                        "type": "string"
                    },
                    "suspend": {
                        "type": "boolean"
                    },
                    "turnOffHostnameCheck": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allowedSites",
                    "challengeType",
                    "clientKey",
                    "cloudId",
                    "complexity",
                    "createdAt",
                    "deletionProtection",
                    "folderId",
                    "name",
                    "overrideVariants",
                    "preCheckType",
                    "securityRules",
                    "styleJson",
                    "suspend",
                    "turnOffHostnameCheck",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getSwsAdvancedRateLimiterProfile:getSwsAdvancedRateLimiterProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getSwsAdvancedRateLimiterProfile.\n",
                "properties": {
                    "advancedRateLimiterProfileId": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSwsAdvancedRateLimiterProfile.\n",
                "properties": {
                    "advancedRateLimiterProfileId": {
                        "type": "string"
                    },
                    "advancedRateLimiterRules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRule:getSwsAdvancedRateLimiterProfileAdvancedRateLimiterRule"
                        },
                        "type": "array"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "advancedRateLimiterRules",
                    "cloudId",
                    "createdAt",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getSwsSecurityProfile:getSwsSecurityProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getSwsSecurityProfile.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "securityProfileId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSwsSecurityProfile.\n",
                "properties": {
                    "advancedRateLimiterProfileId": {
                        "type": "string"
                    },
                    "captchaId": {
                        "type": "string"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultAction": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "securityProfileId": {
                        "type": "string"
                    },
                    "securityRules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsSecurityProfileSecurityRule:getSwsSecurityProfileSecurityRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "advancedRateLimiterProfileId",
                    "captchaId",
                    "cloudId",
                    "createdAt",
                    "defaultAction",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "securityRules",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getSwsWafProfile:getSwsWafProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getSwsWafProfile.\n",
                "properties": {
                    "cloudId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "wafProfileId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSwsWafProfile.\n",
                "properties": {
                    "analyzeRequestBodies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsWafProfileAnalyzeRequestBody:getSwsWafProfileAnalyzeRequestBody"
                        },
                        "type": "array"
                    },
                    "cloudId": {
                        "type": "string"
                    },
                    "coreRuleSets": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsWafProfileCoreRuleSet:getSwsWafProfileCoreRuleSet"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "exclusionRules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsWafProfileExclusionRule:getSwsWafProfileExclusionRule"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsWafProfileRule:getSwsWafProfileRule"
                        },
                        "type": "array"
                    },
                    "wafProfileId": {
                        "type": "string"
                    }
                },
                "required": [
                    "analyzeRequestBodies",
                    "cloudId",
                    "coreRuleSets",
                    "createdAt",
                    "description",
                    "exclusionRules",
                    "folderId",
                    "labels",
                    "name",
                    "rules",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getSwsWafRuleSetDescriptor:getSwsWafRuleSetDescriptor": {
            "inputs": {
                "description": "A collection of arguments for invoking getSwsWafRuleSetDescriptor.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ruleSetDescriptorId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSwsWafRuleSetDescriptor.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ruleSetDescriptorId": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/yandex:index/getSwsWafRuleSetDescriptorRule:getSwsWafRuleSetDescriptorRule"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "rules",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcAddress:getVpcAddress": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcAddress.\n",
                "properties": {
                    "addressId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcAddress.\n",
                "properties": {
                    "addressId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dnsRecords": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcAddressDnsRecord:getVpcAddressDnsRecord"
                        },
                        "type": "array"
                    },
                    "externalIpv4Addresses": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcAddressExternalIpv4Address:getVpcAddressExternalIpv4Address"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "reserved": {
                        "type": "boolean"
                    },
                    "used": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "addressId",
                    "createdAt",
                    "deletionProtection",
                    "description",
                    "dnsRecords",
                    "externalIpv4Addresses",
                    "folderId",
                    "labels",
                    "name",
                    "reserved",
                    "used",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcGateway:getVpcGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcGateway.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sharedEgressGateway": {
                        "$ref": "#/types/yandex:index/getVpcGatewaySharedEgressGateway:getVpcGatewaySharedEgressGateway"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcGateway.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sharedEgressGateway": {
                        "$ref": "#/types/yandex:index/getVpcGatewaySharedEgressGateway:getVpcGatewaySharedEgressGateway"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "gatewayId",
                    "labels",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcNetwork:getVpcNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcNetwork.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcNetwork.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultSecurityGroupId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "subnetIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "createdAt",
                    "defaultSecurityGroupId",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "networkId",
                    "subnetIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcPrivateEndpoint:getVpcPrivateEndpoint": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPrivateEndpoint.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "objectStorages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcPrivateEndpointObjectStorage:getVpcPrivateEndpointObjectStorage"
                        }
                    },
                    "privateEndpointId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPrivateEndpoint.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dnsOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcPrivateEndpointDnsOption:getVpcPrivateEndpointDnsOption"
                        },
                        "type": "array"
                    },
                    "endpointAddresses": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcPrivateEndpointEndpointAddress:getVpcPrivateEndpointEndpointAddress"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "objectStorages": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcPrivateEndpointObjectStorage:getVpcPrivateEndpointObjectStorage"
                        },
                        "type": "array"
                    },
                    "privateEndpointId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "dnsOptions",
                    "endpointAddresses",
                    "folderId",
                    "labels",
                    "name",
                    "networkId",
                    "privateEndpointId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcRouteTable:getVpcRouteTable": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcRouteTable.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcRouteTable.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "staticRoutes": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcRouteTableStaticRoute:getVpcRouteTableStaticRoute"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "folderId",
                    "labels",
                    "name",
                    "networkId",
                    "routeTableId",
                    "staticRoutes",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcSecurityGroup:getVpcSecurityGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcSecurityGroup.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcSecurityGroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "egresses": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcSecurityGroupEgress:getVpcSecurityGroupEgress"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ingresses": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcSecurityGroupIngress:getVpcSecurityGroupIngress"
                        },
                        "type": "array"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "egresses",
                    "folderId",
                    "ingresses",
                    "labels",
                    "name",
                    "networkId",
                    "securityGroupId",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getVpcSubnet:getVpcSubnet": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcSubnet.\n",
                "properties": {
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcSubnet.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dhcpOptions": {
                        "items": {
                            "$ref": "#/types/yandex:index/getVpcSubnetDhcpOption:getVpcSubnetDhcpOption"
                        },
                        "type": "array"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "v4CidrBlocks": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "v6CidrBlocks": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "dhcpOptions",
                    "folderId",
                    "labels",
                    "name",
                    "networkId",
                    "routeTableId",
                    "subnetId",
                    "v4CidrBlocks",
                    "v6CidrBlocks",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getYdbDatabaseDedicated:getYdbDatabaseDedicated": {
            "inputs": {
                "description": "A collection of arguments for invoking getYdbDatabaseDedicated.\n",
                "properties": {
                    "databaseId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getYdbDatabaseDedicated.\n",
                "properties": {
                    "assignPublicIps": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "databaseId": {
                        "type": "string"
                    },
                    "databasePath": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "locations": {
                        "items": {
                            "$ref": "#/types/yandex:index/getYdbDatabaseDedicatedLocation:getYdbDatabaseDedicatedLocation"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "resourcePresetId": {
                        "type": "string"
                    },
                    "scalePolicies": {
                        "items": {
                            "$ref": "#/types/yandex:index/getYdbDatabaseDedicatedScalePolicy:getYdbDatabaseDedicatedScalePolicy"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageConfigs": {
                        "items": {
                            "$ref": "#/types/yandex:index/getYdbDatabaseDedicatedStorageConfig:getYdbDatabaseDedicatedStorageConfig"
                        },
                        "type": "array"
                    },
                    "subnetIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tlsEnabled": {
                        "type": "boolean"
                    },
                    "ydbApiEndpoint": {
                        "type": "string"
                    },
                    "ydbFullEndpoint": {
                        "type": "string"
                    }
                },
                "required": [
                    "assignPublicIps",
                    "createdAt",
                    "databasePath",
                    "deletionProtection",
                    "description",
                    "labels",
                    "locations",
                    "locationId",
                    "networkId",
                    "resourcePresetId",
                    "scalePolicies",
                    "securityGroupIds",
                    "status",
                    "storageConfigs",
                    "subnetIds",
                    "tlsEnabled",
                    "ydbApiEndpoint",
                    "ydbFullEndpoint",
                    "id"
                ],
                "type": "object"
            }
        },
        "yandex:index/getYdbDatabaseServerless:getYdbDatabaseServerless": {
            "inputs": {
                "description": "A collection of arguments for invoking getYdbDatabaseServerless.\n",
                "properties": {
                    "databaseId": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serverlessDatabases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/yandex:index/getYdbDatabaseServerlessServerlessDatabase:getYdbDatabaseServerlessServerlessDatabase"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getYdbDatabaseServerless.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "databaseId": {
                        "type": "string"
                    },
                    "databasePath": {
                        "type": "string"
                    },
                    "deletionProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "documentApiEndpoint": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serverlessDatabases": {
                        "items": {
                            "$ref": "#/types/yandex:index/getYdbDatabaseServerlessServerlessDatabase:getYdbDatabaseServerlessServerlessDatabase"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tlsEnabled": {
                        "type": "boolean"
                    },
                    "ydbApiEndpoint": {
                        "type": "string"
                    },
                    "ydbFullEndpoint": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "databasePath",
                    "deletionProtection",
                    "description",
                    "documentApiEndpoint",
                    "labels",
                    "locationId",
                    "serverlessDatabases",
                    "status",
                    "tlsEnabled",
                    "ydbApiEndpoint",
                    "ydbFullEndpoint",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}