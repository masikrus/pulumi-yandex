// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcSecurityGroup struct {
	pulumi.CustomResourceState

	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of egress rules.
	Egresses VpcSecurityGroupEgressArrayOutput `pulumi:"egresses"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A list of ingress rules.
	Ingresses VpcSecurityGroupIngressArrayOutput `pulumi:"ingresses"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the network this security group belongs to.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Status of this security group.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewVpcSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewVpcSecurityGroup(ctx *pulumi.Context,
	name string, args *VpcSecurityGroupArgs, opts ...pulumi.ResourceOption) (*VpcSecurityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcSecurityGroup
	err := ctx.RegisterResource("yandex:index/vpcSecurityGroup:VpcSecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcSecurityGroup gets an existing VpcSecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcSecurityGroupState, opts ...pulumi.ResourceOption) (*VpcSecurityGroup, error) {
	var resource VpcSecurityGroup
	err := ctx.ReadResource("yandex:index/vpcSecurityGroup:VpcSecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcSecurityGroup resources.
type vpcSecurityGroupState struct {
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// The resource description.
	Description *string `pulumi:"description"`
	// A list of egress rules.
	Egresses []VpcSecurityGroupEgress `pulumi:"egresses"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A list of ingress rules.
	Ingresses []VpcSecurityGroupIngress `pulumi:"ingresses"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// ID of the network this security group belongs to.
	NetworkId *string `pulumi:"networkId"`
	// Status of this security group.
	Status *string `pulumi:"status"`
}

type VpcSecurityGroupState struct {
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// A list of egress rules.
	Egresses VpcSecurityGroupEgressArrayInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A list of ingress rules.
	Ingresses VpcSecurityGroupIngressArrayInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// ID of the network this security group belongs to.
	NetworkId pulumi.StringPtrInput
	// Status of this security group.
	Status pulumi.StringPtrInput
}

func (VpcSecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcSecurityGroupState)(nil)).Elem()
}

type vpcSecurityGroupArgs struct {
	// The resource description.
	Description *string `pulumi:"description"`
	// A list of egress rules.
	Egresses []VpcSecurityGroupEgress `pulumi:"egresses"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A list of ingress rules.
	Ingresses []VpcSecurityGroupIngress `pulumi:"ingresses"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// ID of the network this security group belongs to.
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a VpcSecurityGroup resource.
type VpcSecurityGroupArgs struct {
	// The resource description.
	Description pulumi.StringPtrInput
	// A list of egress rules.
	Egresses VpcSecurityGroupEgressArrayInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A list of ingress rules.
	Ingresses VpcSecurityGroupIngressArrayInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// ID of the network this security group belongs to.
	NetworkId pulumi.StringInput
}

func (VpcSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcSecurityGroupArgs)(nil)).Elem()
}

type VpcSecurityGroupInput interface {
	pulumi.Input

	ToVpcSecurityGroupOutput() VpcSecurityGroupOutput
	ToVpcSecurityGroupOutputWithContext(ctx context.Context) VpcSecurityGroupOutput
}

func (*VpcSecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcSecurityGroup)(nil)).Elem()
}

func (i *VpcSecurityGroup) ToVpcSecurityGroupOutput() VpcSecurityGroupOutput {
	return i.ToVpcSecurityGroupOutputWithContext(context.Background())
}

func (i *VpcSecurityGroup) ToVpcSecurityGroupOutputWithContext(ctx context.Context) VpcSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupOutput)
}

// VpcSecurityGroupArrayInput is an input type that accepts VpcSecurityGroupArray and VpcSecurityGroupArrayOutput values.
// You can construct a concrete instance of `VpcSecurityGroupArrayInput` via:
//
//	VpcSecurityGroupArray{ VpcSecurityGroupArgs{...} }
type VpcSecurityGroupArrayInput interface {
	pulumi.Input

	ToVpcSecurityGroupArrayOutput() VpcSecurityGroupArrayOutput
	ToVpcSecurityGroupArrayOutputWithContext(context.Context) VpcSecurityGroupArrayOutput
}

type VpcSecurityGroupArray []VpcSecurityGroupInput

func (VpcSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcSecurityGroup)(nil)).Elem()
}

func (i VpcSecurityGroupArray) ToVpcSecurityGroupArrayOutput() VpcSecurityGroupArrayOutput {
	return i.ToVpcSecurityGroupArrayOutputWithContext(context.Background())
}

func (i VpcSecurityGroupArray) ToVpcSecurityGroupArrayOutputWithContext(ctx context.Context) VpcSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupArrayOutput)
}

// VpcSecurityGroupMapInput is an input type that accepts VpcSecurityGroupMap and VpcSecurityGroupMapOutput values.
// You can construct a concrete instance of `VpcSecurityGroupMapInput` via:
//
//	VpcSecurityGroupMap{ "key": VpcSecurityGroupArgs{...} }
type VpcSecurityGroupMapInput interface {
	pulumi.Input

	ToVpcSecurityGroupMapOutput() VpcSecurityGroupMapOutput
	ToVpcSecurityGroupMapOutputWithContext(context.Context) VpcSecurityGroupMapOutput
}

type VpcSecurityGroupMap map[string]VpcSecurityGroupInput

func (VpcSecurityGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcSecurityGroup)(nil)).Elem()
}

func (i VpcSecurityGroupMap) ToVpcSecurityGroupMapOutput() VpcSecurityGroupMapOutput {
	return i.ToVpcSecurityGroupMapOutputWithContext(context.Background())
}

func (i VpcSecurityGroupMap) ToVpcSecurityGroupMapOutputWithContext(ctx context.Context) VpcSecurityGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupMapOutput)
}

type VpcSecurityGroupOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcSecurityGroup)(nil)).Elem()
}

func (o VpcSecurityGroupOutput) ToVpcSecurityGroupOutput() VpcSecurityGroupOutput {
	return o
}

func (o VpcSecurityGroupOutput) ToVpcSecurityGroupOutputWithContext(ctx context.Context) VpcSecurityGroupOutput {
	return o
}

// The creation timestamp of the resource.
func (o VpcSecurityGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o VpcSecurityGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of egress rules.
func (o VpcSecurityGroupOutput) Egresses() VpcSecurityGroupEgressArrayOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) VpcSecurityGroupEgressArrayOutput { return v.Egresses }).(VpcSecurityGroupEgressArrayOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o VpcSecurityGroupOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A list of ingress rules.
func (o VpcSecurityGroupOutput) Ingresses() VpcSecurityGroupIngressArrayOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) VpcSecurityGroupIngressArrayOutput { return v.Ingresses }).(VpcSecurityGroupIngressArrayOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o VpcSecurityGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o VpcSecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of the network this security group belongs to.
func (o VpcSecurityGroupOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Status of this security group.
func (o VpcSecurityGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcSecurityGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type VpcSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcSecurityGroup)(nil)).Elem()
}

func (o VpcSecurityGroupArrayOutput) ToVpcSecurityGroupArrayOutput() VpcSecurityGroupArrayOutput {
	return o
}

func (o VpcSecurityGroupArrayOutput) ToVpcSecurityGroupArrayOutputWithContext(ctx context.Context) VpcSecurityGroupArrayOutput {
	return o
}

func (o VpcSecurityGroupArrayOutput) Index(i pulumi.IntInput) VpcSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcSecurityGroup {
		return vs[0].([]*VpcSecurityGroup)[vs[1].(int)]
	}).(VpcSecurityGroupOutput)
}

type VpcSecurityGroupMapOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcSecurityGroup)(nil)).Elem()
}

func (o VpcSecurityGroupMapOutput) ToVpcSecurityGroupMapOutput() VpcSecurityGroupMapOutput {
	return o
}

func (o VpcSecurityGroupMapOutput) ToVpcSecurityGroupMapOutputWithContext(ctx context.Context) VpcSecurityGroupMapOutput {
	return o
}

func (o VpcSecurityGroupMapOutput) MapIndex(k pulumi.StringInput) VpcSecurityGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcSecurityGroup {
		return vs[0].(map[string]*VpcSecurityGroup)[vs[1].(string)]
	}).(VpcSecurityGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcSecurityGroupInput)(nil)).Elem(), &VpcSecurityGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcSecurityGroupArrayInput)(nil)).Elem(), VpcSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcSecurityGroupMapInput)(nil)).Elem(), VpcSecurityGroupMap{})
	pulumi.RegisterOutputType(VpcSecurityGroupOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupMapOutput{})
}
