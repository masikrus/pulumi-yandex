// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamWorkloadIdentityOidcFederationIamBinding struct {
	pulumi.CustomResourceState

	// ID of the OIDC workload identity federation to apply a binding to.
	FederationId pulumi.StringOutput `pulumi:"federationId"`
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       pulumi.StringOutput `pulumi:"role"`
	SleepAfter pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewIamWorkloadIdentityOidcFederationIamBinding registers a new resource with the given unique name, arguments, and options.
func NewIamWorkloadIdentityOidcFederationIamBinding(ctx *pulumi.Context,
	name string, args *IamWorkloadIdentityOidcFederationIamBindingArgs, opts ...pulumi.ResourceOption) (*IamWorkloadIdentityOidcFederationIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IamWorkloadIdentityOidcFederationIamBinding
	err := ctx.RegisterResource("yandex:index/iamWorkloadIdentityOidcFederationIamBinding:IamWorkloadIdentityOidcFederationIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamWorkloadIdentityOidcFederationIamBinding gets an existing IamWorkloadIdentityOidcFederationIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamWorkloadIdentityOidcFederationIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamWorkloadIdentityOidcFederationIamBindingState, opts ...pulumi.ResourceOption) (*IamWorkloadIdentityOidcFederationIamBinding, error) {
	var resource IamWorkloadIdentityOidcFederationIamBinding
	err := ctx.ReadResource("yandex:index/iamWorkloadIdentityOidcFederationIamBinding:IamWorkloadIdentityOidcFederationIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamWorkloadIdentityOidcFederationIamBinding resources.
type iamWorkloadIdentityOidcFederationIamBindingState struct {
	// ID of the OIDC workload identity federation to apply a binding to.
	FederationId *string `pulumi:"federationId"`
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       *string `pulumi:"role"`
	SleepAfter *int    `pulumi:"sleepAfter"`
}

type IamWorkloadIdentityOidcFederationIamBindingState struct {
	// ID of the OIDC workload identity federation to apply a binding to.
	FederationId pulumi.StringPtrInput
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.IntPtrInput
}

func (IamWorkloadIdentityOidcFederationIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkloadIdentityOidcFederationIamBindingState)(nil)).Elem()
}

type iamWorkloadIdentityOidcFederationIamBindingArgs struct {
	// ID of the OIDC workload identity federation to apply a binding to.
	FederationId string `pulumi:"federationId"`
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       string `pulumi:"role"`
	SleepAfter *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a IamWorkloadIdentityOidcFederationIamBinding resource.
type IamWorkloadIdentityOidcFederationIamBindingArgs struct {
	// ID of the OIDC workload identity federation to apply a binding to.
	FederationId pulumi.StringInput
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       pulumi.StringInput
	SleepAfter pulumi.IntPtrInput
}

func (IamWorkloadIdentityOidcFederationIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkloadIdentityOidcFederationIamBindingArgs)(nil)).Elem()
}

type IamWorkloadIdentityOidcFederationIamBindingInput interface {
	pulumi.Input

	ToIamWorkloadIdentityOidcFederationIamBindingOutput() IamWorkloadIdentityOidcFederationIamBindingOutput
	ToIamWorkloadIdentityOidcFederationIamBindingOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingOutput
}

func (*IamWorkloadIdentityOidcFederationIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkloadIdentityOidcFederationIamBinding)(nil)).Elem()
}

func (i *IamWorkloadIdentityOidcFederationIamBinding) ToIamWorkloadIdentityOidcFederationIamBindingOutput() IamWorkloadIdentityOidcFederationIamBindingOutput {
	return i.ToIamWorkloadIdentityOidcFederationIamBindingOutputWithContext(context.Background())
}

func (i *IamWorkloadIdentityOidcFederationIamBinding) ToIamWorkloadIdentityOidcFederationIamBindingOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityOidcFederationIamBindingOutput)
}

// IamWorkloadIdentityOidcFederationIamBindingArrayInput is an input type that accepts IamWorkloadIdentityOidcFederationIamBindingArray and IamWorkloadIdentityOidcFederationIamBindingArrayOutput values.
// You can construct a concrete instance of `IamWorkloadIdentityOidcFederationIamBindingArrayInput` via:
//
//	IamWorkloadIdentityOidcFederationIamBindingArray{ IamWorkloadIdentityOidcFederationIamBindingArgs{...} }
type IamWorkloadIdentityOidcFederationIamBindingArrayInput interface {
	pulumi.Input

	ToIamWorkloadIdentityOidcFederationIamBindingArrayOutput() IamWorkloadIdentityOidcFederationIamBindingArrayOutput
	ToIamWorkloadIdentityOidcFederationIamBindingArrayOutputWithContext(context.Context) IamWorkloadIdentityOidcFederationIamBindingArrayOutput
}

type IamWorkloadIdentityOidcFederationIamBindingArray []IamWorkloadIdentityOidcFederationIamBindingInput

func (IamWorkloadIdentityOidcFederationIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamWorkloadIdentityOidcFederationIamBinding)(nil)).Elem()
}

func (i IamWorkloadIdentityOidcFederationIamBindingArray) ToIamWorkloadIdentityOidcFederationIamBindingArrayOutput() IamWorkloadIdentityOidcFederationIamBindingArrayOutput {
	return i.ToIamWorkloadIdentityOidcFederationIamBindingArrayOutputWithContext(context.Background())
}

func (i IamWorkloadIdentityOidcFederationIamBindingArray) ToIamWorkloadIdentityOidcFederationIamBindingArrayOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityOidcFederationIamBindingArrayOutput)
}

// IamWorkloadIdentityOidcFederationIamBindingMapInput is an input type that accepts IamWorkloadIdentityOidcFederationIamBindingMap and IamWorkloadIdentityOidcFederationIamBindingMapOutput values.
// You can construct a concrete instance of `IamWorkloadIdentityOidcFederationIamBindingMapInput` via:
//
//	IamWorkloadIdentityOidcFederationIamBindingMap{ "key": IamWorkloadIdentityOidcFederationIamBindingArgs{...} }
type IamWorkloadIdentityOidcFederationIamBindingMapInput interface {
	pulumi.Input

	ToIamWorkloadIdentityOidcFederationIamBindingMapOutput() IamWorkloadIdentityOidcFederationIamBindingMapOutput
	ToIamWorkloadIdentityOidcFederationIamBindingMapOutputWithContext(context.Context) IamWorkloadIdentityOidcFederationIamBindingMapOutput
}

type IamWorkloadIdentityOidcFederationIamBindingMap map[string]IamWorkloadIdentityOidcFederationIamBindingInput

func (IamWorkloadIdentityOidcFederationIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamWorkloadIdentityOidcFederationIamBinding)(nil)).Elem()
}

func (i IamWorkloadIdentityOidcFederationIamBindingMap) ToIamWorkloadIdentityOidcFederationIamBindingMapOutput() IamWorkloadIdentityOidcFederationIamBindingMapOutput {
	return i.ToIamWorkloadIdentityOidcFederationIamBindingMapOutputWithContext(context.Background())
}

func (i IamWorkloadIdentityOidcFederationIamBindingMap) ToIamWorkloadIdentityOidcFederationIamBindingMapOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityOidcFederationIamBindingMapOutput)
}

type IamWorkloadIdentityOidcFederationIamBindingOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityOidcFederationIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkloadIdentityOidcFederationIamBinding)(nil)).Elem()
}

func (o IamWorkloadIdentityOidcFederationIamBindingOutput) ToIamWorkloadIdentityOidcFederationIamBindingOutput() IamWorkloadIdentityOidcFederationIamBindingOutput {
	return o
}

func (o IamWorkloadIdentityOidcFederationIamBindingOutput) ToIamWorkloadIdentityOidcFederationIamBindingOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingOutput {
	return o
}

// ID of the OIDC workload identity federation to apply a binding to.
func (o IamWorkloadIdentityOidcFederationIamBindingOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityOidcFederationIamBinding) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
func (o IamWorkloadIdentityOidcFederationIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityOidcFederationIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
func (o IamWorkloadIdentityOidcFederationIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityOidcFederationIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o IamWorkloadIdentityOidcFederationIamBindingOutput) SleepAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityOidcFederationIamBinding) pulumi.IntPtrOutput { return v.SleepAfter }).(pulumi.IntPtrOutput)
}

type IamWorkloadIdentityOidcFederationIamBindingArrayOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityOidcFederationIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamWorkloadIdentityOidcFederationIamBinding)(nil)).Elem()
}

func (o IamWorkloadIdentityOidcFederationIamBindingArrayOutput) ToIamWorkloadIdentityOidcFederationIamBindingArrayOutput() IamWorkloadIdentityOidcFederationIamBindingArrayOutput {
	return o
}

func (o IamWorkloadIdentityOidcFederationIamBindingArrayOutput) ToIamWorkloadIdentityOidcFederationIamBindingArrayOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingArrayOutput {
	return o
}

func (o IamWorkloadIdentityOidcFederationIamBindingArrayOutput) Index(i pulumi.IntInput) IamWorkloadIdentityOidcFederationIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamWorkloadIdentityOidcFederationIamBinding {
		return vs[0].([]*IamWorkloadIdentityOidcFederationIamBinding)[vs[1].(int)]
	}).(IamWorkloadIdentityOidcFederationIamBindingOutput)
}

type IamWorkloadIdentityOidcFederationIamBindingMapOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityOidcFederationIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamWorkloadIdentityOidcFederationIamBinding)(nil)).Elem()
}

func (o IamWorkloadIdentityOidcFederationIamBindingMapOutput) ToIamWorkloadIdentityOidcFederationIamBindingMapOutput() IamWorkloadIdentityOidcFederationIamBindingMapOutput {
	return o
}

func (o IamWorkloadIdentityOidcFederationIamBindingMapOutput) ToIamWorkloadIdentityOidcFederationIamBindingMapOutputWithContext(ctx context.Context) IamWorkloadIdentityOidcFederationIamBindingMapOutput {
	return o
}

func (o IamWorkloadIdentityOidcFederationIamBindingMapOutput) MapIndex(k pulumi.StringInput) IamWorkloadIdentityOidcFederationIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamWorkloadIdentityOidcFederationIamBinding {
		return vs[0].(map[string]*IamWorkloadIdentityOidcFederationIamBinding)[vs[1].(string)]
	}).(IamWorkloadIdentityOidcFederationIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityOidcFederationIamBindingInput)(nil)).Elem(), &IamWorkloadIdentityOidcFederationIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityOidcFederationIamBindingArrayInput)(nil)).Elem(), IamWorkloadIdentityOidcFederationIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityOidcFederationIamBindingMapInput)(nil)).Elem(), IamWorkloadIdentityOidcFederationIamBindingMap{})
	pulumi.RegisterOutputType(IamWorkloadIdentityOidcFederationIamBindingOutput{})
	pulumi.RegisterOutputType(IamWorkloadIdentityOidcFederationIamBindingArrayOutput{})
	pulumi.RegisterOutputType(IamWorkloadIdentityOidcFederationIamBindingMapOutput{})
}
