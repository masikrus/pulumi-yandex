// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamServiceAccountIamBinding struct {
	pulumi.CustomResourceState

	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role pulumi.StringOutput `pulumi:"role"`
	// The service account ID to apply a binding to.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	SleepAfter       pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewIamServiceAccountIamBinding registers a new resource with the given unique name, arguments, and options.
func NewIamServiceAccountIamBinding(ctx *pulumi.Context,
	name string, args *IamServiceAccountIamBindingArgs, opts ...pulumi.ResourceOption) (*IamServiceAccountIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IamServiceAccountIamBinding
	err := ctx.RegisterResource("yandex:index/iamServiceAccountIamBinding:IamServiceAccountIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamServiceAccountIamBinding gets an existing IamServiceAccountIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamServiceAccountIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamServiceAccountIamBindingState, opts ...pulumi.ResourceOption) (*IamServiceAccountIamBinding, error) {
	var resource IamServiceAccountIamBinding
	err := ctx.ReadResource("yandex:index/iamServiceAccountIamBinding:IamServiceAccountIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamServiceAccountIamBinding resources.
type iamServiceAccountIamBindingState struct {
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role *string `pulumi:"role"`
	// The service account ID to apply a binding to.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	SleepAfter       *int    `pulumi:"sleepAfter"`
}

type IamServiceAccountIamBindingState struct {
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role pulumi.StringPtrInput
	// The service account ID to apply a binding to.
	ServiceAccountId pulumi.StringPtrInput
	SleepAfter       pulumi.IntPtrInput
}

func (IamServiceAccountIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountIamBindingState)(nil)).Elem()
}

type iamServiceAccountIamBindingArgs struct {
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role string `pulumi:"role"`
	// The service account ID to apply a binding to.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	SleepAfter       *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a IamServiceAccountIamBinding resource.
type IamServiceAccountIamBindingArgs struct {
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role pulumi.StringInput
	// The service account ID to apply a binding to.
	ServiceAccountId pulumi.StringInput
	SleepAfter       pulumi.IntPtrInput
}

func (IamServiceAccountIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountIamBindingArgs)(nil)).Elem()
}

type IamServiceAccountIamBindingInput interface {
	pulumi.Input

	ToIamServiceAccountIamBindingOutput() IamServiceAccountIamBindingOutput
	ToIamServiceAccountIamBindingOutputWithContext(ctx context.Context) IamServiceAccountIamBindingOutput
}

func (*IamServiceAccountIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**IamServiceAccountIamBinding)(nil)).Elem()
}

func (i *IamServiceAccountIamBinding) ToIamServiceAccountIamBindingOutput() IamServiceAccountIamBindingOutput {
	return i.ToIamServiceAccountIamBindingOutputWithContext(context.Background())
}

func (i *IamServiceAccountIamBinding) ToIamServiceAccountIamBindingOutputWithContext(ctx context.Context) IamServiceAccountIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountIamBindingOutput)
}

// IamServiceAccountIamBindingArrayInput is an input type that accepts IamServiceAccountIamBindingArray and IamServiceAccountIamBindingArrayOutput values.
// You can construct a concrete instance of `IamServiceAccountIamBindingArrayInput` via:
//
//	IamServiceAccountIamBindingArray{ IamServiceAccountIamBindingArgs{...} }
type IamServiceAccountIamBindingArrayInput interface {
	pulumi.Input

	ToIamServiceAccountIamBindingArrayOutput() IamServiceAccountIamBindingArrayOutput
	ToIamServiceAccountIamBindingArrayOutputWithContext(context.Context) IamServiceAccountIamBindingArrayOutput
}

type IamServiceAccountIamBindingArray []IamServiceAccountIamBindingInput

func (IamServiceAccountIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamServiceAccountIamBinding)(nil)).Elem()
}

func (i IamServiceAccountIamBindingArray) ToIamServiceAccountIamBindingArrayOutput() IamServiceAccountIamBindingArrayOutput {
	return i.ToIamServiceAccountIamBindingArrayOutputWithContext(context.Background())
}

func (i IamServiceAccountIamBindingArray) ToIamServiceAccountIamBindingArrayOutputWithContext(ctx context.Context) IamServiceAccountIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountIamBindingArrayOutput)
}

// IamServiceAccountIamBindingMapInput is an input type that accepts IamServiceAccountIamBindingMap and IamServiceAccountIamBindingMapOutput values.
// You can construct a concrete instance of `IamServiceAccountIamBindingMapInput` via:
//
//	IamServiceAccountIamBindingMap{ "key": IamServiceAccountIamBindingArgs{...} }
type IamServiceAccountIamBindingMapInput interface {
	pulumi.Input

	ToIamServiceAccountIamBindingMapOutput() IamServiceAccountIamBindingMapOutput
	ToIamServiceAccountIamBindingMapOutputWithContext(context.Context) IamServiceAccountIamBindingMapOutput
}

type IamServiceAccountIamBindingMap map[string]IamServiceAccountIamBindingInput

func (IamServiceAccountIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamServiceAccountIamBinding)(nil)).Elem()
}

func (i IamServiceAccountIamBindingMap) ToIamServiceAccountIamBindingMapOutput() IamServiceAccountIamBindingMapOutput {
	return i.ToIamServiceAccountIamBindingMapOutputWithContext(context.Background())
}

func (i IamServiceAccountIamBindingMap) ToIamServiceAccountIamBindingMapOutputWithContext(ctx context.Context) IamServiceAccountIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountIamBindingMapOutput)
}

type IamServiceAccountIamBindingOutput struct{ *pulumi.OutputState }

func (IamServiceAccountIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamServiceAccountIamBinding)(nil)).Elem()
}

func (o IamServiceAccountIamBindingOutput) ToIamServiceAccountIamBindingOutput() IamServiceAccountIamBindingOutput {
	return o
}

func (o IamServiceAccountIamBindingOutput) ToIamServiceAccountIamBindingOutputWithContext(ctx context.Context) IamServiceAccountIamBindingOutput {
	return o
}

// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
func (o IamServiceAccountIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamServiceAccountIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
func (o IamServiceAccountIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// The service account ID to apply a binding to.
func (o IamServiceAccountIamBindingOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccountIamBinding) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o IamServiceAccountIamBindingOutput) SleepAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IamServiceAccountIamBinding) pulumi.IntPtrOutput { return v.SleepAfter }).(pulumi.IntPtrOutput)
}

type IamServiceAccountIamBindingArrayOutput struct{ *pulumi.OutputState }

func (IamServiceAccountIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamServiceAccountIamBinding)(nil)).Elem()
}

func (o IamServiceAccountIamBindingArrayOutput) ToIamServiceAccountIamBindingArrayOutput() IamServiceAccountIamBindingArrayOutput {
	return o
}

func (o IamServiceAccountIamBindingArrayOutput) ToIamServiceAccountIamBindingArrayOutputWithContext(ctx context.Context) IamServiceAccountIamBindingArrayOutput {
	return o
}

func (o IamServiceAccountIamBindingArrayOutput) Index(i pulumi.IntInput) IamServiceAccountIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamServiceAccountIamBinding {
		return vs[0].([]*IamServiceAccountIamBinding)[vs[1].(int)]
	}).(IamServiceAccountIamBindingOutput)
}

type IamServiceAccountIamBindingMapOutput struct{ *pulumi.OutputState }

func (IamServiceAccountIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamServiceAccountIamBinding)(nil)).Elem()
}

func (o IamServiceAccountIamBindingMapOutput) ToIamServiceAccountIamBindingMapOutput() IamServiceAccountIamBindingMapOutput {
	return o
}

func (o IamServiceAccountIamBindingMapOutput) ToIamServiceAccountIamBindingMapOutputWithContext(ctx context.Context) IamServiceAccountIamBindingMapOutput {
	return o
}

func (o IamServiceAccountIamBindingMapOutput) MapIndex(k pulumi.StringInput) IamServiceAccountIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamServiceAccountIamBinding {
		return vs[0].(map[string]*IamServiceAccountIamBinding)[vs[1].(string)]
	}).(IamServiceAccountIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountIamBindingInput)(nil)).Elem(), &IamServiceAccountIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountIamBindingArrayInput)(nil)).Elem(), IamServiceAccountIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountIamBindingMapInput)(nil)).Elem(), IamServiceAccountIamBindingMap{})
	pulumi.RegisterOutputType(IamServiceAccountIamBindingOutput{})
	pulumi.RegisterOutputType(IamServiceAccountIamBindingArrayOutput{})
	pulumi.RegisterOutputType(IamServiceAccountIamBindingMapOutput{})
}
