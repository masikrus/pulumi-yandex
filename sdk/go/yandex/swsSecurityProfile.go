// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwsSecurityProfile struct {
	pulumi.CustomResourceState

	// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
	AdvancedRateLimiterProfileId pulumi.StringPtrOutput `pulumi:"advancedRateLimiterProfileId"`
	// Captcha ID to use with this security profile. Set empty to use default.
	CaptchaId pulumi.StringPtrOutput `pulumi:"captchaId"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringOutput `pulumi:"cloudId"`
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of security rules. > Exactly one rule specifier: `smartProtection` or `ruleCondition` or `waf` should be specified.
	SecurityRules SwsSecurityProfileSecurityRuleArrayOutput `pulumi:"securityRules"`
}

// NewSwsSecurityProfile registers a new resource with the given unique name, arguments, and options.
func NewSwsSecurityProfile(ctx *pulumi.Context,
	name string, args *SwsSecurityProfileArgs, opts ...pulumi.ResourceOption) (*SwsSecurityProfile, error) {
	if args == nil {
		args = &SwsSecurityProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwsSecurityProfile
	err := ctx.RegisterResource("yandex:index/swsSecurityProfile:SwsSecurityProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwsSecurityProfile gets an existing SwsSecurityProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwsSecurityProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwsSecurityProfileState, opts ...pulumi.ResourceOption) (*SwsSecurityProfile, error) {
	var resource SwsSecurityProfile
	err := ctx.ReadResource("yandex:index/swsSecurityProfile:SwsSecurityProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwsSecurityProfile resources.
type swsSecurityProfileState struct {
	// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
	AdvancedRateLimiterProfileId *string `pulumi:"advancedRateLimiterProfileId"`
	// Captcha ID to use with this security profile. Set empty to use default.
	CaptchaId *string `pulumi:"captchaId"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId *string `pulumi:"cloudId"`
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
	DefaultAction *string `pulumi:"defaultAction"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// List of security rules. > Exactly one rule specifier: `smartProtection` or `ruleCondition` or `waf` should be specified.
	SecurityRules []SwsSecurityProfileSecurityRule `pulumi:"securityRules"`
}

type SwsSecurityProfileState struct {
	// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
	AdvancedRateLimiterProfileId pulumi.StringPtrInput
	// Captcha ID to use with this security profile. Set empty to use default.
	CaptchaId pulumi.StringPtrInput
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringPtrInput
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
	DefaultAction pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// List of security rules. > Exactly one rule specifier: `smartProtection` or `ruleCondition` or `waf` should be specified.
	SecurityRules SwsSecurityProfileSecurityRuleArrayInput
}

func (SwsSecurityProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*swsSecurityProfileState)(nil)).Elem()
}

type swsSecurityProfileArgs struct {
	// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
	AdvancedRateLimiterProfileId *string `pulumi:"advancedRateLimiterProfileId"`
	// Captcha ID to use with this security profile. Set empty to use default.
	CaptchaId *string `pulumi:"captchaId"`
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId *string `pulumi:"cloudId"`
	// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
	DefaultAction *string `pulumi:"defaultAction"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// List of security rules. > Exactly one rule specifier: `smartProtection` or `ruleCondition` or `waf` should be specified.
	SecurityRules []SwsSecurityProfileSecurityRule `pulumi:"securityRules"`
}

// The set of arguments for constructing a SwsSecurityProfile resource.
type SwsSecurityProfileArgs struct {
	// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
	AdvancedRateLimiterProfileId pulumi.StringPtrInput
	// Captcha ID to use with this security profile. Set empty to use default.
	CaptchaId pulumi.StringPtrInput
	// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
	CloudId pulumi.StringPtrInput
	// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
	DefaultAction pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// List of security rules. > Exactly one rule specifier: `smartProtection` or `ruleCondition` or `waf` should be specified.
	SecurityRules SwsSecurityProfileSecurityRuleArrayInput
}

func (SwsSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*swsSecurityProfileArgs)(nil)).Elem()
}

type SwsSecurityProfileInput interface {
	pulumi.Input

	ToSwsSecurityProfileOutput() SwsSecurityProfileOutput
	ToSwsSecurityProfileOutputWithContext(ctx context.Context) SwsSecurityProfileOutput
}

func (*SwsSecurityProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**SwsSecurityProfile)(nil)).Elem()
}

func (i *SwsSecurityProfile) ToSwsSecurityProfileOutput() SwsSecurityProfileOutput {
	return i.ToSwsSecurityProfileOutputWithContext(context.Background())
}

func (i *SwsSecurityProfile) ToSwsSecurityProfileOutputWithContext(ctx context.Context) SwsSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwsSecurityProfileOutput)
}

// SwsSecurityProfileArrayInput is an input type that accepts SwsSecurityProfileArray and SwsSecurityProfileArrayOutput values.
// You can construct a concrete instance of `SwsSecurityProfileArrayInput` via:
//
//	SwsSecurityProfileArray{ SwsSecurityProfileArgs{...} }
type SwsSecurityProfileArrayInput interface {
	pulumi.Input

	ToSwsSecurityProfileArrayOutput() SwsSecurityProfileArrayOutput
	ToSwsSecurityProfileArrayOutputWithContext(context.Context) SwsSecurityProfileArrayOutput
}

type SwsSecurityProfileArray []SwsSecurityProfileInput

func (SwsSecurityProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwsSecurityProfile)(nil)).Elem()
}

func (i SwsSecurityProfileArray) ToSwsSecurityProfileArrayOutput() SwsSecurityProfileArrayOutput {
	return i.ToSwsSecurityProfileArrayOutputWithContext(context.Background())
}

func (i SwsSecurityProfileArray) ToSwsSecurityProfileArrayOutputWithContext(ctx context.Context) SwsSecurityProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwsSecurityProfileArrayOutput)
}

// SwsSecurityProfileMapInput is an input type that accepts SwsSecurityProfileMap and SwsSecurityProfileMapOutput values.
// You can construct a concrete instance of `SwsSecurityProfileMapInput` via:
//
//	SwsSecurityProfileMap{ "key": SwsSecurityProfileArgs{...} }
type SwsSecurityProfileMapInput interface {
	pulumi.Input

	ToSwsSecurityProfileMapOutput() SwsSecurityProfileMapOutput
	ToSwsSecurityProfileMapOutputWithContext(context.Context) SwsSecurityProfileMapOutput
}

type SwsSecurityProfileMap map[string]SwsSecurityProfileInput

func (SwsSecurityProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwsSecurityProfile)(nil)).Elem()
}

func (i SwsSecurityProfileMap) ToSwsSecurityProfileMapOutput() SwsSecurityProfileMapOutput {
	return i.ToSwsSecurityProfileMapOutputWithContext(context.Background())
}

func (i SwsSecurityProfileMap) ToSwsSecurityProfileMapOutputWithContext(ctx context.Context) SwsSecurityProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwsSecurityProfileMapOutput)
}

type SwsSecurityProfileOutput struct{ *pulumi.OutputState }

func (SwsSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwsSecurityProfile)(nil)).Elem()
}

func (o SwsSecurityProfileOutput) ToSwsSecurityProfileOutput() SwsSecurityProfileOutput {
	return o
}

func (o SwsSecurityProfileOutput) ToSwsSecurityProfileOutputWithContext(ctx context.Context) SwsSecurityProfileOutput {
	return o
}

// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
func (o SwsSecurityProfileOutput) AdvancedRateLimiterProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringPtrOutput { return v.AdvancedRateLimiterProfileId }).(pulumi.StringPtrOutput)
}

// Captcha ID to use with this security profile. Set empty to use default.
func (o SwsSecurityProfileOutput) CaptchaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringPtrOutput { return v.CaptchaId }).(pulumi.StringPtrOutput)
}

// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
func (o SwsSecurityProfileOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringOutput { return v.CloudId }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o SwsSecurityProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
func (o SwsSecurityProfileOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The resource description.
func (o SwsSecurityProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o SwsSecurityProfileOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o SwsSecurityProfileOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o SwsSecurityProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of security rules. > Exactly one rule specifier: `smartProtection` or `ruleCondition` or `waf` should be specified.
func (o SwsSecurityProfileOutput) SecurityRules() SwsSecurityProfileSecurityRuleArrayOutput {
	return o.ApplyT(func(v *SwsSecurityProfile) SwsSecurityProfileSecurityRuleArrayOutput { return v.SecurityRules }).(SwsSecurityProfileSecurityRuleArrayOutput)
}

type SwsSecurityProfileArrayOutput struct{ *pulumi.OutputState }

func (SwsSecurityProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwsSecurityProfile)(nil)).Elem()
}

func (o SwsSecurityProfileArrayOutput) ToSwsSecurityProfileArrayOutput() SwsSecurityProfileArrayOutput {
	return o
}

func (o SwsSecurityProfileArrayOutput) ToSwsSecurityProfileArrayOutputWithContext(ctx context.Context) SwsSecurityProfileArrayOutput {
	return o
}

func (o SwsSecurityProfileArrayOutput) Index(i pulumi.IntInput) SwsSecurityProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwsSecurityProfile {
		return vs[0].([]*SwsSecurityProfile)[vs[1].(int)]
	}).(SwsSecurityProfileOutput)
}

type SwsSecurityProfileMapOutput struct{ *pulumi.OutputState }

func (SwsSecurityProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwsSecurityProfile)(nil)).Elem()
}

func (o SwsSecurityProfileMapOutput) ToSwsSecurityProfileMapOutput() SwsSecurityProfileMapOutput {
	return o
}

func (o SwsSecurityProfileMapOutput) ToSwsSecurityProfileMapOutputWithContext(ctx context.Context) SwsSecurityProfileMapOutput {
	return o
}

func (o SwsSecurityProfileMapOutput) MapIndex(k pulumi.StringInput) SwsSecurityProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwsSecurityProfile {
		return vs[0].(map[string]*SwsSecurityProfile)[vs[1].(string)]
	}).(SwsSecurityProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwsSecurityProfileInput)(nil)).Elem(), &SwsSecurityProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwsSecurityProfileArrayInput)(nil)).Elem(), SwsSecurityProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwsSecurityProfileMapInput)(nil)).Elem(), SwsSecurityProfileMap{})
	pulumi.RegisterOutputType(SwsSecurityProfileOutput{})
	pulumi.RegisterOutputType(SwsSecurityProfileArrayOutput{})
	pulumi.RegisterOutputType(SwsSecurityProfileMapOutput{})
}
