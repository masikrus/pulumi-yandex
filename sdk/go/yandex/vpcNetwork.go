// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcNetwork struct {
	pulumi.CustomResourceState

	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// ID of default Security Group of this network.
	DefaultSecurityGroupId pulumi.StringOutput `pulumi:"defaultSecurityGroupId"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
}

// NewVpcNetwork registers a new resource with the given unique name, arguments, and options.
func NewVpcNetwork(ctx *pulumi.Context,
	name string, args *VpcNetworkArgs, opts ...pulumi.ResourceOption) (*VpcNetwork, error) {
	if args == nil {
		args = &VpcNetworkArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcNetwork
	err := ctx.RegisterResource("yandex:index/vpcNetwork:VpcNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcNetwork gets an existing VpcNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcNetworkState, opts ...pulumi.ResourceOption) (*VpcNetwork, error) {
	var resource VpcNetwork
	err := ctx.ReadResource("yandex:index/vpcNetwork:VpcNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcNetwork resources.
type vpcNetworkState struct {
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// ID of default Security Group of this network.
	DefaultSecurityGroupId *string `pulumi:"defaultSecurityGroupId"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds []string `pulumi:"subnetIds"`
}

type VpcNetworkState struct {
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// ID of default Security Group of this network.
	DefaultSecurityGroupId pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// The list of VPC subnets identifiers which resource is attached.
	SubnetIds pulumi.StringArrayInput
}

func (VpcNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcNetworkState)(nil)).Elem()
}

type vpcNetworkArgs struct {
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a VpcNetwork resource.
type VpcNetworkArgs struct {
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
}

func (VpcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcNetworkArgs)(nil)).Elem()
}

type VpcNetworkInput interface {
	pulumi.Input

	ToVpcNetworkOutput() VpcNetworkOutput
	ToVpcNetworkOutputWithContext(ctx context.Context) VpcNetworkOutput
}

func (*VpcNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcNetwork)(nil)).Elem()
}

func (i *VpcNetwork) ToVpcNetworkOutput() VpcNetworkOutput {
	return i.ToVpcNetworkOutputWithContext(context.Background())
}

func (i *VpcNetwork) ToVpcNetworkOutputWithContext(ctx context.Context) VpcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcNetworkOutput)
}

// VpcNetworkArrayInput is an input type that accepts VpcNetworkArray and VpcNetworkArrayOutput values.
// You can construct a concrete instance of `VpcNetworkArrayInput` via:
//
//	VpcNetworkArray{ VpcNetworkArgs{...} }
type VpcNetworkArrayInput interface {
	pulumi.Input

	ToVpcNetworkArrayOutput() VpcNetworkArrayOutput
	ToVpcNetworkArrayOutputWithContext(context.Context) VpcNetworkArrayOutput
}

type VpcNetworkArray []VpcNetworkInput

func (VpcNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcNetwork)(nil)).Elem()
}

func (i VpcNetworkArray) ToVpcNetworkArrayOutput() VpcNetworkArrayOutput {
	return i.ToVpcNetworkArrayOutputWithContext(context.Background())
}

func (i VpcNetworkArray) ToVpcNetworkArrayOutputWithContext(ctx context.Context) VpcNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcNetworkArrayOutput)
}

// VpcNetworkMapInput is an input type that accepts VpcNetworkMap and VpcNetworkMapOutput values.
// You can construct a concrete instance of `VpcNetworkMapInput` via:
//
//	VpcNetworkMap{ "key": VpcNetworkArgs{...} }
type VpcNetworkMapInput interface {
	pulumi.Input

	ToVpcNetworkMapOutput() VpcNetworkMapOutput
	ToVpcNetworkMapOutputWithContext(context.Context) VpcNetworkMapOutput
}

type VpcNetworkMap map[string]VpcNetworkInput

func (VpcNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcNetwork)(nil)).Elem()
}

func (i VpcNetworkMap) ToVpcNetworkMapOutput() VpcNetworkMapOutput {
	return i.ToVpcNetworkMapOutputWithContext(context.Background())
}

func (i VpcNetworkMap) ToVpcNetworkMapOutputWithContext(ctx context.Context) VpcNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcNetworkMapOutput)
}

type VpcNetworkOutput struct{ *pulumi.OutputState }

func (VpcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcNetwork)(nil)).Elem()
}

func (o VpcNetworkOutput) ToVpcNetworkOutput() VpcNetworkOutput {
	return o
}

func (o VpcNetworkOutput) ToVpcNetworkOutputWithContext(ctx context.Context) VpcNetworkOutput {
	return o
}

// The creation timestamp of the resource.
func (o VpcNetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// ID of default Security Group of this network.
func (o VpcNetworkOutput) DefaultSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringOutput { return v.DefaultSecurityGroupId }).(pulumi.StringOutput)
}

// The resource description.
func (o VpcNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o VpcNetworkOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o VpcNetworkOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o VpcNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of VPC subnets identifiers which resource is attached.
func (o VpcNetworkOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcNetwork) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type VpcNetworkArrayOutput struct{ *pulumi.OutputState }

func (VpcNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcNetwork)(nil)).Elem()
}

func (o VpcNetworkArrayOutput) ToVpcNetworkArrayOutput() VpcNetworkArrayOutput {
	return o
}

func (o VpcNetworkArrayOutput) ToVpcNetworkArrayOutputWithContext(ctx context.Context) VpcNetworkArrayOutput {
	return o
}

func (o VpcNetworkArrayOutput) Index(i pulumi.IntInput) VpcNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcNetwork {
		return vs[0].([]*VpcNetwork)[vs[1].(int)]
	}).(VpcNetworkOutput)
}

type VpcNetworkMapOutput struct{ *pulumi.OutputState }

func (VpcNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcNetwork)(nil)).Elem()
}

func (o VpcNetworkMapOutput) ToVpcNetworkMapOutput() VpcNetworkMapOutput {
	return o
}

func (o VpcNetworkMapOutput) ToVpcNetworkMapOutputWithContext(ctx context.Context) VpcNetworkMapOutput {
	return o
}

func (o VpcNetworkMapOutput) MapIndex(k pulumi.StringInput) VpcNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcNetwork {
		return vs[0].(map[string]*VpcNetwork)[vs[1].(string)]
	}).(VpcNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcNetworkInput)(nil)).Elem(), &VpcNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcNetworkArrayInput)(nil)).Elem(), VpcNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcNetworkMapInput)(nil)).Elem(), VpcNetworkMap{})
	pulumi.RegisterOutputType(VpcNetworkOutput{})
	pulumi.RegisterOutputType(VpcNetworkArrayOutput{})
	pulumi.RegisterOutputType(VpcNetworkMapOutput{})
}
