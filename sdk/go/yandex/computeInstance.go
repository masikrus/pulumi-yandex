// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInstance struct {
	pulumi.CustomResourceState

	AllowRecreate          pulumi.BoolPtrOutput `pulumi:"allowRecreate"`
	AllowStoppingForUpdate pulumi.BoolPtrOutput `pulumi:"allowStoppingForUpdate"`
	// The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
	BootDisk ComputeInstanceBootDiskOutput `pulumi:"bootDisk"`
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// List of filesystems that are attached to the instance.
	Filesystems ComputeInstanceFilesystemArrayOutput `pulumi:"filesystems"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// The fully qualified DNS name of this instance.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId        pulumi.StringOutput                          `pulumi:"gpuClusterId"`
	HardwareGenerations ComputeInstanceHardwareGenerationArrayOutput `pulumi:"hardwareGenerations"`
	// Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
	// within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
	// `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// List of local disks that are attached to the instance. > Local disks are not available for all users by default.
	LocalDisks ComputeInstanceLocalDiskArrayOutput `pulumi:"localDisks"`
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod pulumi.StringOutput `pulumi:"maintenanceGracePeriod"`
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy pulumi.StringOutput `pulumi:"maintenancePolicy"`
	// Metadata key/value pairs to make available from within the instance.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// Options allow user to configure access to instance's metadata.
	MetadataOptions ComputeInstanceMetadataOptionsOutput `pulumi:"metadataOptions"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
	NetworkAccelerationType pulumi.StringPtrOutput `pulumi:"networkAccelerationType"`
	// Networks to attach to the instance. This can be specified multiple times.
	NetworkInterfaces ComputeInstanceNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The placement policy configuration.
	PlacementPolicy ComputeInstancePlacementPolicyOutput `pulumi:"placementPolicy"`
	// The type of virtual machine to create.
	PlatformId pulumi.StringPtrOutput `pulumi:"platformId"`
	// Compute resources that are allocated for the instance.
	Resources ComputeInstanceResourcesOutput `pulumi:"resources"`
	// Scheduling policy configuration.
	SchedulingPolicy ComputeInstanceSchedulingPolicyOutput `pulumi:"schedulingPolicy"`
	// A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
	// must be set to `true` in order to update this structure.
	SecondaryDisks ComputeInstanceSecondaryDiskArrayOutput `pulumi:"secondaryDisks"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	// The status of this instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
	// provided, the default provider zone will be used.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeInstance registers a new resource with the given unique name, arguments, and options.
func NewComputeInstance(ctx *pulumi.Context,
	name string, args *ComputeInstanceArgs, opts ...pulumi.ResourceOption) (*ComputeInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BootDisk == nil {
		return nil, errors.New("invalid value for required argument 'BootDisk'")
	}
	if args.NetworkInterfaces == nil {
		return nil, errors.New("invalid value for required argument 'NetworkInterfaces'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComputeInstance
	err := ctx.RegisterResource("yandex:index/computeInstance:ComputeInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstance gets an existing ComputeInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceState, opts ...pulumi.ResourceOption) (*ComputeInstance, error) {
	var resource ComputeInstance
	err := ctx.ReadResource("yandex:index/computeInstance:ComputeInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstance resources.
type computeInstanceState struct {
	AllowRecreate          *bool `pulumi:"allowRecreate"`
	AllowStoppingForUpdate *bool `pulumi:"allowStoppingForUpdate"`
	// The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
	BootDisk *ComputeInstanceBootDisk `pulumi:"bootDisk"`
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// The resource description.
	Description *string `pulumi:"description"`
	// List of filesystems that are attached to the instance.
	Filesystems []ComputeInstanceFilesystem `pulumi:"filesystems"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// The fully qualified DNS name of this instance.
	Fqdn *string `pulumi:"fqdn"`
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId        *string                             `pulumi:"gpuClusterId"`
	HardwareGenerations []ComputeInstanceHardwareGeneration `pulumi:"hardwareGenerations"`
	// Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
	// within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
	// `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	Hostname *string `pulumi:"hostname"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// List of local disks that are attached to the instance. > Local disks are not available for all users by default.
	LocalDisks []ComputeInstanceLocalDisk `pulumi:"localDisks"`
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod *string `pulumi:"maintenanceGracePeriod"`
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy *string `pulumi:"maintenancePolicy"`
	// Metadata key/value pairs to make available from within the instance.
	Metadata map[string]string `pulumi:"metadata"`
	// Options allow user to configure access to instance's metadata.
	MetadataOptions *ComputeInstanceMetadataOptions `pulumi:"metadataOptions"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
	NetworkAccelerationType *string `pulumi:"networkAccelerationType"`
	// Networks to attach to the instance. This can be specified multiple times.
	NetworkInterfaces []ComputeInstanceNetworkInterface `pulumi:"networkInterfaces"`
	// The placement policy configuration.
	PlacementPolicy *ComputeInstancePlacementPolicy `pulumi:"placementPolicy"`
	// The type of virtual machine to create.
	PlatformId *string `pulumi:"platformId"`
	// Compute resources that are allocated for the instance.
	Resources *ComputeInstanceResources `pulumi:"resources"`
	// Scheduling policy configuration.
	SchedulingPolicy *ComputeInstanceSchedulingPolicy `pulumi:"schedulingPolicy"`
	// A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
	// must be set to `true` in order to update this structure.
	SecondaryDisks []ComputeInstanceSecondaryDisk `pulumi:"secondaryDisks"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// The status of this instance.
	Status *string `pulumi:"status"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
	// provided, the default provider zone will be used.
	Zone *string `pulumi:"zone"`
}

type ComputeInstanceState struct {
	AllowRecreate          pulumi.BoolPtrInput
	AllowStoppingForUpdate pulumi.BoolPtrInput
	// The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
	BootDisk ComputeInstanceBootDiskPtrInput
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// List of filesystems that are attached to the instance.
	Filesystems ComputeInstanceFilesystemArrayInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// The fully qualified DNS name of this instance.
	Fqdn pulumi.StringPtrInput
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId        pulumi.StringPtrInput
	HardwareGenerations ComputeInstanceHardwareGenerationArrayInput
	// Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
	// within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
	// `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	Hostname pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// List of local disks that are attached to the instance. > Local disks are not available for all users by default.
	LocalDisks ComputeInstanceLocalDiskArrayInput
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod pulumi.StringPtrInput
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy pulumi.StringPtrInput
	// Metadata key/value pairs to make available from within the instance.
	Metadata pulumi.StringMapInput
	// Options allow user to configure access to instance's metadata.
	MetadataOptions ComputeInstanceMetadataOptionsPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
	NetworkAccelerationType pulumi.StringPtrInput
	// Networks to attach to the instance. This can be specified multiple times.
	NetworkInterfaces ComputeInstanceNetworkInterfaceArrayInput
	// The placement policy configuration.
	PlacementPolicy ComputeInstancePlacementPolicyPtrInput
	// The type of virtual machine to create.
	PlatformId pulumi.StringPtrInput
	// Compute resources that are allocated for the instance.
	Resources ComputeInstanceResourcesPtrInput
	// Scheduling policy configuration.
	SchedulingPolicy ComputeInstanceSchedulingPolicyPtrInput
	// A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
	// must be set to `true` in order to update this structure.
	SecondaryDisks ComputeInstanceSecondaryDiskArrayInput
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringPtrInput
	// The status of this instance.
	Status pulumi.StringPtrInput
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
	// provided, the default provider zone will be used.
	Zone pulumi.StringPtrInput
}

func (ComputeInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceState)(nil)).Elem()
}

type computeInstanceArgs struct {
	AllowRecreate          *bool `pulumi:"allowRecreate"`
	AllowStoppingForUpdate *bool `pulumi:"allowStoppingForUpdate"`
	// The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
	BootDisk ComputeInstanceBootDisk `pulumi:"bootDisk"`
	// The resource description.
	Description *string `pulumi:"description"`
	// List of filesystems that are attached to the instance.
	Filesystems []ComputeInstanceFilesystem `pulumi:"filesystems"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId *string `pulumi:"gpuClusterId"`
	// Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
	// within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
	// `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	Hostname *string `pulumi:"hostname"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// List of local disks that are attached to the instance. > Local disks are not available for all users by default.
	LocalDisks []ComputeInstanceLocalDisk `pulumi:"localDisks"`
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod *string `pulumi:"maintenanceGracePeriod"`
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy *string `pulumi:"maintenancePolicy"`
	// Metadata key/value pairs to make available from within the instance.
	Metadata map[string]string `pulumi:"metadata"`
	// Options allow user to configure access to instance's metadata.
	MetadataOptions *ComputeInstanceMetadataOptions `pulumi:"metadataOptions"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
	NetworkAccelerationType *string `pulumi:"networkAccelerationType"`
	// Networks to attach to the instance. This can be specified multiple times.
	NetworkInterfaces []ComputeInstanceNetworkInterface `pulumi:"networkInterfaces"`
	// The placement policy configuration.
	PlacementPolicy *ComputeInstancePlacementPolicy `pulumi:"placementPolicy"`
	// The type of virtual machine to create.
	PlatformId *string `pulumi:"platformId"`
	// Compute resources that are allocated for the instance.
	Resources ComputeInstanceResources `pulumi:"resources"`
	// Scheduling policy configuration.
	SchedulingPolicy *ComputeInstanceSchedulingPolicy `pulumi:"schedulingPolicy"`
	// A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
	// must be set to `true` in order to update this structure.
	SecondaryDisks []ComputeInstanceSecondaryDisk `pulumi:"secondaryDisks"`
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
	// provided, the default provider zone will be used.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeInstance resource.
type ComputeInstanceArgs struct {
	AllowRecreate          pulumi.BoolPtrInput
	AllowStoppingForUpdate pulumi.BoolPtrInput
	// The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
	BootDisk ComputeInstanceBootDiskInput
	// The resource description.
	Description pulumi.StringPtrInput
	// List of filesystems that are attached to the instance.
	Filesystems ComputeInstanceFilesystemArrayInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// ID of the GPU cluster to attach this instance to.
	GpuClusterId pulumi.StringPtrInput
	// Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
	// within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
	// `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	Hostname pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// List of local disks that are attached to the instance. > Local disks are not available for all users by default.
	LocalDisks ComputeInstanceLocalDiskArrayInput
	// Time between notification via metadata service and maintenance. E.g., `60s`.
	MaintenanceGracePeriod pulumi.StringPtrInput
	// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
	MaintenancePolicy pulumi.StringPtrInput
	// Metadata key/value pairs to make available from within the instance.
	Metadata pulumi.StringMapInput
	// Options allow user to configure access to instance's metadata.
	MetadataOptions ComputeInstanceMetadataOptionsPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
	NetworkAccelerationType pulumi.StringPtrInput
	// Networks to attach to the instance. This can be specified multiple times.
	NetworkInterfaces ComputeInstanceNetworkInterfaceArrayInput
	// The placement policy configuration.
	PlacementPolicy ComputeInstancePlacementPolicyPtrInput
	// The type of virtual machine to create.
	PlatformId pulumi.StringPtrInput
	// Compute resources that are allocated for the instance.
	Resources ComputeInstanceResourcesInput
	// Scheduling policy configuration.
	SchedulingPolicy ComputeInstanceSchedulingPolicyPtrInput
	// A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
	// must be set to `true` in order to update this structure.
	SecondaryDisks ComputeInstanceSecondaryDiskArrayInput
	// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
	ServiceAccountId pulumi.StringPtrInput
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
	// provided, the default provider zone will be used.
	Zone pulumi.StringPtrInput
}

func (ComputeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceArgs)(nil)).Elem()
}

type ComputeInstanceInput interface {
	pulumi.Input

	ToComputeInstanceOutput() ComputeInstanceOutput
	ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput
}

func (*ComputeInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstance)(nil)).Elem()
}

func (i *ComputeInstance) ToComputeInstanceOutput() ComputeInstanceOutput {
	return i.ToComputeInstanceOutputWithContext(context.Background())
}

func (i *ComputeInstance) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceOutput)
}

// ComputeInstanceArrayInput is an input type that accepts ComputeInstanceArray and ComputeInstanceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceArrayInput` via:
//
//	ComputeInstanceArray{ ComputeInstanceArgs{...} }
type ComputeInstanceArrayInput interface {
	pulumi.Input

	ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput
	ToComputeInstanceArrayOutputWithContext(context.Context) ComputeInstanceArrayOutput
}

type ComputeInstanceArray []ComputeInstanceInput

func (ComputeInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceArray) ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput {
	return i.ToComputeInstanceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceArray) ToComputeInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceArrayOutput)
}

// ComputeInstanceMapInput is an input type that accepts ComputeInstanceMap and ComputeInstanceMapOutput values.
// You can construct a concrete instance of `ComputeInstanceMapInput` via:
//
//	ComputeInstanceMap{ "key": ComputeInstanceArgs{...} }
type ComputeInstanceMapInput interface {
	pulumi.Input

	ToComputeInstanceMapOutput() ComputeInstanceMapOutput
	ToComputeInstanceMapOutputWithContext(context.Context) ComputeInstanceMapOutput
}

type ComputeInstanceMap map[string]ComputeInstanceInput

func (ComputeInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceMap) ToComputeInstanceMapOutput() ComputeInstanceMapOutput {
	return i.ToComputeInstanceMapOutputWithContext(context.Background())
}

func (i ComputeInstanceMap) ToComputeInstanceMapOutputWithContext(ctx context.Context) ComputeInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceMapOutput)
}

type ComputeInstanceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceOutput) ToComputeInstanceOutput() ComputeInstanceOutput {
	return o
}

func (o ComputeInstanceOutput) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return o
}

func (o ComputeInstanceOutput) AllowRecreate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.BoolPtrOutput { return v.AllowRecreate }).(pulumi.BoolPtrOutput)
}

func (o ComputeInstanceOutput) AllowStoppingForUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.BoolPtrOutput { return v.AllowStoppingForUpdate }).(pulumi.BoolPtrOutput)
}

// The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
func (o ComputeInstanceOutput) BootDisk() ComputeInstanceBootDiskOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceBootDiskOutput { return v.BootDisk }).(ComputeInstanceBootDiskOutput)
}

// The creation timestamp of the resource.
func (o ComputeInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o ComputeInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// List of filesystems that are attached to the instance.
func (o ComputeInstanceOutput) Filesystems() ComputeInstanceFilesystemArrayOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceFilesystemArrayOutput { return v.Filesystems }).(ComputeInstanceFilesystemArrayOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o ComputeInstanceOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// The fully qualified DNS name of this instance.
func (o ComputeInstanceOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// ID of the GPU cluster to attach this instance to.
func (o ComputeInstanceOutput) GpuClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.GpuClusterId }).(pulumi.StringOutput)
}

func (o ComputeInstanceOutput) HardwareGenerations() ComputeInstanceHardwareGenerationArrayOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceHardwareGenerationArrayOutput { return v.HardwareGenerations }).(ComputeInstanceHardwareGenerationArrayOutput)
}

// Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
// within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
// `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
func (o ComputeInstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o ComputeInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// List of local disks that are attached to the instance. > Local disks are not available for all users by default.
func (o ComputeInstanceOutput) LocalDisks() ComputeInstanceLocalDiskArrayOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceLocalDiskArrayOutput { return v.LocalDisks }).(ComputeInstanceLocalDiskArrayOutput)
}

// Time between notification via metadata service and maintenance. E.g., `60s`.
func (o ComputeInstanceOutput) MaintenanceGracePeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.MaintenanceGracePeriod }).(pulumi.StringOutput)
}

// Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
func (o ComputeInstanceOutput) MaintenancePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.MaintenancePolicy }).(pulumi.StringOutput)
}

// Metadata key/value pairs to make available from within the instance.
func (o ComputeInstanceOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// Options allow user to configure access to instance's metadata.
func (o ComputeInstanceOutput) MetadataOptions() ComputeInstanceMetadataOptionsOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceMetadataOptionsOutput { return v.MetadataOptions }).(ComputeInstanceMetadataOptionsOutput)
}

// The resource name.
func (o ComputeInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
func (o ComputeInstanceOutput) NetworkAccelerationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringPtrOutput { return v.NetworkAccelerationType }).(pulumi.StringPtrOutput)
}

// Networks to attach to the instance. This can be specified multiple times.
func (o ComputeInstanceOutput) NetworkInterfaces() ComputeInstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(ComputeInstanceNetworkInterfaceArrayOutput)
}

// The placement policy configuration.
func (o ComputeInstanceOutput) PlacementPolicy() ComputeInstancePlacementPolicyOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstancePlacementPolicyOutput { return v.PlacementPolicy }).(ComputeInstancePlacementPolicyOutput)
}

// The type of virtual machine to create.
func (o ComputeInstanceOutput) PlatformId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringPtrOutput { return v.PlatformId }).(pulumi.StringPtrOutput)
}

// Compute resources that are allocated for the instance.
func (o ComputeInstanceOutput) Resources() ComputeInstanceResourcesOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceResourcesOutput { return v.Resources }).(ComputeInstanceResourcesOutput)
}

// Scheduling policy configuration.
func (o ComputeInstanceOutput) SchedulingPolicy() ComputeInstanceSchedulingPolicyOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceSchedulingPolicyOutput { return v.SchedulingPolicy }).(ComputeInstanceSchedulingPolicyOutput)
}

// A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
// must be set to `true` in order to update this structure.
func (o ComputeInstanceOutput) SecondaryDisks() ComputeInstanceSecondaryDiskArrayOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceSecondaryDiskArrayOutput { return v.SecondaryDisks }).(ComputeInstanceSecondaryDiskArrayOutput)
}

// [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
func (o ComputeInstanceOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// The status of this instance.
func (o ComputeInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
// provided, the default provider zone will be used.
func (o ComputeInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type ComputeInstanceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceArrayOutput) ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput {
	return o
}

func (o ComputeInstanceArrayOutput) ToComputeInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceArrayOutput {
	return o
}

func (o ComputeInstanceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeInstance {
		return vs[0].([]*ComputeInstance)[vs[1].(int)]
	}).(ComputeInstanceOutput)
}

type ComputeInstanceMapOutput struct{ *pulumi.OutputState }

func (ComputeInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceMapOutput) ToComputeInstanceMapOutput() ComputeInstanceMapOutput {
	return o
}

func (o ComputeInstanceMapOutput) ToComputeInstanceMapOutputWithContext(ctx context.Context) ComputeInstanceMapOutput {
	return o
}

func (o ComputeInstanceMapOutput) MapIndex(k pulumi.StringInput) ComputeInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeInstance {
		return vs[0].(map[string]*ComputeInstance)[vs[1].(string)]
	}).(ComputeInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceInput)(nil)).Elem(), &ComputeInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceArrayInput)(nil)).Elem(), ComputeInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceMapInput)(nil)).Elem(), ComputeInstanceMap{})
	pulumi.RegisterOutputType(ComputeInstanceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceMapOutput{})
}
