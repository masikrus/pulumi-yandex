// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerlessEventrouterBus struct {
	pulumi.CustomResourceState

	// ID of the cloud that the bus resides in
	CloudId pulumi.StringOutput `pulumi:"cloudId"`
	// Creation timestamp
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// Description of the bus
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ID of the folder that the bus belongs to
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Bus labels
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the bus
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewServerlessEventrouterBus registers a new resource with the given unique name, arguments, and options.
func NewServerlessEventrouterBus(ctx *pulumi.Context,
	name string, args *ServerlessEventrouterBusArgs, opts ...pulumi.ResourceOption) (*ServerlessEventrouterBus, error) {
	if args == nil {
		args = &ServerlessEventrouterBusArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerlessEventrouterBus
	err := ctx.RegisterResource("yandex:index/serverlessEventrouterBus:ServerlessEventrouterBus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessEventrouterBus gets an existing ServerlessEventrouterBus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessEventrouterBus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessEventrouterBusState, opts ...pulumi.ResourceOption) (*ServerlessEventrouterBus, error) {
	var resource ServerlessEventrouterBus
	err := ctx.ReadResource("yandex:index/serverlessEventrouterBus:ServerlessEventrouterBus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessEventrouterBus resources.
type serverlessEventrouterBusState struct {
	// ID of the cloud that the bus resides in
	CloudId *string `pulumi:"cloudId"`
	// Creation timestamp
	CreatedAt *string `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the bus
	Description *string `pulumi:"description"`
	// ID of the folder that the bus belongs to
	FolderId *string `pulumi:"folderId"`
	// Bus labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the bus
	Name *string `pulumi:"name"`
}

type ServerlessEventrouterBusState struct {
	// ID of the cloud that the bus resides in
	CloudId pulumi.StringPtrInput
	// Creation timestamp
	CreatedAt pulumi.StringPtrInput
	// Deletion protection
	DeletionProtection pulumi.BoolPtrInput
	// Description of the bus
	Description pulumi.StringPtrInput
	// ID of the folder that the bus belongs to
	FolderId pulumi.StringPtrInput
	// Bus labels
	Labels pulumi.StringMapInput
	// Name of the bus
	Name pulumi.StringPtrInput
}

func (ServerlessEventrouterBusState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEventrouterBusState)(nil)).Elem()
}

type serverlessEventrouterBusArgs struct {
	// Deletion protection
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the bus
	Description *string `pulumi:"description"`
	// ID of the folder that the bus belongs to
	FolderId *string `pulumi:"folderId"`
	// Bus labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the bus
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ServerlessEventrouterBus resource.
type ServerlessEventrouterBusArgs struct {
	// Deletion protection
	DeletionProtection pulumi.BoolPtrInput
	// Description of the bus
	Description pulumi.StringPtrInput
	// ID of the folder that the bus belongs to
	FolderId pulumi.StringPtrInput
	// Bus labels
	Labels pulumi.StringMapInput
	// Name of the bus
	Name pulumi.StringPtrInput
}

func (ServerlessEventrouterBusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEventrouterBusArgs)(nil)).Elem()
}

type ServerlessEventrouterBusInput interface {
	pulumi.Input

	ToServerlessEventrouterBusOutput() ServerlessEventrouterBusOutput
	ToServerlessEventrouterBusOutputWithContext(ctx context.Context) ServerlessEventrouterBusOutput
}

func (*ServerlessEventrouterBus) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEventrouterBus)(nil)).Elem()
}

func (i *ServerlessEventrouterBus) ToServerlessEventrouterBusOutput() ServerlessEventrouterBusOutput {
	return i.ToServerlessEventrouterBusOutputWithContext(context.Background())
}

func (i *ServerlessEventrouterBus) ToServerlessEventrouterBusOutputWithContext(ctx context.Context) ServerlessEventrouterBusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterBusOutput)
}

// ServerlessEventrouterBusArrayInput is an input type that accepts ServerlessEventrouterBusArray and ServerlessEventrouterBusArrayOutput values.
// You can construct a concrete instance of `ServerlessEventrouterBusArrayInput` via:
//
//	ServerlessEventrouterBusArray{ ServerlessEventrouterBusArgs{...} }
type ServerlessEventrouterBusArrayInput interface {
	pulumi.Input

	ToServerlessEventrouterBusArrayOutput() ServerlessEventrouterBusArrayOutput
	ToServerlessEventrouterBusArrayOutputWithContext(context.Context) ServerlessEventrouterBusArrayOutput
}

type ServerlessEventrouterBusArray []ServerlessEventrouterBusInput

func (ServerlessEventrouterBusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessEventrouterBus)(nil)).Elem()
}

func (i ServerlessEventrouterBusArray) ToServerlessEventrouterBusArrayOutput() ServerlessEventrouterBusArrayOutput {
	return i.ToServerlessEventrouterBusArrayOutputWithContext(context.Background())
}

func (i ServerlessEventrouterBusArray) ToServerlessEventrouterBusArrayOutputWithContext(ctx context.Context) ServerlessEventrouterBusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterBusArrayOutput)
}

// ServerlessEventrouterBusMapInput is an input type that accepts ServerlessEventrouterBusMap and ServerlessEventrouterBusMapOutput values.
// You can construct a concrete instance of `ServerlessEventrouterBusMapInput` via:
//
//	ServerlessEventrouterBusMap{ "key": ServerlessEventrouterBusArgs{...} }
type ServerlessEventrouterBusMapInput interface {
	pulumi.Input

	ToServerlessEventrouterBusMapOutput() ServerlessEventrouterBusMapOutput
	ToServerlessEventrouterBusMapOutputWithContext(context.Context) ServerlessEventrouterBusMapOutput
}

type ServerlessEventrouterBusMap map[string]ServerlessEventrouterBusInput

func (ServerlessEventrouterBusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessEventrouterBus)(nil)).Elem()
}

func (i ServerlessEventrouterBusMap) ToServerlessEventrouterBusMapOutput() ServerlessEventrouterBusMapOutput {
	return i.ToServerlessEventrouterBusMapOutputWithContext(context.Background())
}

func (i ServerlessEventrouterBusMap) ToServerlessEventrouterBusMapOutputWithContext(ctx context.Context) ServerlessEventrouterBusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterBusMapOutput)
}

type ServerlessEventrouterBusOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterBusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEventrouterBus)(nil)).Elem()
}

func (o ServerlessEventrouterBusOutput) ToServerlessEventrouterBusOutput() ServerlessEventrouterBusOutput {
	return o
}

func (o ServerlessEventrouterBusOutput) ToServerlessEventrouterBusOutputWithContext(ctx context.Context) ServerlessEventrouterBusOutput {
	return o
}

// ID of the cloud that the bus resides in
func (o ServerlessEventrouterBusOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.StringOutput { return v.CloudId }).(pulumi.StringOutput)
}

// Creation timestamp
func (o ServerlessEventrouterBusOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Deletion protection
func (o ServerlessEventrouterBusOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// Description of the bus
func (o ServerlessEventrouterBusOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the folder that the bus belongs to
func (o ServerlessEventrouterBusOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Bus labels
func (o ServerlessEventrouterBusOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the bus
func (o ServerlessEventrouterBusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterBus) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ServerlessEventrouterBusArrayOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterBusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessEventrouterBus)(nil)).Elem()
}

func (o ServerlessEventrouterBusArrayOutput) ToServerlessEventrouterBusArrayOutput() ServerlessEventrouterBusArrayOutput {
	return o
}

func (o ServerlessEventrouterBusArrayOutput) ToServerlessEventrouterBusArrayOutputWithContext(ctx context.Context) ServerlessEventrouterBusArrayOutput {
	return o
}

func (o ServerlessEventrouterBusArrayOutput) Index(i pulumi.IntInput) ServerlessEventrouterBusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessEventrouterBus {
		return vs[0].([]*ServerlessEventrouterBus)[vs[1].(int)]
	}).(ServerlessEventrouterBusOutput)
}

type ServerlessEventrouterBusMapOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterBusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessEventrouterBus)(nil)).Elem()
}

func (o ServerlessEventrouterBusMapOutput) ToServerlessEventrouterBusMapOutput() ServerlessEventrouterBusMapOutput {
	return o
}

func (o ServerlessEventrouterBusMapOutput) ToServerlessEventrouterBusMapOutputWithContext(ctx context.Context) ServerlessEventrouterBusMapOutput {
	return o
}

func (o ServerlessEventrouterBusMapOutput) MapIndex(k pulumi.StringInput) ServerlessEventrouterBusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessEventrouterBus {
		return vs[0].(map[string]*ServerlessEventrouterBus)[vs[1].(string)]
	}).(ServerlessEventrouterBusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterBusInput)(nil)).Elem(), &ServerlessEventrouterBus{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterBusArrayInput)(nil)).Elem(), ServerlessEventrouterBusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterBusMapInput)(nil)).Elem(), ServerlessEventrouterBusMap{})
	pulumi.RegisterOutputType(ServerlessEventrouterBusOutput{})
	pulumi.RegisterOutputType(ServerlessEventrouterBusArrayOutput{})
	pulumi.RegisterOutputType(ServerlessEventrouterBusMapOutput{})
}
