// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KubernetesCluster struct {
	pulumi.CustomResourceState

	// CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes
	// cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
	ClusterIpv4Range pulumi.StringOutput `pulumi:"clusterIpv4Range"`
	// Identical to `clusterIpv4Range` but for IPv6 protocol.
	ClusterIpv6Range pulumi.StringOutput `pulumi:"clusterIpv6Range"`
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The resource description.
	Description pulumi.StringOutput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Health of the Kubernetes cluster.
	Health pulumi.StringOutput `pulumi:"health"`
	// Cluster KMS provider parameters.
	KmsProvider KubernetesClusterKmsProviderPtrOutput `pulumi:"kmsProvider"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Log group where cluster stores cluster system logs, like audit, events, or control plane logs.
	LogGroupId pulumi.StringOutput `pulumi:"logGroupId"`
	// Kubernetes master configuration options.
	Master KubernetesClusterMasterOutput `pulumi:"master"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the cluster network.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Network Implementation options.
	NetworkImplementation KubernetesClusterNetworkImplementationPtrOutput `pulumi:"networkImplementation"`
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider pulumi.StringPtrOutput `pulumi:"networkPolicyProvider"`
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each
	// node.
	NodeIpv4CidrMaskSize pulumi.IntPtrOutput `pulumi:"nodeIpv4CidrMaskSize"`
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node
	// logs and metrics.
	NodeServiceAccountId pulumi.StringOutput `pulumi:"nodeServiceAccountId"`
	// Cluster release channel.
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service
	// account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where
	// selected network resides.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	// CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap
	// with any subnet in the network the Kubernetes cluster located in.
	ServiceIpv4Range pulumi.StringOutput `pulumi:"serviceIpv4Range"`
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range pulumi.StringOutput `pulumi:"serviceIpv6Range"`
	// Status of the Kubernetes cluster.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesCluster(ctx *pulumi.Context,
	name string, args *KubernetesClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Master == nil {
		return nil, errors.New("invalid value for required argument 'Master'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.NodeServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'NodeServiceAccountId'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesCluster
	err := ctx.RegisterResource("yandex:index/kubernetesCluster:KubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesCluster gets an existing KubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterState, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	var resource KubernetesCluster
	err := ctx.ReadResource("yandex:index/kubernetesCluster:KubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesCluster resources.
type kubernetesClusterState struct {
	// CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes
	// cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
	ClusterIpv4Range *string `pulumi:"clusterIpv4Range"`
	// Identical to `clusterIpv4Range` but for IPv6 protocol.
	ClusterIpv6Range *string `pulumi:"clusterIpv6Range"`
	// The creation timestamp of the resource.
	CreatedAt *string `pulumi:"createdAt"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// Health of the Kubernetes cluster.
	Health *string `pulumi:"health"`
	// Cluster KMS provider parameters.
	KmsProvider *KubernetesClusterKmsProvider `pulumi:"kmsProvider"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Log group where cluster stores cluster system logs, like audit, events, or control plane logs.
	LogGroupId *string `pulumi:"logGroupId"`
	// Kubernetes master configuration options.
	Master *KubernetesClusterMaster `pulumi:"master"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The ID of the cluster network.
	NetworkId *string `pulumi:"networkId"`
	// Network Implementation options.
	NetworkImplementation *KubernetesClusterNetworkImplementation `pulumi:"networkImplementation"`
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider *string `pulumi:"networkPolicyProvider"`
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each
	// node.
	NodeIpv4CidrMaskSize *int `pulumi:"nodeIpv4CidrMaskSize"`
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node
	// logs and metrics.
	NodeServiceAccountId *string `pulumi:"nodeServiceAccountId"`
	// Cluster release channel.
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service
	// account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where
	// selected network resides.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap
	// with any subnet in the network the Kubernetes cluster located in.
	ServiceIpv4Range *string `pulumi:"serviceIpv4Range"`
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range *string `pulumi:"serviceIpv6Range"`
	// Status of the Kubernetes cluster.
	Status *string `pulumi:"status"`
}

type KubernetesClusterState struct {
	// CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes
	// cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
	ClusterIpv4Range pulumi.StringPtrInput
	// Identical to `clusterIpv4Range` but for IPv6 protocol.
	ClusterIpv6Range pulumi.StringPtrInput
	// The creation timestamp of the resource.
	CreatedAt pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// Health of the Kubernetes cluster.
	Health pulumi.StringPtrInput
	// Cluster KMS provider parameters.
	KmsProvider KubernetesClusterKmsProviderPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// Log group where cluster stores cluster system logs, like audit, events, or control plane logs.
	LogGroupId pulumi.StringPtrInput
	// Kubernetes master configuration options.
	Master KubernetesClusterMasterPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// The ID of the cluster network.
	NetworkId pulumi.StringPtrInput
	// Network Implementation options.
	NetworkImplementation KubernetesClusterNetworkImplementationPtrInput
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider pulumi.StringPtrInput
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each
	// node.
	NodeIpv4CidrMaskSize pulumi.IntPtrInput
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node
	// logs and metrics.
	NodeServiceAccountId pulumi.StringPtrInput
	// Cluster release channel.
	ReleaseChannel pulumi.StringPtrInput
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service
	// account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where
	// selected network resides.
	ServiceAccountId pulumi.StringPtrInput
	// CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap
	// with any subnet in the network the Kubernetes cluster located in.
	ServiceIpv4Range pulumi.StringPtrInput
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range pulumi.StringPtrInput
	// Status of the Kubernetes cluster.
	Status pulumi.StringPtrInput
}

func (KubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterState)(nil)).Elem()
}

type kubernetesClusterArgs struct {
	// CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes
	// cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
	ClusterIpv4Range *string `pulumi:"clusterIpv4Range"`
	// Identical to `clusterIpv4Range` but for IPv6 protocol.
	ClusterIpv6Range *string `pulumi:"clusterIpv6Range"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// Cluster KMS provider parameters.
	KmsProvider *KubernetesClusterKmsProvider `pulumi:"kmsProvider"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// Kubernetes master configuration options.
	Master KubernetesClusterMaster `pulumi:"master"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The ID of the cluster network.
	NetworkId string `pulumi:"networkId"`
	// Network Implementation options.
	NetworkImplementation *KubernetesClusterNetworkImplementation `pulumi:"networkImplementation"`
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider *string `pulumi:"networkPolicyProvider"`
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each
	// node.
	NodeIpv4CidrMaskSize *int `pulumi:"nodeIpv4CidrMaskSize"`
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node
	// logs and metrics.
	NodeServiceAccountId string `pulumi:"nodeServiceAccountId"`
	// Cluster release channel.
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service
	// account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where
	// selected network resides.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap
	// with any subnet in the network the Kubernetes cluster located in.
	ServiceIpv4Range *string `pulumi:"serviceIpv4Range"`
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range *string `pulumi:"serviceIpv6Range"`
}

// The set of arguments for constructing a KubernetesCluster resource.
type KubernetesClusterArgs struct {
	// CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes
	// cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
	ClusterIpv4Range pulumi.StringPtrInput
	// Identical to `clusterIpv4Range` but for IPv6 protocol.
	ClusterIpv6Range pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// Cluster KMS provider parameters.
	KmsProvider KubernetesClusterKmsProviderPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// Kubernetes master configuration options.
	Master KubernetesClusterMasterInput
	// The resource name.
	Name pulumi.StringPtrInput
	// The ID of the cluster network.
	NetworkId pulumi.StringInput
	// Network Implementation options.
	NetworkImplementation KubernetesClusterNetworkImplementationPtrInput
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider pulumi.StringPtrInput
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each
	// node.
	NodeIpv4CidrMaskSize pulumi.IntPtrInput
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node
	// logs and metrics.
	NodeServiceAccountId pulumi.StringInput
	// Cluster release channel.
	ReleaseChannel pulumi.StringPtrInput
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service
	// account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where
	// selected network resides.
	ServiceAccountId pulumi.StringInput
	// CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap
	// with any subnet in the network the Kubernetes cluster located in.
	ServiceIpv4Range pulumi.StringPtrInput
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range pulumi.StringPtrInput
}

func (KubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterArgs)(nil)).Elem()
}

type KubernetesClusterInput interface {
	pulumi.Input

	ToKubernetesClusterOutput() KubernetesClusterOutput
	ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput
}

func (*KubernetesCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (i *KubernetesCluster) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return i.ToKubernetesClusterOutputWithContext(context.Background())
}

func (i *KubernetesCluster) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOutput)
}

// KubernetesClusterArrayInput is an input type that accepts KubernetesClusterArray and KubernetesClusterArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterArrayInput` via:
//
//	KubernetesClusterArray{ KubernetesClusterArgs{...} }
type KubernetesClusterArrayInput interface {
	pulumi.Input

	ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput
	ToKubernetesClusterArrayOutputWithContext(context.Context) KubernetesClusterArrayOutput
}

type KubernetesClusterArray []KubernetesClusterInput

func (KubernetesClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return i.ToKubernetesClusterArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterArrayOutput)
}

// KubernetesClusterMapInput is an input type that accepts KubernetesClusterMap and KubernetesClusterMapOutput values.
// You can construct a concrete instance of `KubernetesClusterMapInput` via:
//
//	KubernetesClusterMap{ "key": KubernetesClusterArgs{...} }
type KubernetesClusterMapInput interface {
	pulumi.Input

	ToKubernetesClusterMapOutput() KubernetesClusterMapOutput
	ToKubernetesClusterMapOutputWithContext(context.Context) KubernetesClusterMapOutput
}

type KubernetesClusterMap map[string]KubernetesClusterInput

func (KubernetesClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return i.ToKubernetesClusterMapOutputWithContext(context.Background())
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMapOutput)
}

type KubernetesClusterOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return o
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return o
}

// CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes
// cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
func (o KubernetesClusterOutput) ClusterIpv4Range() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ClusterIpv4Range }).(pulumi.StringOutput)
}

// Identical to `clusterIpv4Range` but for IPv6 protocol.
func (o KubernetesClusterOutput) ClusterIpv6Range() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ClusterIpv6Range }).(pulumi.StringOutput)
}

// The creation timestamp of the resource.
func (o KubernetesClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o KubernetesClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o KubernetesClusterOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Health of the Kubernetes cluster.
func (o KubernetesClusterOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Health }).(pulumi.StringOutput)
}

// Cluster KMS provider parameters.
func (o KubernetesClusterOutput) KmsProvider() KubernetesClusterKmsProviderPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterKmsProviderPtrOutput { return v.KmsProvider }).(KubernetesClusterKmsProviderPtrOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o KubernetesClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Log group where cluster stores cluster system logs, like audit, events, or control plane logs.
func (o KubernetesClusterOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.LogGroupId }).(pulumi.StringOutput)
}

// Kubernetes master configuration options.
func (o KubernetesClusterOutput) Master() KubernetesClusterMasterOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterMasterOutput { return v.Master }).(KubernetesClusterMasterOutput)
}

// The resource name.
func (o KubernetesClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the cluster network.
func (o KubernetesClusterOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Network Implementation options.
func (o KubernetesClusterOutput) NetworkImplementation() KubernetesClusterNetworkImplementationPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterNetworkImplementationPtrOutput {
		return v.NetworkImplementation
	}).(KubernetesClusterNetworkImplementationPtrOutput)
}

// Network policy provider for the cluster. Possible values: `CALICO`.
func (o KubernetesClusterOutput) NetworkPolicyProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.NetworkPolicyProvider }).(pulumi.StringPtrOutput)
}

// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each
// node.
func (o KubernetesClusterOutput) NodeIpv4CidrMaskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.IntPtrOutput { return v.NodeIpv4CidrMaskSize }).(pulumi.IntPtrOutput)
}

// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node
// logs and metrics.
func (o KubernetesClusterOutput) NodeServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.NodeServiceAccountId }).(pulumi.StringOutput)
}

// Cluster release channel.
func (o KubernetesClusterOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service
// account should have `edit` role on the folder where the Kubernetes cluster will be located and on the folder where
// selected network resides.
func (o KubernetesClusterOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap
// with any subnet in the network the Kubernetes cluster located in.
func (o KubernetesClusterOutput) ServiceIpv4Range() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ServiceIpv4Range }).(pulumi.StringOutput)
}

// Identical to serviceIpv4Range but for IPv6 protocol.
func (o KubernetesClusterOutput) ServiceIpv6Range() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ServiceIpv6Range }).(pulumi.StringOutput)
}

// Status of the Kubernetes cluster.
func (o KubernetesClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type KubernetesClusterArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) Index(i pulumi.IntInput) KubernetesClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].([]*KubernetesCluster)[vs[1].(int)]
	}).(KubernetesClusterOutput)
}

type KubernetesClusterMapOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) MapIndex(k pulumi.StringInput) KubernetesClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].(map[string]*KubernetesCluster)[vs[1].(string)]
	}).(KubernetesClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInput)(nil)).Elem(), &KubernetesCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterArrayInput)(nil)).Elem(), KubernetesClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMapInput)(nil)).Elem(), KubernetesClusterMap{})
	pulumi.RegisterOutputType(KubernetesClusterOutput{})
	pulumi.RegisterOutputType(KubernetesClusterArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMapOutput{})
}
