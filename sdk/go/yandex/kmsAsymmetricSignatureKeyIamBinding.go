// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KmsAsymmetricSignatureKeyIamBinding struct {
	pulumi.CustomResourceState

	// The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId pulumi.StringOutput `pulumi:"asymmetricSignatureKeyId"`
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       pulumi.StringOutput `pulumi:"role"`
	SleepAfter pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewKmsAsymmetricSignatureKeyIamBinding registers a new resource with the given unique name, arguments, and options.
func NewKmsAsymmetricSignatureKeyIamBinding(ctx *pulumi.Context,
	name string, args *KmsAsymmetricSignatureKeyIamBindingArgs, opts ...pulumi.ResourceOption) (*KmsAsymmetricSignatureKeyIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AsymmetricSignatureKeyId == nil {
		return nil, errors.New("invalid value for required argument 'AsymmetricSignatureKeyId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KmsAsymmetricSignatureKeyIamBinding
	err := ctx.RegisterResource("yandex:index/kmsAsymmetricSignatureKeyIamBinding:KmsAsymmetricSignatureKeyIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsAsymmetricSignatureKeyIamBinding gets an existing KmsAsymmetricSignatureKeyIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsAsymmetricSignatureKeyIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsAsymmetricSignatureKeyIamBindingState, opts ...pulumi.ResourceOption) (*KmsAsymmetricSignatureKeyIamBinding, error) {
	var resource KmsAsymmetricSignatureKeyIamBinding
	err := ctx.ReadResource("yandex:index/kmsAsymmetricSignatureKeyIamBinding:KmsAsymmetricSignatureKeyIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsAsymmetricSignatureKeyIamBinding resources.
type kmsAsymmetricSignatureKeyIamBindingState struct {
	// The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId *string `pulumi:"asymmetricSignatureKeyId"`
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       *string `pulumi:"role"`
	SleepAfter *int    `pulumi:"sleepAfter"`
}

type KmsAsymmetricSignatureKeyIamBindingState struct {
	// The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId pulumi.StringPtrInput
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.IntPtrInput
}

func (KmsAsymmetricSignatureKeyIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymmetricSignatureKeyIamBindingState)(nil)).Elem()
}

type kmsAsymmetricSignatureKeyIamBindingArgs struct {
	// The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId string `pulumi:"asymmetricSignatureKeyId"`
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       string `pulumi:"role"`
	SleepAfter *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a KmsAsymmetricSignatureKeyIamBinding resource.
type KmsAsymmetricSignatureKeyIamBindingArgs struct {
	// The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
	AsymmetricSignatureKeyId pulumi.StringInput
	// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
	// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
	// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
	// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
	// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
	// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
	// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
	// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
	Role       pulumi.StringInput
	SleepAfter pulumi.IntPtrInput
}

func (KmsAsymmetricSignatureKeyIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymmetricSignatureKeyIamBindingArgs)(nil)).Elem()
}

type KmsAsymmetricSignatureKeyIamBindingInput interface {
	pulumi.Input

	ToKmsAsymmetricSignatureKeyIamBindingOutput() KmsAsymmetricSignatureKeyIamBindingOutput
	ToKmsAsymmetricSignatureKeyIamBindingOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingOutput
}

func (*KmsAsymmetricSignatureKeyIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymmetricSignatureKeyIamBinding)(nil)).Elem()
}

func (i *KmsAsymmetricSignatureKeyIamBinding) ToKmsAsymmetricSignatureKeyIamBindingOutput() KmsAsymmetricSignatureKeyIamBindingOutput {
	return i.ToKmsAsymmetricSignatureKeyIamBindingOutputWithContext(context.Background())
}

func (i *KmsAsymmetricSignatureKeyIamBinding) ToKmsAsymmetricSignatureKeyIamBindingOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricSignatureKeyIamBindingOutput)
}

// KmsAsymmetricSignatureKeyIamBindingArrayInput is an input type that accepts KmsAsymmetricSignatureKeyIamBindingArray and KmsAsymmetricSignatureKeyIamBindingArrayOutput values.
// You can construct a concrete instance of `KmsAsymmetricSignatureKeyIamBindingArrayInput` via:
//
//	KmsAsymmetricSignatureKeyIamBindingArray{ KmsAsymmetricSignatureKeyIamBindingArgs{...} }
type KmsAsymmetricSignatureKeyIamBindingArrayInput interface {
	pulumi.Input

	ToKmsAsymmetricSignatureKeyIamBindingArrayOutput() KmsAsymmetricSignatureKeyIamBindingArrayOutput
	ToKmsAsymmetricSignatureKeyIamBindingArrayOutputWithContext(context.Context) KmsAsymmetricSignatureKeyIamBindingArrayOutput
}

type KmsAsymmetricSignatureKeyIamBindingArray []KmsAsymmetricSignatureKeyIamBindingInput

func (KmsAsymmetricSignatureKeyIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymmetricSignatureKeyIamBinding)(nil)).Elem()
}

func (i KmsAsymmetricSignatureKeyIamBindingArray) ToKmsAsymmetricSignatureKeyIamBindingArrayOutput() KmsAsymmetricSignatureKeyIamBindingArrayOutput {
	return i.ToKmsAsymmetricSignatureKeyIamBindingArrayOutputWithContext(context.Background())
}

func (i KmsAsymmetricSignatureKeyIamBindingArray) ToKmsAsymmetricSignatureKeyIamBindingArrayOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricSignatureKeyIamBindingArrayOutput)
}

// KmsAsymmetricSignatureKeyIamBindingMapInput is an input type that accepts KmsAsymmetricSignatureKeyIamBindingMap and KmsAsymmetricSignatureKeyIamBindingMapOutput values.
// You can construct a concrete instance of `KmsAsymmetricSignatureKeyIamBindingMapInput` via:
//
//	KmsAsymmetricSignatureKeyIamBindingMap{ "key": KmsAsymmetricSignatureKeyIamBindingArgs{...} }
type KmsAsymmetricSignatureKeyIamBindingMapInput interface {
	pulumi.Input

	ToKmsAsymmetricSignatureKeyIamBindingMapOutput() KmsAsymmetricSignatureKeyIamBindingMapOutput
	ToKmsAsymmetricSignatureKeyIamBindingMapOutputWithContext(context.Context) KmsAsymmetricSignatureKeyIamBindingMapOutput
}

type KmsAsymmetricSignatureKeyIamBindingMap map[string]KmsAsymmetricSignatureKeyIamBindingInput

func (KmsAsymmetricSignatureKeyIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymmetricSignatureKeyIamBinding)(nil)).Elem()
}

func (i KmsAsymmetricSignatureKeyIamBindingMap) ToKmsAsymmetricSignatureKeyIamBindingMapOutput() KmsAsymmetricSignatureKeyIamBindingMapOutput {
	return i.ToKmsAsymmetricSignatureKeyIamBindingMapOutputWithContext(context.Background())
}

func (i KmsAsymmetricSignatureKeyIamBindingMap) ToKmsAsymmetricSignatureKeyIamBindingMapOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricSignatureKeyIamBindingMapOutput)
}

type KmsAsymmetricSignatureKeyIamBindingOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricSignatureKeyIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymmetricSignatureKeyIamBinding)(nil)).Elem()
}

func (o KmsAsymmetricSignatureKeyIamBindingOutput) ToKmsAsymmetricSignatureKeyIamBindingOutput() KmsAsymmetricSignatureKeyIamBindingOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyIamBindingOutput) ToKmsAsymmetricSignatureKeyIamBindingOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingOutput {
	return o
}

// The [Yandex Key Management Service](https://yandex.cloud/docs/kms/) Asymmetric Signature Key ID to apply a binding to.
func (o KmsAsymmetricSignatureKeyIamBindingOutput) AsymmetricSignatureKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKeyIamBinding) pulumi.StringOutput { return v.AsymmetricSignatureKeyId }).(pulumi.StringOutput)
}

// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. > for more information about
// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
func (o KmsAsymmetricSignatureKeyIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKeyIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
func (o KmsAsymmetricSignatureKeyIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKeyIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o KmsAsymmetricSignatureKeyIamBindingOutput) SleepAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKeyIamBinding) pulumi.IntPtrOutput { return v.SleepAfter }).(pulumi.IntPtrOutput)
}

type KmsAsymmetricSignatureKeyIamBindingArrayOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricSignatureKeyIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymmetricSignatureKeyIamBinding)(nil)).Elem()
}

func (o KmsAsymmetricSignatureKeyIamBindingArrayOutput) ToKmsAsymmetricSignatureKeyIamBindingArrayOutput() KmsAsymmetricSignatureKeyIamBindingArrayOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyIamBindingArrayOutput) ToKmsAsymmetricSignatureKeyIamBindingArrayOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingArrayOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyIamBindingArrayOutput) Index(i pulumi.IntInput) KmsAsymmetricSignatureKeyIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KmsAsymmetricSignatureKeyIamBinding {
		return vs[0].([]*KmsAsymmetricSignatureKeyIamBinding)[vs[1].(int)]
	}).(KmsAsymmetricSignatureKeyIamBindingOutput)
}

type KmsAsymmetricSignatureKeyIamBindingMapOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricSignatureKeyIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymmetricSignatureKeyIamBinding)(nil)).Elem()
}

func (o KmsAsymmetricSignatureKeyIamBindingMapOutput) ToKmsAsymmetricSignatureKeyIamBindingMapOutput() KmsAsymmetricSignatureKeyIamBindingMapOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyIamBindingMapOutput) ToKmsAsymmetricSignatureKeyIamBindingMapOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyIamBindingMapOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyIamBindingMapOutput) MapIndex(k pulumi.StringInput) KmsAsymmetricSignatureKeyIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KmsAsymmetricSignatureKeyIamBinding {
		return vs[0].(map[string]*KmsAsymmetricSignatureKeyIamBinding)[vs[1].(string)]
	}).(KmsAsymmetricSignatureKeyIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricSignatureKeyIamBindingInput)(nil)).Elem(), &KmsAsymmetricSignatureKeyIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricSignatureKeyIamBindingArrayInput)(nil)).Elem(), KmsAsymmetricSignatureKeyIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricSignatureKeyIamBindingMapInput)(nil)).Elem(), KmsAsymmetricSignatureKeyIamBindingMap{})
	pulumi.RegisterOutputType(KmsAsymmetricSignatureKeyIamBindingOutput{})
	pulumi.RegisterOutputType(KmsAsymmetricSignatureKeyIamBindingArrayOutput{})
	pulumi.RegisterOutputType(KmsAsymmetricSignatureKeyIamBindingMapOutput{})
}
