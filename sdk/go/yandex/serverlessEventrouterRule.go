// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerlessEventrouterRule struct {
	pulumi.CustomResourceState

	// ID of the bus that the rule belongs to
	BusId pulumi.StringOutput `pulumi:"busId"`
	// ID of the cloud that the rule resides in
	CloudId pulumi.StringOutput `pulumi:"cloudId"`
	// ContainerTarget
	Containers ServerlessEventrouterRuleContainerArrayOutput `pulumi:"containers"`
	// Creation timestamp
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection pulumi.BoolOutput `pulumi:"deletionProtection"`
	// Description of the rule
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ID of the folder that the rule resides in
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// FunctionTarget
	Functions ServerlessEventrouterRuleFunctionArrayOutput `pulumi:"functions"`
	// GatewayWebsocketBroadcastTarget
	GatewayWebsocketBroadcasts ServerlessEventrouterRuleGatewayWebsocketBroadcastArrayOutput `pulumi:"gatewayWebsocketBroadcasts"`
	// JQ filter for matching events
	JqFilter pulumi.StringPtrOutput `pulumi:"jqFilter"`
	// Rule labels
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// LoggingTarget. Includes either logGroupId or folder_id
	Loggings ServerlessEventrouterRuleLoggingArrayOutput `pulumi:"loggings"`
	// Name of the rule
	Name pulumi.StringOutput `pulumi:"name"`
	// WorkflowTarget
	Workflows ServerlessEventrouterRuleWorkflowArrayOutput `pulumi:"workflows"`
	// YdsTarget
	Yds ServerlessEventrouterRuleYdArrayOutput `pulumi:"yds"`
	// YmqTarget
	Ymqs ServerlessEventrouterRuleYmqArrayOutput `pulumi:"ymqs"`
}

// NewServerlessEventrouterRule registers a new resource with the given unique name, arguments, and options.
func NewServerlessEventrouterRule(ctx *pulumi.Context,
	name string, args *ServerlessEventrouterRuleArgs, opts ...pulumi.ResourceOption) (*ServerlessEventrouterRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BusId == nil {
		return nil, errors.New("invalid value for required argument 'BusId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerlessEventrouterRule
	err := ctx.RegisterResource("yandex:index/serverlessEventrouterRule:ServerlessEventrouterRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessEventrouterRule gets an existing ServerlessEventrouterRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessEventrouterRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessEventrouterRuleState, opts ...pulumi.ResourceOption) (*ServerlessEventrouterRule, error) {
	var resource ServerlessEventrouterRule
	err := ctx.ReadResource("yandex:index/serverlessEventrouterRule:ServerlessEventrouterRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessEventrouterRule resources.
type serverlessEventrouterRuleState struct {
	// ID of the bus that the rule belongs to
	BusId *string `pulumi:"busId"`
	// ID of the cloud that the rule resides in
	CloudId *string `pulumi:"cloudId"`
	// ContainerTarget
	Containers []ServerlessEventrouterRuleContainer `pulumi:"containers"`
	// Creation timestamp
	CreatedAt *string `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the rule
	Description *string `pulumi:"description"`
	// ID of the folder that the rule resides in
	FolderId *string `pulumi:"folderId"`
	// FunctionTarget
	Functions []ServerlessEventrouterRuleFunction `pulumi:"functions"`
	// GatewayWebsocketBroadcastTarget
	GatewayWebsocketBroadcasts []ServerlessEventrouterRuleGatewayWebsocketBroadcast `pulumi:"gatewayWebsocketBroadcasts"`
	// JQ filter for matching events
	JqFilter *string `pulumi:"jqFilter"`
	// Rule labels
	Labels map[string]string `pulumi:"labels"`
	// LoggingTarget. Includes either logGroupId or folder_id
	Loggings []ServerlessEventrouterRuleLogging `pulumi:"loggings"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// WorkflowTarget
	Workflows []ServerlessEventrouterRuleWorkflow `pulumi:"workflows"`
	// YdsTarget
	Yds []ServerlessEventrouterRuleYd `pulumi:"yds"`
	// YmqTarget
	Ymqs []ServerlessEventrouterRuleYmq `pulumi:"ymqs"`
}

type ServerlessEventrouterRuleState struct {
	// ID of the bus that the rule belongs to
	BusId pulumi.StringPtrInput
	// ID of the cloud that the rule resides in
	CloudId pulumi.StringPtrInput
	// ContainerTarget
	Containers ServerlessEventrouterRuleContainerArrayInput
	// Creation timestamp
	CreatedAt pulumi.StringPtrInput
	// Deletion protection
	DeletionProtection pulumi.BoolPtrInput
	// Description of the rule
	Description pulumi.StringPtrInput
	// ID of the folder that the rule resides in
	FolderId pulumi.StringPtrInput
	// FunctionTarget
	Functions ServerlessEventrouterRuleFunctionArrayInput
	// GatewayWebsocketBroadcastTarget
	GatewayWebsocketBroadcasts ServerlessEventrouterRuleGatewayWebsocketBroadcastArrayInput
	// JQ filter for matching events
	JqFilter pulumi.StringPtrInput
	// Rule labels
	Labels pulumi.StringMapInput
	// LoggingTarget. Includes either logGroupId or folder_id
	Loggings ServerlessEventrouterRuleLoggingArrayInput
	// Name of the rule
	Name pulumi.StringPtrInput
	// WorkflowTarget
	Workflows ServerlessEventrouterRuleWorkflowArrayInput
	// YdsTarget
	Yds ServerlessEventrouterRuleYdArrayInput
	// YmqTarget
	Ymqs ServerlessEventrouterRuleYmqArrayInput
}

func (ServerlessEventrouterRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEventrouterRuleState)(nil)).Elem()
}

type serverlessEventrouterRuleArgs struct {
	// ID of the bus that the rule belongs to
	BusId string `pulumi:"busId"`
	// ContainerTarget
	Containers []ServerlessEventrouterRuleContainer `pulumi:"containers"`
	// Description of the rule
	Description *string `pulumi:"description"`
	// FunctionTarget
	Functions []ServerlessEventrouterRuleFunction `pulumi:"functions"`
	// GatewayWebsocketBroadcastTarget
	GatewayWebsocketBroadcasts []ServerlessEventrouterRuleGatewayWebsocketBroadcast `pulumi:"gatewayWebsocketBroadcasts"`
	// JQ filter for matching events
	JqFilter *string `pulumi:"jqFilter"`
	// Rule labels
	Labels map[string]string `pulumi:"labels"`
	// LoggingTarget. Includes either logGroupId or folder_id
	Loggings []ServerlessEventrouterRuleLogging `pulumi:"loggings"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// WorkflowTarget
	Workflows []ServerlessEventrouterRuleWorkflow `pulumi:"workflows"`
	// YdsTarget
	Yds []ServerlessEventrouterRuleYd `pulumi:"yds"`
	// YmqTarget
	Ymqs []ServerlessEventrouterRuleYmq `pulumi:"ymqs"`
}

// The set of arguments for constructing a ServerlessEventrouterRule resource.
type ServerlessEventrouterRuleArgs struct {
	// ID of the bus that the rule belongs to
	BusId pulumi.StringInput
	// ContainerTarget
	Containers ServerlessEventrouterRuleContainerArrayInput
	// Description of the rule
	Description pulumi.StringPtrInput
	// FunctionTarget
	Functions ServerlessEventrouterRuleFunctionArrayInput
	// GatewayWebsocketBroadcastTarget
	GatewayWebsocketBroadcasts ServerlessEventrouterRuleGatewayWebsocketBroadcastArrayInput
	// JQ filter for matching events
	JqFilter pulumi.StringPtrInput
	// Rule labels
	Labels pulumi.StringMapInput
	// LoggingTarget. Includes either logGroupId or folder_id
	Loggings ServerlessEventrouterRuleLoggingArrayInput
	// Name of the rule
	Name pulumi.StringPtrInput
	// WorkflowTarget
	Workflows ServerlessEventrouterRuleWorkflowArrayInput
	// YdsTarget
	Yds ServerlessEventrouterRuleYdArrayInput
	// YmqTarget
	Ymqs ServerlessEventrouterRuleYmqArrayInput
}

func (ServerlessEventrouterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEventrouterRuleArgs)(nil)).Elem()
}

type ServerlessEventrouterRuleInput interface {
	pulumi.Input

	ToServerlessEventrouterRuleOutput() ServerlessEventrouterRuleOutput
	ToServerlessEventrouterRuleOutputWithContext(ctx context.Context) ServerlessEventrouterRuleOutput
}

func (*ServerlessEventrouterRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEventrouterRule)(nil)).Elem()
}

func (i *ServerlessEventrouterRule) ToServerlessEventrouterRuleOutput() ServerlessEventrouterRuleOutput {
	return i.ToServerlessEventrouterRuleOutputWithContext(context.Background())
}

func (i *ServerlessEventrouterRule) ToServerlessEventrouterRuleOutputWithContext(ctx context.Context) ServerlessEventrouterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterRuleOutput)
}

// ServerlessEventrouterRuleArrayInput is an input type that accepts ServerlessEventrouterRuleArray and ServerlessEventrouterRuleArrayOutput values.
// You can construct a concrete instance of `ServerlessEventrouterRuleArrayInput` via:
//
//	ServerlessEventrouterRuleArray{ ServerlessEventrouterRuleArgs{...} }
type ServerlessEventrouterRuleArrayInput interface {
	pulumi.Input

	ToServerlessEventrouterRuleArrayOutput() ServerlessEventrouterRuleArrayOutput
	ToServerlessEventrouterRuleArrayOutputWithContext(context.Context) ServerlessEventrouterRuleArrayOutput
}

type ServerlessEventrouterRuleArray []ServerlessEventrouterRuleInput

func (ServerlessEventrouterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessEventrouterRule)(nil)).Elem()
}

func (i ServerlessEventrouterRuleArray) ToServerlessEventrouterRuleArrayOutput() ServerlessEventrouterRuleArrayOutput {
	return i.ToServerlessEventrouterRuleArrayOutputWithContext(context.Background())
}

func (i ServerlessEventrouterRuleArray) ToServerlessEventrouterRuleArrayOutputWithContext(ctx context.Context) ServerlessEventrouterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterRuleArrayOutput)
}

// ServerlessEventrouterRuleMapInput is an input type that accepts ServerlessEventrouterRuleMap and ServerlessEventrouterRuleMapOutput values.
// You can construct a concrete instance of `ServerlessEventrouterRuleMapInput` via:
//
//	ServerlessEventrouterRuleMap{ "key": ServerlessEventrouterRuleArgs{...} }
type ServerlessEventrouterRuleMapInput interface {
	pulumi.Input

	ToServerlessEventrouterRuleMapOutput() ServerlessEventrouterRuleMapOutput
	ToServerlessEventrouterRuleMapOutputWithContext(context.Context) ServerlessEventrouterRuleMapOutput
}

type ServerlessEventrouterRuleMap map[string]ServerlessEventrouterRuleInput

func (ServerlessEventrouterRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessEventrouterRule)(nil)).Elem()
}

func (i ServerlessEventrouterRuleMap) ToServerlessEventrouterRuleMapOutput() ServerlessEventrouterRuleMapOutput {
	return i.ToServerlessEventrouterRuleMapOutputWithContext(context.Background())
}

func (i ServerlessEventrouterRuleMap) ToServerlessEventrouterRuleMapOutputWithContext(ctx context.Context) ServerlessEventrouterRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterRuleMapOutput)
}

type ServerlessEventrouterRuleOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEventrouterRule)(nil)).Elem()
}

func (o ServerlessEventrouterRuleOutput) ToServerlessEventrouterRuleOutput() ServerlessEventrouterRuleOutput {
	return o
}

func (o ServerlessEventrouterRuleOutput) ToServerlessEventrouterRuleOutputWithContext(ctx context.Context) ServerlessEventrouterRuleOutput {
	return o
}

// ID of the bus that the rule belongs to
func (o ServerlessEventrouterRuleOutput) BusId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringOutput { return v.BusId }).(pulumi.StringOutput)
}

// ID of the cloud that the rule resides in
func (o ServerlessEventrouterRuleOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringOutput { return v.CloudId }).(pulumi.StringOutput)
}

// ContainerTarget
func (o ServerlessEventrouterRuleOutput) Containers() ServerlessEventrouterRuleContainerArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleContainerArrayOutput { return v.Containers }).(ServerlessEventrouterRuleContainerArrayOutput)
}

// Creation timestamp
func (o ServerlessEventrouterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Deletion protection
func (o ServerlessEventrouterRuleOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Description of the rule
func (o ServerlessEventrouterRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the folder that the rule resides in
func (o ServerlessEventrouterRuleOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// FunctionTarget
func (o ServerlessEventrouterRuleOutput) Functions() ServerlessEventrouterRuleFunctionArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleFunctionArrayOutput { return v.Functions }).(ServerlessEventrouterRuleFunctionArrayOutput)
}

// GatewayWebsocketBroadcastTarget
func (o ServerlessEventrouterRuleOutput) GatewayWebsocketBroadcasts() ServerlessEventrouterRuleGatewayWebsocketBroadcastArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleGatewayWebsocketBroadcastArrayOutput {
		return v.GatewayWebsocketBroadcasts
	}).(ServerlessEventrouterRuleGatewayWebsocketBroadcastArrayOutput)
}

// JQ filter for matching events
func (o ServerlessEventrouterRuleOutput) JqFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringPtrOutput { return v.JqFilter }).(pulumi.StringPtrOutput)
}

// Rule labels
func (o ServerlessEventrouterRuleOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// LoggingTarget. Includes either logGroupId or folder_id
func (o ServerlessEventrouterRuleOutput) Loggings() ServerlessEventrouterRuleLoggingArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleLoggingArrayOutput { return v.Loggings }).(ServerlessEventrouterRuleLoggingArrayOutput)
}

// Name of the rule
func (o ServerlessEventrouterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// WorkflowTarget
func (o ServerlessEventrouterRuleOutput) Workflows() ServerlessEventrouterRuleWorkflowArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleWorkflowArrayOutput { return v.Workflows }).(ServerlessEventrouterRuleWorkflowArrayOutput)
}

// YdsTarget
func (o ServerlessEventrouterRuleOutput) Yds() ServerlessEventrouterRuleYdArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleYdArrayOutput { return v.Yds }).(ServerlessEventrouterRuleYdArrayOutput)
}

// YmqTarget
func (o ServerlessEventrouterRuleOutput) Ymqs() ServerlessEventrouterRuleYmqArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterRule) ServerlessEventrouterRuleYmqArrayOutput { return v.Ymqs }).(ServerlessEventrouterRuleYmqArrayOutput)
}

type ServerlessEventrouterRuleArrayOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessEventrouterRule)(nil)).Elem()
}

func (o ServerlessEventrouterRuleArrayOutput) ToServerlessEventrouterRuleArrayOutput() ServerlessEventrouterRuleArrayOutput {
	return o
}

func (o ServerlessEventrouterRuleArrayOutput) ToServerlessEventrouterRuleArrayOutputWithContext(ctx context.Context) ServerlessEventrouterRuleArrayOutput {
	return o
}

func (o ServerlessEventrouterRuleArrayOutput) Index(i pulumi.IntInput) ServerlessEventrouterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessEventrouterRule {
		return vs[0].([]*ServerlessEventrouterRule)[vs[1].(int)]
	}).(ServerlessEventrouterRuleOutput)
}

type ServerlessEventrouterRuleMapOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessEventrouterRule)(nil)).Elem()
}

func (o ServerlessEventrouterRuleMapOutput) ToServerlessEventrouterRuleMapOutput() ServerlessEventrouterRuleMapOutput {
	return o
}

func (o ServerlessEventrouterRuleMapOutput) ToServerlessEventrouterRuleMapOutputWithContext(ctx context.Context) ServerlessEventrouterRuleMapOutput {
	return o
}

func (o ServerlessEventrouterRuleMapOutput) MapIndex(k pulumi.StringInput) ServerlessEventrouterRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessEventrouterRule {
		return vs[0].(map[string]*ServerlessEventrouterRule)[vs[1].(string)]
	}).(ServerlessEventrouterRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterRuleInput)(nil)).Elem(), &ServerlessEventrouterRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterRuleArrayInput)(nil)).Elem(), ServerlessEventrouterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterRuleMapInput)(nil)).Elem(), ServerlessEventrouterRuleMap{})
	pulumi.RegisterOutputType(ServerlessEventrouterRuleOutput{})
	pulumi.RegisterOutputType(ServerlessEventrouterRuleArrayOutput{})
	pulumi.RegisterOutputType(ServerlessEventrouterRuleMapOutput{})
}
