// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationmanagerGroupMappingItem struct {
	pulumi.CustomResourceState

	// ID of the external group
	ExternalGroupId pulumi.StringOutput `pulumi:"externalGroupId"`
	// ID of the SAML Federation
	FederationId pulumi.StringOutput `pulumi:"federationId"`
	// ID of the internal group
	InternalGroupId pulumi.StringOutput `pulumi:"internalGroupId"`
}

// NewOrganizationmanagerGroupMappingItem registers a new resource with the given unique name, arguments, and options.
func NewOrganizationmanagerGroupMappingItem(ctx *pulumi.Context,
	name string, args *OrganizationmanagerGroupMappingItemArgs, opts ...pulumi.ResourceOption) (*OrganizationmanagerGroupMappingItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalGroupId'")
	}
	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	if args.InternalGroupId == nil {
		return nil, errors.New("invalid value for required argument 'InternalGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationmanagerGroupMappingItem
	err := ctx.RegisterResource("yandex:index/organizationmanagerGroupMappingItem:OrganizationmanagerGroupMappingItem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationmanagerGroupMappingItem gets an existing OrganizationmanagerGroupMappingItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationmanagerGroupMappingItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationmanagerGroupMappingItemState, opts ...pulumi.ResourceOption) (*OrganizationmanagerGroupMappingItem, error) {
	var resource OrganizationmanagerGroupMappingItem
	err := ctx.ReadResource("yandex:index/organizationmanagerGroupMappingItem:OrganizationmanagerGroupMappingItem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationmanagerGroupMappingItem resources.
type organizationmanagerGroupMappingItemState struct {
	// ID of the external group
	ExternalGroupId *string `pulumi:"externalGroupId"`
	// ID of the SAML Federation
	FederationId *string `pulumi:"federationId"`
	// ID of the internal group
	InternalGroupId *string `pulumi:"internalGroupId"`
}

type OrganizationmanagerGroupMappingItemState struct {
	// ID of the external group
	ExternalGroupId pulumi.StringPtrInput
	// ID of the SAML Federation
	FederationId pulumi.StringPtrInput
	// ID of the internal group
	InternalGroupId pulumi.StringPtrInput
}

func (OrganizationmanagerGroupMappingItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationmanagerGroupMappingItemState)(nil)).Elem()
}

type organizationmanagerGroupMappingItemArgs struct {
	// ID of the external group
	ExternalGroupId string `pulumi:"externalGroupId"`
	// ID of the SAML Federation
	FederationId string `pulumi:"federationId"`
	// ID of the internal group
	InternalGroupId string `pulumi:"internalGroupId"`
}

// The set of arguments for constructing a OrganizationmanagerGroupMappingItem resource.
type OrganizationmanagerGroupMappingItemArgs struct {
	// ID of the external group
	ExternalGroupId pulumi.StringInput
	// ID of the SAML Federation
	FederationId pulumi.StringInput
	// ID of the internal group
	InternalGroupId pulumi.StringInput
}

func (OrganizationmanagerGroupMappingItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationmanagerGroupMappingItemArgs)(nil)).Elem()
}

type OrganizationmanagerGroupMappingItemInput interface {
	pulumi.Input

	ToOrganizationmanagerGroupMappingItemOutput() OrganizationmanagerGroupMappingItemOutput
	ToOrganizationmanagerGroupMappingItemOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemOutput
}

func (*OrganizationmanagerGroupMappingItem) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationmanagerGroupMappingItem)(nil)).Elem()
}

func (i *OrganizationmanagerGroupMappingItem) ToOrganizationmanagerGroupMappingItemOutput() OrganizationmanagerGroupMappingItemOutput {
	return i.ToOrganizationmanagerGroupMappingItemOutputWithContext(context.Background())
}

func (i *OrganizationmanagerGroupMappingItem) ToOrganizationmanagerGroupMappingItemOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerGroupMappingItemOutput)
}

// OrganizationmanagerGroupMappingItemArrayInput is an input type that accepts OrganizationmanagerGroupMappingItemArray and OrganizationmanagerGroupMappingItemArrayOutput values.
// You can construct a concrete instance of `OrganizationmanagerGroupMappingItemArrayInput` via:
//
//	OrganizationmanagerGroupMappingItemArray{ OrganizationmanagerGroupMappingItemArgs{...} }
type OrganizationmanagerGroupMappingItemArrayInput interface {
	pulumi.Input

	ToOrganizationmanagerGroupMappingItemArrayOutput() OrganizationmanagerGroupMappingItemArrayOutput
	ToOrganizationmanagerGroupMappingItemArrayOutputWithContext(context.Context) OrganizationmanagerGroupMappingItemArrayOutput
}

type OrganizationmanagerGroupMappingItemArray []OrganizationmanagerGroupMappingItemInput

func (OrganizationmanagerGroupMappingItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationmanagerGroupMappingItem)(nil)).Elem()
}

func (i OrganizationmanagerGroupMappingItemArray) ToOrganizationmanagerGroupMappingItemArrayOutput() OrganizationmanagerGroupMappingItemArrayOutput {
	return i.ToOrganizationmanagerGroupMappingItemArrayOutputWithContext(context.Background())
}

func (i OrganizationmanagerGroupMappingItemArray) ToOrganizationmanagerGroupMappingItemArrayOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerGroupMappingItemArrayOutput)
}

// OrganizationmanagerGroupMappingItemMapInput is an input type that accepts OrganizationmanagerGroupMappingItemMap and OrganizationmanagerGroupMappingItemMapOutput values.
// You can construct a concrete instance of `OrganizationmanagerGroupMappingItemMapInput` via:
//
//	OrganizationmanagerGroupMappingItemMap{ "key": OrganizationmanagerGroupMappingItemArgs{...} }
type OrganizationmanagerGroupMappingItemMapInput interface {
	pulumi.Input

	ToOrganizationmanagerGroupMappingItemMapOutput() OrganizationmanagerGroupMappingItemMapOutput
	ToOrganizationmanagerGroupMappingItemMapOutputWithContext(context.Context) OrganizationmanagerGroupMappingItemMapOutput
}

type OrganizationmanagerGroupMappingItemMap map[string]OrganizationmanagerGroupMappingItemInput

func (OrganizationmanagerGroupMappingItemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationmanagerGroupMappingItem)(nil)).Elem()
}

func (i OrganizationmanagerGroupMappingItemMap) ToOrganizationmanagerGroupMappingItemMapOutput() OrganizationmanagerGroupMappingItemMapOutput {
	return i.ToOrganizationmanagerGroupMappingItemMapOutputWithContext(context.Background())
}

func (i OrganizationmanagerGroupMappingItemMap) ToOrganizationmanagerGroupMappingItemMapOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerGroupMappingItemMapOutput)
}

type OrganizationmanagerGroupMappingItemOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerGroupMappingItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationmanagerGroupMappingItem)(nil)).Elem()
}

func (o OrganizationmanagerGroupMappingItemOutput) ToOrganizationmanagerGroupMappingItemOutput() OrganizationmanagerGroupMappingItemOutput {
	return o
}

func (o OrganizationmanagerGroupMappingItemOutput) ToOrganizationmanagerGroupMappingItemOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemOutput {
	return o
}

// ID of the external group
func (o OrganizationmanagerGroupMappingItemOutput) ExternalGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationmanagerGroupMappingItem) pulumi.StringOutput { return v.ExternalGroupId }).(pulumi.StringOutput)
}

// ID of the SAML Federation
func (o OrganizationmanagerGroupMappingItemOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationmanagerGroupMappingItem) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

// ID of the internal group
func (o OrganizationmanagerGroupMappingItemOutput) InternalGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationmanagerGroupMappingItem) pulumi.StringOutput { return v.InternalGroupId }).(pulumi.StringOutput)
}

type OrganizationmanagerGroupMappingItemArrayOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerGroupMappingItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationmanagerGroupMappingItem)(nil)).Elem()
}

func (o OrganizationmanagerGroupMappingItemArrayOutput) ToOrganizationmanagerGroupMappingItemArrayOutput() OrganizationmanagerGroupMappingItemArrayOutput {
	return o
}

func (o OrganizationmanagerGroupMappingItemArrayOutput) ToOrganizationmanagerGroupMappingItemArrayOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemArrayOutput {
	return o
}

func (o OrganizationmanagerGroupMappingItemArrayOutput) Index(i pulumi.IntInput) OrganizationmanagerGroupMappingItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationmanagerGroupMappingItem {
		return vs[0].([]*OrganizationmanagerGroupMappingItem)[vs[1].(int)]
	}).(OrganizationmanagerGroupMappingItemOutput)
}

type OrganizationmanagerGroupMappingItemMapOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerGroupMappingItemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationmanagerGroupMappingItem)(nil)).Elem()
}

func (o OrganizationmanagerGroupMappingItemMapOutput) ToOrganizationmanagerGroupMappingItemMapOutput() OrganizationmanagerGroupMappingItemMapOutput {
	return o
}

func (o OrganizationmanagerGroupMappingItemMapOutput) ToOrganizationmanagerGroupMappingItemMapOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingItemMapOutput {
	return o
}

func (o OrganizationmanagerGroupMappingItemMapOutput) MapIndex(k pulumi.StringInput) OrganizationmanagerGroupMappingItemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationmanagerGroupMappingItem {
		return vs[0].(map[string]*OrganizationmanagerGroupMappingItem)[vs[1].(string)]
	}).(OrganizationmanagerGroupMappingItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerGroupMappingItemInput)(nil)).Elem(), &OrganizationmanagerGroupMappingItem{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerGroupMappingItemArrayInput)(nil)).Elem(), OrganizationmanagerGroupMappingItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerGroupMappingItemMapInput)(nil)).Elem(), OrganizationmanagerGroupMappingItemMap{})
	pulumi.RegisterOutputType(OrganizationmanagerGroupMappingItemOutput{})
	pulumi.RegisterOutputType(OrganizationmanagerGroupMappingItemArrayOutput{})
	pulumi.RegisterOutputType(OrganizationmanagerGroupMappingItemMapOutput{})
}
