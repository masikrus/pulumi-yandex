// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlbTargetGroup struct {
	pulumi.CustomResourceState

	// The resource name.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The resource description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// A Target resource.
	Targets AlbTargetGroupTargetArrayOutput `pulumi:"targets"`
}

// NewAlbTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewAlbTargetGroup(ctx *pulumi.Context,
	name string, args *AlbTargetGroupArgs, opts ...pulumi.ResourceOption) (*AlbTargetGroup, error) {
	if args == nil {
		args = &AlbTargetGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlbTargetGroup
	err := ctx.RegisterResource("yandex:index/albTargetGroup:AlbTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlbTargetGroup gets an existing AlbTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlbTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlbTargetGroupState, opts ...pulumi.ResourceOption) (*AlbTargetGroup, error) {
	var resource AlbTargetGroup
	err := ctx.ReadResource("yandex:index/albTargetGroup:AlbTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlbTargetGroup resources.
type albTargetGroupState struct {
	// The resource name.
	CreatedAt *string `pulumi:"createdAt"`
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// A Target resource.
	Targets []AlbTargetGroupTarget `pulumi:"targets"`
}

type AlbTargetGroupState struct {
	// The resource name.
	CreatedAt pulumi.StringPtrInput
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// A Target resource.
	Targets AlbTargetGroupTargetArrayInput
}

func (AlbTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*albTargetGroupState)(nil)).Elem()
}

type albTargetGroupArgs struct {
	// The resource description.
	Description *string `pulumi:"description"`
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs which assigned to resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name.
	Name *string `pulumi:"name"`
	// A Target resource.
	Targets []AlbTargetGroupTarget `pulumi:"targets"`
}

// The set of arguments for constructing a AlbTargetGroup resource.
type AlbTargetGroupArgs struct {
	// The resource description.
	Description pulumi.StringPtrInput
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs which assigned to resource.
	Labels pulumi.StringMapInput
	// The resource name.
	Name pulumi.StringPtrInput
	// A Target resource.
	Targets AlbTargetGroupTargetArrayInput
}

func (AlbTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*albTargetGroupArgs)(nil)).Elem()
}

type AlbTargetGroupInput interface {
	pulumi.Input

	ToAlbTargetGroupOutput() AlbTargetGroupOutput
	ToAlbTargetGroupOutputWithContext(ctx context.Context) AlbTargetGroupOutput
}

func (*AlbTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbTargetGroup)(nil)).Elem()
}

func (i *AlbTargetGroup) ToAlbTargetGroupOutput() AlbTargetGroupOutput {
	return i.ToAlbTargetGroupOutputWithContext(context.Background())
}

func (i *AlbTargetGroup) ToAlbTargetGroupOutputWithContext(ctx context.Context) AlbTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbTargetGroupOutput)
}

// AlbTargetGroupArrayInput is an input type that accepts AlbTargetGroupArray and AlbTargetGroupArrayOutput values.
// You can construct a concrete instance of `AlbTargetGroupArrayInput` via:
//
//	AlbTargetGroupArray{ AlbTargetGroupArgs{...} }
type AlbTargetGroupArrayInput interface {
	pulumi.Input

	ToAlbTargetGroupArrayOutput() AlbTargetGroupArrayOutput
	ToAlbTargetGroupArrayOutputWithContext(context.Context) AlbTargetGroupArrayOutput
}

type AlbTargetGroupArray []AlbTargetGroupInput

func (AlbTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlbTargetGroup)(nil)).Elem()
}

func (i AlbTargetGroupArray) ToAlbTargetGroupArrayOutput() AlbTargetGroupArrayOutput {
	return i.ToAlbTargetGroupArrayOutputWithContext(context.Background())
}

func (i AlbTargetGroupArray) ToAlbTargetGroupArrayOutputWithContext(ctx context.Context) AlbTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbTargetGroupArrayOutput)
}

// AlbTargetGroupMapInput is an input type that accepts AlbTargetGroupMap and AlbTargetGroupMapOutput values.
// You can construct a concrete instance of `AlbTargetGroupMapInput` via:
//
//	AlbTargetGroupMap{ "key": AlbTargetGroupArgs{...} }
type AlbTargetGroupMapInput interface {
	pulumi.Input

	ToAlbTargetGroupMapOutput() AlbTargetGroupMapOutput
	ToAlbTargetGroupMapOutputWithContext(context.Context) AlbTargetGroupMapOutput
}

type AlbTargetGroupMap map[string]AlbTargetGroupInput

func (AlbTargetGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlbTargetGroup)(nil)).Elem()
}

func (i AlbTargetGroupMap) ToAlbTargetGroupMapOutput() AlbTargetGroupMapOutput {
	return i.ToAlbTargetGroupMapOutputWithContext(context.Background())
}

func (i AlbTargetGroupMap) ToAlbTargetGroupMapOutputWithContext(ctx context.Context) AlbTargetGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbTargetGroupMapOutput)
}

type AlbTargetGroupOutput struct{ *pulumi.OutputState }

func (AlbTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbTargetGroup)(nil)).Elem()
}

func (o AlbTargetGroupOutput) ToAlbTargetGroupOutput() AlbTargetGroupOutput {
	return o
}

func (o AlbTargetGroupOutput) ToAlbTargetGroupOutputWithContext(ctx context.Context) AlbTargetGroupOutput {
	return o
}

// The resource name.
func (o AlbTargetGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AlbTargetGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource description.
func (o AlbTargetGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlbTargetGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
func (o AlbTargetGroupOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlbTargetGroup) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs which assigned to resource.
func (o AlbTargetGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlbTargetGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name.
func (o AlbTargetGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlbTargetGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A Target resource.
func (o AlbTargetGroupOutput) Targets() AlbTargetGroupTargetArrayOutput {
	return o.ApplyT(func(v *AlbTargetGroup) AlbTargetGroupTargetArrayOutput { return v.Targets }).(AlbTargetGroupTargetArrayOutput)
}

type AlbTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (AlbTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlbTargetGroup)(nil)).Elem()
}

func (o AlbTargetGroupArrayOutput) ToAlbTargetGroupArrayOutput() AlbTargetGroupArrayOutput {
	return o
}

func (o AlbTargetGroupArrayOutput) ToAlbTargetGroupArrayOutputWithContext(ctx context.Context) AlbTargetGroupArrayOutput {
	return o
}

func (o AlbTargetGroupArrayOutput) Index(i pulumi.IntInput) AlbTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlbTargetGroup {
		return vs[0].([]*AlbTargetGroup)[vs[1].(int)]
	}).(AlbTargetGroupOutput)
}

type AlbTargetGroupMapOutput struct{ *pulumi.OutputState }

func (AlbTargetGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlbTargetGroup)(nil)).Elem()
}

func (o AlbTargetGroupMapOutput) ToAlbTargetGroupMapOutput() AlbTargetGroupMapOutput {
	return o
}

func (o AlbTargetGroupMapOutput) ToAlbTargetGroupMapOutputWithContext(ctx context.Context) AlbTargetGroupMapOutput {
	return o
}

func (o AlbTargetGroupMapOutput) MapIndex(k pulumi.StringInput) AlbTargetGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlbTargetGroup {
		return vs[0].(map[string]*AlbTargetGroup)[vs[1].(string)]
	}).(AlbTargetGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlbTargetGroupInput)(nil)).Elem(), &AlbTargetGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbTargetGroupArrayInput)(nil)).Elem(), AlbTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbTargetGroupMapInput)(nil)).Elem(), AlbTargetGroupMap{})
	pulumi.RegisterOutputType(AlbTargetGroupOutput{})
	pulumi.RegisterOutputType(AlbTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(AlbTargetGroupMapOutput{})
}
