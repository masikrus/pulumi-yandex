// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationmanagerGroupMapping struct {
	pulumi.CustomResourceState

	// Set "true" to enable organization manager group mapping.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// ID of the SAML Federation.
	FederationId pulumi.StringOutput `pulumi:"federationId"`
}

// NewOrganizationmanagerGroupMapping registers a new resource with the given unique name, arguments, and options.
func NewOrganizationmanagerGroupMapping(ctx *pulumi.Context,
	name string, args *OrganizationmanagerGroupMappingArgs, opts ...pulumi.ResourceOption) (*OrganizationmanagerGroupMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationmanagerGroupMapping
	err := ctx.RegisterResource("yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationmanagerGroupMapping gets an existing OrganizationmanagerGroupMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationmanagerGroupMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationmanagerGroupMappingState, opts ...pulumi.ResourceOption) (*OrganizationmanagerGroupMapping, error) {
	var resource OrganizationmanagerGroupMapping
	err := ctx.ReadResource("yandex:index/organizationmanagerGroupMapping:OrganizationmanagerGroupMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationmanagerGroupMapping resources.
type organizationmanagerGroupMappingState struct {
	// Set "true" to enable organization manager group mapping.
	Enabled *bool `pulumi:"enabled"`
	// ID of the SAML Federation.
	FederationId *string `pulumi:"federationId"`
}

type OrganizationmanagerGroupMappingState struct {
	// Set "true" to enable organization manager group mapping.
	Enabled pulumi.BoolPtrInput
	// ID of the SAML Federation.
	FederationId pulumi.StringPtrInput
}

func (OrganizationmanagerGroupMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationmanagerGroupMappingState)(nil)).Elem()
}

type organizationmanagerGroupMappingArgs struct {
	// Set "true" to enable organization manager group mapping.
	Enabled *bool `pulumi:"enabled"`
	// ID of the SAML Federation.
	FederationId string `pulumi:"federationId"`
}

// The set of arguments for constructing a OrganizationmanagerGroupMapping resource.
type OrganizationmanagerGroupMappingArgs struct {
	// Set "true" to enable organization manager group mapping.
	Enabled pulumi.BoolPtrInput
	// ID of the SAML Federation.
	FederationId pulumi.StringInput
}

func (OrganizationmanagerGroupMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationmanagerGroupMappingArgs)(nil)).Elem()
}

type OrganizationmanagerGroupMappingInput interface {
	pulumi.Input

	ToOrganizationmanagerGroupMappingOutput() OrganizationmanagerGroupMappingOutput
	ToOrganizationmanagerGroupMappingOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingOutput
}

func (*OrganizationmanagerGroupMapping) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationmanagerGroupMapping)(nil)).Elem()
}

func (i *OrganizationmanagerGroupMapping) ToOrganizationmanagerGroupMappingOutput() OrganizationmanagerGroupMappingOutput {
	return i.ToOrganizationmanagerGroupMappingOutputWithContext(context.Background())
}

func (i *OrganizationmanagerGroupMapping) ToOrganizationmanagerGroupMappingOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerGroupMappingOutput)
}

// OrganizationmanagerGroupMappingArrayInput is an input type that accepts OrganizationmanagerGroupMappingArray and OrganizationmanagerGroupMappingArrayOutput values.
// You can construct a concrete instance of `OrganizationmanagerGroupMappingArrayInput` via:
//
//	OrganizationmanagerGroupMappingArray{ OrganizationmanagerGroupMappingArgs{...} }
type OrganizationmanagerGroupMappingArrayInput interface {
	pulumi.Input

	ToOrganizationmanagerGroupMappingArrayOutput() OrganizationmanagerGroupMappingArrayOutput
	ToOrganizationmanagerGroupMappingArrayOutputWithContext(context.Context) OrganizationmanagerGroupMappingArrayOutput
}

type OrganizationmanagerGroupMappingArray []OrganizationmanagerGroupMappingInput

func (OrganizationmanagerGroupMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationmanagerGroupMapping)(nil)).Elem()
}

func (i OrganizationmanagerGroupMappingArray) ToOrganizationmanagerGroupMappingArrayOutput() OrganizationmanagerGroupMappingArrayOutput {
	return i.ToOrganizationmanagerGroupMappingArrayOutputWithContext(context.Background())
}

func (i OrganizationmanagerGroupMappingArray) ToOrganizationmanagerGroupMappingArrayOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerGroupMappingArrayOutput)
}

// OrganizationmanagerGroupMappingMapInput is an input type that accepts OrganizationmanagerGroupMappingMap and OrganizationmanagerGroupMappingMapOutput values.
// You can construct a concrete instance of `OrganizationmanagerGroupMappingMapInput` via:
//
//	OrganizationmanagerGroupMappingMap{ "key": OrganizationmanagerGroupMappingArgs{...} }
type OrganizationmanagerGroupMappingMapInput interface {
	pulumi.Input

	ToOrganizationmanagerGroupMappingMapOutput() OrganizationmanagerGroupMappingMapOutput
	ToOrganizationmanagerGroupMappingMapOutputWithContext(context.Context) OrganizationmanagerGroupMappingMapOutput
}

type OrganizationmanagerGroupMappingMap map[string]OrganizationmanagerGroupMappingInput

func (OrganizationmanagerGroupMappingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationmanagerGroupMapping)(nil)).Elem()
}

func (i OrganizationmanagerGroupMappingMap) ToOrganizationmanagerGroupMappingMapOutput() OrganizationmanagerGroupMappingMapOutput {
	return i.ToOrganizationmanagerGroupMappingMapOutputWithContext(context.Background())
}

func (i OrganizationmanagerGroupMappingMap) ToOrganizationmanagerGroupMappingMapOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerGroupMappingMapOutput)
}

type OrganizationmanagerGroupMappingOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerGroupMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationmanagerGroupMapping)(nil)).Elem()
}

func (o OrganizationmanagerGroupMappingOutput) ToOrganizationmanagerGroupMappingOutput() OrganizationmanagerGroupMappingOutput {
	return o
}

func (o OrganizationmanagerGroupMappingOutput) ToOrganizationmanagerGroupMappingOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingOutput {
	return o
}

// Set "true" to enable organization manager group mapping.
func (o OrganizationmanagerGroupMappingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationmanagerGroupMapping) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// ID of the SAML Federation.
func (o OrganizationmanagerGroupMappingOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationmanagerGroupMapping) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

type OrganizationmanagerGroupMappingArrayOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerGroupMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationmanagerGroupMapping)(nil)).Elem()
}

func (o OrganizationmanagerGroupMappingArrayOutput) ToOrganizationmanagerGroupMappingArrayOutput() OrganizationmanagerGroupMappingArrayOutput {
	return o
}

func (o OrganizationmanagerGroupMappingArrayOutput) ToOrganizationmanagerGroupMappingArrayOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingArrayOutput {
	return o
}

func (o OrganizationmanagerGroupMappingArrayOutput) Index(i pulumi.IntInput) OrganizationmanagerGroupMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationmanagerGroupMapping {
		return vs[0].([]*OrganizationmanagerGroupMapping)[vs[1].(int)]
	}).(OrganizationmanagerGroupMappingOutput)
}

type OrganizationmanagerGroupMappingMapOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerGroupMappingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationmanagerGroupMapping)(nil)).Elem()
}

func (o OrganizationmanagerGroupMappingMapOutput) ToOrganizationmanagerGroupMappingMapOutput() OrganizationmanagerGroupMappingMapOutput {
	return o
}

func (o OrganizationmanagerGroupMappingMapOutput) ToOrganizationmanagerGroupMappingMapOutputWithContext(ctx context.Context) OrganizationmanagerGroupMappingMapOutput {
	return o
}

func (o OrganizationmanagerGroupMappingMapOutput) MapIndex(k pulumi.StringInput) OrganizationmanagerGroupMappingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationmanagerGroupMapping {
		return vs[0].(map[string]*OrganizationmanagerGroupMapping)[vs[1].(string)]
	}).(OrganizationmanagerGroupMappingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerGroupMappingInput)(nil)).Elem(), &OrganizationmanagerGroupMapping{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerGroupMappingArrayInput)(nil)).Elem(), OrganizationmanagerGroupMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerGroupMappingMapInput)(nil)).Elem(), OrganizationmanagerGroupMappingMap{})
	pulumi.RegisterOutputType(OrganizationmanagerGroupMappingOutput{})
	pulumi.RegisterOutputType(OrganizationmanagerGroupMappingArrayOutput{})
	pulumi.RegisterOutputType(OrganizationmanagerGroupMappingMapOutput{})
}
