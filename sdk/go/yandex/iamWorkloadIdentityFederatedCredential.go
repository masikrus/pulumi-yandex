// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamWorkloadIdentityFederatedCredential struct {
	pulumi.CustomResourceState

	// Id of the external subject.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Id of the workload identity federation which is used for authentication.
	ExternalSubjectId pulumi.StringOutput `pulumi:"externalSubjectId"`
	// Id of the federated credential.
	FederationId pulumi.StringOutput `pulumi:"federationId"`
	// Id of the service account that the federated credential belongs to.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
}

// NewIamWorkloadIdentityFederatedCredential registers a new resource with the given unique name, arguments, and options.
func NewIamWorkloadIdentityFederatedCredential(ctx *pulumi.Context,
	name string, args *IamWorkloadIdentityFederatedCredentialArgs, opts ...pulumi.ResourceOption) (*IamWorkloadIdentityFederatedCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalSubjectId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalSubjectId'")
	}
	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IamWorkloadIdentityFederatedCredential
	err := ctx.RegisterResource("yandex:index/iamWorkloadIdentityFederatedCredential:IamWorkloadIdentityFederatedCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamWorkloadIdentityFederatedCredential gets an existing IamWorkloadIdentityFederatedCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamWorkloadIdentityFederatedCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamWorkloadIdentityFederatedCredentialState, opts ...pulumi.ResourceOption) (*IamWorkloadIdentityFederatedCredential, error) {
	var resource IamWorkloadIdentityFederatedCredential
	err := ctx.ReadResource("yandex:index/iamWorkloadIdentityFederatedCredential:IamWorkloadIdentityFederatedCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamWorkloadIdentityFederatedCredential resources.
type iamWorkloadIdentityFederatedCredentialState struct {
	// Id of the external subject.
	CreatedAt *string `pulumi:"createdAt"`
	// Id of the workload identity federation which is used for authentication.
	ExternalSubjectId *string `pulumi:"externalSubjectId"`
	// Id of the federated credential.
	FederationId *string `pulumi:"federationId"`
	// Id of the service account that the federated credential belongs to.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

type IamWorkloadIdentityFederatedCredentialState struct {
	// Id of the external subject.
	CreatedAt pulumi.StringPtrInput
	// Id of the workload identity federation which is used for authentication.
	ExternalSubjectId pulumi.StringPtrInput
	// Id of the federated credential.
	FederationId pulumi.StringPtrInput
	// Id of the service account that the federated credential belongs to.
	ServiceAccountId pulumi.StringPtrInput
}

func (IamWorkloadIdentityFederatedCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkloadIdentityFederatedCredentialState)(nil)).Elem()
}

type iamWorkloadIdentityFederatedCredentialArgs struct {
	// Id of the workload identity federation which is used for authentication.
	ExternalSubjectId string `pulumi:"externalSubjectId"`
	// Id of the federated credential.
	FederationId string `pulumi:"federationId"`
	// Id of the service account that the federated credential belongs to.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// The set of arguments for constructing a IamWorkloadIdentityFederatedCredential resource.
type IamWorkloadIdentityFederatedCredentialArgs struct {
	// Id of the workload identity federation which is used for authentication.
	ExternalSubjectId pulumi.StringInput
	// Id of the federated credential.
	FederationId pulumi.StringInput
	// Id of the service account that the federated credential belongs to.
	ServiceAccountId pulumi.StringPtrInput
}

func (IamWorkloadIdentityFederatedCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkloadIdentityFederatedCredentialArgs)(nil)).Elem()
}

type IamWorkloadIdentityFederatedCredentialInput interface {
	pulumi.Input

	ToIamWorkloadIdentityFederatedCredentialOutput() IamWorkloadIdentityFederatedCredentialOutput
	ToIamWorkloadIdentityFederatedCredentialOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialOutput
}

func (*IamWorkloadIdentityFederatedCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkloadIdentityFederatedCredential)(nil)).Elem()
}

func (i *IamWorkloadIdentityFederatedCredential) ToIamWorkloadIdentityFederatedCredentialOutput() IamWorkloadIdentityFederatedCredentialOutput {
	return i.ToIamWorkloadIdentityFederatedCredentialOutputWithContext(context.Background())
}

func (i *IamWorkloadIdentityFederatedCredential) ToIamWorkloadIdentityFederatedCredentialOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityFederatedCredentialOutput)
}

// IamWorkloadIdentityFederatedCredentialArrayInput is an input type that accepts IamWorkloadIdentityFederatedCredentialArray and IamWorkloadIdentityFederatedCredentialArrayOutput values.
// You can construct a concrete instance of `IamWorkloadIdentityFederatedCredentialArrayInput` via:
//
//	IamWorkloadIdentityFederatedCredentialArray{ IamWorkloadIdentityFederatedCredentialArgs{...} }
type IamWorkloadIdentityFederatedCredentialArrayInput interface {
	pulumi.Input

	ToIamWorkloadIdentityFederatedCredentialArrayOutput() IamWorkloadIdentityFederatedCredentialArrayOutput
	ToIamWorkloadIdentityFederatedCredentialArrayOutputWithContext(context.Context) IamWorkloadIdentityFederatedCredentialArrayOutput
}

type IamWorkloadIdentityFederatedCredentialArray []IamWorkloadIdentityFederatedCredentialInput

func (IamWorkloadIdentityFederatedCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamWorkloadIdentityFederatedCredential)(nil)).Elem()
}

func (i IamWorkloadIdentityFederatedCredentialArray) ToIamWorkloadIdentityFederatedCredentialArrayOutput() IamWorkloadIdentityFederatedCredentialArrayOutput {
	return i.ToIamWorkloadIdentityFederatedCredentialArrayOutputWithContext(context.Background())
}

func (i IamWorkloadIdentityFederatedCredentialArray) ToIamWorkloadIdentityFederatedCredentialArrayOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityFederatedCredentialArrayOutput)
}

// IamWorkloadIdentityFederatedCredentialMapInput is an input type that accepts IamWorkloadIdentityFederatedCredentialMap and IamWorkloadIdentityFederatedCredentialMapOutput values.
// You can construct a concrete instance of `IamWorkloadIdentityFederatedCredentialMapInput` via:
//
//	IamWorkloadIdentityFederatedCredentialMap{ "key": IamWorkloadIdentityFederatedCredentialArgs{...} }
type IamWorkloadIdentityFederatedCredentialMapInput interface {
	pulumi.Input

	ToIamWorkloadIdentityFederatedCredentialMapOutput() IamWorkloadIdentityFederatedCredentialMapOutput
	ToIamWorkloadIdentityFederatedCredentialMapOutputWithContext(context.Context) IamWorkloadIdentityFederatedCredentialMapOutput
}

type IamWorkloadIdentityFederatedCredentialMap map[string]IamWorkloadIdentityFederatedCredentialInput

func (IamWorkloadIdentityFederatedCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamWorkloadIdentityFederatedCredential)(nil)).Elem()
}

func (i IamWorkloadIdentityFederatedCredentialMap) ToIamWorkloadIdentityFederatedCredentialMapOutput() IamWorkloadIdentityFederatedCredentialMapOutput {
	return i.ToIamWorkloadIdentityFederatedCredentialMapOutputWithContext(context.Background())
}

func (i IamWorkloadIdentityFederatedCredentialMap) ToIamWorkloadIdentityFederatedCredentialMapOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityFederatedCredentialMapOutput)
}

type IamWorkloadIdentityFederatedCredentialOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityFederatedCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkloadIdentityFederatedCredential)(nil)).Elem()
}

func (o IamWorkloadIdentityFederatedCredentialOutput) ToIamWorkloadIdentityFederatedCredentialOutput() IamWorkloadIdentityFederatedCredentialOutput {
	return o
}

func (o IamWorkloadIdentityFederatedCredentialOutput) ToIamWorkloadIdentityFederatedCredentialOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialOutput {
	return o
}

// Id of the external subject.
func (o IamWorkloadIdentityFederatedCredentialOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityFederatedCredential) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Id of the workload identity federation which is used for authentication.
func (o IamWorkloadIdentityFederatedCredentialOutput) ExternalSubjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityFederatedCredential) pulumi.StringOutput { return v.ExternalSubjectId }).(pulumi.StringOutput)
}

// Id of the federated credential.
func (o IamWorkloadIdentityFederatedCredentialOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityFederatedCredential) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

// Id of the service account that the federated credential belongs to.
func (o IamWorkloadIdentityFederatedCredentialOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityFederatedCredential) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

type IamWorkloadIdentityFederatedCredentialArrayOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityFederatedCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamWorkloadIdentityFederatedCredential)(nil)).Elem()
}

func (o IamWorkloadIdentityFederatedCredentialArrayOutput) ToIamWorkloadIdentityFederatedCredentialArrayOutput() IamWorkloadIdentityFederatedCredentialArrayOutput {
	return o
}

func (o IamWorkloadIdentityFederatedCredentialArrayOutput) ToIamWorkloadIdentityFederatedCredentialArrayOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialArrayOutput {
	return o
}

func (o IamWorkloadIdentityFederatedCredentialArrayOutput) Index(i pulumi.IntInput) IamWorkloadIdentityFederatedCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamWorkloadIdentityFederatedCredential {
		return vs[0].([]*IamWorkloadIdentityFederatedCredential)[vs[1].(int)]
	}).(IamWorkloadIdentityFederatedCredentialOutput)
}

type IamWorkloadIdentityFederatedCredentialMapOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityFederatedCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamWorkloadIdentityFederatedCredential)(nil)).Elem()
}

func (o IamWorkloadIdentityFederatedCredentialMapOutput) ToIamWorkloadIdentityFederatedCredentialMapOutput() IamWorkloadIdentityFederatedCredentialMapOutput {
	return o
}

func (o IamWorkloadIdentityFederatedCredentialMapOutput) ToIamWorkloadIdentityFederatedCredentialMapOutputWithContext(ctx context.Context) IamWorkloadIdentityFederatedCredentialMapOutput {
	return o
}

func (o IamWorkloadIdentityFederatedCredentialMapOutput) MapIndex(k pulumi.StringInput) IamWorkloadIdentityFederatedCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamWorkloadIdentityFederatedCredential {
		return vs[0].(map[string]*IamWorkloadIdentityFederatedCredential)[vs[1].(string)]
	}).(IamWorkloadIdentityFederatedCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityFederatedCredentialInput)(nil)).Elem(), &IamWorkloadIdentityFederatedCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityFederatedCredentialArrayInput)(nil)).Elem(), IamWorkloadIdentityFederatedCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityFederatedCredentialMapInput)(nil)).Elem(), IamWorkloadIdentityFederatedCredentialMap{})
	pulumi.RegisterOutputType(IamWorkloadIdentityFederatedCredentialOutput{})
	pulumi.RegisterOutputType(IamWorkloadIdentityFederatedCredentialArrayOutput{})
	pulumi.RegisterOutputType(IamWorkloadIdentityFederatedCredentialMapOutput{})
}
