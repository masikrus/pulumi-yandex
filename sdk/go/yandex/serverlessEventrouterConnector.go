// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerlessEventrouterConnector struct {
	pulumi.CustomResourceState

	// ID of the bus that the connector belongs to
	BusId pulumi.StringOutput `pulumi:"busId"`
	// ID of the cloud that the connector resides in
	CloudId pulumi.StringOutput `pulumi:"cloudId"`
	// Creation timestamp
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// Description of the connector
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ID of the folder that the connector resides in
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Connector labels
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the connector
	Name pulumi.StringOutput `pulumi:"name"`
	// Data Stream source of the connector
	Yds ServerlessEventrouterConnectorYdArrayOutput `pulumi:"yds"`
	// Message Queue source of the connector
	Ymqs ServerlessEventrouterConnectorYmqArrayOutput `pulumi:"ymqs"`
}

// NewServerlessEventrouterConnector registers a new resource with the given unique name, arguments, and options.
func NewServerlessEventrouterConnector(ctx *pulumi.Context,
	name string, args *ServerlessEventrouterConnectorArgs, opts ...pulumi.ResourceOption) (*ServerlessEventrouterConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BusId == nil {
		return nil, errors.New("invalid value for required argument 'BusId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerlessEventrouterConnector
	err := ctx.RegisterResource("yandex:index/serverlessEventrouterConnector:ServerlessEventrouterConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessEventrouterConnector gets an existing ServerlessEventrouterConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessEventrouterConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessEventrouterConnectorState, opts ...pulumi.ResourceOption) (*ServerlessEventrouterConnector, error) {
	var resource ServerlessEventrouterConnector
	err := ctx.ReadResource("yandex:index/serverlessEventrouterConnector:ServerlessEventrouterConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessEventrouterConnector resources.
type serverlessEventrouterConnectorState struct {
	// ID of the bus that the connector belongs to
	BusId *string `pulumi:"busId"`
	// ID of the cloud that the connector resides in
	CloudId *string `pulumi:"cloudId"`
	// Creation timestamp
	CreatedAt *string `pulumi:"createdAt"`
	// Deletion protection
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the connector
	Description *string `pulumi:"description"`
	// ID of the folder that the connector resides in
	FolderId *string `pulumi:"folderId"`
	// Connector labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the connector
	Name *string `pulumi:"name"`
	// Data Stream source of the connector
	Yds []ServerlessEventrouterConnectorYd `pulumi:"yds"`
	// Message Queue source of the connector
	Ymqs []ServerlessEventrouterConnectorYmq `pulumi:"ymqs"`
}

type ServerlessEventrouterConnectorState struct {
	// ID of the bus that the connector belongs to
	BusId pulumi.StringPtrInput
	// ID of the cloud that the connector resides in
	CloudId pulumi.StringPtrInput
	// Creation timestamp
	CreatedAt pulumi.StringPtrInput
	// Deletion protection
	DeletionProtection pulumi.BoolPtrInput
	// Description of the connector
	Description pulumi.StringPtrInput
	// ID of the folder that the connector resides in
	FolderId pulumi.StringPtrInput
	// Connector labels
	Labels pulumi.StringMapInput
	// Name of the connector
	Name pulumi.StringPtrInput
	// Data Stream source of the connector
	Yds ServerlessEventrouterConnectorYdArrayInput
	// Message Queue source of the connector
	Ymqs ServerlessEventrouterConnectorYmqArrayInput
}

func (ServerlessEventrouterConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEventrouterConnectorState)(nil)).Elem()
}

type serverlessEventrouterConnectorArgs struct {
	// ID of the bus that the connector belongs to
	BusId string `pulumi:"busId"`
	// Deletion protection
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the connector
	Description *string `pulumi:"description"`
	// Connector labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the connector
	Name *string `pulumi:"name"`
	// Data Stream source of the connector
	Yds []ServerlessEventrouterConnectorYd `pulumi:"yds"`
	// Message Queue source of the connector
	Ymqs []ServerlessEventrouterConnectorYmq `pulumi:"ymqs"`
}

// The set of arguments for constructing a ServerlessEventrouterConnector resource.
type ServerlessEventrouterConnectorArgs struct {
	// ID of the bus that the connector belongs to
	BusId pulumi.StringInput
	// Deletion protection
	DeletionProtection pulumi.BoolPtrInput
	// Description of the connector
	Description pulumi.StringPtrInput
	// Connector labels
	Labels pulumi.StringMapInput
	// Name of the connector
	Name pulumi.StringPtrInput
	// Data Stream source of the connector
	Yds ServerlessEventrouterConnectorYdArrayInput
	// Message Queue source of the connector
	Ymqs ServerlessEventrouterConnectorYmqArrayInput
}

func (ServerlessEventrouterConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEventrouterConnectorArgs)(nil)).Elem()
}

type ServerlessEventrouterConnectorInput interface {
	pulumi.Input

	ToServerlessEventrouterConnectorOutput() ServerlessEventrouterConnectorOutput
	ToServerlessEventrouterConnectorOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorOutput
}

func (*ServerlessEventrouterConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEventrouterConnector)(nil)).Elem()
}

func (i *ServerlessEventrouterConnector) ToServerlessEventrouterConnectorOutput() ServerlessEventrouterConnectorOutput {
	return i.ToServerlessEventrouterConnectorOutputWithContext(context.Background())
}

func (i *ServerlessEventrouterConnector) ToServerlessEventrouterConnectorOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterConnectorOutput)
}

// ServerlessEventrouterConnectorArrayInput is an input type that accepts ServerlessEventrouterConnectorArray and ServerlessEventrouterConnectorArrayOutput values.
// You can construct a concrete instance of `ServerlessEventrouterConnectorArrayInput` via:
//
//	ServerlessEventrouterConnectorArray{ ServerlessEventrouterConnectorArgs{...} }
type ServerlessEventrouterConnectorArrayInput interface {
	pulumi.Input

	ToServerlessEventrouterConnectorArrayOutput() ServerlessEventrouterConnectorArrayOutput
	ToServerlessEventrouterConnectorArrayOutputWithContext(context.Context) ServerlessEventrouterConnectorArrayOutput
}

type ServerlessEventrouterConnectorArray []ServerlessEventrouterConnectorInput

func (ServerlessEventrouterConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessEventrouterConnector)(nil)).Elem()
}

func (i ServerlessEventrouterConnectorArray) ToServerlessEventrouterConnectorArrayOutput() ServerlessEventrouterConnectorArrayOutput {
	return i.ToServerlessEventrouterConnectorArrayOutputWithContext(context.Background())
}

func (i ServerlessEventrouterConnectorArray) ToServerlessEventrouterConnectorArrayOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterConnectorArrayOutput)
}

// ServerlessEventrouterConnectorMapInput is an input type that accepts ServerlessEventrouterConnectorMap and ServerlessEventrouterConnectorMapOutput values.
// You can construct a concrete instance of `ServerlessEventrouterConnectorMapInput` via:
//
//	ServerlessEventrouterConnectorMap{ "key": ServerlessEventrouterConnectorArgs{...} }
type ServerlessEventrouterConnectorMapInput interface {
	pulumi.Input

	ToServerlessEventrouterConnectorMapOutput() ServerlessEventrouterConnectorMapOutput
	ToServerlessEventrouterConnectorMapOutputWithContext(context.Context) ServerlessEventrouterConnectorMapOutput
}

type ServerlessEventrouterConnectorMap map[string]ServerlessEventrouterConnectorInput

func (ServerlessEventrouterConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessEventrouterConnector)(nil)).Elem()
}

func (i ServerlessEventrouterConnectorMap) ToServerlessEventrouterConnectorMapOutput() ServerlessEventrouterConnectorMapOutput {
	return i.ToServerlessEventrouterConnectorMapOutputWithContext(context.Background())
}

func (i ServerlessEventrouterConnectorMap) ToServerlessEventrouterConnectorMapOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEventrouterConnectorMapOutput)
}

type ServerlessEventrouterConnectorOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEventrouterConnector)(nil)).Elem()
}

func (o ServerlessEventrouterConnectorOutput) ToServerlessEventrouterConnectorOutput() ServerlessEventrouterConnectorOutput {
	return o
}

func (o ServerlessEventrouterConnectorOutput) ToServerlessEventrouterConnectorOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorOutput {
	return o
}

// ID of the bus that the connector belongs to
func (o ServerlessEventrouterConnectorOutput) BusId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringOutput { return v.BusId }).(pulumi.StringOutput)
}

// ID of the cloud that the connector resides in
func (o ServerlessEventrouterConnectorOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringOutput { return v.CloudId }).(pulumi.StringOutput)
}

// Creation timestamp
func (o ServerlessEventrouterConnectorOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Deletion protection
func (o ServerlessEventrouterConnectorOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// Description of the connector
func (o ServerlessEventrouterConnectorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the folder that the connector resides in
func (o ServerlessEventrouterConnectorOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Connector labels
func (o ServerlessEventrouterConnectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the connector
func (o ServerlessEventrouterConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Data Stream source of the connector
func (o ServerlessEventrouterConnectorOutput) Yds() ServerlessEventrouterConnectorYdArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) ServerlessEventrouterConnectorYdArrayOutput { return v.Yds }).(ServerlessEventrouterConnectorYdArrayOutput)
}

// Message Queue source of the connector
func (o ServerlessEventrouterConnectorOutput) Ymqs() ServerlessEventrouterConnectorYmqArrayOutput {
	return o.ApplyT(func(v *ServerlessEventrouterConnector) ServerlessEventrouterConnectorYmqArrayOutput { return v.Ymqs }).(ServerlessEventrouterConnectorYmqArrayOutput)
}

type ServerlessEventrouterConnectorArrayOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessEventrouterConnector)(nil)).Elem()
}

func (o ServerlessEventrouterConnectorArrayOutput) ToServerlessEventrouterConnectorArrayOutput() ServerlessEventrouterConnectorArrayOutput {
	return o
}

func (o ServerlessEventrouterConnectorArrayOutput) ToServerlessEventrouterConnectorArrayOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorArrayOutput {
	return o
}

func (o ServerlessEventrouterConnectorArrayOutput) Index(i pulumi.IntInput) ServerlessEventrouterConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessEventrouterConnector {
		return vs[0].([]*ServerlessEventrouterConnector)[vs[1].(int)]
	}).(ServerlessEventrouterConnectorOutput)
}

type ServerlessEventrouterConnectorMapOutput struct{ *pulumi.OutputState }

func (ServerlessEventrouterConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessEventrouterConnector)(nil)).Elem()
}

func (o ServerlessEventrouterConnectorMapOutput) ToServerlessEventrouterConnectorMapOutput() ServerlessEventrouterConnectorMapOutput {
	return o
}

func (o ServerlessEventrouterConnectorMapOutput) ToServerlessEventrouterConnectorMapOutputWithContext(ctx context.Context) ServerlessEventrouterConnectorMapOutput {
	return o
}

func (o ServerlessEventrouterConnectorMapOutput) MapIndex(k pulumi.StringInput) ServerlessEventrouterConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessEventrouterConnector {
		return vs[0].(map[string]*ServerlessEventrouterConnector)[vs[1].(string)]
	}).(ServerlessEventrouterConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterConnectorInput)(nil)).Elem(), &ServerlessEventrouterConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterConnectorArrayInput)(nil)).Elem(), ServerlessEventrouterConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessEventrouterConnectorMapInput)(nil)).Elem(), ServerlessEventrouterConnectorMap{})
	pulumi.RegisterOutputType(ServerlessEventrouterConnectorOutput{})
	pulumi.RegisterOutputType(ServerlessEventrouterConnectorArrayOutput{})
	pulumi.RegisterOutputType(ServerlessEventrouterConnectorMapOutput{})
}
