// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/masikrus/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MdbPostgresqlDatabase struct {
	pulumi.CustomResourceState

	// The ID of the PostgreSQL cluster.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.StringPtrOutput `pulumi:"deletionProtection"`
	// Set of database extensions.
	Extensions MdbPostgresqlDatabaseExtensionArrayOutput `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrOutput `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrOutput `pulumi:"lcType"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Name of the template database.
	TemplateDb pulumi.StringPtrOutput `pulumi:"templateDb"`
}

// NewMdbPostgresqlDatabase registers a new resource with the given unique name, arguments, and options.
func NewMdbPostgresqlDatabase(ctx *pulumi.Context,
	name string, args *MdbPostgresqlDatabaseArgs, opts ...pulumi.ResourceOption) (*MdbPostgresqlDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Owner == nil {
		return nil, errors.New("invalid value for required argument 'Owner'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MdbPostgresqlDatabase
	err := ctx.RegisterResource("yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbPostgresqlDatabase gets an existing MdbPostgresqlDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbPostgresqlDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbPostgresqlDatabaseState, opts ...pulumi.ResourceOption) (*MdbPostgresqlDatabase, error) {
	var resource MdbPostgresqlDatabase
	err := ctx.ReadResource("yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbPostgresqlDatabase resources.
type mdbPostgresqlDatabaseState struct {
	// The ID of the PostgreSQL cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Set of database extensions.
	Extensions []MdbPostgresqlDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `pulumi:"lcType"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner *string `pulumi:"owner"`
	// Name of the template database.
	TemplateDb *string `pulumi:"templateDb"`
}

type MdbPostgresqlDatabaseState struct {
	// The ID of the PostgreSQL cluster.
	ClusterId pulumi.StringPtrInput
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.StringPtrInput
	// Set of database extensions.
	Extensions MdbPostgresqlDatabaseExtensionArrayInput
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrInput
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringPtrInput
	// Name of the template database.
	TemplateDb pulumi.StringPtrInput
}

func (MdbPostgresqlDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlDatabaseState)(nil)).Elem()
}

type mdbPostgresqlDatabaseArgs struct {
	// The ID of the PostgreSQL cluster.
	ClusterId string `pulumi:"clusterId"`
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Set of database extensions.
	Extensions []MdbPostgresqlDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `pulumi:"lcType"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner string `pulumi:"owner"`
	// Name of the template database.
	TemplateDb *string `pulumi:"templateDb"`
}

// The set of arguments for constructing a MdbPostgresqlDatabase resource.
type MdbPostgresqlDatabaseArgs struct {
	// The ID of the PostgreSQL cluster.
	ClusterId pulumi.StringInput
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection pulumi.StringPtrInput
	// Set of database extensions.
	Extensions MdbPostgresqlDatabaseExtensionArrayInput
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrInput
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringInput
	// Name of the template database.
	TemplateDb pulumi.StringPtrInput
}

func (MdbPostgresqlDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlDatabaseArgs)(nil)).Elem()
}

type MdbPostgresqlDatabaseInput interface {
	pulumi.Input

	ToMdbPostgresqlDatabaseOutput() MdbPostgresqlDatabaseOutput
	ToMdbPostgresqlDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseOutput
}

func (*MdbPostgresqlDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlDatabase)(nil)).Elem()
}

func (i *MdbPostgresqlDatabase) ToMdbPostgresqlDatabaseOutput() MdbPostgresqlDatabaseOutput {
	return i.ToMdbPostgresqlDatabaseOutputWithContext(context.Background())
}

func (i *MdbPostgresqlDatabase) ToMdbPostgresqlDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlDatabaseOutput)
}

// MdbPostgresqlDatabaseArrayInput is an input type that accepts MdbPostgresqlDatabaseArray and MdbPostgresqlDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlDatabaseArrayInput` via:
//
//	MdbPostgresqlDatabaseArray{ MdbPostgresqlDatabaseArgs{...} }
type MdbPostgresqlDatabaseArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlDatabaseArrayOutput() MdbPostgresqlDatabaseArrayOutput
	ToMdbPostgresqlDatabaseArrayOutputWithContext(context.Context) MdbPostgresqlDatabaseArrayOutput
}

type MdbPostgresqlDatabaseArray []MdbPostgresqlDatabaseInput

func (MdbPostgresqlDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (i MdbPostgresqlDatabaseArray) ToMdbPostgresqlDatabaseArrayOutput() MdbPostgresqlDatabaseArrayOutput {
	return i.ToMdbPostgresqlDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlDatabaseArray) ToMdbPostgresqlDatabaseArrayOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlDatabaseArrayOutput)
}

// MdbPostgresqlDatabaseMapInput is an input type that accepts MdbPostgresqlDatabaseMap and MdbPostgresqlDatabaseMapOutput values.
// You can construct a concrete instance of `MdbPostgresqlDatabaseMapInput` via:
//
//	MdbPostgresqlDatabaseMap{ "key": MdbPostgresqlDatabaseArgs{...} }
type MdbPostgresqlDatabaseMapInput interface {
	pulumi.Input

	ToMdbPostgresqlDatabaseMapOutput() MdbPostgresqlDatabaseMapOutput
	ToMdbPostgresqlDatabaseMapOutputWithContext(context.Context) MdbPostgresqlDatabaseMapOutput
}

type MdbPostgresqlDatabaseMap map[string]MdbPostgresqlDatabaseInput

func (MdbPostgresqlDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (i MdbPostgresqlDatabaseMap) ToMdbPostgresqlDatabaseMapOutput() MdbPostgresqlDatabaseMapOutput {
	return i.ToMdbPostgresqlDatabaseMapOutputWithContext(context.Background())
}

func (i MdbPostgresqlDatabaseMap) ToMdbPostgresqlDatabaseMapOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlDatabaseMapOutput)
}

type MdbPostgresqlDatabaseOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlDatabase)(nil)).Elem()
}

func (o MdbPostgresqlDatabaseOutput) ToMdbPostgresqlDatabaseOutput() MdbPostgresqlDatabaseOutput {
	return o
}

func (o MdbPostgresqlDatabaseOutput) ToMdbPostgresqlDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseOutput {
	return o
}

// The ID of the PostgreSQL cluster.
func (o MdbPostgresqlDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The `true` value means that resource is protected from accidental deletion.
func (o MdbPostgresqlDatabaseOutput) DeletionProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.DeletionProtection }).(pulumi.StringPtrOutput)
}

// Set of database extensions.
func (o MdbPostgresqlDatabaseOutput) Extensions() MdbPostgresqlDatabaseExtensionArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) MdbPostgresqlDatabaseExtensionArrayOutput { return v.Extensions }).(MdbPostgresqlDatabaseExtensionArrayOutput)
}

// POSIX locale for string sorting order. Forbidden to change in an existing database.
func (o MdbPostgresqlDatabaseOutput) LcCollate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.LcCollate }).(pulumi.StringPtrOutput)
}

// POSIX locale for character classification. Forbidden to change in an existing database.
func (o MdbPostgresqlDatabaseOutput) LcType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.LcType }).(pulumi.StringPtrOutput)
}

// The resource name.
func (o MdbPostgresqlDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
func (o MdbPostgresqlDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Name of the template database.
func (o MdbPostgresqlDatabaseOutput) TemplateDb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.TemplateDb }).(pulumi.StringPtrOutput)
}

type MdbPostgresqlDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (o MdbPostgresqlDatabaseArrayOutput) ToMdbPostgresqlDatabaseArrayOutput() MdbPostgresqlDatabaseArrayOutput {
	return o
}

func (o MdbPostgresqlDatabaseArrayOutput) ToMdbPostgresqlDatabaseArrayOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseArrayOutput {
	return o
}

func (o MdbPostgresqlDatabaseArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MdbPostgresqlDatabase {
		return vs[0].([]*MdbPostgresqlDatabase)[vs[1].(int)]
	}).(MdbPostgresqlDatabaseOutput)
}

type MdbPostgresqlDatabaseMapOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (o MdbPostgresqlDatabaseMapOutput) ToMdbPostgresqlDatabaseMapOutput() MdbPostgresqlDatabaseMapOutput {
	return o
}

func (o MdbPostgresqlDatabaseMapOutput) ToMdbPostgresqlDatabaseMapOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseMapOutput {
	return o
}

func (o MdbPostgresqlDatabaseMapOutput) MapIndex(k pulumi.StringInput) MdbPostgresqlDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MdbPostgresqlDatabase {
		return vs[0].(map[string]*MdbPostgresqlDatabase)[vs[1].(string)]
	}).(MdbPostgresqlDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlDatabaseInput)(nil)).Elem(), &MdbPostgresqlDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlDatabaseArrayInput)(nil)).Elem(), MdbPostgresqlDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlDatabaseMapInput)(nil)).Elem(), MdbPostgresqlDatabaseMap{})
	pulumi.RegisterOutputType(MdbPostgresqlDatabaseOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlDatabaseMapOutput{})
}
