// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class AlbBackendGroupHttpBackendGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Healthcheck specification that will be used by this backend.
        /// 
        /// &gt; Only one of `stream_healthcheck` or `http_healthcheck` or `grpc_healthcheck` should be specified.
        /// </summary>
        [Input("healthcheck")]
        public Input<Inputs.AlbBackendGroupHttpBackendHealthcheckGetArgs>? Healthcheck { get; set; }

        /// <summary>
        /// Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.
        /// </summary>
        [Input("http2")]
        public Input<bool>? Http2 { get; set; }

        /// <summary>
        /// Load Balancing Config specification that will be used by this backend.
        /// </summary>
        [Input("loadBalancingConfig")]
        public Input<Inputs.AlbBackendGroupHttpBackendLoadBalancingConfigGetArgs>? LoadBalancingConfig { get; set; }

        /// <summary>
        /// Name of the backend.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Port for incoming traffic.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Name of bucket which should be used as a backend.
        /// </summary>
        [Input("storageBucket")]
        public Input<string>? StorageBucket { get; set; }

        [Input("targetGroupIds")]
        private InputList<string>? _targetGroupIds;

        /// <summary>
        /// References target groups for the backend.
        /// </summary>
        public InputList<string> TargetGroupIds
        {
            get => _targetGroupIds ?? (_targetGroupIds = new InputList<string>());
            set => _targetGroupIds = value;
        }

        /// <summary>
        /// TLS specification that will be used by this backend.
        /// 
        /// &gt; Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.
        /// </summary>
        [Input("tls")]
        public Input<Inputs.AlbBackendGroupHttpBackendTlsGetArgs>? Tls { get; set; }

        /// <summary>
        /// Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public AlbBackendGroupHttpBackendGetArgs()
        {
        }
        public static new AlbBackendGroupHttpBackendGetArgs Empty => new AlbBackendGroupHttpBackendGetArgs();
    }
}
