// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class DatatransferEndpointSettingsYdbTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How to clean collections when activating the transfer. One of `YDB_CLEANUP_POLICY_DISABLED` or `YDB_CLEANUP_POLICY_DROP`.
        /// </summary>
        [Input("cleanupPolicy")]
        public Input<string>? CleanupPolicy { get; set; }

        /// <summary>
        /// Database path in YDB where tables are stored. Example: `/ru/transfer_manager/prod/data-transfer-yt`.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// Compression that will be used for default columns family on YDB table creation One of `YDB_DEFAULT_COMPRESSION_UNSPECIFIED`, `YDB_DEFAULT_COMPRESSION_DISABLED`, `YDB_DEFAULT_COMPRESSION_LZ4`.
        /// </summary>
        [Input("defaultCompression")]
        public Input<string>? DefaultCompression { get; set; }

        /// <summary>
        /// Instance of YDB. Example: `my-cute-ydb.yandex.cloud:2135`.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// Whether a column-oriented (i.e. OLAP) tables should be created. Default is `false` (create row-oriented OLTP tables).
        /// </summary>
        [Input("isTableColumnOriented")]
        public Input<bool>? IsTableColumnOriented { get; set; }

        /// <summary>
        /// A path where resulting tables are stored.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("saKeyContent")]
        private Input<string>? _saKeyContent;

        /// <summary>
        /// Authentication key.
        /// </summary>
        public Input<string>? SaKeyContent
        {
            get => _saKeyContent;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saKeyContent = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// List of security groups that the transfer associated with this endpoint should use.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// Service account ID for interaction with database.
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        /// <summary>
        /// Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public DatatransferEndpointSettingsYdbTargetArgs()
        {
        }
        public static new DatatransferEndpointSettingsYdbTargetArgs Empty => new DatatransferEndpointSettingsYdbTargetArgs();
    }
}
