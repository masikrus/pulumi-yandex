// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class AlbVirtualHostRouteHttpRouteGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Direct response action resource.
        /// </summary>
        [Input("directResponseAction")]
        public Input<Inputs.AlbVirtualHostRouteHttpRouteDirectResponseActionGetArgs>? DirectResponseAction { get; set; }

        [Input("httpMatches")]
        private InputList<Inputs.AlbVirtualHostRouteHttpRouteHttpMatchGetArgs>? _httpMatches;

        /// <summary>
        /// Checks `/` prefix by default.
        /// </summary>
        public InputList<Inputs.AlbVirtualHostRouteHttpRouteHttpMatchGetArgs> HttpMatches
        {
            get => _httpMatches ?? (_httpMatches = new InputList<Inputs.AlbVirtualHostRouteHttpRouteHttpMatchGetArgs>());
            set => _httpMatches = value;
        }

        /// <summary>
        /// HTTP route action resource.
        /// 
        /// &gt; Only one type of host rewrite specifiers `host_rewrite` or `auto_host_rewrite` should be specified.
        /// </summary>
        [Input("httpRouteAction")]
        public Input<Inputs.AlbVirtualHostRouteHttpRouteHttpRouteActionGetArgs>? HttpRouteAction { get; set; }

        /// <summary>
        /// Redirect action resource.
        /// 
        /// &gt; Only one type of paths `replace_path` or `replace_prefix` should be specified.
        /// </summary>
        [Input("redirectAction")]
        public Input<Inputs.AlbVirtualHostRouteHttpRouteRedirectActionGetArgs>? RedirectAction { get; set; }

        public AlbVirtualHostRouteHttpRouteGetArgs()
        {
        }
        public static new AlbVirtualHostRouteHttpRouteGetArgs Empty => new AlbVirtualHostRouteHttpRouteGetArgs();
    }
}
