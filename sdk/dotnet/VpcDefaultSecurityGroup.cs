// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/vpcDefaultSecurityGroup:VpcDefaultSecurityGroup")]
    public partial class VpcDefaultSecurityGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The resource description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A list of egress rules.
        /// </summary>
        [Output("egresses")]
        public Output<ImmutableArray<Outputs.VpcDefaultSecurityGroupEgress>> Egresses { get; private set; } = null!;

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// A list of ingress rules.
        /// </summary>
        [Output("ingresses")]
        public Output<ImmutableArray<Outputs.VpcDefaultSecurityGroupIngress>> Ingresses { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The resource name. Cannot be updated.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of the network this security group belongs to.
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Status of this security group.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a VpcDefaultSecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcDefaultSecurityGroup(string name, VpcDefaultSecurityGroupArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/vpcDefaultSecurityGroup:VpcDefaultSecurityGroup", name, args ?? new VpcDefaultSecurityGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcDefaultSecurityGroup(string name, Input<string> id, VpcDefaultSecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/vpcDefaultSecurityGroup:VpcDefaultSecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcDefaultSecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcDefaultSecurityGroup Get(string name, Input<string> id, VpcDefaultSecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcDefaultSecurityGroup(name, id, state, options);
        }
    }

    public sealed class VpcDefaultSecurityGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("egresses")]
        private InputList<Inputs.VpcDefaultSecurityGroupEgressArgs>? _egresses;

        /// <summary>
        /// A list of egress rules.
        /// </summary>
        public InputList<Inputs.VpcDefaultSecurityGroupEgressArgs> Egresses
        {
            get => _egresses ?? (_egresses = new InputList<Inputs.VpcDefaultSecurityGroupEgressArgs>());
            set => _egresses = value;
        }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("ingresses")]
        private InputList<Inputs.VpcDefaultSecurityGroupIngressArgs>? _ingresses;

        /// <summary>
        /// A list of ingress rules.
        /// </summary>
        public InputList<Inputs.VpcDefaultSecurityGroupIngressArgs> Ingresses
        {
            get => _ingresses ?? (_ingresses = new InputList<Inputs.VpcDefaultSecurityGroupIngressArgs>());
            set => _ingresses = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// ID of the network this security group belongs to.
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        public VpcDefaultSecurityGroupArgs()
        {
        }
        public static new VpcDefaultSecurityGroupArgs Empty => new VpcDefaultSecurityGroupArgs();
    }

    public sealed class VpcDefaultSecurityGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("egresses")]
        private InputList<Inputs.VpcDefaultSecurityGroupEgressGetArgs>? _egresses;

        /// <summary>
        /// A list of egress rules.
        /// </summary>
        public InputList<Inputs.VpcDefaultSecurityGroupEgressGetArgs> Egresses
        {
            get => _egresses ?? (_egresses = new InputList<Inputs.VpcDefaultSecurityGroupEgressGetArgs>());
            set => _egresses = value;
        }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("ingresses")]
        private InputList<Inputs.VpcDefaultSecurityGroupIngressGetArgs>? _ingresses;

        /// <summary>
        /// A list of ingress rules.
        /// </summary>
        public InputList<Inputs.VpcDefaultSecurityGroupIngressGetArgs> Ingresses
        {
            get => _ingresses ?? (_ingresses = new InputList<Inputs.VpcDefaultSecurityGroupIngressGetArgs>());
            set => _ingresses = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name. Cannot be updated.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the network this security group belongs to.
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Status of this security group.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public VpcDefaultSecurityGroupState()
        {
        }
        public static new VpcDefaultSecurityGroupState Empty => new VpcDefaultSecurityGroupState();
    }
}
