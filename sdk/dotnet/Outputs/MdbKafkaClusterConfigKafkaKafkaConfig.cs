// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class MdbKafkaClusterConfigKafkaKafkaConfig
    {
        /// <summary>
        /// Enable auto creation of topic on the server.
        /// </summary>
        public readonly bool? AutoCreateTopicsEnable;
        /// <summary>
        /// Compression type of kafka topics.
        /// </summary>
        public readonly string? CompressionType;
        /// <summary>
        /// The replication factor for automatically created topics, and for topics created with -1 as the replication factor.
        /// </summary>
        public readonly string? DefaultReplicationFactor;
        /// <summary>
        /// The number of messages accumulated on a log partition before messages are flushed to disk.
        /// </summary>
        public readonly string? LogFlushIntervalMessages;
        /// <summary>
        /// The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
        /// </summary>
        public readonly string? LogFlushIntervalMs;
        /// <summary>
        /// The frequency in ms that the log flusher checks whether any log needs to be flushed to disk.
        /// </summary>
        public readonly string? LogFlushSchedulerIntervalMs;
        /// <summary>
        /// Should pre allocate file when create new segment?
        /// </summary>
        public readonly bool? LogPreallocate;
        /// <summary>
        /// The maximum size of the log before deleting it.
        /// </summary>
        public readonly string? LogRetentionBytes;
        /// <summary>
        /// The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property.
        /// </summary>
        public readonly string? LogRetentionHours;
        /// <summary>
        /// The number of minutes to keep a log file before deleting it (in minutes), secondary to log.retention.ms property. If not set, the value in log.retention.hours is used.
        /// </summary>
        public readonly string? LogRetentionMinutes;
        /// <summary>
        /// The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.
        /// </summary>
        public readonly string? LogRetentionMs;
        /// <summary>
        /// The maximum size of a single log file.
        /// </summary>
        public readonly string? LogSegmentBytes;
        /// <summary>
        /// The largest record batch size allowed by Kafka (after compression if compression is enabled).
        /// </summary>
        public readonly string? MessageMaxBytes;
        /// <summary>
        /// The default number of log partitions per topic.
        /// </summary>
        public readonly string? NumPartitions;
        /// <summary>
        /// For subscribed consumers, committed offset of a specific partition will be expired and discarded after this period of time.
        /// </summary>
        public readonly string? OffsetsRetentionMinutes;
        /// <summary>
        /// The number of bytes of messages to attempt to fetch for each partition.
        /// </summary>
        public readonly string? ReplicaFetchMaxBytes;
        /// <summary>
        /// The list of SASL mechanisms enabled in the Kafka server.
        /// </summary>
        public readonly ImmutableArray<string> SaslEnabledMechanisms;
        /// <summary>
        /// The SO_RCVBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.
        /// </summary>
        public readonly string? SocketReceiveBufferBytes;
        /// <summary>
        /// The SO_SNDBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.
        /// </summary>
        public readonly string? SocketSendBufferBytes;
        /// <summary>
        /// A list of cipher suites.
        /// </summary>
        public readonly ImmutableArray<string> SslCipherSuites;

        [OutputConstructor]
        private MdbKafkaClusterConfigKafkaKafkaConfig(
            bool? autoCreateTopicsEnable,

            string? compressionType,

            string? defaultReplicationFactor,

            string? logFlushIntervalMessages,

            string? logFlushIntervalMs,

            string? logFlushSchedulerIntervalMs,

            bool? logPreallocate,

            string? logRetentionBytes,

            string? logRetentionHours,

            string? logRetentionMinutes,

            string? logRetentionMs,

            string? logSegmentBytes,

            string? messageMaxBytes,

            string? numPartitions,

            string? offsetsRetentionMinutes,

            string? replicaFetchMaxBytes,

            ImmutableArray<string> saslEnabledMechanisms,

            string? socketReceiveBufferBytes,

            string? socketSendBufferBytes,

            ImmutableArray<string> sslCipherSuites)
        {
            AutoCreateTopicsEnable = autoCreateTopicsEnable;
            CompressionType = compressionType;
            DefaultReplicationFactor = defaultReplicationFactor;
            LogFlushIntervalMessages = logFlushIntervalMessages;
            LogFlushIntervalMs = logFlushIntervalMs;
            LogFlushSchedulerIntervalMs = logFlushSchedulerIntervalMs;
            LogPreallocate = logPreallocate;
            LogRetentionBytes = logRetentionBytes;
            LogRetentionHours = logRetentionHours;
            LogRetentionMinutes = logRetentionMinutes;
            LogRetentionMs = logRetentionMs;
            LogSegmentBytes = logSegmentBytes;
            MessageMaxBytes = messageMaxBytes;
            NumPartitions = numPartitions;
            OffsetsRetentionMinutes = offsetsRetentionMinutes;
            ReplicaFetchMaxBytes = replicaFetchMaxBytes;
            SaslEnabledMechanisms = saslEnabledMechanisms;
            SocketReceiveBufferBytes = socketReceiveBufferBytes;
            SocketSendBufferBytes = socketSendBufferBytes;
            SslCipherSuites = sslCipherSuites;
        }
    }
}
