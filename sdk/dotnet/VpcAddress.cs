// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/vpcAddress:VpcAddress")]
    public partial class VpcAddress : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// The resource description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// DNS record specification of address.
        /// </summary>
        [Output("dnsRecords")]
        public Output<ImmutableArray<Outputs.VpcAddressDnsRecord>> DnsRecords { get; private set; } = null!;

        /// <summary>
        /// Specification of IPv4 address. &gt; Either one `address` or `zone_id` arguments can be specified. &gt; Either one
        /// `ddos_protection_provider` or `outgoing_smtp_capability` arguments can be specified. &gt; Change any argument in
        /// `external_ipv4_address` will cause an address recreate.
        /// </summary>
        [Output("externalIpv4Address")]
        public Output<Outputs.VpcAddressExternalIpv4Address?> ExternalIpv4Address { get; private set; } = null!;

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// `false` means that address is ephemeral.
        /// </summary>
        [Output("reserved")]
        public Output<bool> Reserved { get; private set; } = null!;

        /// <summary>
        /// `true` if address is used.
        /// </summary>
        [Output("used")]
        public Output<bool> Used { get; private set; } = null!;


        /// <summary>
        /// Create a VpcAddress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcAddress(string name, VpcAddressArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/vpcAddress:VpcAddress", name, args ?? new VpcAddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcAddress(string name, Input<string> id, VpcAddressState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/vpcAddress:VpcAddress", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcAddress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcAddress Get(string name, Input<string> id, VpcAddressState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcAddress(name, id, state, options);
        }
    }

    public sealed class VpcAddressArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dnsRecords")]
        private InputList<Inputs.VpcAddressDnsRecordArgs>? _dnsRecords;

        /// <summary>
        /// DNS record specification of address.
        /// </summary>
        public InputList<Inputs.VpcAddressDnsRecordArgs> DnsRecords
        {
            get => _dnsRecords ?? (_dnsRecords = new InputList<Inputs.VpcAddressDnsRecordArgs>());
            set => _dnsRecords = value;
        }

        /// <summary>
        /// Specification of IPv4 address. &gt; Either one `address` or `zone_id` arguments can be specified. &gt; Either one
        /// `ddos_protection_provider` or `outgoing_smtp_capability` arguments can be specified. &gt; Change any argument in
        /// `external_ipv4_address` will cause an address recreate.
        /// </summary>
        [Input("externalIpv4Address")]
        public Input<Inputs.VpcAddressExternalIpv4AddressArgs>? ExternalIpv4Address { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public VpcAddressArgs()
        {
        }
        public static new VpcAddressArgs Empty => new VpcAddressArgs();
    }

    public sealed class VpcAddressState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dnsRecords")]
        private InputList<Inputs.VpcAddressDnsRecordGetArgs>? _dnsRecords;

        /// <summary>
        /// DNS record specification of address.
        /// </summary>
        public InputList<Inputs.VpcAddressDnsRecordGetArgs> DnsRecords
        {
            get => _dnsRecords ?? (_dnsRecords = new InputList<Inputs.VpcAddressDnsRecordGetArgs>());
            set => _dnsRecords = value;
        }

        /// <summary>
        /// Specification of IPv4 address. &gt; Either one `address` or `zone_id` arguments can be specified. &gt; Either one
        /// `ddos_protection_provider` or `outgoing_smtp_capability` arguments can be specified. &gt; Change any argument in
        /// `external_ipv4_address` will cause an address recreate.
        /// </summary>
        [Input("externalIpv4Address")]
        public Input<Inputs.VpcAddressExternalIpv4AddressGetArgs>? ExternalIpv4Address { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `false` means that address is ephemeral.
        /// </summary>
        [Input("reserved")]
        public Input<bool>? Reserved { get; set; }

        /// <summary>
        /// `true` if address is used.
        /// </summary>
        [Input("used")]
        public Input<bool>? Used { get; set; }

        public VpcAddressState()
        {
        }
        public static new VpcAddressState Empty => new VpcAddressState();
    }
}
