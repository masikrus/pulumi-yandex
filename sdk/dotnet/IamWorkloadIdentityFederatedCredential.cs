// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/iamWorkloadIdentityFederatedCredential:IamWorkloadIdentityFederatedCredential")]
    public partial class IamWorkloadIdentityFederatedCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Id of the external subject.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Id of the workload identity federation which is used for authentication.
        /// </summary>
        [Output("externalSubjectId")]
        public Output<string> ExternalSubjectId { get; private set; } = null!;

        /// <summary>
        /// Id of the federated credential.
        /// </summary>
        [Output("federationId")]
        public Output<string> FederationId { get; private set; } = null!;

        /// <summary>
        /// Id of the service account that the federated credential belongs to.
        /// </summary>
        [Output("serviceAccountId")]
        public Output<string> ServiceAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a IamWorkloadIdentityFederatedCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamWorkloadIdentityFederatedCredential(string name, IamWorkloadIdentityFederatedCredentialArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/iamWorkloadIdentityFederatedCredential:IamWorkloadIdentityFederatedCredential", name, args ?? new IamWorkloadIdentityFederatedCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamWorkloadIdentityFederatedCredential(string name, Input<string> id, IamWorkloadIdentityFederatedCredentialState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/iamWorkloadIdentityFederatedCredential:IamWorkloadIdentityFederatedCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamWorkloadIdentityFederatedCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamWorkloadIdentityFederatedCredential Get(string name, Input<string> id, IamWorkloadIdentityFederatedCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new IamWorkloadIdentityFederatedCredential(name, id, state, options);
        }
    }

    public sealed class IamWorkloadIdentityFederatedCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Id of the workload identity federation which is used for authentication.
        /// </summary>
        [Input("externalSubjectId", required: true)]
        public Input<string> ExternalSubjectId { get; set; } = null!;

        /// <summary>
        /// Id of the federated credential.
        /// </summary>
        [Input("federationId", required: true)]
        public Input<string> FederationId { get; set; } = null!;

        /// <summary>
        /// Id of the service account that the federated credential belongs to.
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        public IamWorkloadIdentityFederatedCredentialArgs()
        {
        }
        public static new IamWorkloadIdentityFederatedCredentialArgs Empty => new IamWorkloadIdentityFederatedCredentialArgs();
    }

    public sealed class IamWorkloadIdentityFederatedCredentialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Id of the external subject.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Id of the workload identity federation which is used for authentication.
        /// </summary>
        [Input("externalSubjectId")]
        public Input<string>? ExternalSubjectId { get; set; }

        /// <summary>
        /// Id of the federated credential.
        /// </summary>
        [Input("federationId")]
        public Input<string>? FederationId { get; set; }

        /// <summary>
        /// Id of the service account that the federated credential belongs to.
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        public IamWorkloadIdentityFederatedCredentialState()
        {
        }
        public static new IamWorkloadIdentityFederatedCredentialState Empty => new IamWorkloadIdentityFederatedCredentialState();
    }
}
