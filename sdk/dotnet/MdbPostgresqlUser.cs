// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/mdbPostgresqlUser:MdbPostgresqlUser")]
    public partial class MdbPostgresqlUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the PostgreSQL cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The maximum number of connections per user. (Default 50).
        /// </summary>
        [Output("connLimit")]
        public Output<int> ConnLimit { get; private set; } = null!;

        /// <summary>
        /// Connection Manager connection configuration. Filled in by the server automatically.
        /// </summary>
        [Output("connectionManager")]
        public Output<ImmutableDictionary<string, string>> ConnectionManager { get; private set; } = null!;

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Output("deletionProtection")]
        public Output<string?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is
        /// ignored during updating. &gt; **Must specify either password or generate_password**.
        /// </summary>
        [Output("generatePassword")]
        public Output<bool?> GeneratePassword { get; private set; } = null!;

        /// <summary>
        /// List of the user's grants.
        /// </summary>
        [Output("grants")]
        public Output<ImmutableArray<string>> Grants { get; private set; } = null!;

        /// <summary>
        /// User's ability to login.
        /// </summary>
        [Output("login")]
        public Output<bool?> Login { get; private set; } = null!;

        /// <summary>
        /// The name of the user.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The password of the user.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// Set of permissions granted to the user.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Outputs.MdbPostgresqlUserPermission>> Permissions { get; private set; } = null!;

        /// <summary>
        /// Map of user settings. [Full
        /// description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
        /// * `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:
        /// - 0: `unspecified` - 1: `read uncommitted` - 2: `read committed` - 3: `repeatable read` - 4: `serializable` *
        /// `lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index,
        /// row or other database object (default 0) * `log_min_duration_statement` - This setting controls logging of the duration
        /// of statements. (default -1 disables logging of the duration of statements.) * `synchronous_commit` - This setting
        /// defines whether DBMS will commit transaction in a synchronous way. One of: - 0: `unspecified` - 1: `on` - 2: `off` - 3:
        /// `local` - 4: `remote write` - 5: `remote apply` * `temp_file_limit` - The maximum storage space size (in kilobytes) that
        /// a single process can use to create temporary files. * `log_statement` - This setting specifies which SQL statements
        /// should be logged (on the user level). One of: - 0: `unspecified` - 1: `none` - 2: `ddl` - 3: `mod` - 4: `all` *
        /// `pool_mode` - Mode that the connection pooler is working in with specified user. One of: - 1: `session` - 2:
        /// `transaction` - 3: `statement` * `prepared_statements_pooling` - This setting allows user to use prepared statements
        /// with transaction pooling. Boolean. * `catchup_timeout` - The connection pooler setting. It determines the maximum
        /// allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold.
        /// Default value is 0, which disables this feature. Integer. * `wal_sender_timeout` - The maximum time (in milliseconds) to
        /// wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for
        /// longer than this amount of time. Integer. * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time
        /// (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer. *
        /// `statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the
        /// timeout. Integer
        /// </summary>
        [Output("settings")]
        public Output<ImmutableDictionary<string, string>?> Settings { get; private set; } = null!;


        /// <summary>
        /// Create a MdbPostgresqlUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MdbPostgresqlUser(string name, MdbPostgresqlUserArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/mdbPostgresqlUser:MdbPostgresqlUser", name, args ?? new MdbPostgresqlUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MdbPostgresqlUser(string name, Input<string> id, MdbPostgresqlUserState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/mdbPostgresqlUser:MdbPostgresqlUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MdbPostgresqlUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MdbPostgresqlUser Get(string name, Input<string> id, MdbPostgresqlUserState? state = null, CustomResourceOptions? options = null)
        {
            return new MdbPostgresqlUser(name, id, state, options);
        }
    }

    public sealed class MdbPostgresqlUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the PostgreSQL cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The maximum number of connections per user. (Default 50).
        /// </summary>
        [Input("connLimit")]
        public Input<int>? ConnLimit { get; set; }

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public Input<string>? DeletionProtection { get; set; }

        /// <summary>
        /// Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is
        /// ignored during updating. &gt; **Must specify either password or generate_password**.
        /// </summary>
        [Input("generatePassword")]
        public Input<bool>? GeneratePassword { get; set; }

        [Input("grants")]
        private InputList<string>? _grants;

        /// <summary>
        /// List of the user's grants.
        /// </summary>
        public InputList<string> Grants
        {
            get => _grants ?? (_grants = new InputList<string>());
            set => _grants = value;
        }

        /// <summary>
        /// User's ability to login.
        /// </summary>
        [Input("login")]
        public Input<bool>? Login { get; set; }

        /// <summary>
        /// The name of the user.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password of the user.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("permissions")]
        private InputList<Inputs.MdbPostgresqlUserPermissionArgs>? _permissions;

        /// <summary>
        /// Set of permissions granted to the user.
        /// </summary>
        public InputList<Inputs.MdbPostgresqlUserPermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.MdbPostgresqlUserPermissionArgs>());
            set => _permissions = value;
        }

        [Input("settings")]
        private InputMap<string>? _settings;

        /// <summary>
        /// Map of user settings. [Full
        /// description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
        /// * `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:
        /// - 0: `unspecified` - 1: `read uncommitted` - 2: `read committed` - 3: `repeatable read` - 4: `serializable` *
        /// `lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index,
        /// row or other database object (default 0) * `log_min_duration_statement` - This setting controls logging of the duration
        /// of statements. (default -1 disables logging of the duration of statements.) * `synchronous_commit` - This setting
        /// defines whether DBMS will commit transaction in a synchronous way. One of: - 0: `unspecified` - 1: `on` - 2: `off` - 3:
        /// `local` - 4: `remote write` - 5: `remote apply` * `temp_file_limit` - The maximum storage space size (in kilobytes) that
        /// a single process can use to create temporary files. * `log_statement` - This setting specifies which SQL statements
        /// should be logged (on the user level). One of: - 0: `unspecified` - 1: `none` - 2: `ddl` - 3: `mod` - 4: `all` *
        /// `pool_mode` - Mode that the connection pooler is working in with specified user. One of: - 1: `session` - 2:
        /// `transaction` - 3: `statement` * `prepared_statements_pooling` - This setting allows user to use prepared statements
        /// with transaction pooling. Boolean. * `catchup_timeout` - The connection pooler setting. It determines the maximum
        /// allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold.
        /// Default value is 0, which disables this feature. Integer. * `wal_sender_timeout` - The maximum time (in milliseconds) to
        /// wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for
        /// longer than this amount of time. Integer. * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time
        /// (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer. *
        /// `statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the
        /// timeout. Integer
        /// </summary>
        public InputMap<string> Settings
        {
            get => _settings ?? (_settings = new InputMap<string>());
            set => _settings = value;
        }

        public MdbPostgresqlUserArgs()
        {
        }
        public static new MdbPostgresqlUserArgs Empty => new MdbPostgresqlUserArgs();
    }

    public sealed class MdbPostgresqlUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the PostgreSQL cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The maximum number of connections per user. (Default 50).
        /// </summary>
        [Input("connLimit")]
        public Input<int>? ConnLimit { get; set; }

        [Input("connectionManager")]
        private InputMap<string>? _connectionManager;

        /// <summary>
        /// Connection Manager connection configuration. Filled in by the server automatically.
        /// </summary>
        public InputMap<string> ConnectionManager
        {
            get => _connectionManager ?? (_connectionManager = new InputMap<string>());
            set => _connectionManager = value;
        }

        /// <summary>
        /// The `true` value means that resource is protected from accidental deletion.
        /// </summary>
        [Input("deletionProtection")]
        public Input<string>? DeletionProtection { get; set; }

        /// <summary>
        /// Generate password using Connection Manager. Allowed values: true or false. It's used only during user creation and is
        /// ignored during updating. &gt; **Must specify either password or generate_password**.
        /// </summary>
        [Input("generatePassword")]
        public Input<bool>? GeneratePassword { get; set; }

        [Input("grants")]
        private InputList<string>? _grants;

        /// <summary>
        /// List of the user's grants.
        /// </summary>
        public InputList<string> Grants
        {
            get => _grants ?? (_grants = new InputList<string>());
            set => _grants = value;
        }

        /// <summary>
        /// User's ability to login.
        /// </summary>
        [Input("login")]
        public Input<bool>? Login { get; set; }

        /// <summary>
        /// The name of the user.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password of the user.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("permissions")]
        private InputList<Inputs.MdbPostgresqlUserPermissionGetArgs>? _permissions;

        /// <summary>
        /// Set of permissions granted to the user.
        /// </summary>
        public InputList<Inputs.MdbPostgresqlUserPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.MdbPostgresqlUserPermissionGetArgs>());
            set => _permissions = value;
        }

        [Input("settings")]
        private InputMap<string>? _settings;

        /// <summary>
        /// Map of user settings. [Full
        /// description](https://yandex.cloud/docs/managed-postgresql/api-ref/grpc/Cluster/create#yandex.cloud.mdb.postgresql.v1.UserSettings).
        /// * `default_transaction_isolation` - defines the default isolation level to be set for all new SQL transactions. One of:
        /// - 0: `unspecified` - 1: `read uncommitted` - 2: `read committed` - 3: `repeatable read` - 4: `serializable` *
        /// `lock_timeout` - The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index,
        /// row or other database object (default 0) * `log_min_duration_statement` - This setting controls logging of the duration
        /// of statements. (default -1 disables logging of the duration of statements.) * `synchronous_commit` - This setting
        /// defines whether DBMS will commit transaction in a synchronous way. One of: - 0: `unspecified` - 1: `on` - 2: `off` - 3:
        /// `local` - 4: `remote write` - 5: `remote apply` * `temp_file_limit` - The maximum storage space size (in kilobytes) that
        /// a single process can use to create temporary files. * `log_statement` - This setting specifies which SQL statements
        /// should be logged (on the user level). One of: - 0: `unspecified` - 1: `none` - 2: `ddl` - 3: `mod` - 4: `all` *
        /// `pool_mode` - Mode that the connection pooler is working in with specified user. One of: - 1: `session` - 2:
        /// `transaction` - 3: `statement` * `prepared_statements_pooling` - This setting allows user to use prepared statements
        /// with transaction pooling. Boolean. * `catchup_timeout` - The connection pooler setting. It determines the maximum
        /// allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold.
        /// Default value is 0, which disables this feature. Integer. * `wal_sender_timeout` - The maximum time (in milliseconds) to
        /// wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for
        /// longer than this amount of time. Integer. * `idle_in_transaction_session_timeout` - Sets the maximum allowed idle time
        /// (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer. *
        /// `statement_timeout` - The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the
        /// timeout. Integer
        /// </summary>
        public InputMap<string> Settings
        {
            get => _settings ?? (_settings = new InputMap<string>());
            set => _settings = value;
        }

        public MdbPostgresqlUserState()
        {
        }
        public static new MdbPostgresqlUserState Empty => new MdbPostgresqlUserState();
    }
}
