// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/computePlacementGroup:ComputePlacementGroup")]
    public partial class ComputePlacementGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The resource description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with
        /// placement_strategy_spread).
        /// </summary>
        [Output("placementStrategyPartitions")]
        public Output<int?> PlacementStrategyPartitions { get; private set; } = null!;

        /// <summary>
        /// A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with
        /// placement_strategy_partitions).
        /// </summary>
        [Output("placementStrategySpread")]
        public Output<bool?> PlacementStrategySpread { get; private set; } = null!;


        /// <summary>
        /// Create a ComputePlacementGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ComputePlacementGroup(string name, ComputePlacementGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/computePlacementGroup:ComputePlacementGroup", name, args ?? new ComputePlacementGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ComputePlacementGroup(string name, Input<string> id, ComputePlacementGroupState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/computePlacementGroup:ComputePlacementGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ComputePlacementGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ComputePlacementGroup Get(string name, Input<string> id, ComputePlacementGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ComputePlacementGroup(name, id, state, options);
        }
    }

    public sealed class ComputePlacementGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with
        /// placement_strategy_spread).
        /// </summary>
        [Input("placementStrategyPartitions")]
        public Input<int>? PlacementStrategyPartitions { get; set; }

        /// <summary>
        /// A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with
        /// placement_strategy_partitions).
        /// </summary>
        [Input("placementStrategySpread")]
        public Input<bool>? PlacementStrategySpread { get; set; }

        public ComputePlacementGroupArgs()
        {
        }
        public static new ComputePlacementGroupArgs Empty => new ComputePlacementGroupArgs();
    }

    public sealed class ComputePlacementGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with
        /// placement_strategy_spread).
        /// </summary>
        [Input("placementStrategyPartitions")]
        public Input<int>? PlacementStrategyPartitions { get; set; }

        /// <summary>
        /// A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with
        /// placement_strategy_partitions).
        /// </summary>
        [Input("placementStrategySpread")]
        public Input<bool>? PlacementStrategySpread { get; set; }

        public ComputePlacementGroupState()
        {
        }
        public static new ComputePlacementGroupState Empty => new ComputePlacementGroupState();
    }
}
