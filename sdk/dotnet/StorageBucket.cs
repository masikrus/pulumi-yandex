// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/storageBucket:StorageBucket")]
    public partial class StorageBucket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in
        /// provider config (explicitly or within `shared_credentials_file`) is used.
        /// </summary>
        [Output("accessKey")]
        public Output<string?> AccessKey { get; private set; } = null!;

        /// <summary>
        /// The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.
        /// Conflicts with `grant`. &gt; To change ACL after creation, service account with `storage.admin` role should be used, though
        /// this role is not necessary to create a bucket with any ACL.
        /// </summary>
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        /// <summary>
        /// Provides various access to objects. See [Bucket
        /// Availability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.
        /// </summary>
        [Output("anonymousAccessFlags")]
        public Output<Outputs.StorageBucketAnonymousAccessFlags> AnonymousAccessFlags { get; private set; } = null!;

        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The bucket domain name.
        /// </summary>
        [Output("bucketDomainName")]
        public Output<string> BucketDomainName { get; private set; } = null!;

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
        /// </summary>
        [Output("bucketPrefix")]
        public Output<string?> BucketPrefix { get; private set; } = null!;

        /// <summary>
        /// A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).
        /// </summary>
        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.StorageBucketCorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is
        /// `"STANDARD"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.
        /// </summary>
        [Output("defaultStorageClass")]
        public Output<string> DefaultStorageClass { get; private set; } = null!;

        /// <summary>
        /// Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to
        /// explicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are
        /// using IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to
        /// create the resource in a different folder than the account folder. &gt; It will try to create bucket using `IAM-token`, not
        /// using `access keys`.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without
        /// error. These objects are *not* recoverable. Default is `false`.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. &gt; To
        /// manage `grant` argument, service account with `storage.admin` role should be used.
        /// </summary>
        [Output("grants")]
        public Output<ImmutableArray<Outputs.StorageBucketGrant>> Grants { get; private set; } = null!;

        /// <summary>
        /// Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for
        /// more information.
        /// </summary>
        [Output("https")]
        public Output<Outputs.StorageBucketHttps?> Https { get; private set; } = null!;

        /// <summary>
        /// A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).
        /// </summary>
        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.StorageBucketLifecycleRule>> LifecycleRules { get; private set; } = null!;

        /// <summary>
        /// A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).
        /// </summary>
        [Output("loggings")]
        public Output<ImmutableArray<Outputs.StorageBucketLogging>> Loggings { get; private set; } = null!;

        /// <summary>
        /// The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)
        /// for more information.
        /// </summary>
        [Output("maxSize")]
        public Output<int?> MaxSize { get; private set; } = null!;

        /// <summary>
        /// A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).
        /// </summary>
        [Output("objectLockConfiguration")]
        public Output<Outputs.StorageBucketObjectLockConfiguration?> ObjectLockConfiguration { get; private set; } = null!;

        /// <summary>
        /// The `policy` object should contain the only field with the text of the policy. See [policy
        /// documentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.
        /// </summary>
        [Output("policy")]
        public Output<string?> Policy { get; private set; } = null!;

        /// <summary>
        /// The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in
        /// provider config (explicitly or within `shared_credentials_file`) is used.
        /// </summary>
        [Output("secretKey")]
        public Output<string?> SecretKey { get; private set; } = null!;

        /// <summary>
        /// A configuration of server-side encryption for the bucket.
        /// </summary>
        [Output("serverSideEncryptionConfiguration")]
        public Output<Outputs.StorageBucketServerSideEncryptionConfiguration?> ServerSideEncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)
        /// for more information.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). &gt; To manage `versioning` argument,
        /// service account with `storage.admin` role should be used.
        /// </summary>
        [Output("versioning")]
        public Output<Outputs.StorageBucketVersioning> Versioning { get; private set; } = null!;

        /// <summary>
        /// A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)
        /// </summary>
        [Output("website")]
        public Output<Outputs.StorageBucketWebsite?> Website { get; private set; } = null!;

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a StorageBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageBucket(string name, StorageBucketArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/storageBucket:StorageBucket", name, args ?? new StorageBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageBucket(string name, Input<string> id, StorageBucketState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/storageBucket:StorageBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "secretKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageBucket Get(string name, Input<string> id, StorageBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new StorageBucket(name, id, state, options);
        }
    }

    public sealed class StorageBucketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in
        /// provider config (explicitly or within `shared_credentials_file`) is used.
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.
        /// Conflicts with `grant`. &gt; To change ACL after creation, service account with `storage.admin` role should be used, though
        /// this role is not necessary to create a bucket with any ACL.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// Provides various access to objects. See [Bucket
        /// Availability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.
        /// </summary>
        [Input("anonymousAccessFlags")]
        public Input<Inputs.StorageBucketAnonymousAccessFlagsArgs>? AnonymousAccessFlags { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.StorageBucketCorsRuleArgs>? _corsRules;

        /// <summary>
        /// A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).
        /// </summary>
        public InputList<Inputs.StorageBucketCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.StorageBucketCorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is
        /// `"STANDARD"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.
        /// </summary>
        [Input("defaultStorageClass")]
        public Input<string>? DefaultStorageClass { get; set; }

        /// <summary>
        /// Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to
        /// explicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are
        /// using IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to
        /// create the resource in a different folder than the account folder. &gt; It will try to create bucket using `IAM-token`, not
        /// using `access keys`.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without
        /// error. These objects are *not* recoverable. Default is `false`.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.StorageBucketGrantArgs>? _grants;

        /// <summary>
        /// An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. &gt; To
        /// manage `grant` argument, service account with `storage.admin` role should be used.
        /// </summary>
        public InputList<Inputs.StorageBucketGrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.StorageBucketGrantArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for
        /// more information.
        /// </summary>
        [Input("https")]
        public Input<Inputs.StorageBucketHttpsArgs>? Https { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.StorageBucketLifecycleRuleArgs>? _lifecycleRules;

        /// <summary>
        /// A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).
        /// </summary>
        public InputList<Inputs.StorageBucketLifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.StorageBucketLifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.StorageBucketLoggingArgs>? _loggings;

        /// <summary>
        /// A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).
        /// </summary>
        public InputList<Inputs.StorageBucketLoggingArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.StorageBucketLoggingArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)
        /// for more information.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).
        /// </summary>
        [Input("objectLockConfiguration")]
        public Input<Inputs.StorageBucketObjectLockConfigurationArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// The `policy` object should contain the only field with the text of the policy. See [policy
        /// documentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("secretKey")]
        private Input<string>? _secretKey;

        /// <summary>
        /// The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in
        /// provider config (explicitly or within `shared_credentials_file`) is used.
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// A configuration of server-side encryption for the bucket.
        /// </summary>
        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.StorageBucketServerSideEncryptionConfigurationArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)
        /// for more information.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). &gt; To manage `versioning` argument,
        /// service account with `storage.admin` role should be used.
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.StorageBucketVersioningArgs>? Versioning { get; set; }

        /// <summary>
        /// A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)
        /// </summary>
        [Input("website")]
        public Input<Inputs.StorageBucketWebsiteArgs>? Website { get; set; }

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public StorageBucketArgs()
        {
        }
        public static new StorageBucketArgs Empty => new StorageBucketArgs();
    }

    public sealed class StorageBucketState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access key to use when applying changes. This value can also be provided as `storage_access_key` specified in
        /// provider config (explicitly or within `shared_credentials_file`) is used.
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.
        /// Conflicts with `grant`. &gt; To change ACL after creation, service account with `storage.admin` role should be used, though
        /// this role is not necessary to create a bucket with any ACL.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// Provides various access to objects. See [Bucket
        /// Availability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.
        /// </summary>
        [Input("anonymousAccessFlags")]
        public Input<Inputs.StorageBucketAnonymousAccessFlagsGetArgs>? AnonymousAccessFlags { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The bucket domain name.
        /// </summary>
        [Input("bucketDomainName")]
        public Input<string>? BucketDomainName { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.StorageBucketCorsRuleGetArgs>? _corsRules;

        /// <summary>
        /// A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).
        /// </summary>
        public InputList<Inputs.StorageBucketCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.StorageBucketCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is
        /// `"STANDARD"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.
        /// </summary>
        [Input("defaultStorageClass")]
        public Input<string>? DefaultStorageClass { get; set; }

        /// <summary>
        /// Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to
        /// explicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are
        /// using IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to
        /// create the resource in a different folder than the account folder. &gt; It will try to create bucket using `IAM-token`, not
        /// using `access keys`.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without
        /// error. These objects are *not* recoverable. Default is `false`.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.StorageBucketGrantGetArgs>? _grants;

        /// <summary>
        /// An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. &gt; To
        /// manage `grant` argument, service account with `storage.admin` role should be used.
        /// </summary>
        public InputList<Inputs.StorageBucketGrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.StorageBucketGrantGetArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for
        /// more information.
        /// </summary>
        [Input("https")]
        public Input<Inputs.StorageBucketHttpsGetArgs>? Https { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.StorageBucketLifecycleRuleGetArgs>? _lifecycleRules;

        /// <summary>
        /// A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).
        /// </summary>
        public InputList<Inputs.StorageBucketLifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.StorageBucketLifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.StorageBucketLoggingGetArgs>? _loggings;

        /// <summary>
        /// A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).
        /// </summary>
        public InputList<Inputs.StorageBucketLoggingGetArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.StorageBucketLoggingGetArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)
        /// for more information.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).
        /// </summary>
        [Input("objectLockConfiguration")]
        public Input<Inputs.StorageBucketObjectLockConfigurationGetArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// The `policy` object should contain the only field with the text of the policy. See [policy
        /// documentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("secretKey")]
        private Input<string>? _secretKey;

        /// <summary>
        /// The secret key to use when applying changes. This value can also be provided as `storage_secret_key` specified in
        /// provider config (explicitly or within `shared_credentials_file`) is used.
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// A configuration of server-side encryption for the bucket.
        /// </summary>
        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.StorageBucketServerSideEncryptionConfigurationGetArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)
        /// for more information.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). &gt; To manage `versioning` argument,
        /// service account with `storage.admin` role should be used.
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.StorageBucketVersioningGetArgs>? Versioning { get; set; }

        /// <summary>
        /// A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)
        /// </summary>
        [Input("website")]
        public Input<Inputs.StorageBucketWebsiteGetArgs>? Website { get; set; }

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public StorageBucketState()
        {
        }
        public static new StorageBucketState Empty => new StorageBucketState();
    }
}
