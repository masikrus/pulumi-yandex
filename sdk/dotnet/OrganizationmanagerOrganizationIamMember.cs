// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/organizationmanagerOrganizationIamMember:OrganizationmanagerOrganizationIamMember")]
    public partial class OrganizationmanagerOrganizationIamMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
        /// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
        /// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
        /// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
        /// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
        /// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
        /// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. &gt; for more information about
        /// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
        /// </summary>
        [Output("member")]
        public Output<string> Member { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization to attach the policy to.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        [Output("sleepAfter")]
        public Output<int?> SleepAfter { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationmanagerOrganizationIamMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationmanagerOrganizationIamMember(string name, OrganizationmanagerOrganizationIamMemberArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/organizationmanagerOrganizationIamMember:OrganizationmanagerOrganizationIamMember", name, args ?? new OrganizationmanagerOrganizationIamMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationmanagerOrganizationIamMember(string name, Input<string> id, OrganizationmanagerOrganizationIamMemberState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/organizationmanagerOrganizationIamMember:OrganizationmanagerOrganizationIamMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationmanagerOrganizationIamMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationmanagerOrganizationIamMember Get(string name, Input<string> id, OrganizationmanagerOrganizationIamMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationmanagerOrganizationIamMember(name, id, state, options);
        }
    }

    public sealed class OrganizationmanagerOrganizationIamMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
        /// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
        /// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
        /// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
        /// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
        /// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
        /// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. &gt; for more information about
        /// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
        /// </summary>
        [Input("member", required: true)]
        public Input<string> Member { get; set; } = null!;

        /// <summary>
        /// The ID of the organization to attach the policy to.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("sleepAfter")]
        public Input<int>? SleepAfter { get; set; }

        public OrganizationmanagerOrganizationIamMemberArgs()
        {
        }
        public static new OrganizationmanagerOrganizationIamMemberArgs Empty => new OrganizationmanagerOrganizationIamMemberArgs();
    }

    public sealed class OrganizationmanagerOrganizationIamMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An array of identities that will be granted the privilege in the `role`. Each entry can have one of the following
        /// values: * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account. *
        /// **serviceAccount:{service_account_id}**: A unique service account ID. * **federatedUser:{federated_user_id}**: A unique
        /// federated user ID. * **federatedUser:{federated_user_id}:**: A unique SAML federation user account ID. *
        /// **group:{group_id}**: A unique group ID. * **system:group:federation:{federation_id}:users**: All users in federation. *
        /// **system:group:organization:{organization_id}:users**: All users in organization. * **system:allAuthenticatedUsers**:
        /// All authenticated users. * **system:allUsers**: All users, including unauthenticated ones. &gt; for more information about
        /// system groups, see [Cloud Documentation](https://yandex.cloud/docs/iam/concepts/access-control/system-group).
        /// </summary>
        [Input("member")]
        public Input<string>? Member { get; set; }

        /// <summary>
        /// The ID of the organization to attach the policy to.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The role that should be applied. See [roles catalog](https://yandex.cloud/docs/iam/roles-reference).
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("sleepAfter")]
        public Input<int>? SleepAfter { get; set; }

        public OrganizationmanagerOrganizationIamMemberState()
        {
        }
        public static new OrganizationmanagerOrganizationIamMemberState Empty => new OrganizationmanagerOrganizationIamMemberState();
    }
}
