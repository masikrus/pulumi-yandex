// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/serverlessEventrouterBus:ServerlessEventrouterBus")]
    public partial class ServerlessEventrouterBus : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the cloud that the bus resides in
        /// </summary>
        [Output("cloudId")]
        public Output<string> CloudId { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Deletion protection
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// Description of the bus
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// ID of the folder that the bus belongs to
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// Bus labels
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the bus
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ServerlessEventrouterBus resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerlessEventrouterBus(string name, ServerlessEventrouterBusArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/serverlessEventrouterBus:ServerlessEventrouterBus", name, args ?? new ServerlessEventrouterBusArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerlessEventrouterBus(string name, Input<string> id, ServerlessEventrouterBusState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/serverlessEventrouterBus:ServerlessEventrouterBus", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerlessEventrouterBus resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerlessEventrouterBus Get(string name, Input<string> id, ServerlessEventrouterBusState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerlessEventrouterBus(name, id, state, options);
        }
    }

    public sealed class ServerlessEventrouterBusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Deletion protection
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// Description of the bus
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ID of the folder that the bus belongs to
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Bus labels
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the bus
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ServerlessEventrouterBusArgs()
        {
        }
        public static new ServerlessEventrouterBusArgs Empty => new ServerlessEventrouterBusArgs();
    }

    public sealed class ServerlessEventrouterBusState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the cloud that the bus resides in
        /// </summary>
        [Input("cloudId")]
        public Input<string>? CloudId { get; set; }

        /// <summary>
        /// Creation timestamp
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Deletion protection
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// Description of the bus
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ID of the folder that the bus belongs to
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Bus labels
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the bus
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ServerlessEventrouterBusState()
        {
        }
        public static new ServerlessEventrouterBusState Empty => new ServerlessEventrouterBusState();
    }
}
