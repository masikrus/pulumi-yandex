// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/swsSecurityProfile:SwsSecurityProfile")]
    public partial class SwsSecurityProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
        /// </summary>
        [Output("advancedRateLimiterProfileId")]
        public Output<string?> AdvancedRateLimiterProfileId { get; private set; } = null!;

        /// <summary>
        /// Captcha ID to use with this security profile. Set empty to use default.
        /// </summary>
        [Output("captchaId")]
        public Output<string?> CaptchaId { get; private set; } = null!;

        /// <summary>
        /// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
        /// </summary>
        [Output("cloudId")]
        public Output<string> CloudId { get; private set; } = null!;

        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
        /// </summary>
        [Output("defaultAction")]
        public Output<string?> DefaultAction { get; private set; } = null!;

        /// <summary>
        /// The resource description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of security rules. &gt; Exactly one rule specifier: `smart_protection` or `rule_condition` or `waf` should be
        /// specified.
        /// </summary>
        [Output("securityRules")]
        public Output<ImmutableArray<Outputs.SwsSecurityProfileSecurityRule>> SecurityRules { get; private set; } = null!;


        /// <summary>
        /// Create a SwsSecurityProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SwsSecurityProfile(string name, SwsSecurityProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/swsSecurityProfile:SwsSecurityProfile", name, args ?? new SwsSecurityProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SwsSecurityProfile(string name, Input<string> id, SwsSecurityProfileState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/swsSecurityProfile:SwsSecurityProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SwsSecurityProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SwsSecurityProfile Get(string name, Input<string> id, SwsSecurityProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new SwsSecurityProfile(name, id, state, options);
        }
    }

    public sealed class SwsSecurityProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
        /// </summary>
        [Input("advancedRateLimiterProfileId")]
        public Input<string>? AdvancedRateLimiterProfileId { get; set; }

        /// <summary>
        /// Captcha ID to use with this security profile. Set empty to use default.
        /// </summary>
        [Input("captchaId")]
        public Input<string>? CaptchaId { get; set; }

        /// <summary>
        /// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
        /// </summary>
        [Input("cloudId")]
        public Input<string>? CloudId { get; set; }

        /// <summary>
        /// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("securityRules")]
        private InputList<Inputs.SwsSecurityProfileSecurityRuleArgs>? _securityRules;

        /// <summary>
        /// List of security rules. &gt; Exactly one rule specifier: `smart_protection` or `rule_condition` or `waf` should be
        /// specified.
        /// </summary>
        public InputList<Inputs.SwsSecurityProfileSecurityRuleArgs> SecurityRules
        {
            get => _securityRules ?? (_securityRules = new InputList<Inputs.SwsSecurityProfileSecurityRuleArgs>());
            set => _securityRules = value;
        }

        public SwsSecurityProfileArgs()
        {
        }
        public static new SwsSecurityProfileArgs Empty => new SwsSecurityProfileArgs();
    }

    public sealed class SwsSecurityProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
        /// </summary>
        [Input("advancedRateLimiterProfileId")]
        public Input<string>? AdvancedRateLimiterProfileId { get; set; }

        /// <summary>
        /// Captcha ID to use with this security profile. Set empty to use default.
        /// </summary>
        [Input("captchaId")]
        public Input<string>? CaptchaId { get; set; }

        /// <summary>
        /// The `Cloud ID` which resource belongs to. If it is not provided, the default provider `cloud-id` is used.
        /// </summary>
        [Input("cloudId")]
        public Input<string>? CloudId { get; set; }

        /// <summary>
        /// The creation timestamp of the resource.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Action to perform if none of rules matched. Possible values: `ALLOW` or `DENY`.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        /// <summary>
        /// The resource description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs which assigned to resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("securityRules")]
        private InputList<Inputs.SwsSecurityProfileSecurityRuleGetArgs>? _securityRules;

        /// <summary>
        /// List of security rules. &gt; Exactly one rule specifier: `smart_protection` or `rule_condition` or `waf` should be
        /// specified.
        /// </summary>
        public InputList<Inputs.SwsSecurityProfileSecurityRuleGetArgs> SecurityRules
        {
            get => _securityRules ?? (_securityRules = new InputList<Inputs.SwsSecurityProfileSecurityRuleGetArgs>());
            set => _securityRules = value;
        }

        public SwsSecurityProfileState()
        {
        }
        public static new SwsSecurityProfileState Empty => new SwsSecurityProfileState();
    }
}
