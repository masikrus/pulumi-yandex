// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MdbRedisCluster extends pulumi.CustomResource {
    /**
     * Get an existing MdbRedisCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbRedisClusterState, opts?: pulumi.CustomResourceOptions): MdbRedisCluster {
        return new MdbRedisCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbRedisCluster:MdbRedisCluster';

    /**
     * Returns true if the given object is an instance of MdbRedisCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbRedisCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbRedisCluster.__pulumiType;
    }

    /**
     * Access policy to the Redis cluster.
     */
    public readonly access!: pulumi.Output<outputs.MdbRedisClusterAccess>;
    /**
     * Announce fqdn instead of ip address.
     */
    public readonly announceHostnames!: pulumi.Output<boolean | undefined>;
    /**
     * Allows to use ACL users to auth in sentinel
     */
    public readonly authSentinel!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration of the Redis cluster.
     */
    public readonly config!: pulumi.Output<outputs.MdbRedisClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * The resource description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Disk size autoscaling settings.
     */
    public readonly diskSizeAutoscaling!: pulumi.Output<outputs.MdbRedisClusterDiskSizeAutoscaling>;
    /**
     * Deployment environment of the Redis cluster. Can be either `PRESTABLE` or `PRODUCTION`.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information
     * see `health` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).
     */
    public /*out*/ readonly health!: pulumi.Output<string>;
    /**
     * A host of the Redis cluster.
     */
    public readonly hosts!: pulumi.Output<outputs.MdbRedisClusterHost[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Maintenance window settings.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.MdbRedisClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Persistence mode. Possible values: `ON`, `OFF`.
     */
    public readonly persistenceMode!: pulumi.Output<string>;
    /**
     * Resources allocated to hosts of the Redis cluster.
     */
    public readonly resources!: pulumi.Output<outputs.MdbRedisClusterResources>;
    /**
     * The list of security groups applied to resource or their components.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not
     * allowed.
     */
    public readonly sharded!: pulumi.Output<boolean | undefined>;
    /**
     * Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or
     * `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * TLS support mode enabled/disabled.
     */
    public readonly tlsEnabled!: pulumi.Output<boolean>;

    /**
     * Create a MdbRedisCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbRedisClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbRedisClusterArgs | MdbRedisClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbRedisClusterState | undefined;
            resourceInputs["access"] = state ? state.access : undefined;
            resourceInputs["announceHostnames"] = state ? state.announceHostnames : undefined;
            resourceInputs["authSentinel"] = state ? state.authSentinel : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskSizeAutoscaling"] = state ? state.diskSizeAutoscaling : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["health"] = state ? state.health : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["persistenceMode"] = state ? state.persistenceMode : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["sharded"] = state ? state.sharded : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tlsEnabled"] = state ? state.tlsEnabled : undefined;
        } else {
            const args = argsOrState as MdbRedisClusterArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.hosts === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.resources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resources'");
            }
            resourceInputs["access"] = args ? args.access : undefined;
            resourceInputs["announceHostnames"] = args ? args.announceHostnames : undefined;
            resourceInputs["authSentinel"] = args ? args.authSentinel : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diskSizeAutoscaling"] = args ? args.diskSizeAutoscaling : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["persistenceMode"] = args ? args.persistenceMode : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["sharded"] = args ? args.sharded : undefined;
            resourceInputs["tlsEnabled"] = args ? args.tlsEnabled : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["health"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbRedisCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbRedisCluster resources.
 */
export interface MdbRedisClusterState {
    /**
     * Access policy to the Redis cluster.
     */
    access?: pulumi.Input<inputs.MdbRedisClusterAccess>;
    /**
     * Announce fqdn instead of ip address.
     */
    announceHostnames?: pulumi.Input<boolean>;
    /**
     * Allows to use ACL users to auth in sentinel
     */
    authSentinel?: pulumi.Input<boolean>;
    /**
     * Configuration of the Redis cluster.
     */
    config?: pulumi.Input<inputs.MdbRedisClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Disk size autoscaling settings.
     */
    diskSizeAutoscaling?: pulumi.Input<inputs.MdbRedisClusterDiskSizeAutoscaling>;
    /**
     * Deployment environment of the Redis cluster. Can be either `PRESTABLE` or `PRODUCTION`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information
     * see `health` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).
     */
    health?: pulumi.Input<string>;
    /**
     * A host of the Redis cluster.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.MdbRedisClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance window settings.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbRedisClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Persistence mode. Possible values: `ON`, `OFF`.
     */
    persistenceMode?: pulumi.Input<string>;
    /**
     * Resources allocated to hosts of the Redis cluster.
     */
    resources?: pulumi.Input<inputs.MdbRedisClusterResources>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not
     * allowed.
     */
    sharded?: pulumi.Input<boolean>;
    /**
     * Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or
     * `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-redis/api-ref/Cluster/).
     */
    status?: pulumi.Input<string>;
    /**
     * TLS support mode enabled/disabled.
     */
    tlsEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a MdbRedisCluster resource.
 */
export interface MdbRedisClusterArgs {
    /**
     * Access policy to the Redis cluster.
     */
    access?: pulumi.Input<inputs.MdbRedisClusterAccess>;
    /**
     * Announce fqdn instead of ip address.
     */
    announceHostnames?: pulumi.Input<boolean>;
    /**
     * Allows to use ACL users to auth in sentinel
     */
    authSentinel?: pulumi.Input<boolean>;
    /**
     * Configuration of the Redis cluster.
     */
    config: pulumi.Input<inputs.MdbRedisClusterConfig>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Disk size autoscaling settings.
     */
    diskSizeAutoscaling?: pulumi.Input<inputs.MdbRedisClusterDiskSizeAutoscaling>;
    /**
     * Deployment environment of the Redis cluster. Can be either `PRESTABLE` or `PRODUCTION`.
     */
    environment: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A host of the Redis cluster.
     */
    hosts: pulumi.Input<pulumi.Input<inputs.MdbRedisClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance window settings.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbRedisClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * Persistence mode. Possible values: `ON`, `OFF`.
     */
    persistenceMode?: pulumi.Input<string>;
    /**
     * Resources allocated to hosts of the Redis cluster.
     */
    resources: pulumi.Input<inputs.MdbRedisClusterResources>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not
     * allowed.
     */
    sharded?: pulumi.Input<boolean>;
    /**
     * TLS support mode enabled/disabled.
     */
    tlsEnabled?: pulumi.Input<boolean>;
}
