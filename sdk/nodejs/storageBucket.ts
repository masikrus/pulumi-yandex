// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageBucket extends pulumi.CustomResource {
    /**
     * Get an existing StorageBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageBucketState, opts?: pulumi.CustomResourceOptions): StorageBucket {
        return new StorageBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/storageBucket:StorageBucket';

    /**
     * Returns true if the given object is an instance of StorageBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageBucket.__pulumiType;
    }

    /**
     * The access key to use when applying changes. This value can also be provided as `storageAccessKey` specified in provider
     * config (explicitly or within `sharedCredentialsFile`) is used.
     */
    public readonly accessKey!: pulumi.Output<string | undefined>;
    /**
     * The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.
     * Conflicts with `grant`. > To change ACL after creation, service account with `storage.admin` role should be used, though
     * this role is not necessary to create a bucket with any ACL.
     */
    public readonly acl!: pulumi.Output<string | undefined>;
    /**
     * Provides various access to objects. See [Bucket
     * Availability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.
     */
    public readonly anonymousAccessFlags!: pulumi.Output<outputs.StorageBucketAnonymousAccessFlags>;
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The bucket domain name.
     */
    public /*out*/ readonly bucketDomainName!: pulumi.Output<string>;
    /**
     * Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
     */
    public readonly bucketPrefix!: pulumi.Output<string | undefined>;
    /**
     * A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).
     */
    public readonly corsRules!: pulumi.Output<outputs.StorageBucketCorsRule[] | undefined>;
    /**
     * Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is
     * `"STANDARD"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.
     */
    public readonly defaultStorageClass!: pulumi.Output<string>;
    /**
     * Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to
     * explicitly specify folderId in the resource, as it cannot be identified from such type of account. In case you are using
     * IAM token from ServiceAccount or static access keys, folderId does not need to be specified unless you want to create
     * the resource in a different folder than the account folder. > It will try to create bucket using `IAM-token`, not using
     * `access keys`.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without
     * error. These objects are *not* recoverable. Default is `false`.
     */
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. > To
     * manage `grant` argument, service account with `storage.admin` role should be used.
     */
    public readonly grants!: pulumi.Output<outputs.StorageBucketGrant[] | undefined>;
    /**
     * Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for
     * more information.
     */
    public readonly https!: pulumi.Output<outputs.StorageBucketHttps | undefined>;
    /**
     * A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).
     */
    public readonly lifecycleRules!: pulumi.Output<outputs.StorageBucketLifecycleRule[] | undefined>;
    /**
     * A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).
     */
    public readonly loggings!: pulumi.Output<outputs.StorageBucketLogging[] | undefined>;
    /**
     * The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)
     * for more information.
     */
    public readonly maxSize!: pulumi.Output<number | undefined>;
    /**
     * A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).
     */
    public readonly objectLockConfiguration!: pulumi.Output<outputs.StorageBucketObjectLockConfiguration | undefined>;
    /**
     * The `policy` object should contain the only field with the text of the policy. See [policy
     * documentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.
     */
    public readonly policy!: pulumi.Output<string | undefined>;
    /**
     * The secret key to use when applying changes. This value can also be provided as `storageSecretKey` specified in provider
     * config (explicitly or within `sharedCredentialsFile`) is used.
     */
    public readonly secretKey!: pulumi.Output<string | undefined>;
    /**
     * A configuration of server-side encryption for the bucket.
     */
    public readonly serverSideEncryptionConfiguration!: pulumi.Output<outputs.StorageBucketServerSideEncryptionConfiguration | undefined>;
    /**
     * The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)
     * for more information.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). > To manage `versioning` argument,
     * service account with `storage.admin` role should be used.
     */
    public readonly versioning!: pulumi.Output<outputs.StorageBucketVersioning>;
    /**
     * A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)
     */
    public readonly website!: pulumi.Output<outputs.StorageBucketWebsite | undefined>;
    /**
     * The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     */
    public readonly websiteDomain!: pulumi.Output<string>;
    /**
     * The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     */
    public readonly websiteEndpoint!: pulumi.Output<string>;

    /**
     * Create a StorageBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StorageBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageBucketArgs | StorageBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageBucketState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["anonymousAccessFlags"] = state ? state.anonymousAccessFlags : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["bucketDomainName"] = state ? state.bucketDomainName : undefined;
            resourceInputs["bucketPrefix"] = state ? state.bucketPrefix : undefined;
            resourceInputs["corsRules"] = state ? state.corsRules : undefined;
            resourceInputs["defaultStorageClass"] = state ? state.defaultStorageClass : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["grants"] = state ? state.grants : undefined;
            resourceInputs["https"] = state ? state.https : undefined;
            resourceInputs["lifecycleRules"] = state ? state.lifecycleRules : undefined;
            resourceInputs["loggings"] = state ? state.loggings : undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["objectLockConfiguration"] = state ? state.objectLockConfiguration : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["serverSideEncryptionConfiguration"] = state ? state.serverSideEncryptionConfiguration : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versioning"] = state ? state.versioning : undefined;
            resourceInputs["website"] = state ? state.website : undefined;
            resourceInputs["websiteDomain"] = state ? state.websiteDomain : undefined;
            resourceInputs["websiteEndpoint"] = state ? state.websiteEndpoint : undefined;
        } else {
            const args = argsOrState as StorageBucketArgs | undefined;
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["anonymousAccessFlags"] = args ? args.anonymousAccessFlags : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["bucketPrefix"] = args ? args.bucketPrefix : undefined;
            resourceInputs["corsRules"] = args ? args.corsRules : undefined;
            resourceInputs["defaultStorageClass"] = args ? args.defaultStorageClass : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["grants"] = args ? args.grants : undefined;
            resourceInputs["https"] = args ? args.https : undefined;
            resourceInputs["lifecycleRules"] = args ? args.lifecycleRules : undefined;
            resourceInputs["loggings"] = args ? args.loggings : undefined;
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["objectLockConfiguration"] = args ? args.objectLockConfiguration : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["secretKey"] = args?.secretKey ? pulumi.secret(args.secretKey) : undefined;
            resourceInputs["serverSideEncryptionConfiguration"] = args ? args.serverSideEncryptionConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versioning"] = args ? args.versioning : undefined;
            resourceInputs["website"] = args ? args.website : undefined;
            resourceInputs["websiteDomain"] = args ? args.websiteDomain : undefined;
            resourceInputs["websiteEndpoint"] = args ? args.websiteEndpoint : undefined;
            resourceInputs["bucketDomainName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StorageBucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StorageBucket resources.
 */
export interface StorageBucketState {
    /**
     * The access key to use when applying changes. This value can also be provided as `storageAccessKey` specified in provider
     * config (explicitly or within `sharedCredentialsFile`) is used.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.
     * Conflicts with `grant`. > To change ACL after creation, service account with `storage.admin` role should be used, though
     * this role is not necessary to create a bucket with any ACL.
     */
    acl?: pulumi.Input<string>;
    /**
     * Provides various access to objects. See [Bucket
     * Availability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.
     */
    anonymousAccessFlags?: pulumi.Input<inputs.StorageBucketAnonymousAccessFlags>;
    bucket?: pulumi.Input<string>;
    /**
     * The bucket domain name.
     */
    bucketDomainName?: pulumi.Input<string>;
    /**
     * Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.StorageBucketCorsRule>[]>;
    /**
     * Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is
     * `"STANDARD"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.
     */
    defaultStorageClass?: pulumi.Input<string>;
    /**
     * Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to
     * explicitly specify folderId in the resource, as it cannot be identified from such type of account. In case you are using
     * IAM token from ServiceAccount or static access keys, folderId does not need to be specified unless you want to create
     * the resource in a different folder than the account folder. > It will try to create bucket using `IAM-token`, not using
     * `access keys`.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without
     * error. These objects are *not* recoverable. Default is `false`.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. > To
     * manage `grant` argument, service account with `storage.admin` role should be used.
     */
    grants?: pulumi.Input<pulumi.Input<inputs.StorageBucketGrant>[]>;
    /**
     * Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for
     * more information.
     */
    https?: pulumi.Input<inputs.StorageBucketHttps>;
    /**
     * A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.StorageBucketLifecycleRule>[]>;
    /**
     * A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).
     */
    loggings?: pulumi.Input<pulumi.Input<inputs.StorageBucketLogging>[]>;
    /**
     * The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)
     * for more information.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).
     */
    objectLockConfiguration?: pulumi.Input<inputs.StorageBucketObjectLockConfiguration>;
    /**
     * The `policy` object should contain the only field with the text of the policy. See [policy
     * documentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.
     */
    policy?: pulumi.Input<string>;
    /**
     * The secret key to use when applying changes. This value can also be provided as `storageSecretKey` specified in provider
     * config (explicitly or within `sharedCredentialsFile`) is used.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * A configuration of server-side encryption for the bucket.
     */
    serverSideEncryptionConfiguration?: pulumi.Input<inputs.StorageBucketServerSideEncryptionConfiguration>;
    /**
     * The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)
     * for more information.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). > To manage `versioning` argument,
     * service account with `storage.admin` role should be used.
     */
    versioning?: pulumi.Input<inputs.StorageBucketVersioning>;
    /**
     * A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)
     */
    website?: pulumi.Input<inputs.StorageBucketWebsite>;
    /**
     * The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     */
    websiteDomain?: pulumi.Input<string>;
    /**
     * The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     */
    websiteEndpoint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StorageBucket resource.
 */
export interface StorageBucketArgs {
    /**
     * The access key to use when applying changes. This value can also be provided as `storageAccessKey` specified in provider
     * config (explicitly or within `sharedCredentialsFile`) is used.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The [predefined ACL](https://yandex.cloud/docs/storage/concepts/acl#predefined_acls) to apply. Defaults to `private`.
     * Conflicts with `grant`. > To change ACL after creation, service account with `storage.admin` role should be used, though
     * this role is not necessary to create a bucket with any ACL.
     */
    acl?: pulumi.Input<string>;
    /**
     * Provides various access to objects. See [Bucket
     * Availability](https://yandex.cloud/docs/storage/operations/buckets/bucket-availability) for more information.
     */
    anonymousAccessFlags?: pulumi.Input<inputs.StorageBucketAnonymousAccessFlags>;
    bucket?: pulumi.Input<string>;
    /**
     * Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * A rule of [Cross-Origin Resource Sharing](https://yandex.cloud/docs/storage/concepts/cors) (CORS object).
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.StorageBucketCorsRule>[]>;
    /**
     * Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is
     * `"STANDARD"`. See [Storage Class](https://yandex.cloud/docs/storage/concepts/storage-class) for more information.
     */
    defaultStorageClass?: pulumi.Input<string>;
    /**
     * Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to
     * explicitly specify folderId in the resource, as it cannot be identified from such type of account. In case you are using
     * IAM token from ServiceAccount or static access keys, folderId does not need to be specified unless you want to create
     * the resource in a different folder than the account folder. > It will try to create bucket using `IAM-token`, not using
     * `access keys`.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without
     * error. These objects are *not* recoverable. Default is `false`.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * An [ACL policy grant](https://yandex.cloud/docs/storage/concepts/acl#permissions-types). Conflicts with `acl`. > To
     * manage `grant` argument, service account with `storage.admin` role should be used.
     */
    grants?: pulumi.Input<pulumi.Input<inputs.StorageBucketGrant>[]>;
    /**
     * Manages https certificates for bucket. See [https](https://yandex.cloud/docs/storage/operations/hosting/certificate) for
     * more information.
     */
    https?: pulumi.Input<inputs.StorageBucketHttps>;
    /**
     * A configuration of [object lifecycle management](https://yandex.cloud/docs/storage/concepts/lifecycles).
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.StorageBucketLifecycleRule>[]>;
    /**
     * A settings of [bucket logging](https://yandex.cloud/docs/storage/concepts/server-logs).
     */
    loggings?: pulumi.Input<pulumi.Input<inputs.StorageBucketLogging>[]>;
    /**
     * The size of bucket, in bytes. See [Size Limiting](https://yandex.cloud/docs/storage/operations/buckets/limit-max-volume)
     * for more information.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * A configuration of [object lock management](https://yandex.cloud/docs/storage/concepts/object-lock).
     */
    objectLockConfiguration?: pulumi.Input<inputs.StorageBucketObjectLockConfiguration>;
    /**
     * The `policy` object should contain the only field with the text of the policy. See [policy
     * documentation](https://yandex.cloud/docs/storage/concepts/policy) for more information on policy format.
     */
    policy?: pulumi.Input<string>;
    /**
     * The secret key to use when applying changes. This value can also be provided as `storageSecretKey` specified in provider
     * config (explicitly or within `sharedCredentialsFile`) is used.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * A configuration of server-side encryption for the bucket.
     */
    serverSideEncryptionConfiguration?: pulumi.Input<inputs.StorageBucketServerSideEncryptionConfiguration>;
    /**
     * The `tags` object for setting tags (or labels) for bucket. See [Tags](https://yandex.cloud/docs/storage/concepts/tags)
     * for more information.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A state of [versioning](https://yandex.cloud/docs/storage/concepts/versioning). > To manage `versioning` argument,
     * service account with `storage.admin` role should be used.
     */
    versioning?: pulumi.Input<inputs.StorageBucketVersioning>;
    /**
     * A [Website Object](https://yandex.cloud/docs/storage/concepts/hosting)
     */
    website?: pulumi.Input<inputs.StorageBucketWebsite>;
    /**
     * The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     */
    websiteDomain?: pulumi.Input<string>;
    /**
     * The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
     */
    websiteEndpoint?: pulumi.Input<string>;
}
