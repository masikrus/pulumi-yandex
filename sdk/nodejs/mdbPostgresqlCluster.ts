// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MdbPostgresqlCluster extends pulumi.CustomResource {
    /**
     * Get an existing MdbPostgresqlCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbPostgresqlClusterState, opts?: pulumi.CustomResourceOptions): MdbPostgresqlCluster {
        return new MdbPostgresqlCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster';

    /**
     * Returns true if the given object is an instance of MdbPostgresqlCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbPostgresqlCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbPostgresqlCluster.__pulumiType;
    }

    /**
     * Configuration of the PostgreSQL cluster.
     */
    public readonly config!: pulumi.Output<outputs.MdbPostgresqlClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    public readonly databases!: pulumi.Output<outputs.MdbPostgresqlClusterDatabase[] | undefined>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * The resource description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * Aggregated health of the cluster.
     */
    public /*out*/ readonly health!: pulumi.Output<string>;
    /**
     * Host Group IDs.
     */
    public readonly hostGroupIds!: pulumi.Output<string[]>;
    /**
     * @deprecated It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support.
     */
    public readonly hostMasterName!: pulumi.Output<string>;
    /**
     * A host of the PostgreSQL cluster.
     */
    public readonly hosts!: pulumi.Output<outputs.MdbPostgresqlClusterHost[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.MdbPostgresqlClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * The cluster will be created from the specified backup.
     */
    public readonly restore!: pulumi.Output<outputs.MdbPostgresqlClusterRestore | undefined>;
    /**
     * The list of security groups applied to resource or their components.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * Status of the cluster.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    public readonly users!: pulumi.Output<outputs.MdbPostgresqlClusterUser[] | undefined>;

    /**
     * Create a MdbPostgresqlCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbPostgresqlClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbPostgresqlClusterArgs | MdbPostgresqlClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbPostgresqlClusterState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["databases"] = state ? state.databases : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["health"] = state ? state.health : undefined;
            resourceInputs["hostGroupIds"] = state ? state.hostGroupIds : undefined;
            resourceInputs["hostMasterName"] = state ? state.hostMasterName : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["restore"] = state ? state.restore : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as MdbPostgresqlClusterArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.hosts === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["databases"] = args ? args.databases : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["hostGroupIds"] = args ? args.hostGroupIds : undefined;
            resourceInputs["hostMasterName"] = args ? args.hostMasterName : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["restore"] = args ? args.restore : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["health"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbPostgresqlCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbPostgresqlCluster resources.
 */
export interface MdbPostgresqlClusterState {
    /**
     * Configuration of the PostgreSQL cluster.
     */
    config?: pulumi.Input<inputs.MdbPostgresqlClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabase>[]>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Aggregated health of the cluster.
     */
    health?: pulumi.Input<string>;
    /**
     * Host Group IDs.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support.
     */
    hostMasterName?: pulumi.Input<string>;
    /**
     * A host of the PostgreSQL cluster.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbPostgresqlClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The cluster will be created from the specified backup.
     */
    restore?: pulumi.Input<inputs.MdbPostgresqlClusterRestore>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUser>[]>;
}

/**
 * The set of arguments for constructing a MdbPostgresqlCluster resource.
 */
export interface MdbPostgresqlClusterArgs {
    /**
     * Configuration of the PostgreSQL cluster.
     */
    config: pulumi.Input<inputs.MdbPostgresqlClusterConfig>;
    /**
     * > Deprecated! To manage databases, please switch to using a separate resource type `yandex.MdbPostgresqlDatabase`.
     *
     * @deprecated to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
     */
    databases?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabase>[]>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment environment of the PostgreSQL cluster.
     */
    environment: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Host Group IDs.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated It sets name of master host. It works only when `host.name` is set. This field does not guarantee that a specific host will always be the master. We do not recommend using it. This functionality will be removed in future versions. If you are absolutely certain that you need this functionality, please contact technical support.
     */
    hostMasterName?: pulumi.Input<string>;
    /**
     * A host of the PostgreSQL cluster.
     */
    hosts: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the PostgreSQL cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbPostgresqlClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * The cluster will be created from the specified backup.
     */
    restore?: pulumi.Input<inputs.MdbPostgresqlClusterRestore>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * > Deprecated! To manage users, please switch to using a separate resource type `yandex.MdbPostgresqlUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUser>[]>;
}
