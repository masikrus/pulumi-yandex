// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlbLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing AlbLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions): AlbLoadBalancer {
        return new AlbLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/albLoadBalancer:AlbLoadBalancer';

    /**
     * Returns true if the given object is an instance of AlbLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlbLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlbLoadBalancer.__pulumiType;
    }

    /**
     * Allocation zones for the Load Balancer instance.
     */
    public readonly allocationPolicy!: pulumi.Output<outputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * Specifies whether application load balancer is available to zonal shift
     */
    public readonly allowZonalShift!: pulumi.Output<boolean | undefined>;
    /**
     * The creation timestamp of the resource.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The resource description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of listeners for the Load Balancer.
     */
    public readonly listeners!: pulumi.Output<outputs.AlbLoadBalancerListener[] | undefined>;
    /**
     * Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
     */
    public /*out*/ readonly logGroupId!: pulumi.Output<string>;
    /**
     * Cloud Logging settings.
     */
    public readonly logOptions!: pulumi.Output<outputs.AlbLoadBalancerLogOptions | undefined>;
    /**
     * The resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * The region ID where Load Balancer is located at.
     */
    public readonly regionId!: pulumi.Output<string | undefined>;
    /**
     * The list of security groups applied to resource or their components.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Status of the Load Balancer.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a AlbLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlbLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlbLoadBalancerArgs | AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlbLoadBalancerState | undefined;
            resourceInputs["allocationPolicy"] = state ? state.allocationPolicy : undefined;
            resourceInputs["allowZonalShift"] = state ? state.allowZonalShift : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["listeners"] = state ? state.listeners : undefined;
            resourceInputs["logGroupId"] = state ? state.logGroupId : undefined;
            resourceInputs["logOptions"] = state ? state.logOptions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AlbLoadBalancerArgs | undefined;
            if ((!args || args.allocationPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allocationPolicy'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["allocationPolicy"] = args ? args.allocationPolicy : undefined;
            resourceInputs["allowZonalShift"] = args ? args.allowZonalShift : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["listeners"] = args ? args.listeners : undefined;
            resourceInputs["logOptions"] = args ? args.logOptions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["regionId"] = args ? args.regionId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["logGroupId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlbLoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlbLoadBalancer resources.
 */
export interface AlbLoadBalancerState {
    /**
     * Allocation zones for the Load Balancer instance.
     */
    allocationPolicy?: pulumi.Input<inputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * Specifies whether application load balancer is available to zonal shift
     */
    allowZonalShift?: pulumi.Input<boolean>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of listeners for the Load Balancer.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListener>[]>;
    /**
     * Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Cloud Logging settings.
     */
    logOptions?: pulumi.Input<inputs.AlbLoadBalancerLogOptions>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The region ID where Load Balancer is located at.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the Load Balancer.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlbLoadBalancer resource.
 */
export interface AlbLoadBalancerArgs {
    /**
     * Allocation zones for the Load Balancer instance.
     */
    allocationPolicy: pulumi.Input<inputs.AlbLoadBalancerAllocationPolicy>;
    /**
     * Specifies whether application load balancer is available to zonal shift
     */
    allowZonalShift?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of listeners for the Load Balancer.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListener>[]>;
    /**
     * Cloud Logging settings.
     */
    logOptions?: pulumi.Input<inputs.AlbLoadBalancerLogOptions>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * The region ID where Load Balancer is located at.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
