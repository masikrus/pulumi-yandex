// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMdbGreenplumCluster(args?: GetMdbGreenplumClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbGreenplumClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbGreenplumCluster:getMdbGreenplumCluster", {
        "backgroundActivities": args.backgroundActivities,
        "clusterId": args.clusterId,
        "folderId": args.folderId,
        "greenplumConfig": args.greenplumConfig,
        "masterHostGroupIds": args.masterHostGroupIds,
        "name": args.name,
        "poolerConfig": args.poolerConfig,
        "pxfConfigs": args.pxfConfigs,
        "segmentHostGroupIds": args.segmentHostGroupIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbGreenplumCluster.
 */
export interface GetMdbGreenplumClusterArgs {
    backgroundActivities?: inputs.GetMdbGreenplumClusterBackgroundActivity[];
    clusterId?: string;
    folderId?: string;
    greenplumConfig?: {[key: string]: string};
    masterHostGroupIds?: string[];
    name?: string;
    poolerConfig?: inputs.GetMdbGreenplumClusterPoolerConfig;
    pxfConfigs?: inputs.GetMdbGreenplumClusterPxfConfig[];
    segmentHostGroupIds?: string[];
}

/**
 * A collection of values returned by getMdbGreenplumCluster.
 */
export interface GetMdbGreenplumClusterResult {
    readonly accesses: outputs.GetMdbGreenplumClusterAccess[];
    readonly assignPublicIp: boolean;
    readonly backgroundActivities: outputs.GetMdbGreenplumClusterBackgroundActivity[];
    readonly backupWindowStarts: outputs.GetMdbGreenplumClusterBackupWindowStart[];
    readonly cloudStorages: outputs.GetMdbGreenplumClusterCloudStorage[];
    readonly clusterId: string;
    readonly createdAt: string;
    readonly deletionProtection: boolean;
    readonly description: string;
    readonly environment: string;
    readonly folderId: string;
    readonly greenplumConfig: {[key: string]: string};
    readonly health: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly loggings: outputs.GetMdbGreenplumClusterLogging[];
    readonly maintenanceWindows: outputs.GetMdbGreenplumClusterMaintenanceWindow[];
    readonly masterHostCount: number;
    readonly masterHostGroupIds: string[];
    readonly masterHosts: outputs.GetMdbGreenplumClusterMasterHost[];
    readonly masterSubclusters: outputs.GetMdbGreenplumClusterMasterSubcluster[];
    readonly name: string;
    readonly networkId: string;
    readonly poolerConfig?: outputs.GetMdbGreenplumClusterPoolerConfig;
    readonly pxfConfigs: outputs.GetMdbGreenplumClusterPxfConfig[];
    readonly securityGroupIds: string[];
    readonly segmentHostCount: number;
    readonly segmentHostGroupIds: string[];
    readonly segmentHosts: outputs.GetMdbGreenplumClusterSegmentHost[];
    readonly segmentInHost: number;
    readonly segmentSubclusters: outputs.GetMdbGreenplumClusterSegmentSubcluster[];
    readonly serviceAccountId: string;
    readonly status: string;
    readonly subnetId: string;
    readonly userName: string;
    readonly version: string;
    readonly zone: string;
}
export function getMdbGreenplumClusterOutput(args?: GetMdbGreenplumClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMdbGreenplumClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("yandex:index/getMdbGreenplumCluster:getMdbGreenplumCluster", {
        "backgroundActivities": args.backgroundActivities,
        "clusterId": args.clusterId,
        "folderId": args.folderId,
        "greenplumConfig": args.greenplumConfig,
        "masterHostGroupIds": args.masterHostGroupIds,
        "name": args.name,
        "poolerConfig": args.poolerConfig,
        "pxfConfigs": args.pxfConfigs,
        "segmentHostGroupIds": args.segmentHostGroupIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbGreenplumCluster.
 */
export interface GetMdbGreenplumClusterOutputArgs {
    backgroundActivities?: pulumi.Input<pulumi.Input<inputs.GetMdbGreenplumClusterBackgroundActivityArgs>[]>;
    clusterId?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    greenplumConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    masterHostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    poolerConfig?: pulumi.Input<inputs.GetMdbGreenplumClusterPoolerConfigArgs>;
    pxfConfigs?: pulumi.Input<pulumi.Input<inputs.GetMdbGreenplumClusterPxfConfigArgs>[]>;
    segmentHostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
