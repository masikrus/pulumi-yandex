// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MdbKafkaCluster extends pulumi.CustomResource {
    /**
     * Get an existing MdbKafkaCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdbKafkaClusterState, opts?: pulumi.CustomResourceOptions): MdbKafkaCluster {
        return new MdbKafkaCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/mdbKafkaCluster:MdbKafkaCluster';

    /**
     * Returns true if the given object is an instance of MdbKafkaCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdbKafkaCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdbKafkaCluster.__pulumiType;
    }

    /**
     * Configuration of the Kafka cluster.
     */
    public readonly config!: pulumi.Output<outputs.MdbKafkaClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * The resource description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.
     */
    public readonly environment!: pulumi.Output<string | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information
     * see `health` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
     */
    public /*out*/ readonly health!: pulumi.Output<string>;
    /**
     * A list of IDs of the host groups to place VMs of the cluster on.
     */
    public readonly hostGroupIds!: pulumi.Output<string[]>;
    /**
     * A host of the Kafka cluster.
     */
    public /*out*/ readonly hosts!: pulumi.Output<outputs.MdbKafkaClusterHost[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Maintenance policy of the Kafka cluster.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.MdbKafkaClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or
     * `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The list of VPC subnets identifiers which resource is attached.
     */
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    /**
     * To manage topics, please switch to using a separate resource type `yandex.MdbKafkaTopic`.
     *
     * @deprecated to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
     */
    public readonly topics!: pulumi.Output<outputs.MdbKafkaClusterTopic[] | undefined>;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbKafkaUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
     */
    public readonly users!: pulumi.Output<outputs.MdbKafkaClusterUser[] | undefined>;

    /**
     * Create a MdbKafkaCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdbKafkaClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdbKafkaClusterArgs | MdbKafkaClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdbKafkaClusterState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["health"] = state ? state.health : undefined;
            resourceInputs["hostGroupIds"] = state ? state.hostGroupIds : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["topics"] = state ? state.topics : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as MdbKafkaClusterArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["hostGroupIds"] = args ? args.hostGroupIds : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["topics"] = args ? args.topics : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["health"] = undefined /*out*/;
            resourceInputs["hosts"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdbKafkaCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MdbKafkaCluster resources.
 */
export interface MdbKafkaClusterState {
    /**
     * Configuration of the Kafka cluster.
     */
    config?: pulumi.Input<inputs.MdbKafkaClusterConfig>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information
     * see `health` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
     */
    health?: pulumi.Input<string>;
    /**
     * A list of IDs of the host groups to place VMs of the cluster on.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A host of the Kafka cluster.
     */
    hosts?: pulumi.Input<pulumi.Input<inputs.MdbKafkaClusterHost>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the Kafka cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbKafkaClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or
     * `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official
     * documentation](https://yandex.cloud/docs/managed-kafka/api-ref/Cluster/).
     */
    status?: pulumi.Input<string>;
    /**
     * The list of VPC subnets identifiers which resource is attached.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * To manage topics, please switch to using a separate resource type `yandex.MdbKafkaTopic`.
     *
     * @deprecated to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
     */
    topics?: pulumi.Input<pulumi.Input<inputs.MdbKafkaClusterTopic>[]>;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbKafkaUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbKafkaClusterUser>[]>;
}

/**
 * The set of arguments for constructing a MdbKafkaCluster resource.
 */
export interface MdbKafkaClusterArgs {
    /**
     * Configuration of the Kafka cluster.
     */
    config: pulumi.Input<inputs.MdbKafkaClusterConfig>;
    /**
     * The `true` value means that resource is protected from accidental deletion.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment environment of the Kafka cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRODUCTION`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A list of IDs of the host groups to place VMs of the cluster on.
     */
    hostGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maintenance policy of the Kafka cluster.
     */
    maintenanceWindow?: pulumi.Input<inputs.MdbKafkaClusterMaintenanceWindow>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The `VPC Network ID` of subnets which resource attached to.
     */
    networkId: pulumi.Input<string>;
    /**
     * The list of security groups applied to resource or their components.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of VPC subnets identifiers which resource is attached.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * To manage topics, please switch to using a separate resource type `yandex.MdbKafkaTopic`.
     *
     * @deprecated to manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic
     */
    topics?: pulumi.Input<pulumi.Input<inputs.MdbKafkaClusterTopic>[]>;
    /**
     * To manage users, please switch to using a separate resource type `yandex.MdbKafkaUser`.
     *
     * @deprecated to manage users, please switch to using a separate resource type yandex_mdb_kafka_user
     */
    users?: pulumi.Input<pulumi.Input<inputs.MdbKafkaClusterUser>[]>;
}
