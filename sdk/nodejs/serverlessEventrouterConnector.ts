// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServerlessEventrouterConnector extends pulumi.CustomResource {
    /**
     * Get an existing ServerlessEventrouterConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerlessEventrouterConnectorState, opts?: pulumi.CustomResourceOptions): ServerlessEventrouterConnector {
        return new ServerlessEventrouterConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/serverlessEventrouterConnector:ServerlessEventrouterConnector';

    /**
     * Returns true if the given object is an instance of ServerlessEventrouterConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerlessEventrouterConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerlessEventrouterConnector.__pulumiType;
    }

    /**
     * ID of the bus that the connector belongs to
     */
    public readonly busId!: pulumi.Output<string>;
    /**
     * ID of the cloud that the connector resides in
     */
    public /*out*/ readonly cloudId!: pulumi.Output<string>;
    /**
     * Creation timestamp
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Deletion protection
     */
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the connector
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ID of the folder that the connector resides in
     */
    public /*out*/ readonly folderId!: pulumi.Output<string>;
    /**
     * Connector labels
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Name of the connector
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Data Stream source of the connector
     */
    public readonly yds!: pulumi.Output<outputs.ServerlessEventrouterConnectorYd[] | undefined>;
    /**
     * Message Queue source of the connector
     */
    public readonly ymqs!: pulumi.Output<outputs.ServerlessEventrouterConnectorYmq[] | undefined>;

    /**
     * Create a ServerlessEventrouterConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerlessEventrouterConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerlessEventrouterConnectorArgs | ServerlessEventrouterConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerlessEventrouterConnectorState | undefined;
            resourceInputs["busId"] = state ? state.busId : undefined;
            resourceInputs["cloudId"] = state ? state.cloudId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["yds"] = state ? state.yds : undefined;
            resourceInputs["ymqs"] = state ? state.ymqs : undefined;
        } else {
            const args = argsOrState as ServerlessEventrouterConnectorArgs | undefined;
            if ((!args || args.busId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'busId'");
            }
            resourceInputs["busId"] = args ? args.busId : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["yds"] = args ? args.yds : undefined;
            resourceInputs["ymqs"] = args ? args.ymqs : undefined;
            resourceInputs["cloudId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["folderId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerlessEventrouterConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerlessEventrouterConnector resources.
 */
export interface ServerlessEventrouterConnectorState {
    /**
     * ID of the bus that the connector belongs to
     */
    busId?: pulumi.Input<string>;
    /**
     * ID of the cloud that the connector resides in
     */
    cloudId?: pulumi.Input<string>;
    /**
     * Creation timestamp
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Deletion protection
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Description of the connector
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the folder that the connector resides in
     */
    folderId?: pulumi.Input<string>;
    /**
     * Connector labels
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the connector
     */
    name?: pulumi.Input<string>;
    /**
     * Data Stream source of the connector
     */
    yds?: pulumi.Input<pulumi.Input<inputs.ServerlessEventrouterConnectorYd>[]>;
    /**
     * Message Queue source of the connector
     */
    ymqs?: pulumi.Input<pulumi.Input<inputs.ServerlessEventrouterConnectorYmq>[]>;
}

/**
 * The set of arguments for constructing a ServerlessEventrouterConnector resource.
 */
export interface ServerlessEventrouterConnectorArgs {
    /**
     * ID of the bus that the connector belongs to
     */
    busId: pulumi.Input<string>;
    /**
     * Deletion protection
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Description of the connector
     */
    description?: pulumi.Input<string>;
    /**
     * Connector labels
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the connector
     */
    name?: pulumi.Input<string>;
    /**
     * Data Stream source of the connector
     */
    yds?: pulumi.Input<pulumi.Input<inputs.ServerlessEventrouterConnectorYd>[]>;
    /**
     * Message Queue source of the connector
     */
    ymqs?: pulumi.Input<pulumi.Input<inputs.ServerlessEventrouterConnectorYmq>[]>;
}
