// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeInstance extends pulumi.CustomResource {
    /**
     * Get an existing ComputeInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeInstanceState, opts?: pulumi.CustomResourceOptions): ComputeInstance {
        return new ComputeInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/computeInstance:ComputeInstance';

    /**
     * Returns true if the given object is an instance of ComputeInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeInstance.__pulumiType;
    }

    public readonly allowRecreate!: pulumi.Output<boolean | undefined>;
    public readonly allowStoppingForUpdate!: pulumi.Output<boolean | undefined>;
    /**
     * The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
     */
    public readonly bootDisk!: pulumi.Output<outputs.ComputeInstanceBootDisk>;
    /**
     * The creation timestamp of the resource.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The resource description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of filesystems that are attached to the instance.
     */
    public readonly filesystems!: pulumi.Output<outputs.ComputeInstanceFilesystem[] | undefined>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * The fully qualified DNS name of this instance.
     */
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    /**
     * ID of the GPU cluster to attach this instance to.
     */
    public readonly gpuClusterId!: pulumi.Output<string>;
    public /*out*/ readonly hardwareGenerations!: pulumi.Output<outputs.ComputeInstanceHardwareGeneration[]>;
    /**
     * Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
     * within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
     * `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of local disks that are attached to the instance. > Local disks are not available for all users by default.
     */
    public readonly localDisks!: pulumi.Output<outputs.ComputeInstanceLocalDisk[] | undefined>;
    /**
     * Time between notification via metadata service and maintenance. E.g., `60s`.
     */
    public readonly maintenanceGracePeriod!: pulumi.Output<string>;
    /**
     * Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
     */
    public readonly maintenancePolicy!: pulumi.Output<string>;
    /**
     * Metadata key/value pairs to make available from within the instance.
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Options allow user to configure access to instance's metadata.
     */
    public readonly metadataOptions!: pulumi.Output<outputs.ComputeInstanceMetadataOptions>;
    /**
     * The resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
     */
    public readonly networkAccelerationType!: pulumi.Output<string | undefined>;
    /**
     * Networks to attach to the instance. This can be specified multiple times.
     */
    public readonly networkInterfaces!: pulumi.Output<outputs.ComputeInstanceNetworkInterface[]>;
    /**
     * The placement policy configuration.
     */
    public readonly placementPolicy!: pulumi.Output<outputs.ComputeInstancePlacementPolicy>;
    /**
     * The type of virtual machine to create.
     */
    public readonly platformId!: pulumi.Output<string | undefined>;
    /**
     * Compute resources that are allocated for the instance.
     */
    public readonly resources!: pulumi.Output<outputs.ComputeInstanceResources>;
    /**
     * Scheduling policy configuration.
     */
    public readonly schedulingPolicy!: pulumi.Output<outputs.ComputeInstanceSchedulingPolicy>;
    /**
     * A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
     * must be set to `true` in order to update this structure.
     */
    public readonly secondaryDisks!: pulumi.Output<outputs.ComputeInstanceSecondaryDisk[] | undefined>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    public readonly serviceAccountId!: pulumi.Output<string>;
    /**
     * The status of this instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
     * provided, the default provider zone will be used.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a ComputeInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeInstanceArgs | ComputeInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeInstanceState | undefined;
            resourceInputs["allowRecreate"] = state ? state.allowRecreate : undefined;
            resourceInputs["allowStoppingForUpdate"] = state ? state.allowStoppingForUpdate : undefined;
            resourceInputs["bootDisk"] = state ? state.bootDisk : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["filesystems"] = state ? state.filesystems : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["gpuClusterId"] = state ? state.gpuClusterId : undefined;
            resourceInputs["hardwareGenerations"] = state ? state.hardwareGenerations : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["localDisks"] = state ? state.localDisks : undefined;
            resourceInputs["maintenanceGracePeriod"] = state ? state.maintenanceGracePeriod : undefined;
            resourceInputs["maintenancePolicy"] = state ? state.maintenancePolicy : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["metadataOptions"] = state ? state.metadataOptions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkAccelerationType"] = state ? state.networkAccelerationType : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["placementPolicy"] = state ? state.placementPolicy : undefined;
            resourceInputs["platformId"] = state ? state.platformId : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["schedulingPolicy"] = state ? state.schedulingPolicy : undefined;
            resourceInputs["secondaryDisks"] = state ? state.secondaryDisks : undefined;
            resourceInputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as ComputeInstanceArgs | undefined;
            if ((!args || args.bootDisk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bootDisk'");
            }
            if ((!args || args.networkInterfaces === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaces'");
            }
            if ((!args || args.resources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resources'");
            }
            resourceInputs["allowRecreate"] = args ? args.allowRecreate : undefined;
            resourceInputs["allowStoppingForUpdate"] = args ? args.allowStoppingForUpdate : undefined;
            resourceInputs["bootDisk"] = args ? args.bootDisk : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["filesystems"] = args ? args.filesystems : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["gpuClusterId"] = args ? args.gpuClusterId : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["localDisks"] = args ? args.localDisks : undefined;
            resourceInputs["maintenanceGracePeriod"] = args ? args.maintenanceGracePeriod : undefined;
            resourceInputs["maintenancePolicy"] = args ? args.maintenancePolicy : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["metadataOptions"] = args ? args.metadataOptions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkAccelerationType"] = args ? args.networkAccelerationType : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["placementPolicy"] = args ? args.placementPolicy : undefined;
            resourceInputs["platformId"] = args ? args.platformId : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["schedulingPolicy"] = args ? args.schedulingPolicy : undefined;
            resourceInputs["secondaryDisks"] = args ? args.secondaryDisks : undefined;
            resourceInputs["serviceAccountId"] = args ? args.serviceAccountId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["hardwareGenerations"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ComputeInstance resources.
 */
export interface ComputeInstanceState {
    allowRecreate?: pulumi.Input<boolean>;
    allowStoppingForUpdate?: pulumi.Input<boolean>;
    /**
     * The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
     */
    bootDisk?: pulumi.Input<inputs.ComputeInstanceBootDisk>;
    /**
     * The creation timestamp of the resource.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of filesystems that are attached to the instance.
     */
    filesystems?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceFilesystem>[]>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The fully qualified DNS name of this instance.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * ID of the GPU cluster to attach this instance to.
     */
    gpuClusterId?: pulumi.Input<string>;
    hardwareGenerations?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceHardwareGeneration>[]>;
    /**
     * Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
     * within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
     * `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
     */
    hostname?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of local disks that are attached to the instance. > Local disks are not available for all users by default.
     */
    localDisks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceLocalDisk>[]>;
    /**
     * Time between notification via metadata service and maintenance. E.g., `60s`.
     */
    maintenanceGracePeriod?: pulumi.Input<string>;
    /**
     * Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
     */
    maintenancePolicy?: pulumi.Input<string>;
    /**
     * Metadata key/value pairs to make available from within the instance.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options allow user to configure access to instance's metadata.
     */
    metadataOptions?: pulumi.Input<inputs.ComputeInstanceMetadataOptions>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
     */
    networkAccelerationType?: pulumi.Input<string>;
    /**
     * Networks to attach to the instance. This can be specified multiple times.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkInterface>[]>;
    /**
     * The placement policy configuration.
     */
    placementPolicy?: pulumi.Input<inputs.ComputeInstancePlacementPolicy>;
    /**
     * The type of virtual machine to create.
     */
    platformId?: pulumi.Input<string>;
    /**
     * Compute resources that are allocated for the instance.
     */
    resources?: pulumi.Input<inputs.ComputeInstanceResources>;
    /**
     * Scheduling policy configuration.
     */
    schedulingPolicy?: pulumi.Input<inputs.ComputeInstanceSchedulingPolicy>;
    /**
     * A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
     * must be set to `true` in order to update this structure.
     */
    secondaryDisks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceSecondaryDisk>[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * The status of this instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
     * provided, the default provider zone will be used.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeInstance resource.
 */
export interface ComputeInstanceArgs {
    allowRecreate?: pulumi.Input<boolean>;
    allowStoppingForUpdate?: pulumi.Input<boolean>;
    /**
     * The boot disk for the instance. Either `initializeParams` or `diskId` must be specified.
     */
    bootDisk: pulumi.Input<inputs.ComputeInstanceBootDisk>;
    /**
     * The resource description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of filesystems that are attached to the instance.
     */
    filesystems?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceFilesystem>[]>;
    /**
     * The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * ID of the GPU cluster to attach this instance to.
     */
    gpuClusterId?: pulumi.Input<string>;
    /**
     * Host name for the instance. This field is used to generate the instance `fqdn` value. The host name must be unique
     * within the network and region. If not specified, the host name will be equal to `id` of the instance and `fqdn` will be
     * `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
     */
    hostname?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs which assigned to resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of local disks that are attached to the instance. > Local disks are not available for all users by default.
     */
    localDisks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceLocalDisk>[]>;
    /**
     * Time between notification via metadata service and maintenance. E.g., `60s`.
     */
    maintenanceGracePeriod?: pulumi.Input<string>;
    /**
     * Behavior on maintenance events. Can be: `unspecified`, `migrate`, `restart`. The default is `unspecified`.
     */
    maintenancePolicy?: pulumi.Input<string>;
    /**
     * Metadata key/value pairs to make available from within the instance.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options allow user to configure access to instance's metadata.
     */
    metadataOptions?: pulumi.Input<inputs.ComputeInstanceMetadataOptions>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of network acceleration. Can be `standard` or `softwareAccelerated`. The default is `standard`.
     */
    networkAccelerationType?: pulumi.Input<string>;
    /**
     * Networks to attach to the instance. This can be specified multiple times.
     */
    networkInterfaces: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkInterface>[]>;
    /**
     * The placement policy configuration.
     */
    placementPolicy?: pulumi.Input<inputs.ComputeInstancePlacementPolicy>;
    /**
     * The type of virtual machine to create.
     */
    platformId?: pulumi.Input<string>;
    /**
     * Compute resources that are allocated for the instance.
     */
    resources: pulumi.Input<inputs.ComputeInstanceResources>;
    /**
     * Scheduling policy configuration.
     */
    schedulingPolicy?: pulumi.Input<inputs.ComputeInstanceSchedulingPolicy>;
    /**
     * A set of disks to attach to the instance. The structure is documented below. > The `allowStoppingForUpdate` property
     * must be set to `true` in order to update this structure.
     */
    secondaryDisks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceSecondaryDisk>[]>;
    /**
     * [Service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) which linked to the resource.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not
     * provided, the default provider zone will be used.
     */
    zone?: pulumi.Input<string>;
}
