// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IamWorkloadIdentityOidcFederation extends pulumi.CustomResource {
    /**
     * Get an existing IamWorkloadIdentityOidcFederation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamWorkloadIdentityOidcFederationState, opts?: pulumi.CustomResourceOptions): IamWorkloadIdentityOidcFederation {
        return new IamWorkloadIdentityOidcFederation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/iamWorkloadIdentityOidcFederation:IamWorkloadIdentityOidcFederation';

    /**
     * Returns true if the given object is an instance of IamWorkloadIdentityOidcFederation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamWorkloadIdentityOidcFederation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamWorkloadIdentityOidcFederation.__pulumiType;
    }

    /**
     * List of trusted values for aud claim.
     */
    public readonly audiences!: pulumi.Output<string[] | undefined>;
    /**
     * Creation timestamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Description of the OIDC workload identity federation.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Disabled flag.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enabled flag.
     */
    public /*out*/ readonly enabled!: pulumi.Output<boolean>;
    /**
     * Id of the OIDC workload identity federation.
     */
    public readonly federationId!: pulumi.Output<string>;
    /**
     * Id of the folder that the OIDC workload identity federation belongs to.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * Issuer identifier of the external IdP server to be used for authentication.
     */
    public readonly issuer!: pulumi.Output<string>;
    /**
     * URL reference to trusted keys in format of JSON Web Key Set.
     */
    public readonly jwksUrl!: pulumi.Output<string>;
    /**
     * Resource labels as key-value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Name of the OIDC workload identity federation. The name is unique within the folder.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a IamWorkloadIdentityOidcFederation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamWorkloadIdentityOidcFederationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamWorkloadIdentityOidcFederationArgs | IamWorkloadIdentityOidcFederationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamWorkloadIdentityOidcFederationState | undefined;
            resourceInputs["audiences"] = state ? state.audiences : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["federationId"] = state ? state.federationId : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["jwksUrl"] = state ? state.jwksUrl : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as IamWorkloadIdentityOidcFederationArgs | undefined;
            if ((!args || args.issuer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'issuer'");
            }
            if ((!args || args.jwksUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jwksUrl'");
            }
            resourceInputs["audiences"] = args ? args.audiences : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["federationId"] = args ? args.federationId : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["jwksUrl"] = args ? args.jwksUrl : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamWorkloadIdentityOidcFederation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamWorkloadIdentityOidcFederation resources.
 */
export interface IamWorkloadIdentityOidcFederationState {
    /**
     * List of trusted values for aud claim.
     */
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Creation timestamp.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Description of the OIDC workload identity federation.
     */
    description?: pulumi.Input<string>;
    /**
     * Disabled flag.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Enabled flag.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Id of the OIDC workload identity federation.
     */
    federationId?: pulumi.Input<string>;
    /**
     * Id of the folder that the OIDC workload identity federation belongs to.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Issuer identifier of the external IdP server to be used for authentication.
     */
    issuer?: pulumi.Input<string>;
    /**
     * URL reference to trusted keys in format of JSON Web Key Set.
     */
    jwksUrl?: pulumi.Input<string>;
    /**
     * Resource labels as key-value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the OIDC workload identity federation. The name is unique within the folder.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamWorkloadIdentityOidcFederation resource.
 */
export interface IamWorkloadIdentityOidcFederationArgs {
    /**
     * List of trusted values for aud claim.
     */
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the OIDC workload identity federation.
     */
    description?: pulumi.Input<string>;
    /**
     * Disabled flag.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Id of the OIDC workload identity federation.
     */
    federationId?: pulumi.Input<string>;
    /**
     * Id of the folder that the OIDC workload identity federation belongs to.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Issuer identifier of the external IdP server to be used for authentication.
     */
    issuer: pulumi.Input<string>;
    /**
     * URL reference to trusted keys in format of JSON Web Key Set.
     */
    jwksUrl: pulumi.Input<string>;
    /**
     * Resource labels as key-value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the OIDC workload identity federation. The name is unique within the folder.
     */
    name?: pulumi.Input<string>;
}
